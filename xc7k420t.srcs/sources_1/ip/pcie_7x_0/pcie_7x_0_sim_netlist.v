// Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2018.3 (lin64) Build 2405991 Thu Dec  6 23:36:41 MST 2018
// Date        : Mon Jun 12 14:49:27 2023
// Host        : ubuntu running 64-bit Ubuntu 20.04.3 LTS
// Command     : write_verilog -force -mode funcsim
//               /home/ubuntu/Dev/xc7k420t_1/xc7k420t.srcs/sources_1/ip/pcie_7x_0/pcie_7x_0_sim_netlist.v
// Design      : pcie_7x_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xc7k420tffg901-2L
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* CHECK_LICENSE_TYPE = "pcie_7x_0,pcie_7x_0_pcie2_top,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "pcie_7x_0_pcie2_top,Vivado 2018.3" *) 
(* NotValidForBitStream *)
module pcie_7x_0
   (pci_exp_txp,
    pci_exp_txn,
    pci_exp_rxp,
    pci_exp_rxn,
    pipe_pclk_in,
    pipe_rxusrclk_in,
    pipe_rxoutclk_in,
    pipe_dclk_in,
    pipe_userclk1_in,
    pipe_userclk2_in,
    pipe_oobclk_in,
    pipe_mmcm_lock_in,
    pipe_txoutclk_out,
    pipe_rxoutclk_out,
    pipe_pclk_sel_out,
    pipe_gen3_out,
    user_clk_out,
    user_reset_out,
    user_lnk_up,
    user_app_rdy,
    tx_buf_av,
    tx_cfg_req,
    tx_err_drop,
    s_axis_tx_tready,
    s_axis_tx_tdata,
    s_axis_tx_tkeep,
    s_axis_tx_tlast,
    s_axis_tx_tvalid,
    s_axis_tx_tuser,
    tx_cfg_gnt,
    m_axis_rx_tdata,
    m_axis_rx_tkeep,
    m_axis_rx_tlast,
    m_axis_rx_tvalid,
    m_axis_rx_tready,
    m_axis_rx_tuser,
    rx_np_ok,
    rx_np_req,
    fc_cpld,
    fc_cplh,
    fc_npd,
    fc_nph,
    fc_pd,
    fc_ph,
    fc_sel,
    cfg_mgmt_do,
    cfg_mgmt_rd_wr_done,
    cfg_status,
    cfg_command,
    cfg_dstatus,
    cfg_dcommand,
    cfg_lstatus,
    cfg_lcommand,
    cfg_dcommand2,
    cfg_pcie_link_state,
    cfg_pmcsr_pme_en,
    cfg_pmcsr_powerstate,
    cfg_pmcsr_pme_status,
    cfg_received_func_lvl_rst,
    cfg_mgmt_di,
    cfg_mgmt_byte_en,
    cfg_mgmt_dwaddr,
    cfg_mgmt_wr_en,
    cfg_mgmt_rd_en,
    cfg_mgmt_wr_readonly,
    cfg_err_ecrc,
    cfg_err_ur,
    cfg_err_cpl_timeout,
    cfg_err_cpl_unexpect,
    cfg_err_cpl_abort,
    cfg_err_posted,
    cfg_err_cor,
    cfg_err_atomic_egress_blocked,
    cfg_err_internal_cor,
    cfg_err_malformed,
    cfg_err_mc_blocked,
    cfg_err_poisoned,
    cfg_err_norecovery,
    cfg_err_tlp_cpl_header,
    cfg_err_cpl_rdy,
    cfg_err_locked,
    cfg_err_acs,
    cfg_err_internal_uncor,
    cfg_trn_pending,
    cfg_pm_halt_aspm_l0s,
    cfg_pm_halt_aspm_l1,
    cfg_pm_force_state_en,
    cfg_pm_force_state,
    cfg_dsn,
    cfg_interrupt,
    cfg_interrupt_rdy,
    cfg_interrupt_assert,
    cfg_interrupt_di,
    cfg_interrupt_do,
    cfg_interrupt_mmenable,
    cfg_interrupt_msienable,
    cfg_interrupt_msixenable,
    cfg_interrupt_msixfm,
    cfg_interrupt_stat,
    cfg_pciecap_interrupt_msgnum,
    cfg_to_turnoff,
    cfg_turnoff_ok,
    cfg_bus_number,
    cfg_device_number,
    cfg_function_number,
    cfg_pm_wake,
    cfg_pm_send_pme_to,
    cfg_ds_bus_number,
    cfg_ds_device_number,
    cfg_ds_function_number,
    cfg_mgmt_wr_rw1c_as_rw,
    cfg_msg_received,
    cfg_msg_data,
    cfg_bridge_serr_en,
    cfg_slot_control_electromech_il_ctl_pulse,
    cfg_root_control_syserr_corr_err_en,
    cfg_root_control_syserr_non_fatal_err_en,
    cfg_root_control_syserr_fatal_err_en,
    cfg_root_control_pme_int_en,
    cfg_aer_rooterr_corr_err_reporting_en,
    cfg_aer_rooterr_non_fatal_err_reporting_en,
    cfg_aer_rooterr_fatal_err_reporting_en,
    cfg_aer_rooterr_corr_err_received,
    cfg_aer_rooterr_non_fatal_err_received,
    cfg_aer_rooterr_fatal_err_received,
    cfg_msg_received_err_cor,
    cfg_msg_received_err_non_fatal,
    cfg_msg_received_err_fatal,
    cfg_msg_received_pm_as_nak,
    cfg_msg_received_pm_pme,
    cfg_msg_received_pme_to_ack,
    cfg_msg_received_assert_int_a,
    cfg_msg_received_assert_int_b,
    cfg_msg_received_assert_int_c,
    cfg_msg_received_assert_int_d,
    cfg_msg_received_deassert_int_a,
    cfg_msg_received_deassert_int_b,
    cfg_msg_received_deassert_int_c,
    cfg_msg_received_deassert_int_d,
    cfg_msg_received_setslotpowerlimit,
    pl_directed_link_change,
    pl_directed_link_width,
    pl_directed_link_speed,
    pl_directed_link_auton,
    pl_upstream_prefer_deemph,
    pl_sel_lnk_rate,
    pl_sel_lnk_width,
    pl_ltssm_state,
    pl_lane_reversal_mode,
    pl_phy_lnk_up,
    pl_tx_pm_state,
    pl_rx_pm_state,
    pl_link_upcfg_cap,
    pl_link_gen2_cap,
    pl_link_partner_gen2_supported,
    pl_initial_link_width,
    pl_directed_change_done,
    pl_received_hot_rst,
    pl_transmit_hot_rst,
    pl_downstream_deemph_source,
    cfg_err_aer_headerlog,
    cfg_aer_interrupt_msgnum,
    cfg_err_aer_headerlog_set,
    cfg_aer_ecrc_check_en,
    cfg_aer_ecrc_gen_en,
    cfg_vc_tcvc_map,
    sys_clk,
    sys_rst_n,
    pipe_mmcm_rst_n,
    startup_cfgclk,
    startup_cfgmclk,
    startup_eos,
    startup_preq,
    startup_clk,
    startup_gsr,
    startup_gts,
    startup_keyclearb,
    startup_pack,
    startup_usrcclko,
    startup_usrcclkts,
    startup_usrdoneo,
    startup_usrdonets,
    pcie_drp_clk,
    pcie_drp_en,
    pcie_drp_we,
    pcie_drp_addr,
    pcie_drp_di,
    pcie_drp_do,
    pcie_drp_rdy);
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_7x_mgt:1.0 pcie_7x_mgt txp" *) output [3:0]pci_exp_txp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_7x_mgt:1.0 pcie_7x_mgt txn" *) output [3:0]pci_exp_txn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_7x_mgt:1.0 pcie_7x_mgt rxp" *) input [3:0]pci_exp_rxp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_7x_mgt:1.0 pcie_7x_mgt rxn" *) input [3:0]pci_exp_rxn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pipe_clock:1.0 pipe_clock pclk_in" *) input pipe_pclk_in;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pipe_clock:1.0 pipe_clock rxusrclk_in" *) input pipe_rxusrclk_in;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pipe_clock:1.0 pipe_clock rxoutclk_in" *) input [3:0]pipe_rxoutclk_in;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pipe_clock:1.0 pipe_clock dclk_in" *) input pipe_dclk_in;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pipe_clock:1.0 pipe_clock userclk1_in" *) input pipe_userclk1_in;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pipe_clock:1.0 pipe_clock userclk2_in" *) input pipe_userclk2_in;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pipe_clock:1.0 pipe_clock oobclk_in" *) input pipe_oobclk_in;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pipe_clock:1.0 pipe_clock mmcm_lock_in" *) input pipe_mmcm_lock_in;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pipe_clock:1.0 pipe_clock txoutclk_out" *) output pipe_txoutclk_out;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pipe_clock:1.0 pipe_clock rxoutclk_out" *) output [3:0]pipe_rxoutclk_out;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pipe_clock:1.0 pipe_clock pclk_sel_out" *) output [3:0]pipe_pclk_sel_out;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pipe_clock:1.0 pipe_clock gen3_out" *) output pipe_gen3_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 CLK.user_clk_out CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME CLK.user_clk_out, ASSOCIATED_BUSIF m_axis_rx:s_axis_tx, FREQ_HZ 125000000, ASSOCIATED_RESET user_reset_out, PHASE 0.000, INSERT_VIP 0" *) output user_clk_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 RST.user_reset_out RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME RST.user_reset_out, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) output user_reset_out;
  output user_lnk_up;
  output user_app_rdy;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status tx_buf_av" *) output [5:0]tx_buf_av;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status tx_cfg_req" *) output tx_cfg_req;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status tx_err_drop" *) output tx_err_drop;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_tx TREADY" *) output s_axis_tx_tready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_tx TDATA" *) input [127:0]s_axis_tx_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_tx TKEEP" *) input [15:0]s_axis_tx_tkeep;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_tx TLAST" *) input s_axis_tx_tlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_tx TVALID" *) input s_axis_tx_tvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis_tx TUSER" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axis_tx, TDATA_NUM_BYTES 16, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 4, HAS_TREADY 1, HAS_TSTRB 0, HAS_TKEEP 1, HAS_TLAST 1, FREQ_HZ 100000000, PHASE 0.000, LAYERED_METADATA undef, INSERT_VIP 0" *) input [3:0]s_axis_tx_tuser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_control:1.0 pcie2_cfg_control tx_cfg_gnt" *) input tx_cfg_gnt;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_rx TDATA" *) output [127:0]m_axis_rx_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_rx TKEEP" *) output [15:0]m_axis_rx_tkeep;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_rx TLAST" *) output m_axis_rx_tlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_rx TVALID" *) output m_axis_rx_tvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_rx TREADY" *) input m_axis_rx_tready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis_rx TUSER" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_axis_rx, TDATA_NUM_BYTES 16, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 22, HAS_TREADY 1, HAS_TSTRB 0, HAS_TKEEP 1, HAS_TLAST 1, FREQ_HZ 100000000, PHASE 0.000, LAYERED_METADATA undef, INSERT_VIP 0" *) output [21:0]m_axis_rx_tuser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_control:1.0 pcie2_cfg_control rx_np_ok" *) input rx_np_ok;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_control:1.0 pcie2_cfg_control rx_np_req" *) input rx_np_req;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_fc:1.0 pcie_cfg_fc CPLD" *) output [11:0]fc_cpld;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_fc:1.0 pcie_cfg_fc CPLH" *) output [7:0]fc_cplh;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_fc:1.0 pcie_cfg_fc NPD" *) output [11:0]fc_npd;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_fc:1.0 pcie_cfg_fc NPH" *) output [7:0]fc_nph;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_fc:1.0 pcie_cfg_fc PD" *) output [11:0]fc_pd;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_fc:1.0 pcie_cfg_fc PH" *) output [7:0]fc_ph;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_fc:1.0 pcie_cfg_fc SEL" *) input [2:0]fc_sel;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_mgmt:1.0 pcie_cfg_mgmt READ_DATA" *) output [31:0]cfg_mgmt_do;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_mgmt:1.0 pcie_cfg_mgmt READ_WRITE_DONE" *) output cfg_mgmt_rd_wr_done;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status status" *) output [15:0]cfg_status;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status command" *) output [15:0]cfg_command;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status dstatus" *) output [15:0]cfg_dstatus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status dcommand" *) output [15:0]cfg_dcommand;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status lstatus" *) output [15:0]cfg_lstatus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status lcommand" *) output [15:0]cfg_lcommand;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status dcommand2" *) output [15:0]cfg_dcommand2;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status pcie_link_state" *) output [2:0]cfg_pcie_link_state;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status pmcsr_pme_en" *) output cfg_pmcsr_pme_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status pmcsr_powerstate" *) output [1:0]cfg_pmcsr_powerstate;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status pmcsr_pme_status" *) output cfg_pmcsr_pme_status;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status received_func_lvl_rst" *) output cfg_received_func_lvl_rst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_mgmt:1.0 pcie_cfg_mgmt WRITE_DATA" *) input [31:0]cfg_mgmt_di;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_mgmt:1.0 pcie_cfg_mgmt BYTE_EN" *) input [3:0]cfg_mgmt_byte_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_mgmt:1.0 pcie_cfg_mgmt ADDR" *) input [9:0]cfg_mgmt_dwaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_mgmt:1.0 pcie_cfg_mgmt WRITE_EN" *) input cfg_mgmt_wr_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_mgmt:1.0 pcie_cfg_mgmt READ_EN" *) input cfg_mgmt_rd_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_mgmt:1.0 pcie_cfg_mgmt READONLY" *) input cfg_mgmt_wr_readonly;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_err:1.0 pcie2_cfg_err ecrc" *) input cfg_err_ecrc;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_err:1.0 pcie2_cfg_err ur" *) input cfg_err_ur;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_err:1.0 pcie2_cfg_err cpl_timeout" *) input cfg_err_cpl_timeout;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_err:1.0 pcie2_cfg_err cpl_unexpect" *) input cfg_err_cpl_unexpect;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_err:1.0 pcie2_cfg_err cpl_abort" *) input cfg_err_cpl_abort;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_err:1.0 pcie2_cfg_err posted" *) input cfg_err_posted;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_err:1.0 pcie2_cfg_err cor" *) input cfg_err_cor;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_err:1.0 pcie2_cfg_err atomic_egress_blocked" *) input cfg_err_atomic_egress_blocked;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_err:1.0 pcie2_cfg_err internal_cor" *) input cfg_err_internal_cor;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_err:1.0 pcie2_cfg_err malformed" *) input cfg_err_malformed;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_err:1.0 pcie2_cfg_err mc_blocked" *) input cfg_err_mc_blocked;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_err:1.0 pcie2_cfg_err poisoned" *) input cfg_err_poisoned;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_err:1.0 pcie2_cfg_err norecovery" *) input cfg_err_norecovery;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_err:1.0 pcie2_cfg_err tlp_cpl_header" *) input [47:0]cfg_err_tlp_cpl_header;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_err:1.0 pcie2_cfg_err cpl_rdy" *) output cfg_err_cpl_rdy;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_err:1.0 pcie2_cfg_err locked" *) input cfg_err_locked;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_err:1.0 pcie2_cfg_err acs" *) input cfg_err_acs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_err:1.0 pcie2_cfg_err internal_uncor" *) input cfg_err_internal_uncor;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_control:1.0 pcie2_cfg_control trn_pending" *) input cfg_trn_pending;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_control:1.0 pcie2_cfg_control pm_halt_aspm_l0s" *) input cfg_pm_halt_aspm_l0s;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_control:1.0 pcie2_cfg_control pm_halt_aspm_l1" *) input cfg_pm_halt_aspm_l1;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_control:1.0 pcie2_cfg_control pm_force_state_en" *) input cfg_pm_force_state_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_control:1.0 pcie2_cfg_control pm_force_state" *) input [1:0]cfg_pm_force_state;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_control:1.0 pcie2_cfg_control dsn" *) input [63:0]cfg_dsn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_interrupt:1.0 pcie2_cfg_interrupt interrupt" *) input cfg_interrupt;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_interrupt:1.0 pcie2_cfg_interrupt rdy" *) output cfg_interrupt_rdy;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_interrupt:1.0 pcie2_cfg_interrupt assert" *) input cfg_interrupt_assert;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_interrupt:1.0 pcie2_cfg_interrupt write_data" *) input [7:0]cfg_interrupt_di;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_interrupt:1.0 pcie2_cfg_interrupt read_data" *) output [7:0]cfg_interrupt_do;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_interrupt:1.0 pcie2_cfg_interrupt mmenable" *) output [2:0]cfg_interrupt_mmenable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_interrupt:1.0 pcie2_cfg_interrupt msienable" *) output cfg_interrupt_msienable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_interrupt:1.0 pcie2_cfg_interrupt msixenable" *) output cfg_interrupt_msixenable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_interrupt:1.0 pcie2_cfg_interrupt msixfm" *) output cfg_interrupt_msixfm;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_interrupt:1.0 pcie2_cfg_interrupt stat" *) input cfg_interrupt_stat;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_interrupt:1.0 pcie2_cfg_interrupt pciecap_interrupt_msgnum" *) input [4:0]cfg_pciecap_interrupt_msgnum;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status turnoff" *) output cfg_to_turnoff;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_control:1.0 pcie2_cfg_control turnoff_ok" *) input cfg_turnoff_ok;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status bus_number" *) output [7:0]cfg_bus_number;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status device_number" *) output [4:0]cfg_device_number;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status function_number" *) output [2:0]cfg_function_number;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_control:1.0 pcie2_cfg_control pm_wake" *) input cfg_pm_wake;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_control:1.0 pcie2_cfg_control pm_send_pme_to" *) input cfg_pm_send_pme_to;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_control:1.0 pcie2_cfg_control ds_bus_number" *) input [7:0]cfg_ds_bus_number;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_control:1.0 pcie2_cfg_control ds_device_number" *) input [4:0]cfg_ds_device_number;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_control:1.0 pcie2_cfg_control ds_function_number" *) input [2:0]cfg_ds_function_number;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_cfg_mgmt:1.0 pcie_cfg_mgmt TYPE1_CFG_REG_ACCESS" *) input cfg_mgmt_wr_rw1c_as_rw;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_msg_rcvd:1.0 pcie2_cfg_msg_rcvd received" *) output cfg_msg_received;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_msg_rcvd:1.0 pcie2_cfg_msg_rcvd data" *) output [15:0]cfg_msg_data;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status bridge_serr_en" *) output cfg_bridge_serr_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status slot_control_electromech_il_ctl_pulse" *) output cfg_slot_control_electromech_il_ctl_pulse;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status root_control_syserr_corr_err_en" *) output cfg_root_control_syserr_corr_err_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status root_control_syserr_non_fatal_err_en" *) output cfg_root_control_syserr_non_fatal_err_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status root_control_syserr_fatal_err_en" *) output cfg_root_control_syserr_fatal_err_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status root_control_pme_int_en" *) output cfg_root_control_pme_int_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status aer_rooterr_corr_err_reporting_en" *) output cfg_aer_rooterr_corr_err_reporting_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status aer_rooterr_non_fatal_err_reporting_en" *) output cfg_aer_rooterr_non_fatal_err_reporting_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status aer_rooterr_fatal_err_reporting_en" *) output cfg_aer_rooterr_fatal_err_reporting_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status aer_rooterr_corr_err_received" *) output cfg_aer_rooterr_corr_err_received;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status aer_rooterr_non_fatal_err_received" *) output cfg_aer_rooterr_non_fatal_err_received;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status aer_rooterr_fatal_err_received" *) output cfg_aer_rooterr_fatal_err_received;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_msg_rcvd:1.0 pcie2_cfg_msg_rcvd err_cor" *) output cfg_msg_received_err_cor;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_msg_rcvd:1.0 pcie2_cfg_msg_rcvd err_non_fatal" *) output cfg_msg_received_err_non_fatal;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_msg_rcvd:1.0 pcie2_cfg_msg_rcvd err_fatal" *) output cfg_msg_received_err_fatal;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_msg_rcvd:1.0 pcie2_cfg_msg_rcvd received_pm_as_nak" *) output cfg_msg_received_pm_as_nak;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_msg_rcvd:1.0 pcie2_cfg_msg_rcvd pm_pme" *) output cfg_msg_received_pm_pme;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_msg_rcvd:1.0 pcie2_cfg_msg_rcvd pme_to_ack" *) output cfg_msg_received_pme_to_ack;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_msg_rcvd:1.0 pcie2_cfg_msg_rcvd assert_int_a" *) output cfg_msg_received_assert_int_a;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_msg_rcvd:1.0 pcie2_cfg_msg_rcvd assert_int_b" *) output cfg_msg_received_assert_int_b;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_msg_rcvd:1.0 pcie2_cfg_msg_rcvd assert_int_c" *) output cfg_msg_received_assert_int_c;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_msg_rcvd:1.0 pcie2_cfg_msg_rcvd assert_int_d" *) output cfg_msg_received_assert_int_d;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_msg_rcvd:1.0 pcie2_cfg_msg_rcvd deassert_int_a" *) output cfg_msg_received_deassert_int_a;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_msg_rcvd:1.0 pcie2_cfg_msg_rcvd deassert_int_b" *) output cfg_msg_received_deassert_int_b;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_msg_rcvd:1.0 pcie2_cfg_msg_rcvd deassert_int_c" *) output cfg_msg_received_deassert_int_c;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_msg_rcvd:1.0 pcie2_cfg_msg_rcvd deassert_int_d" *) output cfg_msg_received_deassert_int_d;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_msg_rcvd:1.0 pcie2_cfg_msg_rcvd received_setslotpowerlimit" *) output cfg_msg_received_setslotpowerlimit;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_pl:1.0 pcie2_pl directed_link_change" *) input [1:0]pl_directed_link_change;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_pl:1.0 pcie2_pl directed_link_width" *) input [1:0]pl_directed_link_width;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_pl:1.0 pcie2_pl directed_link_speed" *) input pl_directed_link_speed;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_pl:1.0 pcie2_pl directed_link_auton" *) input pl_directed_link_auton;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_pl:1.0 pcie2_pl upstream_prefer_deemph" *) input pl_upstream_prefer_deemph;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_pl:1.0 pcie2_pl sel_lnk_rate" *) output pl_sel_lnk_rate;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_pl:1.0 pcie2_pl sel_lnk_width" *) output [1:0]pl_sel_lnk_width;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_pl:1.0 pcie2_pl ltssm_state" *) output [5:0]pl_ltssm_state;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_pl:1.0 pcie2_pl lane_reversal_mode" *) output [1:0]pl_lane_reversal_mode;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_pl:1.0 pcie2_pl phy_lnk_up" *) output pl_phy_lnk_up;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_pl:1.0 pcie2_pl tx_pm_state" *) output [2:0]pl_tx_pm_state;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_pl:1.0 pcie2_pl rx_pm_state" *) output [1:0]pl_rx_pm_state;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_pl:1.0 pcie2_pl link_upcfg_cap" *) output pl_link_upcfg_cap;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_pl:1.0 pcie2_pl link_gen2_cap" *) output pl_link_gen2_cap;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_pl:1.0 pcie2_pl link_partner_gen2_supported" *) output pl_link_partner_gen2_supported;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_pl:1.0 pcie2_pl initial_link_width" *) output [2:0]pl_initial_link_width;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_pl:1.0 pcie2_pl directed_change_done" *) output pl_directed_change_done;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_pl:1.0 pcie2_pl received_hot_rst" *) output pl_received_hot_rst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_pl:1.0 pcie2_pl transmit_hot_rst" *) input pl_transmit_hot_rst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_pl:1.0 pcie2_pl downstream_deemph_source" *) input pl_downstream_deemph_source;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_err:1.0 pcie2_cfg_err err_aer_headerlog" *) input [127:0]cfg_err_aer_headerlog;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_err:1.0 pcie2_cfg_err aer_interrupt_msgnum" *) input [4:0]cfg_aer_interrupt_msgnum;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_err:1.0 pcie2_cfg_err err_aer_headerlog_set" *) output cfg_err_aer_headerlog_set;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_err:1.0 pcie2_cfg_err aer_ecrc_check_en" *) output cfg_aer_ecrc_check_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_err:1.0 pcie2_cfg_err aer_ecrc_gen_en" *) output cfg_aer_ecrc_gen_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie2_cfg_status:1.0 pcie2_cfg_status vc_tcvc_map" *) output [6:0]cfg_vc_tcvc_map;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 CLK.sys_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME CLK.sys_clk, FREQ_HZ 100000000, PHASE 0.000, INSERT_VIP 0" *) input sys_clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 RST.sys_rst_n RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME RST.sys_rst_n, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input sys_rst_n;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pipe_clock:1.0 pipe_clock mmcm_rst_n" *) input pipe_mmcm_rst_n;
  (* X_INTERFACE_INFO = "xilinx.com:interface:startup:1.0 startup cfgclk" *) output startup_cfgclk;
  (* X_INTERFACE_INFO = "xilinx.com:interface:startup:1.0 startup cfgmclk" *) output startup_cfgmclk;
  (* X_INTERFACE_INFO = "xilinx.com:interface:startup:1.0 startup eos" *) output startup_eos;
  (* X_INTERFACE_INFO = "xilinx.com:interface:startup:1.0 startup preq" *) output startup_preq;
  (* X_INTERFACE_INFO = "xilinx.com:interface:startup:1.0 startup clk" *) input startup_clk;
  (* X_INTERFACE_INFO = "xilinx.com:interface:startup:1.0 startup gsr" *) input startup_gsr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:startup:1.0 startup gts" *) input startup_gts;
  (* X_INTERFACE_INFO = "xilinx.com:interface:startup:1.0 startup keyclearb" *) input startup_keyclearb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:startup:1.0 startup pack" *) input startup_pack;
  (* X_INTERFACE_INFO = "xilinx.com:interface:startup:1.0 startup usrcclko" *) input startup_usrcclko;
  (* X_INTERFACE_INFO = "xilinx.com:interface:startup:1.0 startup usrclkts" *) input startup_usrcclkts;
  (* X_INTERFACE_INFO = "xilinx.com:interface:startup:1.0 startup userdoneo" *) input startup_usrdoneo;
  (* X_INTERFACE_INFO = "xilinx.com:interface:startup:1.0 startup usrdonets" *) input startup_usrdonets;
  input pcie_drp_clk;
  (* X_INTERFACE_INFO = "xilinx.com:interface:drp:1.0 drp DEN" *) input pcie_drp_en;
  (* X_INTERFACE_INFO = "xilinx.com:interface:drp:1.0 drp DWE" *) input pcie_drp_we;
  (* X_INTERFACE_INFO = "xilinx.com:interface:drp:1.0 drp DADDR" *) input [8:0]pcie_drp_addr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:drp:1.0 drp DI" *) input [15:0]pcie_drp_di;
  (* X_INTERFACE_INFO = "xilinx.com:interface:drp:1.0 drp DO" *) output [15:0]pcie_drp_do;
  (* X_INTERFACE_INFO = "xilinx.com:interface:drp:1.0 drp DRDY" *) output pcie_drp_rdy;

  wire cfg_aer_ecrc_check_en;
  wire cfg_aer_ecrc_gen_en;
  wire [4:0]cfg_aer_interrupt_msgnum;
  wire cfg_aer_rooterr_corr_err_received;
  wire cfg_aer_rooterr_corr_err_reporting_en;
  wire cfg_aer_rooterr_fatal_err_received;
  wire cfg_aer_rooterr_fatal_err_reporting_en;
  wire cfg_aer_rooterr_non_fatal_err_received;
  wire cfg_aer_rooterr_non_fatal_err_reporting_en;
  wire cfg_bridge_serr_en;
  wire [7:0]cfg_bus_number;
  wire [15:0]cfg_command;
  wire [15:0]cfg_dcommand;
  wire [15:0]cfg_dcommand2;
  wire [4:0]cfg_device_number;
  wire [7:0]cfg_ds_bus_number;
  wire [4:0]cfg_ds_device_number;
  wire [2:0]cfg_ds_function_number;
  wire [63:0]cfg_dsn;
  wire [15:0]cfg_dstatus;
  wire cfg_err_acs;
  wire [127:0]cfg_err_aer_headerlog;
  wire cfg_err_aer_headerlog_set;
  wire cfg_err_atomic_egress_blocked;
  wire cfg_err_cor;
  wire cfg_err_cpl_abort;
  wire cfg_err_cpl_rdy;
  wire cfg_err_cpl_timeout;
  wire cfg_err_cpl_unexpect;
  wire cfg_err_ecrc;
  wire cfg_err_internal_cor;
  wire cfg_err_internal_uncor;
  wire cfg_err_locked;
  wire cfg_err_malformed;
  wire cfg_err_mc_blocked;
  wire cfg_err_norecovery;
  wire cfg_err_poisoned;
  wire cfg_err_posted;
  wire [47:0]cfg_err_tlp_cpl_header;
  wire cfg_err_ur;
  wire [2:0]cfg_function_number;
  wire cfg_interrupt;
  wire cfg_interrupt_assert;
  wire [7:0]cfg_interrupt_di;
  wire [7:0]cfg_interrupt_do;
  wire [2:0]cfg_interrupt_mmenable;
  wire cfg_interrupt_msienable;
  wire cfg_interrupt_msixenable;
  wire cfg_interrupt_msixfm;
  wire cfg_interrupt_rdy;
  wire cfg_interrupt_stat;
  wire [15:0]cfg_lcommand;
  wire [15:0]cfg_lstatus;
  wire [3:0]cfg_mgmt_byte_en;
  wire [31:0]cfg_mgmt_di;
  wire [31:0]cfg_mgmt_do;
  wire [9:0]cfg_mgmt_dwaddr;
  wire cfg_mgmt_rd_en;
  wire cfg_mgmt_rd_wr_done;
  wire cfg_mgmt_wr_en;
  wire cfg_mgmt_wr_readonly;
  wire cfg_mgmt_wr_rw1c_as_rw;
  wire [15:0]cfg_msg_data;
  wire cfg_msg_received;
  wire cfg_msg_received_assert_int_a;
  wire cfg_msg_received_assert_int_b;
  wire cfg_msg_received_assert_int_c;
  wire cfg_msg_received_assert_int_d;
  wire cfg_msg_received_deassert_int_a;
  wire cfg_msg_received_deassert_int_b;
  wire cfg_msg_received_deassert_int_c;
  wire cfg_msg_received_deassert_int_d;
  wire cfg_msg_received_err_cor;
  wire cfg_msg_received_err_fatal;
  wire cfg_msg_received_err_non_fatal;
  wire cfg_msg_received_pm_as_nak;
  wire cfg_msg_received_pm_pme;
  wire cfg_msg_received_pme_to_ack;
  wire cfg_msg_received_setslotpowerlimit;
  wire [2:0]cfg_pcie_link_state;
  wire [4:0]cfg_pciecap_interrupt_msgnum;
  wire [1:0]cfg_pm_force_state;
  wire cfg_pm_force_state_en;
  wire cfg_pm_halt_aspm_l0s;
  wire cfg_pm_halt_aspm_l1;
  wire cfg_pm_send_pme_to;
  wire cfg_pm_wake;
  wire cfg_pmcsr_pme_en;
  wire cfg_pmcsr_pme_status;
  wire [1:0]cfg_pmcsr_powerstate;
  wire cfg_received_func_lvl_rst;
  wire cfg_root_control_pme_int_en;
  wire cfg_root_control_syserr_corr_err_en;
  wire cfg_root_control_syserr_fatal_err_en;
  wire cfg_root_control_syserr_non_fatal_err_en;
  wire cfg_slot_control_electromech_il_ctl_pulse;
  wire [15:0]cfg_status;
  wire cfg_to_turnoff;
  wire cfg_trn_pending;
  wire cfg_turnoff_ok;
  wire [6:0]cfg_vc_tcvc_map;
  wire [11:0]fc_cpld;
  wire [7:0]fc_cplh;
  wire [11:0]fc_npd;
  wire [7:0]fc_nph;
  wire [11:0]fc_pd;
  wire [7:0]fc_ph;
  wire [2:0]fc_sel;
  wire [127:0]m_axis_rx_tdata;
  wire [15:0]m_axis_rx_tkeep;
  wire m_axis_rx_tlast;
  wire m_axis_rx_tready;
  wire [21:0]m_axis_rx_tuser;
  wire m_axis_rx_tvalid;
  wire [3:0]pci_exp_rxn;
  wire [3:0]pci_exp_rxp;
  wire [3:0]pci_exp_txn;
  wire [3:0]pci_exp_txp;
  wire [8:0]pcie_drp_addr;
  wire pcie_drp_clk;
  wire [15:0]pcie_drp_di;
  wire [15:0]pcie_drp_do;
  wire pcie_drp_en;
  wire pcie_drp_rdy;
  wire pcie_drp_we;
  wire pipe_dclk_in;
  wire pipe_gen3_out;
  wire pipe_mmcm_lock_in;
  wire pipe_mmcm_rst_n;
  wire pipe_oobclk_in;
  wire pipe_pclk_in;
  wire [3:0]pipe_pclk_sel_out;
  wire [3:0]pipe_rxoutclk_in;
  wire [3:0]pipe_rxoutclk_out;
  wire pipe_rxusrclk_in;
  wire pipe_txoutclk_out;
  wire pipe_userclk1_in;
  wire pipe_userclk2_in;
  wire pl_directed_change_done;
  wire pl_directed_link_auton;
  wire [1:0]pl_directed_link_change;
  wire pl_directed_link_speed;
  wire [1:0]pl_directed_link_width;
  wire pl_downstream_deemph_source;
  wire [2:0]pl_initial_link_width;
  wire [1:0]pl_lane_reversal_mode;
  wire pl_link_gen2_cap;
  wire pl_link_partner_gen2_supported;
  wire pl_link_upcfg_cap;
  wire [5:0]pl_ltssm_state;
  wire pl_phy_lnk_up;
  wire pl_received_hot_rst;
  wire [1:0]pl_rx_pm_state;
  wire pl_sel_lnk_rate;
  wire [1:0]pl_sel_lnk_width;
  wire pl_transmit_hot_rst;
  wire [2:0]pl_tx_pm_state;
  wire pl_upstream_prefer_deemph;
  wire rx_np_ok;
  wire rx_np_req;
  wire [127:0]s_axis_tx_tdata;
  wire [15:0]s_axis_tx_tkeep;
  wire s_axis_tx_tlast;
  wire s_axis_tx_tready;
  wire [3:0]s_axis_tx_tuser;
  wire s_axis_tx_tvalid;
  wire startup_cfgclk;
  wire startup_cfgmclk;
  wire startup_clk;
  wire startup_eos;
  wire startup_gsr;
  wire startup_gts;
  wire startup_keyclearb;
  wire startup_pack;
  wire startup_preq;
  wire startup_usrcclko;
  wire startup_usrcclkts;
  wire startup_usrdoneo;
  wire startup_usrdonets;
  wire sys_clk;
  wire sys_rst_n;
  wire [5:0]tx_buf_av;
  wire tx_cfg_gnt;
  wire tx_cfg_req;
  wire tx_err_drop;
  wire user_app_rdy;
  wire user_clk_out;
  wire user_lnk_up;
  wire user_reset_out;
  wire NLW_inst_ext_ch_gt_drpclk_UNCONNECTED;
  wire NLW_inst_int_dclk_out_UNCONNECTED;
  wire NLW_inst_int_mmcm_lock_out_UNCONNECTED;
  wire NLW_inst_int_oobclk_out_UNCONNECTED;
  wire NLW_inst_int_pclk_out_slave_UNCONNECTED;
  wire NLW_inst_int_pipe_rxusrclk_out_UNCONNECTED;
  wire NLW_inst_int_userclk1_out_UNCONNECTED;
  wire NLW_inst_int_userclk2_out_UNCONNECTED;
  wire NLW_inst_pipe_qrst_idle_UNCONNECTED;
  wire NLW_inst_pipe_rate_idle_UNCONNECTED;
  wire NLW_inst_pipe_rst_idle_UNCONNECTED;
  wire NLW_inst_qpll_drp_clk_UNCONNECTED;
  wire NLW_inst_qpll_drp_gen3_UNCONNECTED;
  wire NLW_inst_qpll_drp_ovrd_UNCONNECTED;
  wire NLW_inst_qpll_drp_rst_n_UNCONNECTED;
  wire NLW_inst_qpll_drp_start_UNCONNECTED;
  wire NLW_inst_qpll_qplld_UNCONNECTED;
  wire [11:0]NLW_inst_common_commands_out_UNCONNECTED;
  wire [63:0]NLW_inst_ext_ch_gt_drpdo_UNCONNECTED;
  wire [3:0]NLW_inst_ext_ch_gt_drprdy_UNCONNECTED;
  wire [3:0]NLW_inst_gt_ch_drp_rdy_UNCONNECTED;
  wire [31:0]NLW_inst_icap_o_UNCONNECTED;
  wire [1:0]NLW_inst_int_qplllock_out_UNCONNECTED;
  wire [1:0]NLW_inst_int_qplloutclk_out_UNCONNECTED;
  wire [1:0]NLW_inst_int_qplloutrefclk_out_UNCONNECTED;
  wire [3:0]NLW_inst_int_rxoutclk_out_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_cpll_lock_UNCONNECTED;
  wire [31:0]NLW_inst_pipe_debug_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_debug_0_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_debug_1_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_debug_2_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_debug_3_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_debug_4_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_debug_5_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_debug_6_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_debug_7_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_debug_8_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_debug_9_UNCONNECTED;
  wire [59:0]NLW_inst_pipe_dmonitorout_UNCONNECTED;
  wire [27:0]NLW_inst_pipe_drp_fsm_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_eyescandataerror_UNCONNECTED;
  wire [0:0]NLW_inst_pipe_qpll_lock_UNCONNECTED;
  wire [11:0]NLW_inst_pipe_qrst_fsm_UNCONNECTED;
  wire [19:0]NLW_inst_pipe_rate_fsm_UNCONNECTED;
  wire [4:0]NLW_inst_pipe_rst_fsm_UNCONNECTED;
  wire [11:0]NLW_inst_pipe_rxbufstatus_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_rxcommadet_UNCONNECTED;
  wire [31:0]NLW_inst_pipe_rxdisperr_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_rxdlysresetdone_UNCONNECTED;
  wire [31:0]NLW_inst_pipe_rxnotintable_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_rxphaligndone_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_rxpmaresetdone_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_rxprbserr_UNCONNECTED;
  wire [11:0]NLW_inst_pipe_rxstatus_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_rxsyncdone_UNCONNECTED;
  wire [27:0]NLW_inst_pipe_sync_fsm_rx_UNCONNECTED;
  wire [23:0]NLW_inst_pipe_sync_fsm_tx_UNCONNECTED;
  wire [24:0]NLW_inst_pipe_tx_0_sigs_UNCONNECTED;
  wire [24:0]NLW_inst_pipe_tx_1_sigs_UNCONNECTED;
  wire [24:0]NLW_inst_pipe_tx_2_sigs_UNCONNECTED;
  wire [24:0]NLW_inst_pipe_tx_3_sigs_UNCONNECTED;
  wire [24:0]NLW_inst_pipe_tx_4_sigs_UNCONNECTED;
  wire [24:0]NLW_inst_pipe_tx_5_sigs_UNCONNECTED;
  wire [24:0]NLW_inst_pipe_tx_6_sigs_UNCONNECTED;
  wire [24:0]NLW_inst_pipe_tx_7_sigs_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_txdlysresetdone_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_txphaligndone_UNCONNECTED;
  wire [3:0]NLW_inst_pipe_txphinitdone_UNCONNECTED;
  wire [1:0]NLW_inst_qpll_qpllreset_UNCONNECTED;

  (* CFG_CTL_IF = "TRUE" *) 
  (* CFG_FC_IF = "TRUE" *) 
  (* CFG_MGMT_IF = "TRUE" *) 
  (* CFG_STATUS_IF = "TRUE" *) 
  (* CLASS_CODE = "020000" *) 
  (* C_DATA_WIDTH = "128" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* ENABLE_JTAG_DBG = "FALSE" *) 
  (* ERR_REPORTING_IF = "TRUE" *) 
  (* EXT_CH_GT_DRP = "FALSE" *) 
  (* EXT_PIPE_INTERFACE = "FALSE" *) 
  (* EXT_STARTUP_PRIMITIVE = "FALSE" *) 
  (* KEEP_WIDTH = "16" *) 
  (* LINK_CAP_MAX_LINK_WIDTH = "4" *) 
  (* PCIE_ASYNC_EN = "FALSE" *) 
  (* PCIE_EXT_CLK = "TRUE" *) 
  (* PCIE_EXT_GT_COMMON = "FALSE" *) 
  (* PIPE_SIM = "FALSE" *) 
  (* PL_INTERFACE = "TRUE" *) 
  (* RCV_MSG_IF = "TRUE" *) 
  (* SHARED_LOGIC_IN_CORE = "FALSE" *) 
  (* TRANSCEIVER_CTRL_STATUS_PORTS = "FALSE" *) 
  (* bar_0 = "FFFFC000" *) 
  (* bar_1 = "00000000" *) 
  (* bar_2 = "00000000" *) 
  (* bar_3 = "00000000" *) 
  (* bar_4 = "00000000" *) 
  (* bar_5 = "00000000" *) 
  (* bram_lat = "0" *) 
  (* c_aer_base_ptr = "000" *) 
  (* c_aer_cap_ecrc_check_capable = "FALSE" *) 
  (* c_aer_cap_ecrc_gen_capable = "FALSE" *) 
  (* c_aer_cap_multiheader = "FALSE" *) 
  (* c_aer_cap_nextptr = "000" *) 
  (* c_aer_cap_on = "FALSE" *) 
  (* c_aer_cap_optional_err_support = "000000" *) 
  (* c_aer_cap_permit_rooterr_update = "FALSE" *) 
  (* c_buf_opt_bma = "TRUE" *) 
  (* c_component_name = "pcie_7x_0" *) 
  (* c_cpl_inf = "TRUE" *) 
  (* c_cpl_infinite = "TRUE" *) 
  (* c_cpl_timeout_disable_sup = "FALSE" *) 
  (* c_cpl_timeout_range = "0010" *) 
  (* c_cpl_timeout_ranges_sup = "2" *) 
  (* c_d1_support = "FALSE" *) 
  (* c_d2_support = "FALSE" *) 
  (* c_de_emph = "FALSE" *) 
  (* c_dev_cap2_ari_forwarding_supported = "FALSE" *) 
  (* c_dev_cap2_atomicop32_completer_supported = "FALSE" *) 
  (* c_dev_cap2_atomicop64_completer_supported = "FALSE" *) 
  (* c_dev_cap2_atomicop_routing_supported = "FALSE" *) 
  (* c_dev_cap2_cas128_completer_supported = "FALSE" *) 
  (* c_dev_cap2_tph_completer_supported = "00" *) 
  (* c_dev_control_ext_tag_default = "FALSE" *) 
  (* c_dev_port_type = "0" *) 
  (* c_dis_lane_reverse = "TRUE" *) 
  (* c_disable_rx_poisoned_resp = "FALSE" *) 
  (* c_disable_scrambling = "FALSE" *) 
  (* c_disable_tx_aspm_l0s = "FALSE" *) 
  (* c_dll_lnk_actv_cap = "FALSE" *) 
  (* c_dsi_bool = "FALSE" *) 
  (* c_dsn_base_ptr = "100" *) 
  (* c_dsn_cap_enabled = "TRUE" *) 
  (* c_dsn_next_ptr = "000" *) 
  (* c_enable_msg_route = "00000000000" *) 
  (* c_ep_l0s_accpt_lat = "0" *) 
  (* c_ep_l1_accpt_lat = "7" *) 
  (* c_ext_pci_cfg_space_addr = "3FF" *) 
  (* c_external_clocking = "TRUE" *) 
  (* c_fc_cpld = "461" *) 
  (* c_fc_cplh = "36" *) 
  (* c_fc_npd = "24" *) 
  (* c_fc_nph = "12" *) 
  (* c_fc_pd = "437" *) 
  (* c_fc_ph = "32" *) 
  (* c_gen1 = "1'b1" *) 
  (* c_header_type = "00" *) 
  (* c_hw_auton_spd_disable = "FALSE" *) 
  (* c_int_width = "64" *) 
  (* c_last_cfg_dw = "10C" *) 
  (* c_link_cap_aspm_optionality = "FALSE" *) 
  (* c_ll_ack_timeout = "0000" *) 
  (* c_ll_ack_timeout_enable = "FALSE" *) 
  (* c_ll_ack_timeout_function = "0" *) 
  (* c_ll_replay_timeout = "0000" *) 
  (* c_ll_replay_timeout_enable = "FALSE" *) 
  (* c_ll_replay_timeout_func = "1" *) 
  (* c_lnk_bndwdt_notif = "FALSE" *) 
  (* c_msi = "0" *) 
  (* c_msi_64b_addr = "TRUE" *) 
  (* c_msi_cap_on = "FALSE" *) 
  (* c_msi_mult_msg_extn = "0" *) 
  (* c_msi_per_vctr_mask_cap = "FALSE" *) 
  (* c_msix_cap_on = "TRUE" *) 
  (* c_msix_next_ptr = "00" *) 
  (* c_msix_pba_bir = "0" *) 
  (* c_msix_pba_offset = "1C00" *) 
  (* c_msix_table_bir = "0" *) 
  (* c_msix_table_offset = "1800" *) 
  (* c_msix_table_size = "003" *) 
  (* c_pci_cfg_space_addr = "2A" *) 
  (* c_pcie_blk_locn = "0" *) 
  (* c_pcie_cap_next_ptr = "9C" *) 
  (* c_pcie_cap_slot_implemented = "FALSE" *) 
  (* c_pcie_dbg_ports = "TRUE" *) 
  (* c_pcie_fast_config = "1" *) 
  (* c_perf_level_high = "TRUE" *) 
  (* c_phantom_functions = "0" *) 
  (* c_pm_cap_next_ptr = "60" *) 
  (* c_pme_support = "0F" *) 
  (* c_rbar_base_ptr = "000" *) 
  (* c_rbar_cap_control_encodedbar0 = "00" *) 
  (* c_rbar_cap_control_encodedbar1 = "00" *) 
  (* c_rbar_cap_control_encodedbar2 = "00" *) 
  (* c_rbar_cap_control_encodedbar3 = "00" *) 
  (* c_rbar_cap_control_encodedbar4 = "00" *) 
  (* c_rbar_cap_control_encodedbar5 = "00" *) 
  (* c_rbar_cap_index0 = "0" *) 
  (* c_rbar_cap_index1 = "0" *) 
  (* c_rbar_cap_index2 = "0" *) 
  (* c_rbar_cap_index3 = "0" *) 
  (* c_rbar_cap_index4 = "0" *) 
  (* c_rbar_cap_index5 = "0" *) 
  (* c_rbar_cap_nextptr = "000" *) 
  (* c_rbar_cap_on = "FALSE" *) 
  (* c_rbar_cap_sup0 = "00001" *) 
  (* c_rbar_cap_sup1 = "00001" *) 
  (* c_rbar_cap_sup2 = "00001" *) 
  (* c_rbar_cap_sup3 = "00001" *) 
  (* c_rbar_cap_sup4 = "00001" *) 
  (* c_rbar_cap_sup5 = "00001" *) 
  (* c_rbar_num = "0" *) 
  (* c_rcb = "0" *) 
  (* c_recrc_check = "0" *) 
  (* c_recrc_check_trim = "FALSE" *) 
  (* c_rev_gt_order = "FALSE" *) 
  (* c_root_cap_crs = "FALSE" *) 
  (* c_rx_raddr_lat = "0" *) 
  (* c_rx_ram_limit = "7FF" *) 
  (* c_rx_rdata_lat = "2" *) 
  (* c_rx_write_lat = "0" *) 
  (* c_silicon_rev = "2" *) 
  (* c_slot_cap_attn_butn = "FALSE" *) 
  (* c_slot_cap_attn_ind = "FALSE" *) 
  (* c_slot_cap_elec_interlock = "FALSE" *) 
  (* c_slot_cap_hotplug_cap = "FALSE" *) 
  (* c_slot_cap_hotplug_surprise = "FALSE" *) 
  (* c_slot_cap_mrl = "FALSE" *) 
  (* c_slot_cap_no_cmd_comp_sup = "FALSE" *) 
  (* c_slot_cap_physical_slot_num = "0" *) 
  (* c_slot_cap_pwr_ctrl = "FALSE" *) 
  (* c_slot_cap_pwr_ind = "FALSE" *) 
  (* c_slot_cap_pwr_limit_scale = "0" *) 
  (* c_slot_cap_pwr_limit_value = "0" *) 
  (* c_surprise_dn_err_cap = "FALSE" *) 
  (* c_trgt_lnk_spd = "2" *) 
  (* c_trn_np_fc = "TRUE" *) 
  (* c_tx_last_tlp = "29" *) 
  (* c_tx_raddr_lat = "0" *) 
  (* c_tx_rdata_lat = "2" *) 
  (* c_tx_write_lat = "0" *) 
  (* c_upconfig_capable = "TRUE" *) 
  (* c_upstream_facing = "TRUE" *) 
  (* c_ur_atomic = "FALSE" *) 
  (* c_ur_inv_req = "TRUE" *) 
  (* c_ur_prs_response = "TRUE" *) 
  (* c_vc_base_ptr = "000" *) 
  (* c_vc_cap_enabled = "FALSE" *) 
  (* c_vc_cap_reject_snoop = "FALSE" *) 
  (* c_vc_next_ptr = "000" *) 
  (* c_vsec_base_ptr = "000" *) 
  (* c_vsec_cap_enabled = "FALSE" *) 
  (* c_vsec_next_ptr = "000" *) 
  (* c_xlnx_ref_board = "NONE" *) 
  (* cap_ver = "2" *) 
  (* cardbus_cis_ptr = "00000000" *) 
  (* cmps = "2" *) 
  (* con_scl_fctr_d0_state = "0" *) 
  (* con_scl_fctr_d1_state = "0" *) 
  (* con_scl_fctr_d2_state = "0" *) 
  (* con_scl_fctr_d3_state = "0" *) 
  (* cost_table = "1" *) 
  (* d1_sup = "0" *) 
  (* d2_sup = "0" *) 
  (* dev_id = "1041" *) 
  (* dev_port_type = "0000" *) 
  (* dis_scl_fctr_d0_state = "0" *) 
  (* dis_scl_fctr_d1_state = "0" *) 
  (* dis_scl_fctr_d2_state = "0" *) 
  (* dis_scl_fctr_d3_state = "0" *) 
  (* dsi = "0" *) 
  (* ep_l0s_accpt_lat = "000" *) 
  (* ep_l1_accpt_lat = "111" *) 
  (* ext_tag_fld_sup = "FALSE" *) 
  (* int_pin = "0" *) 
  (* intx = "FALSE" *) 
  (* max_lnk_spd = "2" *) 
  (* max_lnk_wdt = "000100" *) 
  (* mps = "010" *) 
  (* no_soft_rst = "TRUE" *) 
  (* pci_exp_int_freq = "2" *) 
  (* pci_exp_ref_freq = "0" *) 
  (* phantm_func_sup = "00" *) 
  (* pme_sup = "0F" *) 
  (* pwr_con_d0_state = "00" *) 
  (* pwr_con_d1_state = "00" *) 
  (* pwr_con_d2_state = "00" *) 
  (* pwr_con_d3_state = "00" *) 
  (* pwr_dis_d0_state = "00" *) 
  (* pwr_dis_d1_state = "00" *) 
  (* pwr_dis_d2_state = "00" *) 
  (* pwr_dis_d3_state = "00" *) 
  (* rev_id = "00" *) 
  (* slot_clk = "TRUE" *) 
  (* subsys_id = "0007" *) 
  (* subsys_ven_id = "10EE" *) 
  (* ven_id = "1AF4" *) 
  (* xrom_bar = "00000000" *) 
  pcie_7x_0_pcie_7x_0_pcie2_top inst
       (.cfg_aer_ecrc_check_en(cfg_aer_ecrc_check_en),
        .cfg_aer_ecrc_gen_en(cfg_aer_ecrc_gen_en),
        .cfg_aer_interrupt_msgnum(cfg_aer_interrupt_msgnum),
        .cfg_aer_rooterr_corr_err_received(cfg_aer_rooterr_corr_err_received),
        .cfg_aer_rooterr_corr_err_reporting_en(cfg_aer_rooterr_corr_err_reporting_en),
        .cfg_aer_rooterr_fatal_err_received(cfg_aer_rooterr_fatal_err_received),
        .cfg_aer_rooterr_fatal_err_reporting_en(cfg_aer_rooterr_fatal_err_reporting_en),
        .cfg_aer_rooterr_non_fatal_err_received(cfg_aer_rooterr_non_fatal_err_received),
        .cfg_aer_rooterr_non_fatal_err_reporting_en(cfg_aer_rooterr_non_fatal_err_reporting_en),
        .cfg_bridge_serr_en(cfg_bridge_serr_en),
        .cfg_bus_number(cfg_bus_number),
        .cfg_command(cfg_command),
        .cfg_dcommand(cfg_dcommand),
        .cfg_dcommand2(cfg_dcommand2),
        .cfg_device_number(cfg_device_number),
        .cfg_ds_bus_number(cfg_ds_bus_number),
        .cfg_ds_device_number(cfg_ds_device_number),
        .cfg_ds_function_number(cfg_ds_function_number),
        .cfg_dsn(cfg_dsn),
        .cfg_dstatus(cfg_dstatus),
        .cfg_err_acs(cfg_err_acs),
        .cfg_err_aer_headerlog(cfg_err_aer_headerlog),
        .cfg_err_aer_headerlog_set(cfg_err_aer_headerlog_set),
        .cfg_err_atomic_egress_blocked(cfg_err_atomic_egress_blocked),
        .cfg_err_cor(cfg_err_cor),
        .cfg_err_cpl_abort(cfg_err_cpl_abort),
        .cfg_err_cpl_rdy(cfg_err_cpl_rdy),
        .cfg_err_cpl_timeout(cfg_err_cpl_timeout),
        .cfg_err_cpl_unexpect(cfg_err_cpl_unexpect),
        .cfg_err_ecrc(cfg_err_ecrc),
        .cfg_err_internal_cor(cfg_err_internal_cor),
        .cfg_err_internal_uncor(cfg_err_internal_uncor),
        .cfg_err_locked(cfg_err_locked),
        .cfg_err_malformed(cfg_err_malformed),
        .cfg_err_mc_blocked(cfg_err_mc_blocked),
        .cfg_err_norecovery(cfg_err_norecovery),
        .cfg_err_poisoned(cfg_err_poisoned),
        .cfg_err_posted(cfg_err_posted),
        .cfg_err_tlp_cpl_header(cfg_err_tlp_cpl_header),
        .cfg_err_ur(cfg_err_ur),
        .cfg_function_number(cfg_function_number),
        .cfg_interrupt(cfg_interrupt),
        .cfg_interrupt_assert(cfg_interrupt_assert),
        .cfg_interrupt_di(cfg_interrupt_di),
        .cfg_interrupt_do(cfg_interrupt_do),
        .cfg_interrupt_mmenable(cfg_interrupt_mmenable),
        .cfg_interrupt_msienable(cfg_interrupt_msienable),
        .cfg_interrupt_msixenable(cfg_interrupt_msixenable),
        .cfg_interrupt_msixfm(cfg_interrupt_msixfm),
        .cfg_interrupt_rdy(cfg_interrupt_rdy),
        .cfg_interrupt_stat(cfg_interrupt_stat),
        .cfg_lcommand(cfg_lcommand),
        .cfg_lstatus(cfg_lstatus),
        .cfg_mgmt_byte_en(cfg_mgmt_byte_en),
        .cfg_mgmt_di(cfg_mgmt_di),
        .cfg_mgmt_do(cfg_mgmt_do),
        .cfg_mgmt_dwaddr(cfg_mgmt_dwaddr),
        .cfg_mgmt_rd_en(cfg_mgmt_rd_en),
        .cfg_mgmt_rd_wr_done(cfg_mgmt_rd_wr_done),
        .cfg_mgmt_wr_en(cfg_mgmt_wr_en),
        .cfg_mgmt_wr_readonly(cfg_mgmt_wr_readonly),
        .cfg_mgmt_wr_rw1c_as_rw(cfg_mgmt_wr_rw1c_as_rw),
        .cfg_msg_data(cfg_msg_data),
        .cfg_msg_received(cfg_msg_received),
        .cfg_msg_received_assert_int_a(cfg_msg_received_assert_int_a),
        .cfg_msg_received_assert_int_b(cfg_msg_received_assert_int_b),
        .cfg_msg_received_assert_int_c(cfg_msg_received_assert_int_c),
        .cfg_msg_received_assert_int_d(cfg_msg_received_assert_int_d),
        .cfg_msg_received_deassert_int_a(cfg_msg_received_deassert_int_a),
        .cfg_msg_received_deassert_int_b(cfg_msg_received_deassert_int_b),
        .cfg_msg_received_deassert_int_c(cfg_msg_received_deassert_int_c),
        .cfg_msg_received_deassert_int_d(cfg_msg_received_deassert_int_d),
        .cfg_msg_received_err_cor(cfg_msg_received_err_cor),
        .cfg_msg_received_err_fatal(cfg_msg_received_err_fatal),
        .cfg_msg_received_err_non_fatal(cfg_msg_received_err_non_fatal),
        .cfg_msg_received_pm_as_nak(cfg_msg_received_pm_as_nak),
        .cfg_msg_received_pm_pme(cfg_msg_received_pm_pme),
        .cfg_msg_received_pme_to_ack(cfg_msg_received_pme_to_ack),
        .cfg_msg_received_setslotpowerlimit(cfg_msg_received_setslotpowerlimit),
        .cfg_pcie_link_state(cfg_pcie_link_state),
        .cfg_pciecap_interrupt_msgnum(cfg_pciecap_interrupt_msgnum),
        .cfg_pm_force_state(cfg_pm_force_state),
        .cfg_pm_force_state_en(cfg_pm_force_state_en),
        .cfg_pm_halt_aspm_l0s(cfg_pm_halt_aspm_l0s),
        .cfg_pm_halt_aspm_l1(cfg_pm_halt_aspm_l1),
        .cfg_pm_send_pme_to(cfg_pm_send_pme_to),
        .cfg_pm_wake(cfg_pm_wake),
        .cfg_pmcsr_pme_en(cfg_pmcsr_pme_en),
        .cfg_pmcsr_pme_status(cfg_pmcsr_pme_status),
        .cfg_pmcsr_powerstate(cfg_pmcsr_powerstate),
        .cfg_received_func_lvl_rst(cfg_received_func_lvl_rst),
        .cfg_root_control_pme_int_en(cfg_root_control_pme_int_en),
        .cfg_root_control_syserr_corr_err_en(cfg_root_control_syserr_corr_err_en),
        .cfg_root_control_syserr_fatal_err_en(cfg_root_control_syserr_fatal_err_en),
        .cfg_root_control_syserr_non_fatal_err_en(cfg_root_control_syserr_non_fatal_err_en),
        .cfg_slot_control_electromech_il_ctl_pulse(cfg_slot_control_electromech_il_ctl_pulse),
        .cfg_status(cfg_status),
        .cfg_to_turnoff(cfg_to_turnoff),
        .cfg_trn_pending(cfg_trn_pending),
        .cfg_turnoff_ok(cfg_turnoff_ok),
        .cfg_vc_tcvc_map(cfg_vc_tcvc_map),
        .common_commands_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .common_commands_out(NLW_inst_common_commands_out_UNCONNECTED[11:0]),
        .ext_ch_gt_drpaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ext_ch_gt_drpclk(NLW_inst_ext_ch_gt_drpclk_UNCONNECTED),
        .ext_ch_gt_drpdi({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ext_ch_gt_drpdo(NLW_inst_ext_ch_gt_drpdo_UNCONNECTED[63:0]),
        .ext_ch_gt_drpen({1'b0,1'b0,1'b0,1'b0}),
        .ext_ch_gt_drprdy(NLW_inst_ext_ch_gt_drprdy_UNCONNECTED[3:0]),
        .ext_ch_gt_drpwe({1'b0,1'b0,1'b0,1'b0}),
        .fc_cpld(fc_cpld),
        .fc_cplh(fc_cplh),
        .fc_npd(fc_npd),
        .fc_nph(fc_nph),
        .fc_pd(fc_pd),
        .fc_ph(fc_ph),
        .fc_sel(fc_sel),
        .gt_ch_drp_rdy(NLW_inst_gt_ch_drp_rdy_UNCONNECTED[3:0]),
        .icap_clk(1'b0),
        .icap_csib(1'b0),
        .icap_i({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .icap_o(NLW_inst_icap_o_UNCONNECTED[31:0]),
        .icap_rdwrb(1'b0),
        .int_dclk_out(NLW_inst_int_dclk_out_UNCONNECTED),
        .int_mmcm_lock_out(NLW_inst_int_mmcm_lock_out_UNCONNECTED),
        .int_oobclk_out(NLW_inst_int_oobclk_out_UNCONNECTED),
        .int_pclk_out_slave(NLW_inst_int_pclk_out_slave_UNCONNECTED),
        .int_pclk_sel_slave({1'b0,1'b0,1'b0,1'b0}),
        .int_pipe_rxusrclk_out(NLW_inst_int_pipe_rxusrclk_out_UNCONNECTED),
        .int_qplllock_out(NLW_inst_int_qplllock_out_UNCONNECTED[1:0]),
        .int_qplloutclk_out(NLW_inst_int_qplloutclk_out_UNCONNECTED[1:0]),
        .int_qplloutrefclk_out(NLW_inst_int_qplloutrefclk_out_UNCONNECTED[1:0]),
        .int_rxoutclk_out(NLW_inst_int_rxoutclk_out_UNCONNECTED[3:0]),
        .int_userclk1_out(NLW_inst_int_userclk1_out_UNCONNECTED),
        .int_userclk2_out(NLW_inst_int_userclk2_out_UNCONNECTED),
        .m_axis_rx_tdata(m_axis_rx_tdata),
        .m_axis_rx_tkeep(m_axis_rx_tkeep),
        .m_axis_rx_tlast(m_axis_rx_tlast),
        .m_axis_rx_tready(m_axis_rx_tready),
        .m_axis_rx_tuser(m_axis_rx_tuser),
        .m_axis_rx_tvalid(m_axis_rx_tvalid),
        .pci_exp_rxn(pci_exp_rxn),
        .pci_exp_rxp(pci_exp_rxp),
        .pci_exp_txn(pci_exp_txn),
        .pci_exp_txp(pci_exp_txp),
        .pcie_drp_addr(pcie_drp_addr),
        .pcie_drp_clk(pcie_drp_clk),
        .pcie_drp_di(pcie_drp_di),
        .pcie_drp_do(pcie_drp_do),
        .pcie_drp_en(pcie_drp_en),
        .pcie_drp_rdy(pcie_drp_rdy),
        .pcie_drp_we(pcie_drp_we),
        .pipe_cpll_lock(NLW_inst_pipe_cpll_lock_UNCONNECTED[3:0]),
        .pipe_dclk_in(pipe_dclk_in),
        .pipe_debug(NLW_inst_pipe_debug_UNCONNECTED[31:0]),
        .pipe_debug_0(NLW_inst_pipe_debug_0_UNCONNECTED[3:0]),
        .pipe_debug_1(NLW_inst_pipe_debug_1_UNCONNECTED[3:0]),
        .pipe_debug_2(NLW_inst_pipe_debug_2_UNCONNECTED[3:0]),
        .pipe_debug_3(NLW_inst_pipe_debug_3_UNCONNECTED[3:0]),
        .pipe_debug_4(NLW_inst_pipe_debug_4_UNCONNECTED[3:0]),
        .pipe_debug_5(NLW_inst_pipe_debug_5_UNCONNECTED[3:0]),
        .pipe_debug_6(NLW_inst_pipe_debug_6_UNCONNECTED[3:0]),
        .pipe_debug_7(NLW_inst_pipe_debug_7_UNCONNECTED[3:0]),
        .pipe_debug_8(NLW_inst_pipe_debug_8_UNCONNECTED[3:0]),
        .pipe_debug_9(NLW_inst_pipe_debug_9_UNCONNECTED[3:0]),
        .pipe_dmonitorout(NLW_inst_pipe_dmonitorout_UNCONNECTED[59:0]),
        .pipe_drp_fsm(NLW_inst_pipe_drp_fsm_UNCONNECTED[27:0]),
        .pipe_eyescandataerror(NLW_inst_pipe_eyescandataerror_UNCONNECTED[3:0]),
        .pipe_gen3_out(pipe_gen3_out),
        .pipe_loopback({1'b0,1'b0,1'b0}),
        .pipe_mmcm_lock_in(pipe_mmcm_lock_in),
        .pipe_mmcm_rst_n(pipe_mmcm_rst_n),
        .pipe_oobclk_in(pipe_oobclk_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_pclk_sel_out(pipe_pclk_sel_out),
        .pipe_qpll_lock(NLW_inst_pipe_qpll_lock_UNCONNECTED[0]),
        .pipe_qrst_fsm(NLW_inst_pipe_qrst_fsm_UNCONNECTED[11:0]),
        .pipe_qrst_idle(NLW_inst_pipe_qrst_idle_UNCONNECTED),
        .pipe_rate_fsm(NLW_inst_pipe_rate_fsm_UNCONNECTED[19:0]),
        .pipe_rate_idle(NLW_inst_pipe_rate_idle_UNCONNECTED),
        .pipe_rst_fsm(NLW_inst_pipe_rst_fsm_UNCONNECTED[4:0]),
        .pipe_rst_idle(NLW_inst_pipe_rst_idle_UNCONNECTED),
        .pipe_rx_0_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rx_1_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rx_2_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rx_3_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rx_4_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rx_5_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rx_6_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rx_7_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rxbufstatus(NLW_inst_pipe_rxbufstatus_UNCONNECTED[11:0]),
        .pipe_rxcommadet(NLW_inst_pipe_rxcommadet_UNCONNECTED[3:0]),
        .pipe_rxdisperr(NLW_inst_pipe_rxdisperr_UNCONNECTED[31:0]),
        .pipe_rxdlysresetdone(NLW_inst_pipe_rxdlysresetdone_UNCONNECTED[3:0]),
        .pipe_rxnotintable(NLW_inst_pipe_rxnotintable_UNCONNECTED[31:0]),
        .pipe_rxoutclk_in(pipe_rxoutclk_in),
        .pipe_rxoutclk_out(pipe_rxoutclk_out),
        .pipe_rxphaligndone(NLW_inst_pipe_rxphaligndone_UNCONNECTED[3:0]),
        .pipe_rxpmaresetdone(NLW_inst_pipe_rxpmaresetdone_UNCONNECTED[3:0]),
        .pipe_rxprbscntreset(1'b0),
        .pipe_rxprbserr(NLW_inst_pipe_rxprbserr_UNCONNECTED[3:0]),
        .pipe_rxprbssel({1'b0,1'b0,1'b0}),
        .pipe_rxstatus(NLW_inst_pipe_rxstatus_UNCONNECTED[11:0]),
        .pipe_rxsyncdone(NLW_inst_pipe_rxsyncdone_UNCONNECTED[3:0]),
        .pipe_rxusrclk_in(pipe_rxusrclk_in),
        .pipe_sync_fsm_rx(NLW_inst_pipe_sync_fsm_rx_UNCONNECTED[27:0]),
        .pipe_sync_fsm_tx(NLW_inst_pipe_sync_fsm_tx_UNCONNECTED[23:0]),
        .pipe_tx_0_sigs(NLW_inst_pipe_tx_0_sigs_UNCONNECTED[24:0]),
        .pipe_tx_1_sigs(NLW_inst_pipe_tx_1_sigs_UNCONNECTED[24:0]),
        .pipe_tx_2_sigs(NLW_inst_pipe_tx_2_sigs_UNCONNECTED[24:0]),
        .pipe_tx_3_sigs(NLW_inst_pipe_tx_3_sigs_UNCONNECTED[24:0]),
        .pipe_tx_4_sigs(NLW_inst_pipe_tx_4_sigs_UNCONNECTED[24:0]),
        .pipe_tx_5_sigs(NLW_inst_pipe_tx_5_sigs_UNCONNECTED[24:0]),
        .pipe_tx_6_sigs(NLW_inst_pipe_tx_6_sigs_UNCONNECTED[24:0]),
        .pipe_tx_7_sigs(NLW_inst_pipe_tx_7_sigs_UNCONNECTED[24:0]),
        .pipe_txdlysresetdone(NLW_inst_pipe_txdlysresetdone_UNCONNECTED[3:0]),
        .pipe_txinhibit({1'b0,1'b0,1'b0,1'b0}),
        .pipe_txoutclk_out(pipe_txoutclk_out),
        .pipe_txphaligndone(NLW_inst_pipe_txphaligndone_UNCONNECTED[3:0]),
        .pipe_txphinitdone(NLW_inst_pipe_txphinitdone_UNCONNECTED[3:0]),
        .pipe_txprbsforceerr(1'b0),
        .pipe_txprbssel({1'b0,1'b0,1'b0}),
        .pipe_userclk1_in(pipe_userclk1_in),
        .pipe_userclk2_in(pipe_userclk2_in),
        .pl_directed_change_done(pl_directed_change_done),
        .pl_directed_link_auton(pl_directed_link_auton),
        .pl_directed_link_change(pl_directed_link_change),
        .pl_directed_link_speed(pl_directed_link_speed),
        .pl_directed_link_width(pl_directed_link_width),
        .pl_downstream_deemph_source(pl_downstream_deemph_source),
        .pl_initial_link_width(pl_initial_link_width),
        .pl_lane_reversal_mode(pl_lane_reversal_mode),
        .pl_link_gen2_cap(pl_link_gen2_cap),
        .pl_link_partner_gen2_supported(pl_link_partner_gen2_supported),
        .pl_link_upcfg_cap(pl_link_upcfg_cap),
        .pl_ltssm_state(pl_ltssm_state),
        .pl_phy_lnk_up(pl_phy_lnk_up),
        .pl_received_hot_rst(pl_received_hot_rst),
        .pl_rx_pm_state(pl_rx_pm_state),
        .pl_sel_lnk_rate(pl_sel_lnk_rate),
        .pl_sel_lnk_width(pl_sel_lnk_width),
        .pl_transmit_hot_rst(pl_transmit_hot_rst),
        .pl_tx_pm_state(pl_tx_pm_state),
        .pl_upstream_prefer_deemph(pl_upstream_prefer_deemph),
        .qpll_drp_clk(NLW_inst_qpll_drp_clk_UNCONNECTED),
        .qpll_drp_crscode({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpll_drp_done({1'b0,1'b0}),
        .qpll_drp_fsm({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpll_drp_gen3(NLW_inst_qpll_drp_gen3_UNCONNECTED),
        .qpll_drp_ovrd(NLW_inst_qpll_drp_ovrd_UNCONNECTED),
        .qpll_drp_reset({1'b0,1'b0}),
        .qpll_drp_rst_n(NLW_inst_qpll_drp_rst_n_UNCONNECTED),
        .qpll_drp_start(NLW_inst_qpll_drp_start_UNCONNECTED),
        .qpll_qplld(NLW_inst_qpll_qplld_UNCONNECTED),
        .qpll_qplllock({1'b0,1'b0}),
        .qpll_qplloutclk({1'b0,1'b0}),
        .qpll_qplloutrefclk({1'b0,1'b0}),
        .qpll_qpllreset(NLW_inst_qpll_qpllreset_UNCONNECTED[1:0]),
        .rx_np_ok(rx_np_ok),
        .rx_np_req(rx_np_req),
        .s_axis_tx_tdata(s_axis_tx_tdata),
        .s_axis_tx_tkeep(s_axis_tx_tkeep),
        .s_axis_tx_tlast(s_axis_tx_tlast),
        .s_axis_tx_tready(s_axis_tx_tready),
        .s_axis_tx_tuser(s_axis_tx_tuser),
        .s_axis_tx_tvalid(s_axis_tx_tvalid),
        .startup_cfgclk(startup_cfgclk),
        .startup_cfgmclk(startup_cfgmclk),
        .startup_clk(startup_clk),
        .startup_eos(startup_eos),
        .startup_eos_in(1'b0),
        .startup_gsr(startup_gsr),
        .startup_gts(startup_gts),
        .startup_keyclearb(startup_keyclearb),
        .startup_pack(startup_pack),
        .startup_preq(startup_preq),
        .startup_usrcclko(startup_usrcclko),
        .startup_usrcclkts(startup_usrcclkts),
        .startup_usrdoneo(startup_usrdoneo),
        .startup_usrdonets(startup_usrdonets),
        .sys_clk(sys_clk),
        .sys_rst_n(sys_rst_n),
        .tx_buf_av(tx_buf_av),
        .tx_cfg_gnt(tx_cfg_gnt),
        .tx_cfg_req(tx_cfg_req),
        .tx_err_drop(tx_err_drop),
        .user_app_rdy(user_app_rdy),
        .user_clk_out(user_clk_out),
        .user_lnk_up(user_lnk_up),
        .user_reset_out(user_reset_out));
endmodule

(* ORIG_REF_NAME = "BRAM_TDP_MACRO" *) 
module pcie_7x_0_BRAM_TDP_MACRO
   (rdata,
    pipe_userclk1_in,
    mim_tx_wen,
    mim_tx_ren,
    MIMTXWADDR,
    MIMTXRADDR,
    wdata);
  output [14:0]rdata;
  input pipe_userclk1_in;
  input mim_tx_wen;
  input mim_tx_ren;
  input [10:0]MIMTXWADDR;
  input [10:0]MIMTXRADDR;
  input [14:0]wdata;

  wire [10:0]MIMTXRADDR;
  wire [10:0]MIMTXWADDR;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_20 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_21 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_22 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_23 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_24 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_25 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_26 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_27 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_28 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_29 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_30 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_31 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_32 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_33 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_34 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_35 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_52 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_53 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_70 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_71 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_74 ;
  wire mim_tx_ren;
  wire mim_tx_wen;
  wire pipe_userclk1_in;
  wire [14:0]rdata;
  wire [14:0]wdata;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DBITERR_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_SBITERR_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIADI_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIBDI_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOADO_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOBDO_UNCONNECTED ;
  wire [3:2]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPADOP_UNCONNECTED ;
  wire [3:2]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_RDADDRECC_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl 
       (.ADDRARDADDR({1'b1,MIMTXWADDR,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,MIMTXRADDR,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(pipe_userclk1_in),
        .CLKBWRCLK(pipe_userclk1_in),
        .DBITERR(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DBITERR_UNCONNECTED ),
        .DIADI({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIADI_UNCONNECTED [31:16],1'b0,1'b0,wdata[14:9],wdata[7:0]}),
        .DIBDI({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIBDI_UNCONNECTED [31:16],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,1'b0,wdata[8]}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOADO_UNCONNECTED [31:16],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_20 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_21 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_22 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_23 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_24 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_25 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_26 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_27 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_28 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_29 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_30 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_31 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_32 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_33 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_34 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_35 }),
        .DOBDO({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOBDO_UNCONNECTED [31:16],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_52 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_53 ,rdata[14:9],rdata[7:0]}),
        .DOPADOP({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPADOP_UNCONNECTED [3:2],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_70 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_71 }),
        .DOPBDOP({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPBDOP_UNCONNECTED [3:2],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_74 ,rdata[8]}),
        .ECCPARITY(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(mim_tx_wen),
        .ENBWREN(mim_tx_ren),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_SBITERR_UNCONNECTED ),
        .WEA({1'b1,1'b1,1'b1,1'b1}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "BRAM_TDP_MACRO" *) 
module pcie_7x_0_BRAM_TDP_MACRO_14
   (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ,
    pipe_userclk1_in,
    mim_rx_wen,
    mim_rx_ren,
    MIMRXWADDR,
    MIMRXRADDR,
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 );
  output [13:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ;
  input pipe_userclk1_in;
  input mim_rx_wen;
  input mim_rx_ren;
  input [10:0]MIMRXWADDR;
  input [10:0]MIMRXRADDR;
  input [13:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 ;

  wire [10:0]MIMRXRADDR;
  wire [10:0]MIMRXWADDR;
  wire [13:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ;
  wire [13:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_20 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_21 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_22 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_23 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_24 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_25 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_26 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_27 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_28 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_29 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_30 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_31 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_32 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_33 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_34 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_35 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_52 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_53 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_54 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_70 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_71 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_74 ;
  wire mim_rx_ren;
  wire mim_rx_wen;
  wire pipe_userclk1_in;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DBITERR_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_SBITERR_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIADI_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIBDI_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOADO_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOBDO_UNCONNECTED ;
  wire [3:2]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPADOP_UNCONNECTED ;
  wire [3:2]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_RDADDRECC_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl 
       (.ADDRARDADDR({1'b1,MIMRXWADDR,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,MIMRXRADDR,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(pipe_userclk1_in),
        .CLKBWRCLK(pipe_userclk1_in),
        .DBITERR(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DBITERR_UNCONNECTED ),
        .DIADI({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIADI_UNCONNECTED [31:16],1'b0,1'b0,1'b0,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 [13:9],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 [7:0]}),
        .DIBDI({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIBDI_UNCONNECTED [31:16],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,1'b0,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 [8]}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOADO_UNCONNECTED [31:16],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_20 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_21 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_22 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_23 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_24 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_25 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_26 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_27 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_28 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_29 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_30 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_31 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_32 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_33 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_34 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_35 }),
        .DOBDO({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOBDO_UNCONNECTED [31:16],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_52 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_53 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_54 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 [13:9],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 [7:0]}),
        .DOPADOP({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPADOP_UNCONNECTED [3:2],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_70 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_71 }),
        .DOPBDOP({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPBDOP_UNCONNECTED [3:2],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_74 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 [8]}),
        .ECCPARITY(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(mim_rx_wen),
        .ENBWREN(mim_rx_ren),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_SBITERR_UNCONNECTED ),
        .WEA({1'b1,1'b1,1'b1,1'b1}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "BRAM_TDP_MACRO" *) 
module pcie_7x_0_BRAM_TDP_MACRO_15
   (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ,
    pipe_userclk1_in,
    mim_rx_wen,
    mim_rx_ren,
    MIMRXWADDR,
    MIMRXRADDR,
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 );
  output [17:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ;
  input pipe_userclk1_in;
  input mim_rx_wen;
  input mim_rx_ren;
  input [10:0]MIMRXWADDR;
  input [10:0]MIMRXRADDR;
  input [17:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 ;

  wire [10:0]MIMRXRADDR;
  wire [10:0]MIMRXWADDR;
  wire [17:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ;
  wire [17:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_20 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_21 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_22 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_23 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_24 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_25 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_26 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_27 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_28 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_29 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_30 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_31 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_32 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_33 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_34 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_35 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_70 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_71 ;
  wire mim_rx_ren;
  wire mim_rx_wen;
  wire pipe_userclk1_in;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DBITERR_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_SBITERR_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIADI_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIBDI_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOADO_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOBDO_UNCONNECTED ;
  wire [3:2]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPADOP_UNCONNECTED ;
  wire [3:2]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_RDADDRECC_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl 
       (.ADDRARDADDR({1'b1,MIMRXWADDR,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,MIMRXRADDR,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(pipe_userclk1_in),
        .CLKBWRCLK(pipe_userclk1_in),
        .DBITERR(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DBITERR_UNCONNECTED ),
        .DIADI({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIADI_UNCONNECTED [31:16],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 [16:9],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 [7:0]}),
        .DIBDI({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIBDI_UNCONNECTED [31:16],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 [17],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 [8]}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOADO_UNCONNECTED [31:16],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_20 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_21 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_22 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_23 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_24 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_25 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_26 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_27 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_28 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_29 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_30 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_31 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_32 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_33 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_34 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_35 }),
        .DOBDO({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOBDO_UNCONNECTED [31:16],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 [16:9],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 [7:0]}),
        .DOPADOP({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPADOP_UNCONNECTED [3:2],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_70 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_71 }),
        .DOPBDOP({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPBDOP_UNCONNECTED [3:2],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 [17],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 [8]}),
        .ECCPARITY(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(mim_rx_wen),
        .ENBWREN(mim_rx_ren),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_SBITERR_UNCONNECTED ),
        .WEA({1'b1,1'b1,1'b1,1'b1}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "BRAM_TDP_MACRO" *) 
module pcie_7x_0_BRAM_TDP_MACRO_16
   (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ,
    pipe_userclk1_in,
    mim_rx_wen,
    mim_rx_ren,
    MIMRXWADDR,
    MIMRXRADDR,
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 );
  output [17:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ;
  input pipe_userclk1_in;
  input mim_rx_wen;
  input mim_rx_ren;
  input [10:0]MIMRXWADDR;
  input [10:0]MIMRXRADDR;
  input [17:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 ;

  wire [10:0]MIMRXRADDR;
  wire [10:0]MIMRXWADDR;
  wire [17:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ;
  wire [17:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_20 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_21 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_22 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_23 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_24 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_25 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_26 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_27 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_28 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_29 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_30 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_31 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_32 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_33 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_34 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_35 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_70 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_71 ;
  wire mim_rx_ren;
  wire mim_rx_wen;
  wire pipe_userclk1_in;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DBITERR_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_SBITERR_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIADI_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIBDI_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOADO_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOBDO_UNCONNECTED ;
  wire [3:2]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPADOP_UNCONNECTED ;
  wire [3:2]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_RDADDRECC_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl 
       (.ADDRARDADDR({1'b1,MIMRXWADDR,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,MIMRXRADDR,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(pipe_userclk1_in),
        .CLKBWRCLK(pipe_userclk1_in),
        .DBITERR(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DBITERR_UNCONNECTED ),
        .DIADI({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIADI_UNCONNECTED [31:16],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 [16:9],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 [7:0]}),
        .DIBDI({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIBDI_UNCONNECTED [31:16],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 [17],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 [8]}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOADO_UNCONNECTED [31:16],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_20 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_21 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_22 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_23 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_24 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_25 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_26 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_27 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_28 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_29 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_30 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_31 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_32 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_33 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_34 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_35 }),
        .DOBDO({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOBDO_UNCONNECTED [31:16],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 [16:9],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 [7:0]}),
        .DOPADOP({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPADOP_UNCONNECTED [3:2],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_70 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_71 }),
        .DOPBDOP({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPBDOP_UNCONNECTED [3:2],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 [17],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 [8]}),
        .ECCPARITY(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(mim_rx_wen),
        .ENBWREN(mim_rx_ren),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_SBITERR_UNCONNECTED ),
        .WEA({1'b1,1'b1,1'b1,1'b1}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "BRAM_TDP_MACRO" *) 
module pcie_7x_0_BRAM_TDP_MACRO_17
   (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ,
    pipe_userclk1_in,
    mim_rx_wen,
    mim_rx_ren,
    MIMRXWADDR,
    MIMRXRADDR,
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 );
  output [17:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ;
  input pipe_userclk1_in;
  input mim_rx_wen;
  input mim_rx_ren;
  input [10:0]MIMRXWADDR;
  input [10:0]MIMRXRADDR;
  input [17:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 ;

  wire [10:0]MIMRXRADDR;
  wire [10:0]MIMRXWADDR;
  wire [17:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ;
  wire [17:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_20 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_21 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_22 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_23 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_24 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_25 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_26 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_27 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_28 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_29 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_30 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_31 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_32 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_33 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_34 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_35 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_70 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_71 ;
  wire mim_rx_ren;
  wire mim_rx_wen;
  wire pipe_userclk1_in;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DBITERR_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_SBITERR_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIADI_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIBDI_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOADO_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOBDO_UNCONNECTED ;
  wire [3:2]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPADOP_UNCONNECTED ;
  wire [3:2]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_RDADDRECC_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl 
       (.ADDRARDADDR({1'b1,MIMRXWADDR,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,MIMRXRADDR,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(pipe_userclk1_in),
        .CLKBWRCLK(pipe_userclk1_in),
        .DBITERR(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DBITERR_UNCONNECTED ),
        .DIADI({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIADI_UNCONNECTED [31:16],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 [16:9],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 [7:0]}),
        .DIBDI({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIBDI_UNCONNECTED [31:16],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 [17],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 [8]}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOADO_UNCONNECTED [31:16],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_20 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_21 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_22 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_23 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_24 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_25 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_26 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_27 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_28 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_29 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_30 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_31 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_32 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_33 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_34 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_35 }),
        .DOBDO({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOBDO_UNCONNECTED [31:16],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 [16:9],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 [7:0]}),
        .DOPADOP({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPADOP_UNCONNECTED [3:2],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_70 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_71 }),
        .DOPBDOP({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPBDOP_UNCONNECTED [3:2],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 [17],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 [8]}),
        .ECCPARITY(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(mim_rx_wen),
        .ENBWREN(mim_rx_ren),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_SBITERR_UNCONNECTED ),
        .WEA({1'b1,1'b1,1'b1,1'b1}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "BRAM_TDP_MACRO" *) 
module pcie_7x_0_BRAM_TDP_MACRO_7
   (rdata,
    pipe_userclk1_in,
    mim_tx_wen,
    mim_tx_ren,
    MIMTXWADDR,
    MIMTXRADDR,
    wdata);
  output [17:0]rdata;
  input pipe_userclk1_in;
  input mim_tx_wen;
  input mim_tx_ren;
  input [10:0]MIMTXWADDR;
  input [10:0]MIMTXRADDR;
  input [17:0]wdata;

  wire [10:0]MIMTXRADDR;
  wire [10:0]MIMTXWADDR;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_20 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_21 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_22 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_23 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_24 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_25 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_26 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_27 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_28 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_29 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_30 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_31 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_32 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_33 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_34 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_35 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_70 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_71 ;
  wire mim_tx_ren;
  wire mim_tx_wen;
  wire pipe_userclk1_in;
  wire [17:0]rdata;
  wire [17:0]wdata;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DBITERR_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_SBITERR_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIADI_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIBDI_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOADO_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOBDO_UNCONNECTED ;
  wire [3:2]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPADOP_UNCONNECTED ;
  wire [3:2]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_RDADDRECC_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl 
       (.ADDRARDADDR({1'b1,MIMTXWADDR,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,MIMTXRADDR,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(pipe_userclk1_in),
        .CLKBWRCLK(pipe_userclk1_in),
        .DBITERR(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DBITERR_UNCONNECTED ),
        .DIADI({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIADI_UNCONNECTED [31:16],wdata[16:9],wdata[7:0]}),
        .DIBDI({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIBDI_UNCONNECTED [31:16],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,wdata[17],wdata[8]}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOADO_UNCONNECTED [31:16],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_20 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_21 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_22 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_23 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_24 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_25 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_26 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_27 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_28 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_29 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_30 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_31 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_32 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_33 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_34 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_35 }),
        .DOBDO({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOBDO_UNCONNECTED [31:16],rdata[16:9],rdata[7:0]}),
        .DOPADOP({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPADOP_UNCONNECTED [3:2],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_70 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_71 }),
        .DOPBDOP({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPBDOP_UNCONNECTED [3:2],rdata[17],rdata[8]}),
        .ECCPARITY(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(mim_tx_wen),
        .ENBWREN(mim_tx_ren),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_SBITERR_UNCONNECTED ),
        .WEA({1'b1,1'b1,1'b1,1'b1}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "BRAM_TDP_MACRO" *) 
module pcie_7x_0_BRAM_TDP_MACRO_8
   (rdata,
    pipe_userclk1_in,
    mim_tx_wen,
    mim_tx_ren,
    MIMTXWADDR,
    MIMTXRADDR,
    wdata);
  output [17:0]rdata;
  input pipe_userclk1_in;
  input mim_tx_wen;
  input mim_tx_ren;
  input [10:0]MIMTXWADDR;
  input [10:0]MIMTXRADDR;
  input [17:0]wdata;

  wire [10:0]MIMTXRADDR;
  wire [10:0]MIMTXWADDR;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_20 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_21 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_22 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_23 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_24 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_25 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_26 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_27 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_28 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_29 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_30 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_31 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_32 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_33 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_34 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_35 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_70 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_71 ;
  wire mim_tx_ren;
  wire mim_tx_wen;
  wire pipe_userclk1_in;
  wire [17:0]rdata;
  wire [17:0]wdata;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DBITERR_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_SBITERR_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIADI_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIBDI_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOADO_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOBDO_UNCONNECTED ;
  wire [3:2]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPADOP_UNCONNECTED ;
  wire [3:2]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_RDADDRECC_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl 
       (.ADDRARDADDR({1'b1,MIMTXWADDR,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,MIMTXRADDR,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(pipe_userclk1_in),
        .CLKBWRCLK(pipe_userclk1_in),
        .DBITERR(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DBITERR_UNCONNECTED ),
        .DIADI({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIADI_UNCONNECTED [31:16],wdata[16:9],wdata[7:0]}),
        .DIBDI({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIBDI_UNCONNECTED [31:16],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,wdata[17],wdata[8]}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOADO_UNCONNECTED [31:16],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_20 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_21 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_22 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_23 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_24 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_25 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_26 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_27 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_28 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_29 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_30 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_31 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_32 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_33 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_34 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_35 }),
        .DOBDO({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOBDO_UNCONNECTED [31:16],rdata[16:9],rdata[7:0]}),
        .DOPADOP({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPADOP_UNCONNECTED [3:2],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_70 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_71 }),
        .DOPBDOP({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPBDOP_UNCONNECTED [3:2],rdata[17],rdata[8]}),
        .ECCPARITY(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(mim_tx_wen),
        .ENBWREN(mim_tx_ren),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_SBITERR_UNCONNECTED ),
        .WEA({1'b1,1'b1,1'b1,1'b1}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "BRAM_TDP_MACRO" *) 
module pcie_7x_0_BRAM_TDP_MACRO_9
   (rdata,
    pipe_userclk1_in,
    mim_tx_wen,
    mim_tx_ren,
    MIMTXWADDR,
    MIMTXRADDR,
    wdata);
  output [17:0]rdata;
  input pipe_userclk1_in;
  input mim_tx_wen;
  input mim_tx_ren;
  input [10:0]MIMTXWADDR;
  input [10:0]MIMTXRADDR;
  input [17:0]wdata;

  wire [10:0]MIMTXRADDR;
  wire [10:0]MIMTXWADDR;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_20 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_21 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_22 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_23 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_24 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_25 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_26 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_27 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_28 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_29 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_30 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_31 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_32 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_33 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_34 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_35 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_70 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_71 ;
  wire mim_tx_ren;
  wire mim_tx_wen;
  wire pipe_userclk1_in;
  wire [17:0]rdata;
  wire [17:0]wdata;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DBITERR_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_SBITERR_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIADI_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIBDI_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOADO_UNCONNECTED ;
  wire [31:16]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOBDO_UNCONNECTED ;
  wire [3:2]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPADOP_UNCONNECTED ;
  wire [3:2]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_RDADDRECC_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl 
       (.ADDRARDADDR({1'b1,MIMTXWADDR,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,MIMTXRADDR,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(pipe_userclk1_in),
        .CLKBWRCLK(pipe_userclk1_in),
        .DBITERR(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DBITERR_UNCONNECTED ),
        .DIADI({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIADI_UNCONNECTED [31:16],wdata[16:9],wdata[7:0]}),
        .DIBDI({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DIBDI_UNCONNECTED [31:16],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,wdata[17],wdata[8]}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOADO_UNCONNECTED [31:16],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_20 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_21 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_22 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_23 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_24 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_25 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_26 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_27 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_28 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_29 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_30 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_31 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_32 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_33 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_34 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_35 }),
        .DOBDO({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOBDO_UNCONNECTED [31:16],rdata[16:9],rdata[7:0]}),
        .DOPADOP({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPADOP_UNCONNECTED [3:2],\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_70 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_71 }),
        .DOPBDOP({\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DOPBDOP_UNCONNECTED [3:2],rdata[17],rdata[8]}),
        .ECCPARITY(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(mim_tx_wen),
        .ENBWREN(mim_tx_ren),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_SBITERR_UNCONNECTED ),
        .WEA({1'b1,1'b1,1'b1,1'b1}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_axi_basic_rx" *) 
module pcie_7x_0_pcie_7x_0_axi_basic_rx
   (trn_rsrc_dsc_d,
    m_axis_rx_tvalid_reg,
    trn_rdst_rdy_reg,
    Q,
    trn_in_packet,
    reg_dsc_detect_reg,
    \m_axis_rx_tdata_reg[127] ,
    \m_axis_rx_tuser_reg[21] ,
    \m_axis_rx_tdata_reg[30] ,
    m_axis_rx_tvalid_reg_0,
    \m_axis_rx_tdata_reg[63] ,
    \m_axis_rx_tdata_reg[47] ,
    \m_axis_rx_tdata_reg[35] ,
    \m_axis_rx_tdata_reg[13] ,
    \m_axis_rx_tdata_reg[22] ,
    \m_axis_rx_tdata_reg[29] ,
    \FSM_sequential_pio_rx_sm_128.state_reg[0] ,
    \m_axis_rx_tdata_reg[89] ,
    \m_axis_rx_tdata_reg[30]_0 ,
    \m_axis_rx_tdata_reg[30]_1 ,
    \m_axis_rx_tdata_reg[73] ,
    \m_axis_rx_tdata_reg[15] ,
    \m_axis_rx_tdata_reg[14] ,
    \m_axis_rx_tdata_reg[29]_0 ,
    m_axis_rx_tvalid_reg_1,
    user_reset_out_reg,
    m_axis_rx_tvalid,
    \m_axis_rx_tdata_reg[30]_2 ,
    \m_axis_rx_tdata_reg[6] ,
    m_axis_rx_tdata,
    m_axis_rx_tuser,
    \m_axis_rx_tdata_reg[31] ,
    \m_axis_rx_tdata_reg[9] ,
    SR,
    data_hold,
    pipe_userclk2_in,
    trn_rsrc_dsc,
    E,
    rsrc_rdy_filtered,
    trn_rsof,
    trn_rsrc_dsc_prev0,
    trn_recrc_err,
    trn_rerrfwd,
    trn_reof,
    DI,
    S,
    trn_in_packet_reg,
    m_axis_rx_tready,
    m_axis_rx_tvalid_0,
    m_axis_rx_tready_cpler,
    dsc_detect,
    \pio_rx_sm_128.req_addr_reg[2] ,
    \pio_rx_sm_128.req_td_reg ,
    m_axis_rx_tready_mux,
    trn_rrem,
    trn_rd,
    trn_rbar_hit,
    \m_axis_rx_tuser[14] ,
    \m_axis_rx_tuser_reg[21]_0 );
  output trn_rsrc_dsc_d;
  output m_axis_rx_tvalid_reg;
  output [0:0]trn_rdst_rdy_reg;
  output [1:0]Q;
  output trn_in_packet;
  output reg_dsc_detect_reg;
  output [125:0]\m_axis_rx_tdata_reg[127] ;
  output [13:0]\m_axis_rx_tuser_reg[21] ;
  output \m_axis_rx_tdata_reg[30] ;
  output [0:0]m_axis_rx_tvalid_reg_0;
  output [15:0]\m_axis_rx_tdata_reg[63] ;
  output [7:0]\m_axis_rx_tdata_reg[47] ;
  output [3:0]\m_axis_rx_tdata_reg[35] ;
  output [1:0]\m_axis_rx_tdata_reg[13] ;
  output [2:0]\m_axis_rx_tdata_reg[22] ;
  output \m_axis_rx_tdata_reg[29] ;
  output \FSM_sequential_pio_rx_sm_128.state_reg[0] ;
  output [0:0]\m_axis_rx_tdata_reg[89] ;
  output [0:0]\m_axis_rx_tdata_reg[30]_0 ;
  output \m_axis_rx_tdata_reg[30]_1 ;
  output \m_axis_rx_tdata_reg[73] ;
  output \m_axis_rx_tdata_reg[15] ;
  output \m_axis_rx_tdata_reg[14] ;
  output \m_axis_rx_tdata_reg[29]_0 ;
  output m_axis_rx_tvalid_reg_1;
  output [0:0]user_reset_out_reg;
  output m_axis_rx_tvalid;
  output \m_axis_rx_tdata_reg[30]_2 ;
  output [4:0]\m_axis_rx_tdata_reg[6] ;
  output [1:0]m_axis_rx_tdata;
  output [1:0]m_axis_rx_tuser;
  output [6:0]\m_axis_rx_tdata_reg[31] ;
  output [9:0]\m_axis_rx_tdata_reg[9] ;
  input [0:0]SR;
  input data_hold;
  input pipe_userclk2_in;
  input trn_rsrc_dsc;
  input [0:0]E;
  input rsrc_rdy_filtered;
  input trn_rsof;
  input trn_rsrc_dsc_prev0;
  input trn_recrc_err;
  input trn_rerrfwd;
  input trn_reof;
  input [0:0]DI;
  input [1:0]S;
  input trn_in_packet_reg;
  input m_axis_rx_tready;
  input m_axis_rx_tvalid_0;
  input m_axis_rx_tready_cpler;
  input dsc_detect;
  input [2:0]\pio_rx_sm_128.req_addr_reg[2] ;
  input \pio_rx_sm_128.req_td_reg ;
  input m_axis_rx_tready_mux;
  input [1:0]trn_rrem;
  input [127:0]trn_rd;
  input [6:0]trn_rbar_hit;
  input \m_axis_rx_tuser[14] ;
  input [0:0]\m_axis_rx_tuser_reg[21]_0 ;

  wire [0:0]DI;
  wire [0:0]E;
  wire \FSM_sequential_pio_rx_sm_128.state_reg[0] ;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire cur_state;
  wire data_hold;
  wire dsc_detect;
  wire [1:0]m_axis_rx_tdata;
  wire [125:0]\m_axis_rx_tdata_reg[127] ;
  wire [1:0]\m_axis_rx_tdata_reg[13] ;
  wire \m_axis_rx_tdata_reg[14] ;
  wire \m_axis_rx_tdata_reg[15] ;
  wire [2:0]\m_axis_rx_tdata_reg[22] ;
  wire \m_axis_rx_tdata_reg[29] ;
  wire \m_axis_rx_tdata_reg[29]_0 ;
  wire \m_axis_rx_tdata_reg[30] ;
  wire [0:0]\m_axis_rx_tdata_reg[30]_0 ;
  wire \m_axis_rx_tdata_reg[30]_1 ;
  wire \m_axis_rx_tdata_reg[30]_2 ;
  wire [6:0]\m_axis_rx_tdata_reg[31] ;
  wire [3:0]\m_axis_rx_tdata_reg[35] ;
  wire [7:0]\m_axis_rx_tdata_reg[47] ;
  wire [15:0]\m_axis_rx_tdata_reg[63] ;
  wire [4:0]\m_axis_rx_tdata_reg[6] ;
  wire \m_axis_rx_tdata_reg[73] ;
  wire [0:0]\m_axis_rx_tdata_reg[89] ;
  wire [9:0]\m_axis_rx_tdata_reg[9] ;
  wire m_axis_rx_tready;
  wire m_axis_rx_tready_cpler;
  wire m_axis_rx_tready_mux;
  wire [1:0]m_axis_rx_tuser;
  wire \m_axis_rx_tuser[14] ;
  wire [13:0]\m_axis_rx_tuser_reg[21] ;
  wire [0:0]\m_axis_rx_tuser_reg[21]_0 ;
  wire m_axis_rx_tvalid;
  wire m_axis_rx_tvalid_0;
  wire m_axis_rx_tvalid_reg;
  wire [0:0]m_axis_rx_tvalid_reg_0;
  wire m_axis_rx_tvalid_reg_1;
  wire next_state;
  wire null_mux_sel;
  wire [3:0]packet_overhead;
  wire [2:0]\pio_rx_sm_128.req_addr_reg[2] ;
  wire \pio_rx_sm_128.req_td_reg ;
  wire pipe_userclk2_in;
  wire reg_dsc_detect_reg;
  wire rsrc_rdy_filtered;
  wire rx_null_gen_inst_n_3;
  wire rx_null_gen_inst_n_4;
  wire rx_null_gen_inst_n_5;
  wire rx_null_gen_inst_n_6;
  wire rx_null_gen_inst_n_7;
  wire rx_null_gen_inst_n_8;
  wire rx_null_gen_inst_n_9;
  wire rx_pipeline_inst_n_150;
  wire rx_pipeline_inst_n_151;
  wire rx_pipeline_inst_n_152;
  wire rx_pipeline_inst_n_153;
  wire rx_pipeline_inst_n_154;
  wire rx_pipeline_inst_n_156;
  wire rx_pipeline_inst_n_157;
  wire rx_pipeline_inst_n_158;
  wire rx_pipeline_inst_n_159;
  wire rx_pipeline_inst_n_160;
  wire rx_pipeline_inst_n_161;
  wire rx_pipeline_inst_n_162;
  wire rx_pipeline_inst_n_163;
  wire rx_pipeline_inst_n_204;
  wire rx_pipeline_inst_n_205;
  wire rx_pipeline_inst_n_206;
  wire rx_pipeline_inst_n_207;
  wire rx_pipeline_inst_n_208;
  wire rx_pipeline_inst_n_209;
  wire rx_pipeline_inst_n_210;
  wire rx_pipeline_inst_n_6;
  wire rx_pipeline_inst_n_8;
  wire trn_in_packet;
  wire trn_in_packet_reg;
  wire [6:0]trn_rbar_hit;
  wire [127:0]trn_rd;
  wire [0:0]trn_rdst_rdy_reg;
  wire trn_recrc_err;
  wire trn_reof;
  wire trn_rerrfwd;
  wire [1:0]trn_rrem;
  wire trn_rsof;
  wire trn_rsrc_dsc;
  wire trn_rsrc_dsc_d;
  wire trn_rsrc_dsc_prev0;
  wire [0:0]user_reset_out_reg;

  pcie_7x_0_pcie_7x_0_axi_basic_rx_null_gen rx_null_gen_inst
       (.DI(DI),
        .Q(Q),
        .S(S),
        .SR(SR),
        .cur_state(cur_state),
        .cur_state_reg_0(m_axis_rx_tvalid_0),
        .m_axis_rx_tready(m_axis_rx_tready),
        .m_axis_rx_tready_0(rx_null_gen_inst_n_9),
        .m_axis_rx_tready_cpler(m_axis_rx_tready_cpler),
        .m_axis_rx_tready_mux(m_axis_rx_tready_mux),
        .next_state(next_state),
        .null_mux_sel(null_mux_sel),
        .null_mux_sel_reg(rx_null_gen_inst_n_4),
        .null_mux_sel_reg_0(rx_pipeline_inst_n_163),
        .pipe_userclk2_in(pipe_userclk2_in),
        .\reg_pkt_len_counter_reg[11]_0 ({rx_pipeline_inst_n_208,rx_pipeline_inst_n_209,rx_pipeline_inst_n_210}),
        .\reg_pkt_len_counter_reg[11]_1 ({rx_pipeline_inst_n_156,rx_pipeline_inst_n_157,rx_pipeline_inst_n_158}),
        .\reg_pkt_len_counter_reg[1]_0 (rx_null_gen_inst_n_6),
        .\reg_pkt_len_counter_reg[3]_0 ({rx_pipeline_inst_n_6,packet_overhead[3],rx_pipeline_inst_n_8,packet_overhead[0]}),
        .\reg_pkt_len_counter_reg[3]_1 ({rx_pipeline_inst_n_159,rx_pipeline_inst_n_160,rx_pipeline_inst_n_161,rx_pipeline_inst_n_162}),
        .\reg_pkt_len_counter_reg[7]_0 ({rx_pipeline_inst_n_204,rx_pipeline_inst_n_205,rx_pipeline_inst_n_206,rx_pipeline_inst_n_207}),
        .\reg_pkt_len_counter_reg[7]_1 ({rx_pipeline_inst_n_150,rx_pipeline_inst_n_151,rx_pipeline_inst_n_152,rx_pipeline_inst_n_153}),
        .\reg_pkt_len_counter_reg[7]_2 (m_axis_rx_tvalid_reg),
        .\reg_pkt_len_counter_reg[7]_3 (rx_pipeline_inst_n_154),
        .trn_rdst_rdy_i_9_0(rx_null_gen_inst_n_5),
        .user_reset_out_reg(rx_null_gen_inst_n_3),
        .user_reset_out_reg_0(rx_null_gen_inst_n_7),
        .user_reset_out_reg_1(rx_null_gen_inst_n_8));
  pcie_7x_0_pcie_7x_0_axi_basic_rx_pipeline rx_pipeline_inst
       (.E(E),
        .\FSM_sequential_pio_rx_sm_128.state_reg[0] (\FSM_sequential_pio_rx_sm_128.state_reg[0] ),
        .Q(\m_axis_rx_tdata_reg[127] ),
        .SR(SR),
        .cur_state(cur_state),
        .cur_state_reg(rx_null_gen_inst_n_9),
        .data_hold(data_hold),
        .dsc_detect(dsc_detect),
        .m_axis_rx_tdata(m_axis_rx_tdata),
        .\m_axis_rx_tdata_reg[13]_0 (\m_axis_rx_tdata_reg[13] ),
        .\m_axis_rx_tdata_reg[14]_0 (\m_axis_rx_tdata_reg[14] ),
        .\m_axis_rx_tdata_reg[15]_0 (\m_axis_rx_tdata_reg[15] ),
        .\m_axis_rx_tdata_reg[22]_0 (\m_axis_rx_tdata_reg[22] ),
        .\m_axis_rx_tdata_reg[29]_0 (\m_axis_rx_tdata_reg[29] ),
        .\m_axis_rx_tdata_reg[29]_1 (\m_axis_rx_tdata_reg[29]_0 ),
        .\m_axis_rx_tdata_reg[30]_0 (\m_axis_rx_tdata_reg[30] ),
        .\m_axis_rx_tdata_reg[30]_1 (\m_axis_rx_tdata_reg[30]_0 ),
        .\m_axis_rx_tdata_reg[30]_2 (\m_axis_rx_tdata_reg[30]_1 ),
        .\m_axis_rx_tdata_reg[30]_3 (\m_axis_rx_tdata_reg[30]_2 ),
        .\m_axis_rx_tdata_reg[31]_0 (\m_axis_rx_tdata_reg[31] ),
        .\m_axis_rx_tdata_reg[35]_0 (\m_axis_rx_tdata_reg[35] ),
        .\m_axis_rx_tdata_reg[3]_0 ({rx_pipeline_inst_n_6,packet_overhead[3],rx_pipeline_inst_n_8,packet_overhead[0]}),
        .\m_axis_rx_tdata_reg[3]_1 ({rx_pipeline_inst_n_159,rx_pipeline_inst_n_160,rx_pipeline_inst_n_161,rx_pipeline_inst_n_162}),
        .\m_axis_rx_tdata_reg[47]_0 (\m_axis_rx_tdata_reg[47] ),
        .\m_axis_rx_tdata_reg[63]_0 (\m_axis_rx_tdata_reg[63] ),
        .\m_axis_rx_tdata_reg[6]_0 ({rx_pipeline_inst_n_150,rx_pipeline_inst_n_151,rx_pipeline_inst_n_152,rx_pipeline_inst_n_153}),
        .\m_axis_rx_tdata_reg[6]_1 (\m_axis_rx_tdata_reg[6] ),
        .\m_axis_rx_tdata_reg[73]_0 (\m_axis_rx_tdata_reg[73] ),
        .\m_axis_rx_tdata_reg[89]_0 (\m_axis_rx_tdata_reg[89] ),
        .\m_axis_rx_tdata_reg[94]_0 ({rx_pipeline_inst_n_204,rx_pipeline_inst_n_205,rx_pipeline_inst_n_206,rx_pipeline_inst_n_207}),
        .\m_axis_rx_tdata_reg[94]_1 ({rx_pipeline_inst_n_208,rx_pipeline_inst_n_209,rx_pipeline_inst_n_210}),
        .\m_axis_rx_tdata_reg[9]_0 ({rx_pipeline_inst_n_156,rx_pipeline_inst_n_157,rx_pipeline_inst_n_158}),
        .\m_axis_rx_tdata_reg[9]_1 (\m_axis_rx_tdata_reg[9] ),
        .m_axis_rx_tready(m_axis_rx_tready),
        .m_axis_rx_tready_0(rx_pipeline_inst_n_163),
        .m_axis_rx_tready_cpler(m_axis_rx_tready_cpler),
        .m_axis_rx_tready_mux(m_axis_rx_tready_mux),
        .m_axis_rx_tuser(m_axis_rx_tuser),
        .\m_axis_rx_tuser[14] (\m_axis_rx_tuser[14] ),
        .\m_axis_rx_tuser_reg[13]_0 (rx_pipeline_inst_n_154),
        .\m_axis_rx_tuser_reg[19]_0 (rx_null_gen_inst_n_7),
        .\m_axis_rx_tuser_reg[20]_0 (rx_null_gen_inst_n_8),
        .\m_axis_rx_tuser_reg[21]_0 (\m_axis_rx_tuser_reg[21] ),
        .\m_axis_rx_tuser_reg[21]_1 (rx_null_gen_inst_n_3),
        .\m_axis_rx_tuser_reg[21]_2 (rx_null_gen_inst_n_5),
        .\m_axis_rx_tuser_reg[21]_3 (\m_axis_rx_tuser_reg[21]_0 ),
        .m_axis_rx_tvalid(m_axis_rx_tvalid),
        .m_axis_rx_tvalid_0(m_axis_rx_tvalid_0),
        .m_axis_rx_tvalid_reg_0(m_axis_rx_tvalid_reg),
        .m_axis_rx_tvalid_reg_1(m_axis_rx_tvalid_reg_0),
        .m_axis_rx_tvalid_reg_2(m_axis_rx_tvalid_reg_1),
        .next_state(next_state),
        .null_mux_sel(null_mux_sel),
        .null_mux_sel_reg_0(rx_null_gen_inst_n_4),
        .\pio_rx_sm_128.req_addr_reg[2] (\pio_rx_sm_128.req_addr_reg[2] ),
        .\pio_rx_sm_128.req_td_reg (\pio_rx_sm_128.req_td_reg ),
        .pipe_userclk2_in(pipe_userclk2_in),
        .reg_dsc_detect_reg_0(reg_dsc_detect_reg),
        .rsrc_rdy_filtered(rsrc_rdy_filtered),
        .trn_in_packet(trn_in_packet),
        .trn_in_packet_reg_0(trn_in_packet_reg),
        .trn_rbar_hit(trn_rbar_hit),
        .trn_rd(trn_rd),
        .trn_rdst_rdy_reg_0(trn_rdst_rdy_reg),
        .trn_rdst_rdy_reg_1(rx_null_gen_inst_n_6),
        .trn_recrc_err(trn_recrc_err),
        .trn_reof(trn_reof),
        .trn_rerrfwd(trn_rerrfwd),
        .trn_rrem(trn_rrem),
        .trn_rsof(trn_rsof),
        .trn_rsrc_dsc(trn_rsrc_dsc),
        .trn_rsrc_dsc_d(trn_rsrc_dsc_d),
        .trn_rsrc_dsc_prev0(trn_rsrc_dsc_prev0),
        .user_reset_out_reg(user_reset_out_reg));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_axi_basic_rx_null_gen" *) 
module pcie_7x_0_pcie_7x_0_axi_basic_rx_null_gen
   (cur_state,
    Q,
    user_reset_out_reg,
    null_mux_sel_reg,
    trn_rdst_rdy_i_9_0,
    \reg_pkt_len_counter_reg[1]_0 ,
    user_reset_out_reg_0,
    user_reset_out_reg_1,
    m_axis_rx_tready_0,
    SR,
    next_state,
    pipe_userclk2_in,
    DI,
    S,
    \reg_pkt_len_counter_reg[3]_0 ,
    \reg_pkt_len_counter_reg[3]_1 ,
    \reg_pkt_len_counter_reg[7]_0 ,
    \reg_pkt_len_counter_reg[7]_1 ,
    \reg_pkt_len_counter_reg[11]_0 ,
    \reg_pkt_len_counter_reg[11]_1 ,
    null_mux_sel,
    m_axis_rx_tready_mux,
    null_mux_sel_reg_0,
    \reg_pkt_len_counter_reg[7]_2 ,
    \reg_pkt_len_counter_reg[7]_3 ,
    m_axis_rx_tready,
    cur_state_reg_0,
    m_axis_rx_tready_cpler);
  output cur_state;
  output [1:0]Q;
  output user_reset_out_reg;
  output null_mux_sel_reg;
  output trn_rdst_rdy_i_9_0;
  output \reg_pkt_len_counter_reg[1]_0 ;
  output user_reset_out_reg_0;
  output user_reset_out_reg_1;
  output m_axis_rx_tready_0;
  input [0:0]SR;
  input next_state;
  input pipe_userclk2_in;
  input [0:0]DI;
  input [1:0]S;
  input [3:0]\reg_pkt_len_counter_reg[3]_0 ;
  input [3:0]\reg_pkt_len_counter_reg[3]_1 ;
  input [3:0]\reg_pkt_len_counter_reg[7]_0 ;
  input [3:0]\reg_pkt_len_counter_reg[7]_1 ;
  input [2:0]\reg_pkt_len_counter_reg[11]_0 ;
  input [2:0]\reg_pkt_len_counter_reg[11]_1 ;
  input null_mux_sel;
  input m_axis_rx_tready_mux;
  input null_mux_sel_reg_0;
  input \reg_pkt_len_counter_reg[7]_2 ;
  input \reg_pkt_len_counter_reg[7]_3 ;
  input m_axis_rx_tready;
  input cur_state_reg_0;
  input m_axis_rx_tready_cpler;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire cur_state;
  wire cur_state_i_4_n_0;
  wire cur_state_i_5_n_0;
  wire cur_state_reg_0;
  wire m_axis_rx_tready;
  wire m_axis_rx_tready_0;
  wire m_axis_rx_tready_cpler;
  wire m_axis_rx_tready_mux;
  wire \m_axis_rx_tuser[21]_i_5_n_0 ;
  wire [10:0]new_pkt_len;
  wire new_pkt_len_carry__0_n_0;
  wire new_pkt_len_carry__0_n_1;
  wire new_pkt_len_carry__0_n_2;
  wire new_pkt_len_carry__0_n_3;
  wire new_pkt_len_carry__1_n_1;
  wire new_pkt_len_carry__1_n_2;
  wire new_pkt_len_carry__1_n_3;
  wire new_pkt_len_carry__1_n_4;
  wire new_pkt_len_carry_n_0;
  wire new_pkt_len_carry_n_1;
  wire new_pkt_len_carry_n_2;
  wire new_pkt_len_carry_n_3;
  wire next_state;
  wire null_mux_sel;
  wire null_mux_sel_reg;
  wire null_mux_sel_reg_0;
  wire pipe_userclk2_in;
  wire [11:3]pkt_len_counter;
  wire [2:0]pkt_len_counter_0;
  wire [11:2]pkt_len_counter__0;
  wire pkt_len_counter_dec__0_carry__0_i_1_n_0;
  wire pkt_len_counter_dec__0_carry__0_i_2_n_0;
  wire pkt_len_counter_dec__0_carry__0_i_3_n_0;
  wire pkt_len_counter_dec__0_carry__0_i_4_n_0;
  wire pkt_len_counter_dec__0_carry__0_n_0;
  wire pkt_len_counter_dec__0_carry__0_n_1;
  wire pkt_len_counter_dec__0_carry__0_n_2;
  wire pkt_len_counter_dec__0_carry__0_n_3;
  wire pkt_len_counter_dec__0_carry__1_i_1_n_0;
  wire pkt_len_counter_dec__0_carry__1_i_2_n_0;
  wire pkt_len_counter_dec__0_carry__1_n_3;
  wire pkt_len_counter_dec__0_carry_i_2_n_0;
  wire pkt_len_counter_dec__0_carry_i_3_n_0;
  wire pkt_len_counter_dec__0_carry_n_0;
  wire pkt_len_counter_dec__0_carry_n_1;
  wire pkt_len_counter_dec__0_carry_n_2;
  wire pkt_len_counter_dec__0_carry_n_3;
  wire [11:0]reg_pkt_len_counter;
  wire \reg_pkt_len_counter[11]_i_2_n_0 ;
  wire [2:0]\reg_pkt_len_counter_reg[11]_0 ;
  wire [2:0]\reg_pkt_len_counter_reg[11]_1 ;
  wire \reg_pkt_len_counter_reg[1]_0 ;
  wire [3:0]\reg_pkt_len_counter_reg[3]_0 ;
  wire [3:0]\reg_pkt_len_counter_reg[3]_1 ;
  wire [3:0]\reg_pkt_len_counter_reg[7]_0 ;
  wire [3:0]\reg_pkt_len_counter_reg[7]_1 ;
  wire \reg_pkt_len_counter_reg[7]_2 ;
  wire \reg_pkt_len_counter_reg[7]_3 ;
  wire trn_rdst_rdy_i_6_n_0;
  wire trn_rdst_rdy_i_7_n_0;
  wire trn_rdst_rdy_i_8_n_0;
  wire trn_rdst_rdy_i_9_0;
  wire trn_rdst_rdy_i_9_n_0;
  wire user_reset_out_reg;
  wire user_reset_out_reg_0;
  wire user_reset_out_reg_1;
  wire [3:3]NLW_new_pkt_len_carry__1_CO_UNCONNECTED;
  wire [3:1]NLW_pkt_len_counter_dec__0_carry__1_CO_UNCONNECTED;
  wire [3:2]NLW_pkt_len_counter_dec__0_carry__1_O_UNCONNECTED;

  LUT5 #(
    .INIT(32'h80888000)) 
    cur_state_i_2
       (.I0(cur_state_i_4_n_0),
        .I1(cur_state_i_5_n_0),
        .I2(m_axis_rx_tready),
        .I3(cur_state_reg_0),
        .I4(m_axis_rx_tready_cpler),
        .O(m_axis_rx_tready_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    cur_state_i_4
       (.I0(reg_pkt_len_counter[11]),
        .I1(reg_pkt_len_counter[10]),
        .I2(Q[1]),
        .I3(reg_pkt_len_counter[5]),
        .I4(reg_pkt_len_counter[4]),
        .I5(reg_pkt_len_counter[7]),
        .O(cur_state_i_4_n_0));
  LUT6 #(
    .INIT(64'h0000000101010101)) 
    cur_state_i_5
       (.I0(reg_pkt_len_counter[8]),
        .I1(reg_pkt_len_counter[9]),
        .I2(reg_pkt_len_counter[6]),
        .I3(reg_pkt_len_counter[0]),
        .I4(reg_pkt_len_counter[1]),
        .I5(Q[0]),
        .O(cur_state_i_5_n_0));
  FDRE cur_state_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(next_state),
        .Q(cur_state),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT5 #(
    .INIT(32'hFFFFEFDF)) 
    \m_axis_rx_tuser[19]_i_2 
       (.I0(pkt_len_counter_0[1]),
        .I1(SR),
        .I2(null_mux_sel),
        .I3(pkt_len_counter_0[2]),
        .I4(pkt_len_counter_0[0]),
        .O(user_reset_out_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT5 #(
    .INIT(32'hFFDFEFFF)) 
    \m_axis_rx_tuser[20]_i_2 
       (.I0(pkt_len_counter_0[1]),
        .I1(SR),
        .I2(null_mux_sel),
        .I3(pkt_len_counter_0[2]),
        .I4(pkt_len_counter_0[0]),
        .O(user_reset_out_reg_1));
  LUT6 #(
    .INIT(64'hFBFBFBBFBFBFFBBF)) 
    \m_axis_rx_tuser[21]_i_4 
       (.I0(SR),
        .I1(null_mux_sel),
        .I2(\m_axis_rx_tuser[21]_i_5_n_0 ),
        .I3(new_pkt_len[2]),
        .I4(\reg_pkt_len_counter[11]_i_2_n_0 ),
        .I5(pkt_len_counter__0[2]),
        .O(user_reset_out_reg));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT5 #(
    .INIT(32'hFFFACCFA)) 
    \m_axis_rx_tuser[21]_i_5 
       (.I0(new_pkt_len[0]),
        .I1(reg_pkt_len_counter[0]),
        .I2(new_pkt_len[1]),
        .I3(\reg_pkt_len_counter[11]_i_2_n_0 ),
        .I4(reg_pkt_len_counter[1]),
        .O(\m_axis_rx_tuser[21]_i_5_n_0 ));
  CARRY4 new_pkt_len_carry
       (.CI(1'b0),
        .CO({new_pkt_len_carry_n_0,new_pkt_len_carry_n_1,new_pkt_len_carry_n_2,new_pkt_len_carry_n_3}),
        .CYINIT(1'b0),
        .DI(\reg_pkt_len_counter_reg[3]_0 ),
        .O(new_pkt_len[3:0]),
        .S(\reg_pkt_len_counter_reg[3]_1 ));
  CARRY4 new_pkt_len_carry__0
       (.CI(new_pkt_len_carry_n_0),
        .CO({new_pkt_len_carry__0_n_0,new_pkt_len_carry__0_n_1,new_pkt_len_carry__0_n_2,new_pkt_len_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI(\reg_pkt_len_counter_reg[7]_0 ),
        .O(new_pkt_len[7:4]),
        .S(\reg_pkt_len_counter_reg[7]_1 ));
  CARRY4 new_pkt_len_carry__1
       (.CI(new_pkt_len_carry__0_n_0),
        .CO({NLW_new_pkt_len_carry__1_CO_UNCONNECTED[3],new_pkt_len_carry__1_n_1,new_pkt_len_carry__1_n_2,new_pkt_len_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,\reg_pkt_len_counter_reg[11]_0 }),
        .O({new_pkt_len_carry__1_n_4,new_pkt_len[10:8]}),
        .S({1'b1,\reg_pkt_len_counter_reg[11]_1 }));
  LUT6 #(
    .INIT(64'h00000000DFDFFF00)) 
    null_mux_sel_i_1
       (.I0(trn_rdst_rdy_i_9_0),
        .I1(\reg_pkt_len_counter_reg[1]_0 ),
        .I2(m_axis_rx_tready_mux),
        .I3(null_mux_sel_reg_0),
        .I4(null_mux_sel),
        .I5(SR),
        .O(null_mux_sel_reg));
  CARRY4 pkt_len_counter_dec__0_carry
       (.CI(1'b0),
        .CO({pkt_len_counter_dec__0_carry_n_0,pkt_len_counter_dec__0_carry_n_1,pkt_len_counter_dec__0_carry_n_2,pkt_len_counter_dec__0_carry_n_3}),
        .CYINIT(1'b0),
        .DI({reg_pkt_len_counter[4],Q[1],DI,1'b0}),
        .O(pkt_len_counter__0[5:2]),
        .S({pkt_len_counter_dec__0_carry_i_2_n_0,pkt_len_counter_dec__0_carry_i_3_n_0,S}));
  CARRY4 pkt_len_counter_dec__0_carry__0
       (.CI(pkt_len_counter_dec__0_carry_n_0),
        .CO({pkt_len_counter_dec__0_carry__0_n_0,pkt_len_counter_dec__0_carry__0_n_1,pkt_len_counter_dec__0_carry__0_n_2,pkt_len_counter_dec__0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI(reg_pkt_len_counter[8:5]),
        .O(pkt_len_counter__0[9:6]),
        .S({pkt_len_counter_dec__0_carry__0_i_1_n_0,pkt_len_counter_dec__0_carry__0_i_2_n_0,pkt_len_counter_dec__0_carry__0_i_3_n_0,pkt_len_counter_dec__0_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    pkt_len_counter_dec__0_carry__0_i_1
       (.I0(reg_pkt_len_counter[8]),
        .I1(reg_pkt_len_counter[9]),
        .O(pkt_len_counter_dec__0_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    pkt_len_counter_dec__0_carry__0_i_2
       (.I0(reg_pkt_len_counter[7]),
        .I1(reg_pkt_len_counter[8]),
        .O(pkt_len_counter_dec__0_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    pkt_len_counter_dec__0_carry__0_i_3
       (.I0(reg_pkt_len_counter[6]),
        .I1(reg_pkt_len_counter[7]),
        .O(pkt_len_counter_dec__0_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    pkt_len_counter_dec__0_carry__0_i_4
       (.I0(reg_pkt_len_counter[5]),
        .I1(reg_pkt_len_counter[6]),
        .O(pkt_len_counter_dec__0_carry__0_i_4_n_0));
  CARRY4 pkt_len_counter_dec__0_carry__1
       (.CI(pkt_len_counter_dec__0_carry__0_n_0),
        .CO({NLW_pkt_len_counter_dec__0_carry__1_CO_UNCONNECTED[3:1],pkt_len_counter_dec__0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,reg_pkt_len_counter[9]}),
        .O({NLW_pkt_len_counter_dec__0_carry__1_O_UNCONNECTED[3:2],pkt_len_counter__0[11:10]}),
        .S({1'b0,1'b0,pkt_len_counter_dec__0_carry__1_i_1_n_0,pkt_len_counter_dec__0_carry__1_i_2_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    pkt_len_counter_dec__0_carry__1_i_1
       (.I0(reg_pkt_len_counter[10]),
        .I1(reg_pkt_len_counter[11]),
        .O(pkt_len_counter_dec__0_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    pkt_len_counter_dec__0_carry__1_i_2
       (.I0(reg_pkt_len_counter[9]),
        .I1(reg_pkt_len_counter[10]),
        .O(pkt_len_counter_dec__0_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    pkt_len_counter_dec__0_carry_i_2
       (.I0(reg_pkt_len_counter[4]),
        .I1(reg_pkt_len_counter[5]),
        .O(pkt_len_counter_dec__0_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    pkt_len_counter_dec__0_carry_i_3
       (.I0(Q[1]),
        .I1(reg_pkt_len_counter[4]),
        .O(pkt_len_counter_dec__0_carry_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_pkt_len_counter[0]_i_1 
       (.I0(reg_pkt_len_counter[0]),
        .I1(\reg_pkt_len_counter[11]_i_2_n_0 ),
        .I2(new_pkt_len[0]),
        .O(pkt_len_counter_0[0]));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_pkt_len_counter[10]_i_1 
       (.I0(pkt_len_counter__0[10]),
        .I1(\reg_pkt_len_counter[11]_i_2_n_0 ),
        .I2(new_pkt_len[10]),
        .O(pkt_len_counter[10]));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_pkt_len_counter[11]_i_1 
       (.I0(pkt_len_counter__0[11]),
        .I1(\reg_pkt_len_counter[11]_i_2_n_0 ),
        .I2(new_pkt_len_carry__1_n_4),
        .O(pkt_len_counter[11]));
  LUT6 #(
    .INIT(64'h00D0D0D0D0D0D0D0)) 
    \reg_pkt_len_counter[11]_i_2 
       (.I0(\reg_pkt_len_counter_reg[7]_2 ),
        .I1(\reg_pkt_len_counter_reg[7]_3 ),
        .I2(cur_state),
        .I3(m_axis_rx_tready_mux),
        .I4(cur_state_i_5_n_0),
        .I5(cur_state_i_4_n_0),
        .O(\reg_pkt_len_counter[11]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_pkt_len_counter[1]_i_1 
       (.I0(reg_pkt_len_counter[1]),
        .I1(\reg_pkt_len_counter[11]_i_2_n_0 ),
        .I2(new_pkt_len[1]),
        .O(pkt_len_counter_0[1]));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_pkt_len_counter[2]_i_1 
       (.I0(pkt_len_counter__0[2]),
        .I1(\reg_pkt_len_counter[11]_i_2_n_0 ),
        .I2(new_pkt_len[2]),
        .O(pkt_len_counter_0[2]));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_pkt_len_counter[3]_i_1 
       (.I0(pkt_len_counter__0[3]),
        .I1(\reg_pkt_len_counter[11]_i_2_n_0 ),
        .I2(new_pkt_len[3]),
        .O(pkt_len_counter[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_pkt_len_counter[4]_i_1 
       (.I0(pkt_len_counter__0[4]),
        .I1(\reg_pkt_len_counter[11]_i_2_n_0 ),
        .I2(new_pkt_len[4]),
        .O(pkt_len_counter[4]));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_pkt_len_counter[5]_i_1 
       (.I0(pkt_len_counter__0[5]),
        .I1(\reg_pkt_len_counter[11]_i_2_n_0 ),
        .I2(new_pkt_len[5]),
        .O(pkt_len_counter[5]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_pkt_len_counter[6]_i_1 
       (.I0(pkt_len_counter__0[6]),
        .I1(\reg_pkt_len_counter[11]_i_2_n_0 ),
        .I2(new_pkt_len[6]),
        .O(pkt_len_counter[6]));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_pkt_len_counter[7]_i_1 
       (.I0(pkt_len_counter__0[7]),
        .I1(\reg_pkt_len_counter[11]_i_2_n_0 ),
        .I2(new_pkt_len[7]),
        .O(pkt_len_counter[7]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_pkt_len_counter[8]_i_1 
       (.I0(pkt_len_counter__0[8]),
        .I1(\reg_pkt_len_counter[11]_i_2_n_0 ),
        .I2(new_pkt_len[8]),
        .O(pkt_len_counter[8]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_pkt_len_counter[9]_i_1 
       (.I0(pkt_len_counter__0[9]),
        .I1(\reg_pkt_len_counter[11]_i_2_n_0 ),
        .I2(new_pkt_len[9]),
        .O(pkt_len_counter[9]));
  FDRE \reg_pkt_len_counter_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(pkt_len_counter_0[0]),
        .Q(reg_pkt_len_counter[0]),
        .R(SR));
  FDRE \reg_pkt_len_counter_reg[10] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(pkt_len_counter[10]),
        .Q(reg_pkt_len_counter[10]),
        .R(SR));
  FDRE \reg_pkt_len_counter_reg[11] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(pkt_len_counter[11]),
        .Q(reg_pkt_len_counter[11]),
        .R(SR));
  FDRE \reg_pkt_len_counter_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(pkt_len_counter_0[1]),
        .Q(reg_pkt_len_counter[1]),
        .R(SR));
  FDRE \reg_pkt_len_counter_reg[2] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(pkt_len_counter_0[2]),
        .Q(Q[0]),
        .R(SR));
  FDRE \reg_pkt_len_counter_reg[3] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(pkt_len_counter[3]),
        .Q(Q[1]),
        .R(SR));
  FDRE \reg_pkt_len_counter_reg[4] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(pkt_len_counter[4]),
        .Q(reg_pkt_len_counter[4]),
        .R(SR));
  FDRE \reg_pkt_len_counter_reg[5] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(pkt_len_counter[5]),
        .Q(reg_pkt_len_counter[5]),
        .R(SR));
  FDRE \reg_pkt_len_counter_reg[6] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(pkt_len_counter[6]),
        .Q(reg_pkt_len_counter[6]),
        .R(SR));
  FDRE \reg_pkt_len_counter_reg[7] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(pkt_len_counter[7]),
        .Q(reg_pkt_len_counter[7]),
        .R(SR));
  FDRE \reg_pkt_len_counter_reg[8] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(pkt_len_counter[8]),
        .Q(reg_pkt_len_counter[8]),
        .R(SR));
  FDRE \reg_pkt_len_counter_reg[9] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(pkt_len_counter[9]),
        .Q(reg_pkt_len_counter[9]),
        .R(SR));
  LUT5 #(
    .INIT(32'h00000004)) 
    trn_rdst_rdy_i_3
       (.I0(pkt_len_counter[6]),
        .I1(trn_rdst_rdy_i_6_n_0),
        .I2(trn_rdst_rdy_i_7_n_0),
        .I3(trn_rdst_rdy_i_8_n_0),
        .I4(trn_rdst_rdy_i_9_n_0),
        .O(trn_rdst_rdy_i_9_0));
  LUT6 #(
    .INIT(64'hFAFAFC000000FC00)) 
    trn_rdst_rdy_i_4
       (.I0(reg_pkt_len_counter[1]),
        .I1(new_pkt_len[1]),
        .I2(pkt_len_counter_0[0]),
        .I3(new_pkt_len[2]),
        .I4(\reg_pkt_len_counter[11]_i_2_n_0 ),
        .I5(pkt_len_counter__0[2]),
        .O(\reg_pkt_len_counter_reg[1]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT5 #(
    .INIT(32'h00053305)) 
    trn_rdst_rdy_i_6
       (.I0(new_pkt_len[3]),
        .I1(pkt_len_counter__0[3]),
        .I2(new_pkt_len[4]),
        .I3(\reg_pkt_len_counter[11]_i_2_n_0 ),
        .I4(pkt_len_counter__0[4]),
        .O(trn_rdst_rdy_i_6_n_0));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT5 #(
    .INIT(32'hFFFACCFA)) 
    trn_rdst_rdy_i_7
       (.I0(new_pkt_len[10]),
        .I1(pkt_len_counter__0[10]),
        .I2(new_pkt_len_carry__1_n_4),
        .I3(\reg_pkt_len_counter[11]_i_2_n_0 ),
        .I4(pkt_len_counter__0[11]),
        .O(trn_rdst_rdy_i_7_n_0));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT5 #(
    .INIT(32'hFFFACCFA)) 
    trn_rdst_rdy_i_8
       (.I0(new_pkt_len[9]),
        .I1(pkt_len_counter__0[9]),
        .I2(new_pkt_len[7]),
        .I3(\reg_pkt_len_counter[11]_i_2_n_0 ),
        .I4(pkt_len_counter__0[7]),
        .O(trn_rdst_rdy_i_8_n_0));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT5 #(
    .INIT(32'hFFFACCFA)) 
    trn_rdst_rdy_i_9
       (.I0(new_pkt_len[5]),
        .I1(pkt_len_counter__0[5]),
        .I2(new_pkt_len[8]),
        .I3(\reg_pkt_len_counter[11]_i_2_n_0 ),
        .I4(pkt_len_counter__0[8]),
        .O(trn_rdst_rdy_i_9_n_0));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_axi_basic_rx_pipeline" *) 
module pcie_7x_0_pcie_7x_0_axi_basic_rx_pipeline
   (trn_rsrc_dsc_d,
    m_axis_rx_tvalid_reg_0,
    trn_rdst_rdy_reg_0,
    null_mux_sel,
    trn_in_packet,
    reg_dsc_detect_reg_0,
    \m_axis_rx_tdata_reg[3]_0 ,
    Q,
    \m_axis_rx_tuser_reg[21]_0 ,
    \m_axis_rx_tdata_reg[6]_0 ,
    \m_axis_rx_tuser_reg[13]_0 ,
    \m_axis_rx_tdata_reg[30]_0 ,
    \m_axis_rx_tdata_reg[9]_0 ,
    \m_axis_rx_tdata_reg[3]_1 ,
    m_axis_rx_tready_0,
    m_axis_rx_tvalid_reg_1,
    \m_axis_rx_tdata_reg[63]_0 ,
    \m_axis_rx_tdata_reg[47]_0 ,
    \m_axis_rx_tdata_reg[35]_0 ,
    \m_axis_rx_tdata_reg[13]_0 ,
    \m_axis_rx_tdata_reg[22]_0 ,
    \m_axis_rx_tdata_reg[29]_0 ,
    \FSM_sequential_pio_rx_sm_128.state_reg[0] ,
    \m_axis_rx_tdata_reg[89]_0 ,
    \m_axis_rx_tdata_reg[30]_1 ,
    \m_axis_rx_tdata_reg[30]_2 ,
    \m_axis_rx_tdata_reg[73]_0 ,
    \m_axis_rx_tdata_reg[94]_0 ,
    \m_axis_rx_tdata_reg[94]_1 ,
    \m_axis_rx_tdata_reg[15]_0 ,
    next_state,
    \m_axis_rx_tdata_reg[14]_0 ,
    \m_axis_rx_tdata_reg[29]_1 ,
    m_axis_rx_tvalid_reg_2,
    user_reset_out_reg,
    m_axis_rx_tvalid,
    \m_axis_rx_tdata_reg[30]_3 ,
    \m_axis_rx_tdata_reg[6]_1 ,
    m_axis_rx_tdata,
    m_axis_rx_tuser,
    \m_axis_rx_tdata_reg[31]_0 ,
    \m_axis_rx_tdata_reg[9]_1 ,
    SR,
    data_hold,
    pipe_userclk2_in,
    trn_rsrc_dsc,
    E,
    rsrc_rdy_filtered,
    trn_rsof,
    trn_rsrc_dsc_prev0,
    trn_recrc_err,
    trn_rerrfwd,
    trn_reof,
    null_mux_sel_reg_0,
    trn_in_packet_reg_0,
    m_axis_rx_tready,
    m_axis_rx_tvalid_0,
    m_axis_rx_tready_cpler,
    dsc_detect,
    \pio_rx_sm_128.req_addr_reg[2] ,
    \pio_rx_sm_128.req_td_reg ,
    m_axis_rx_tready_mux,
    cur_state_reg,
    cur_state,
    \m_axis_rx_tuser_reg[21]_1 ,
    \m_axis_rx_tuser_reg[21]_2 ,
    trn_rdst_rdy_reg_1,
    trn_rrem,
    \m_axis_rx_tuser_reg[19]_0 ,
    \m_axis_rx_tuser_reg[20]_0 ,
    trn_rd,
    trn_rbar_hit,
    \m_axis_rx_tuser[14] ,
    \m_axis_rx_tuser_reg[21]_3 );
  output trn_rsrc_dsc_d;
  output m_axis_rx_tvalid_reg_0;
  output [0:0]trn_rdst_rdy_reg_0;
  output null_mux_sel;
  output trn_in_packet;
  output reg_dsc_detect_reg_0;
  output [3:0]\m_axis_rx_tdata_reg[3]_0 ;
  output [125:0]Q;
  output [13:0]\m_axis_rx_tuser_reg[21]_0 ;
  output [3:0]\m_axis_rx_tdata_reg[6]_0 ;
  output \m_axis_rx_tuser_reg[13]_0 ;
  output \m_axis_rx_tdata_reg[30]_0 ;
  output [2:0]\m_axis_rx_tdata_reg[9]_0 ;
  output [3:0]\m_axis_rx_tdata_reg[3]_1 ;
  output m_axis_rx_tready_0;
  output [0:0]m_axis_rx_tvalid_reg_1;
  output [15:0]\m_axis_rx_tdata_reg[63]_0 ;
  output [7:0]\m_axis_rx_tdata_reg[47]_0 ;
  output [3:0]\m_axis_rx_tdata_reg[35]_0 ;
  output [1:0]\m_axis_rx_tdata_reg[13]_0 ;
  output [2:0]\m_axis_rx_tdata_reg[22]_0 ;
  output \m_axis_rx_tdata_reg[29]_0 ;
  output \FSM_sequential_pio_rx_sm_128.state_reg[0] ;
  output [0:0]\m_axis_rx_tdata_reg[89]_0 ;
  output [0:0]\m_axis_rx_tdata_reg[30]_1 ;
  output \m_axis_rx_tdata_reg[30]_2 ;
  output \m_axis_rx_tdata_reg[73]_0 ;
  output [3:0]\m_axis_rx_tdata_reg[94]_0 ;
  output [2:0]\m_axis_rx_tdata_reg[94]_1 ;
  output \m_axis_rx_tdata_reg[15]_0 ;
  output next_state;
  output \m_axis_rx_tdata_reg[14]_0 ;
  output \m_axis_rx_tdata_reg[29]_1 ;
  output m_axis_rx_tvalid_reg_2;
  output [0:0]user_reset_out_reg;
  output m_axis_rx_tvalid;
  output \m_axis_rx_tdata_reg[30]_3 ;
  output [4:0]\m_axis_rx_tdata_reg[6]_1 ;
  output [1:0]m_axis_rx_tdata;
  output [1:0]m_axis_rx_tuser;
  output [6:0]\m_axis_rx_tdata_reg[31]_0 ;
  output [9:0]\m_axis_rx_tdata_reg[9]_1 ;
  input [0:0]SR;
  input data_hold;
  input pipe_userclk2_in;
  input trn_rsrc_dsc;
  input [0:0]E;
  input rsrc_rdy_filtered;
  input trn_rsof;
  input trn_rsrc_dsc_prev0;
  input trn_recrc_err;
  input trn_rerrfwd;
  input trn_reof;
  input null_mux_sel_reg_0;
  input trn_in_packet_reg_0;
  input m_axis_rx_tready;
  input m_axis_rx_tvalid_0;
  input m_axis_rx_tready_cpler;
  input dsc_detect;
  input [2:0]\pio_rx_sm_128.req_addr_reg[2] ;
  input \pio_rx_sm_128.req_td_reg ;
  input m_axis_rx_tready_mux;
  input cur_state_reg;
  input cur_state;
  input \m_axis_rx_tuser_reg[21]_1 ;
  input \m_axis_rx_tuser_reg[21]_2 ;
  input trn_rdst_rdy_reg_1;
  input [1:0]trn_rrem;
  input \m_axis_rx_tuser_reg[19]_0 ;
  input \m_axis_rx_tuser_reg[20]_0 ;
  input [127:0]trn_rd;
  input [6:0]trn_rbar_hit;
  input \m_axis_rx_tuser[14] ;
  input [0:0]\m_axis_rx_tuser_reg[21]_3 ;

  wire [0:0]E;
  wire \FSM_sequential_pio_rx_sm_128.state[0]_i_2_n_0 ;
  wire \FSM_sequential_pio_rx_sm_128.state[0]_i_3_n_0 ;
  wire \FSM_sequential_pio_rx_sm_128.state[0]_i_4_n_0 ;
  wire \FSM_sequential_pio_rx_sm_128.state[0]_i_5_n_0 ;
  wire \FSM_sequential_pio_rx_sm_128.state[1]_i_4_n_0 ;
  wire \FSM_sequential_pio_rx_sm_128.state[2]_i_10_n_0 ;
  wire \FSM_sequential_pio_rx_sm_128.state[2]_i_8_n_0 ;
  wire \FSM_sequential_pio_rx_sm_128.state[2]_i_9_n_0 ;
  wire \FSM_sequential_pio_rx_sm_128.state_reg[0] ;
  wire [125:0]Q;
  wire [0:0]SR;
  wire cur_state;
  wire cur_state_reg;
  wire data_hold;
  wire data_prev;
  wire dsc_detect;
  wire [1:0]m_axis_rx_tdata;
  wire [78:14]m_axis_rx_tdata_mux;
  wire [1:0]\m_axis_rx_tdata_reg[13]_0 ;
  wire \m_axis_rx_tdata_reg[14]_0 ;
  wire \m_axis_rx_tdata_reg[15]_0 ;
  wire [2:0]\m_axis_rx_tdata_reg[22]_0 ;
  wire \m_axis_rx_tdata_reg[29]_0 ;
  wire \m_axis_rx_tdata_reg[29]_1 ;
  wire \m_axis_rx_tdata_reg[30]_0 ;
  wire [0:0]\m_axis_rx_tdata_reg[30]_1 ;
  wire \m_axis_rx_tdata_reg[30]_2 ;
  wire \m_axis_rx_tdata_reg[30]_3 ;
  wire [6:0]\m_axis_rx_tdata_reg[31]_0 ;
  wire [3:0]\m_axis_rx_tdata_reg[35]_0 ;
  wire [3:0]\m_axis_rx_tdata_reg[3]_0 ;
  wire [3:0]\m_axis_rx_tdata_reg[3]_1 ;
  wire [7:0]\m_axis_rx_tdata_reg[47]_0 ;
  wire [15:0]\m_axis_rx_tdata_reg[63]_0 ;
  wire [3:0]\m_axis_rx_tdata_reg[6]_0 ;
  wire [4:0]\m_axis_rx_tdata_reg[6]_1 ;
  wire \m_axis_rx_tdata_reg[73]_0 ;
  wire [0:0]\m_axis_rx_tdata_reg[89]_0 ;
  wire [3:0]\m_axis_rx_tdata_reg[94]_0 ;
  wire [2:0]\m_axis_rx_tdata_reg[94]_1 ;
  wire [2:0]\m_axis_rx_tdata_reg[9]_0 ;
  wire [9:0]\m_axis_rx_tdata_reg[9]_1 ;
  wire m_axis_rx_tready;
  wire m_axis_rx_tready_0;
  wire m_axis_rx_tready_cpler;
  wire m_axis_rx_tready_mux;
  wire [1:0]m_axis_rx_tuser;
  wire \m_axis_rx_tuser[0]_i_1_n_0 ;
  wire \m_axis_rx_tuser[13]_i_1_n_0 ;
  wire \m_axis_rx_tuser[14] ;
  wire \m_axis_rx_tuser[14]_i_1_n_0 ;
  wire \m_axis_rx_tuser[19]_i_1_n_0 ;
  wire \m_axis_rx_tuser[1]_i_1_n_0 ;
  wire \m_axis_rx_tuser[20]_i_1_n_0 ;
  wire \m_axis_rx_tuser[21]_i_2_n_0 ;
  wire \m_axis_rx_tuser[21]_i_3_n_0 ;
  wire \m_axis_rx_tuser[2]_i_1_n_0 ;
  wire \m_axis_rx_tuser[3]_i_1_n_0 ;
  wire \m_axis_rx_tuser[4]_i_1_n_0 ;
  wire \m_axis_rx_tuser[5]_i_1_n_0 ;
  wire \m_axis_rx_tuser[6]_i_1_n_0 ;
  wire \m_axis_rx_tuser[7]_i_1_n_0 ;
  wire \m_axis_rx_tuser[8]_i_1_n_0 ;
  wire [13:13]m_axis_rx_tuser_mux;
  wire \m_axis_rx_tuser_reg[13]_0 ;
  wire \m_axis_rx_tuser_reg[19]_0 ;
  wire \m_axis_rx_tuser_reg[20]_0 ;
  wire [13:0]\m_axis_rx_tuser_reg[21]_0 ;
  wire \m_axis_rx_tuser_reg[21]_1 ;
  wire \m_axis_rx_tuser_reg[21]_2 ;
  wire [0:0]\m_axis_rx_tuser_reg[21]_3 ;
  wire m_axis_rx_tvalid;
  wire m_axis_rx_tvalid_0;
  wire m_axis_rx_tvalid_i_2_n_0;
  wire m_axis_rx_tvalid_reg_0;
  wire [0:0]m_axis_rx_tvalid_reg_1;
  wire m_axis_rx_tvalid_reg_2;
  wire next_state;
  wire null_mux_sel;
  wire null_mux_sel_reg_0;
  wire [127:0]p_1_in;
  wire [2:0]\pio_rx_sm_128.req_addr_reg[2] ;
  wire \pio_rx_sm_128.req_attr[1]_i_4_n_0 ;
  wire \pio_rx_sm_128.req_attr[1]_i_5_n_0 ;
  wire \pio_rx_sm_128.req_attr[1]_i_6_n_0 ;
  wire \pio_rx_sm_128.req_attr[1]_i_7_n_0 ;
  wire \pio_rx_sm_128.req_compl_i_2_n_0 ;
  wire \pio_rx_sm_128.req_compl_i_3_n_0 ;
  wire \pio_rx_sm_128.req_compl_i_4_n_0 ;
  wire \pio_rx_sm_128.req_compl_i_5_n_0 ;
  wire \pio_rx_sm_128.req_td_reg ;
  wire pipe_userclk2_in;
  wire reg_dsc_detect_i_1_n_0;
  wire reg_dsc_detect_reg_0;
  wire rsrc_rdy_filtered;
  wire trn_in_packet;
  wire trn_in_packet_reg_0;
  wire [6:0]trn_rbar_hit;
  wire [6:0]trn_rbar_hit_prev;
  wire [127:0]trn_rd;
  wire [127:0]trn_rd_prev;
  wire trn_rdst_rdy_i_1_n_0;
  wire trn_rdst_rdy_i_2_n_0;
  wire [0:0]trn_rdst_rdy_reg_0;
  wire trn_rdst_rdy_reg_1;
  wire trn_recrc_err;
  wire trn_recrc_err_prev;
  wire trn_reof;
  wire trn_reof_prev;
  wire trn_rerrfwd;
  wire trn_rerrfwd_prev;
  wire [1:0]trn_rrem;
  wire [1:0]trn_rrem_prev;
  wire trn_rsof;
  wire trn_rsof_prev;
  wire trn_rsrc_dsc;
  wire trn_rsrc_dsc_d;
  wire trn_rsrc_dsc_prev;
  wire trn_rsrc_dsc_prev0;
  wire trn_rsrc_rdy_prev;
  wire [0:0]user_reset_out_reg;

  LUT6 #(
    .INIT(64'hEEEEEFEEEFEEEFEE)) 
    \FSM_sequential_pio_rx_sm_128.state[0]_i_1 
       (.I0(\FSM_sequential_pio_rx_sm_128.state[0]_i_2_n_0 ),
        .I1(\FSM_sequential_pio_rx_sm_128.state[0]_i_3_n_0 ),
        .I2(m_axis_rx_tvalid_reg_0),
        .I3(\pio_rx_sm_128.req_addr_reg[2] [0]),
        .I4(\pio_rx_sm_128.req_addr_reg[2] [1]),
        .I5(\pio_rx_sm_128.req_addr_reg[2] [2]),
        .O(m_axis_rx_tvalid_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \FSM_sequential_pio_rx_sm_128.state[0]_i_2 
       (.I0(\pio_rx_sm_128.req_attr[1]_i_4_n_0 ),
        .I1(\pio_rx_sm_128.req_td_reg ),
        .I2(Q[92]),
        .O(\FSM_sequential_pio_rx_sm_128.state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000800000)) 
    \FSM_sequential_pio_rx_sm_128.state[0]_i_3 
       (.I0(\FSM_sequential_pio_rx_sm_128.state[0]_i_4_n_0 ),
        .I1(Q[29]),
        .I2(Q[28]),
        .I3(Q[24]),
        .I4(\m_axis_rx_tuser_reg[13]_0 ),
        .I5(\pio_rx_sm_128.req_td_reg ),
        .O(\FSM_sequential_pio_rx_sm_128.state[0]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_sequential_pio_rx_sm_128.state[0]_i_4 
       (.I0(\pio_rx_sm_128.req_compl_i_3_n_0 ),
        .I1(\FSM_sequential_pio_rx_sm_128.state[0]_i_5_n_0 ),
        .O(\FSM_sequential_pio_rx_sm_128.state[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFFFF)) 
    \FSM_sequential_pio_rx_sm_128.state[0]_i_5 
       (.I0(Q[23]),
        .I1(Q[27]),
        .I2(Q[25]),
        .I3(Q[26]),
        .I4(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I5(m_axis_rx_tuser_mux),
        .O(\FSM_sequential_pio_rx_sm_128.state[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0087FFFF00870087)) 
    \FSM_sequential_pio_rx_sm_128.state[1]_i_3 
       (.I0(Q[28]),
        .I1(Q[29]),
        .I2(\pio_rx_sm_128.req_compl_i_3_n_0 ),
        .I3(\pio_rx_sm_128.req_compl_i_4_n_0 ),
        .I4(\FSM_sequential_pio_rx_sm_128.state[1]_i_4_n_0 ),
        .I5(\pio_rx_sm_128.req_attr[1]_i_5_n_0 ),
        .O(\m_axis_rx_tdata_reg[29]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT5 #(
    .INIT(32'hCBFFFFFF)) 
    \FSM_sequential_pio_rx_sm_128.state[1]_i_4 
       (.I0(Q[87]),
        .I1(Q[91]),
        .I2(Q[92]),
        .I3(m_axis_rx_tuser_mux),
        .I4(\m_axis_rx_tuser_reg[21]_0 [9]),
        .O(\FSM_sequential_pio_rx_sm_128.state[1]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \FSM_sequential_pio_rx_sm_128.state[2]_i_10 
       (.I0(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I1(m_axis_rx_tuser_mux),
        .I2(Q[63]),
        .O(\FSM_sequential_pio_rx_sm_128.state[2]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT4 #(
    .INIT(16'h4055)) 
    \FSM_sequential_pio_rx_sm_128.state[2]_i_6 
       (.I0(\pio_rx_sm_128.req_compl_i_4_n_0 ),
        .I1(Q[29]),
        .I2(Q[28]),
        .I3(\pio_rx_sm_128.req_compl_i_3_n_0 ),
        .O(\m_axis_rx_tdata_reg[30]_3 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \FSM_sequential_pio_rx_sm_128.state[2]_i_7 
       (.I0(\FSM_sequential_pio_rx_sm_128.state[2]_i_8_n_0 ),
        .I1(\FSM_sequential_pio_rx_sm_128.state[2]_i_9_n_0 ),
        .I2(Q[72]),
        .I3(Q[71]),
        .I4(Q[90]),
        .I5(Q[89]),
        .O(\m_axis_rx_tdata_reg[73]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \FSM_sequential_pio_rx_sm_128.state[2]_i_8 
       (.I0(\FSM_sequential_pio_rx_sm_128.state[2]_i_10_n_0 ),
        .I1(Q[86]),
        .I2(Q[88]),
        .I3(Q[64]),
        .I4(Q[87]),
        .I5(\pio_rx_sm_128.req_attr[1]_i_7_n_0 ),
        .O(\FSM_sequential_pio_rx_sm_128.state[2]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \FSM_sequential_pio_rx_sm_128.state[2]_i_9 
       (.I0(Q[70]),
        .I1(Q[67]),
        .I2(Q[92]),
        .I3(Q[91]),
        .O(\FSM_sequential_pio_rx_sm_128.state[2]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h0F22FF220F000F00)) 
    cur_state_i_1
       (.I0(m_axis_rx_tready_mux),
        .I1(\m_axis_rx_tuser_reg[21]_0 [13]),
        .I2(cur_state_reg),
        .I3(cur_state),
        .I4(\m_axis_rx_tuser_reg[13]_0 ),
        .I5(m_axis_rx_tvalid_reg_0),
        .O(next_state));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT2 #(
    .INIT(4'h7)) 
    cur_state_i_3
       (.I0(m_axis_rx_tuser_mux),
        .I1(\m_axis_rx_tuser_reg[21]_0 [9]),
        .O(\m_axis_rx_tuser_reg[13]_0 ));
  FDRE data_prev_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(data_hold),
        .Q(data_prev),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gen_cpl_128.s_axis_tx_tkeep[11]_i_1 
       (.I0(SR),
        .O(user_reset_out_reg));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[0]_i_1 
       (.I0(trn_rd_prev[0]),
        .I1(data_prev),
        .I2(trn_rd[96]),
        .O(p_1_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[100]_i_1 
       (.I0(trn_rd_prev[100]),
        .I1(data_prev),
        .I2(trn_rd[4]),
        .O(p_1_in[100]));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[101]_i_1 
       (.I0(trn_rd_prev[101]),
        .I1(data_prev),
        .I2(trn_rd[5]),
        .O(p_1_in[101]));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[102]_i_1 
       (.I0(trn_rd_prev[102]),
        .I1(data_prev),
        .I2(trn_rd[6]),
        .O(p_1_in[102]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[103]_i_1 
       (.I0(trn_rd_prev[103]),
        .I1(data_prev),
        .I2(trn_rd[7]),
        .O(p_1_in[103]));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[104]_i_1 
       (.I0(trn_rd_prev[104]),
        .I1(data_prev),
        .I2(trn_rd[8]),
        .O(p_1_in[104]));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[105]_i_1 
       (.I0(trn_rd_prev[105]),
        .I1(data_prev),
        .I2(trn_rd[9]),
        .O(p_1_in[105]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[106]_i_1 
       (.I0(trn_rd_prev[106]),
        .I1(data_prev),
        .I2(trn_rd[10]),
        .O(p_1_in[106]));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[107]_i_1 
       (.I0(trn_rd_prev[107]),
        .I1(data_prev),
        .I2(trn_rd[11]),
        .O(p_1_in[107]));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[108]_i_1 
       (.I0(trn_rd_prev[108]),
        .I1(data_prev),
        .I2(trn_rd[12]),
        .O(p_1_in[108]));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[109]_i_1 
       (.I0(trn_rd_prev[109]),
        .I1(data_prev),
        .I2(trn_rd[13]),
        .O(p_1_in[109]));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[10]_i_1 
       (.I0(trn_rd_prev[10]),
        .I1(data_prev),
        .I2(trn_rd[106]),
        .O(p_1_in[10]));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[110]_i_1 
       (.I0(trn_rd_prev[110]),
        .I1(data_prev),
        .I2(trn_rd[14]),
        .O(p_1_in[110]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[111]_i_1 
       (.I0(trn_rd_prev[111]),
        .I1(data_prev),
        .I2(trn_rd[15]),
        .O(p_1_in[111]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[112]_i_1 
       (.I0(trn_rd_prev[112]),
        .I1(data_prev),
        .I2(trn_rd[16]),
        .O(p_1_in[112]));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[113]_i_1 
       (.I0(trn_rd_prev[113]),
        .I1(data_prev),
        .I2(trn_rd[17]),
        .O(p_1_in[113]));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[114]_i_1 
       (.I0(trn_rd_prev[114]),
        .I1(data_prev),
        .I2(trn_rd[18]),
        .O(p_1_in[114]));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[115]_i_1 
       (.I0(trn_rd_prev[115]),
        .I1(data_prev),
        .I2(trn_rd[19]),
        .O(p_1_in[115]));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[116]_i_1 
       (.I0(trn_rd_prev[116]),
        .I1(data_prev),
        .I2(trn_rd[20]),
        .O(p_1_in[116]));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[117]_i_1 
       (.I0(trn_rd_prev[117]),
        .I1(data_prev),
        .I2(trn_rd[21]),
        .O(p_1_in[117]));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[118]_i_1 
       (.I0(trn_rd_prev[118]),
        .I1(data_prev),
        .I2(trn_rd[22]),
        .O(p_1_in[118]));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[119]_i_1 
       (.I0(trn_rd_prev[119]),
        .I1(data_prev),
        .I2(trn_rd[23]),
        .O(p_1_in[119]));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[11]_i_1 
       (.I0(trn_rd_prev[11]),
        .I1(data_prev),
        .I2(trn_rd[107]),
        .O(p_1_in[11]));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[120]_i_1 
       (.I0(trn_rd_prev[120]),
        .I1(data_prev),
        .I2(trn_rd[24]),
        .O(p_1_in[120]));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[121]_i_1 
       (.I0(trn_rd_prev[121]),
        .I1(data_prev),
        .I2(trn_rd[25]),
        .O(p_1_in[121]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[122]_i_1 
       (.I0(trn_rd_prev[122]),
        .I1(data_prev),
        .I2(trn_rd[26]),
        .O(p_1_in[122]));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[123]_i_1 
       (.I0(trn_rd_prev[123]),
        .I1(data_prev),
        .I2(trn_rd[27]),
        .O(p_1_in[123]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[124]_i_1 
       (.I0(trn_rd_prev[124]),
        .I1(data_prev),
        .I2(trn_rd[28]),
        .O(p_1_in[124]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[125]_i_1 
       (.I0(trn_rd_prev[125]),
        .I1(data_prev),
        .I2(trn_rd[29]),
        .O(p_1_in[125]));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[126]_i_1 
       (.I0(trn_rd_prev[126]),
        .I1(data_prev),
        .I2(trn_rd[30]),
        .O(p_1_in[126]));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[127]_i_1 
       (.I0(trn_rd_prev[127]),
        .I1(data_prev),
        .I2(trn_rd[31]),
        .O(p_1_in[127]));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[12]_i_1 
       (.I0(trn_rd_prev[12]),
        .I1(data_prev),
        .I2(trn_rd[108]),
        .O(p_1_in[12]));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[13]_i_1 
       (.I0(trn_rd_prev[13]),
        .I1(data_prev),
        .I2(trn_rd[109]),
        .O(p_1_in[13]));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[14]_INST_0 
       (.I0(m_axis_rx_tdata_mux[14]),
        .I1(m_axis_rx_tvalid_0),
        .O(m_axis_rx_tdata[0]));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[14]_i_1 
       (.I0(trn_rd_prev[14]),
        .I1(data_prev),
        .I2(trn_rd[110]),
        .O(p_1_in[14]));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[15]_i_1 
       (.I0(trn_rd_prev[15]),
        .I1(data_prev),
        .I2(trn_rd[111]),
        .O(p_1_in[15]));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[16]_i_1 
       (.I0(trn_rd_prev[16]),
        .I1(data_prev),
        .I2(trn_rd[112]),
        .O(p_1_in[16]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[17]_i_1 
       (.I0(trn_rd_prev[17]),
        .I1(data_prev),
        .I2(trn_rd[113]),
        .O(p_1_in[17]));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[18]_i_1 
       (.I0(trn_rd_prev[18]),
        .I1(data_prev),
        .I2(trn_rd[114]),
        .O(p_1_in[18]));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[19]_i_1 
       (.I0(trn_rd_prev[19]),
        .I1(data_prev),
        .I2(trn_rd[115]),
        .O(p_1_in[19]));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[1]_i_1 
       (.I0(trn_rd_prev[1]),
        .I1(data_prev),
        .I2(trn_rd[97]),
        .O(p_1_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[20]_i_1 
       (.I0(trn_rd_prev[20]),
        .I1(data_prev),
        .I2(trn_rd[116]),
        .O(p_1_in[20]));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[21]_i_1 
       (.I0(trn_rd_prev[21]),
        .I1(data_prev),
        .I2(trn_rd[117]),
        .O(p_1_in[21]));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[22]_i_1 
       (.I0(trn_rd_prev[22]),
        .I1(data_prev),
        .I2(trn_rd[118]),
        .O(p_1_in[22]));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[23]_i_1 
       (.I0(trn_rd_prev[23]),
        .I1(data_prev),
        .I2(trn_rd[119]),
        .O(p_1_in[23]));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[24]_i_1 
       (.I0(trn_rd_prev[24]),
        .I1(data_prev),
        .I2(trn_rd[120]),
        .O(p_1_in[24]));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[25]_i_1 
       (.I0(trn_rd_prev[25]),
        .I1(data_prev),
        .I2(trn_rd[121]),
        .O(p_1_in[25]));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[26]_i_1 
       (.I0(trn_rd_prev[26]),
        .I1(data_prev),
        .I2(trn_rd[122]),
        .O(p_1_in[26]));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[27]_i_1 
       (.I0(trn_rd_prev[27]),
        .I1(data_prev),
        .I2(trn_rd[123]),
        .O(p_1_in[27]));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[28]_i_1 
       (.I0(trn_rd_prev[28]),
        .I1(data_prev),
        .I2(trn_rd[124]),
        .O(p_1_in[28]));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[29]_i_1 
       (.I0(trn_rd_prev[29]),
        .I1(data_prev),
        .I2(trn_rd[125]),
        .O(p_1_in[29]));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[2]_i_1 
       (.I0(trn_rd_prev[2]),
        .I1(data_prev),
        .I2(trn_rd[98]),
        .O(p_1_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[30]_i_1 
       (.I0(trn_rd_prev[30]),
        .I1(data_prev),
        .I2(trn_rd[126]),
        .O(p_1_in[30]));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[31]_i_1 
       (.I0(trn_rd_prev[31]),
        .I1(data_prev),
        .I2(trn_rd[127]),
        .O(p_1_in[31]));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[32]_i_1 
       (.I0(trn_rd_prev[32]),
        .I1(data_prev),
        .I2(trn_rd[64]),
        .O(p_1_in[32]));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[33]_i_1 
       (.I0(trn_rd_prev[33]),
        .I1(data_prev),
        .I2(trn_rd[65]),
        .O(p_1_in[33]));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[34]_i_1 
       (.I0(trn_rd_prev[34]),
        .I1(data_prev),
        .I2(trn_rd[66]),
        .O(p_1_in[34]));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[35]_i_1 
       (.I0(trn_rd_prev[35]),
        .I1(data_prev),
        .I2(trn_rd[67]),
        .O(p_1_in[35]));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[36]_i_1 
       (.I0(trn_rd_prev[36]),
        .I1(data_prev),
        .I2(trn_rd[68]),
        .O(p_1_in[36]));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[37]_i_1 
       (.I0(trn_rd_prev[37]),
        .I1(data_prev),
        .I2(trn_rd[69]),
        .O(p_1_in[37]));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[38]_i_1 
       (.I0(trn_rd_prev[38]),
        .I1(data_prev),
        .I2(trn_rd[70]),
        .O(p_1_in[38]));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[39]_i_1 
       (.I0(trn_rd_prev[39]),
        .I1(data_prev),
        .I2(trn_rd[71]),
        .O(p_1_in[39]));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[3]_i_1 
       (.I0(trn_rd_prev[3]),
        .I1(data_prev),
        .I2(trn_rd[99]),
        .O(p_1_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[40]_i_1 
       (.I0(trn_rd_prev[40]),
        .I1(data_prev),
        .I2(trn_rd[72]),
        .O(p_1_in[40]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[41]_i_1 
       (.I0(trn_rd_prev[41]),
        .I1(data_prev),
        .I2(trn_rd[73]),
        .O(p_1_in[41]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[42]_i_1 
       (.I0(trn_rd_prev[42]),
        .I1(data_prev),
        .I2(trn_rd[74]),
        .O(p_1_in[42]));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[43]_i_1 
       (.I0(trn_rd_prev[43]),
        .I1(data_prev),
        .I2(trn_rd[75]),
        .O(p_1_in[43]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[44]_i_1 
       (.I0(trn_rd_prev[44]),
        .I1(data_prev),
        .I2(trn_rd[76]),
        .O(p_1_in[44]));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[45]_i_1 
       (.I0(trn_rd_prev[45]),
        .I1(data_prev),
        .I2(trn_rd[77]),
        .O(p_1_in[45]));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[46]_i_1 
       (.I0(trn_rd_prev[46]),
        .I1(data_prev),
        .I2(trn_rd[78]),
        .O(p_1_in[46]));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[47]_i_1 
       (.I0(trn_rd_prev[47]),
        .I1(data_prev),
        .I2(trn_rd[79]),
        .O(p_1_in[47]));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[48]_i_1 
       (.I0(trn_rd_prev[48]),
        .I1(data_prev),
        .I2(trn_rd[80]),
        .O(p_1_in[48]));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[49]_i_1 
       (.I0(trn_rd_prev[49]),
        .I1(data_prev),
        .I2(trn_rd[81]),
        .O(p_1_in[49]));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[4]_i_1 
       (.I0(trn_rd_prev[4]),
        .I1(data_prev),
        .I2(trn_rd[100]),
        .O(p_1_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[50]_i_1 
       (.I0(trn_rd_prev[50]),
        .I1(data_prev),
        .I2(trn_rd[82]),
        .O(p_1_in[50]));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[51]_i_1 
       (.I0(trn_rd_prev[51]),
        .I1(data_prev),
        .I2(trn_rd[83]),
        .O(p_1_in[51]));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[52]_i_1 
       (.I0(trn_rd_prev[52]),
        .I1(data_prev),
        .I2(trn_rd[84]),
        .O(p_1_in[52]));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[53]_i_1 
       (.I0(trn_rd_prev[53]),
        .I1(data_prev),
        .I2(trn_rd[85]),
        .O(p_1_in[53]));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[54]_i_1 
       (.I0(trn_rd_prev[54]),
        .I1(data_prev),
        .I2(trn_rd[86]),
        .O(p_1_in[54]));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[55]_i_1 
       (.I0(trn_rd_prev[55]),
        .I1(data_prev),
        .I2(trn_rd[87]),
        .O(p_1_in[55]));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[56]_i_1 
       (.I0(trn_rd_prev[56]),
        .I1(data_prev),
        .I2(trn_rd[88]),
        .O(p_1_in[56]));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[57]_i_1 
       (.I0(trn_rd_prev[57]),
        .I1(data_prev),
        .I2(trn_rd[89]),
        .O(p_1_in[57]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[58]_i_1 
       (.I0(trn_rd_prev[58]),
        .I1(data_prev),
        .I2(trn_rd[90]),
        .O(p_1_in[58]));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[59]_i_1 
       (.I0(trn_rd_prev[59]),
        .I1(data_prev),
        .I2(trn_rd[91]),
        .O(p_1_in[59]));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[5]_i_1 
       (.I0(trn_rd_prev[5]),
        .I1(data_prev),
        .I2(trn_rd[101]),
        .O(p_1_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[60]_i_1 
       (.I0(trn_rd_prev[60]),
        .I1(data_prev),
        .I2(trn_rd[92]),
        .O(p_1_in[60]));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[61]_i_1 
       (.I0(trn_rd_prev[61]),
        .I1(data_prev),
        .I2(trn_rd[93]),
        .O(p_1_in[61]));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[62]_i_1 
       (.I0(trn_rd_prev[62]),
        .I1(data_prev),
        .I2(trn_rd[94]),
        .O(p_1_in[62]));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[63]_i_1 
       (.I0(trn_rd_prev[63]),
        .I1(data_prev),
        .I2(trn_rd[95]),
        .O(p_1_in[63]));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[64]_i_1 
       (.I0(trn_rd_prev[64]),
        .I1(data_prev),
        .I2(trn_rd[32]),
        .O(p_1_in[64]));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[65]_i_1 
       (.I0(trn_rd_prev[65]),
        .I1(data_prev),
        .I2(trn_rd[33]),
        .O(p_1_in[65]));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[66]_i_1 
       (.I0(trn_rd_prev[66]),
        .I1(data_prev),
        .I2(trn_rd[34]),
        .O(p_1_in[66]));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[67]_i_1 
       (.I0(trn_rd_prev[67]),
        .I1(data_prev),
        .I2(trn_rd[35]),
        .O(p_1_in[67]));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[68]_i_1 
       (.I0(trn_rd_prev[68]),
        .I1(data_prev),
        .I2(trn_rd[36]),
        .O(p_1_in[68]));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[69]_i_1 
       (.I0(trn_rd_prev[69]),
        .I1(data_prev),
        .I2(trn_rd[37]),
        .O(p_1_in[69]));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[6]_i_1 
       (.I0(trn_rd_prev[6]),
        .I1(data_prev),
        .I2(trn_rd[102]),
        .O(p_1_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[70]_i_1 
       (.I0(trn_rd_prev[70]),
        .I1(data_prev),
        .I2(trn_rd[38]),
        .O(p_1_in[70]));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[71]_i_1 
       (.I0(trn_rd_prev[71]),
        .I1(data_prev),
        .I2(trn_rd[39]),
        .O(p_1_in[71]));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[72]_i_1 
       (.I0(trn_rd_prev[72]),
        .I1(data_prev),
        .I2(trn_rd[40]),
        .O(p_1_in[72]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[73]_i_1 
       (.I0(trn_rd_prev[73]),
        .I1(data_prev),
        .I2(trn_rd[41]),
        .O(p_1_in[73]));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[74]_i_1 
       (.I0(trn_rd_prev[74]),
        .I1(data_prev),
        .I2(trn_rd[42]),
        .O(p_1_in[74]));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[75]_i_1 
       (.I0(trn_rd_prev[75]),
        .I1(data_prev),
        .I2(trn_rd[43]),
        .O(p_1_in[75]));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[76]_i_1 
       (.I0(trn_rd_prev[76]),
        .I1(data_prev),
        .I2(trn_rd[44]),
        .O(p_1_in[76]));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[77]_i_1 
       (.I0(trn_rd_prev[77]),
        .I1(data_prev),
        .I2(trn_rd[45]),
        .O(p_1_in[77]));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[78]_INST_0 
       (.I0(m_axis_rx_tdata_mux[78]),
        .I1(m_axis_rx_tvalid_0),
        .O(m_axis_rx_tdata[1]));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[78]_i_1 
       (.I0(trn_rd_prev[78]),
        .I1(data_prev),
        .I2(trn_rd[46]),
        .O(p_1_in[78]));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[79]_i_1 
       (.I0(trn_rd_prev[79]),
        .I1(data_prev),
        .I2(trn_rd[47]),
        .O(p_1_in[79]));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[7]_i_1 
       (.I0(trn_rd_prev[7]),
        .I1(data_prev),
        .I2(trn_rd[103]),
        .O(p_1_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[80]_i_1 
       (.I0(trn_rd_prev[80]),
        .I1(data_prev),
        .I2(trn_rd[48]),
        .O(p_1_in[80]));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[81]_i_1 
       (.I0(trn_rd_prev[81]),
        .I1(data_prev),
        .I2(trn_rd[49]),
        .O(p_1_in[81]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[82]_i_1 
       (.I0(trn_rd_prev[82]),
        .I1(data_prev),
        .I2(trn_rd[50]),
        .O(p_1_in[82]));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[83]_i_1 
       (.I0(trn_rd_prev[83]),
        .I1(data_prev),
        .I2(trn_rd[51]),
        .O(p_1_in[83]));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[84]_i_1 
       (.I0(trn_rd_prev[84]),
        .I1(data_prev),
        .I2(trn_rd[52]),
        .O(p_1_in[84]));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[85]_i_1 
       (.I0(trn_rd_prev[85]),
        .I1(data_prev),
        .I2(trn_rd[53]),
        .O(p_1_in[85]));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[86]_i_1 
       (.I0(trn_rd_prev[86]),
        .I1(data_prev),
        .I2(trn_rd[54]),
        .O(p_1_in[86]));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[87]_i_1 
       (.I0(trn_rd_prev[87]),
        .I1(data_prev),
        .I2(trn_rd[55]),
        .O(p_1_in[87]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[88]_i_1 
       (.I0(trn_rd_prev[88]),
        .I1(data_prev),
        .I2(trn_rd[56]),
        .O(p_1_in[88]));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[89]_i_1 
       (.I0(trn_rd_prev[89]),
        .I1(data_prev),
        .I2(trn_rd[57]),
        .O(p_1_in[89]));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[8]_i_1 
       (.I0(trn_rd_prev[8]),
        .I1(data_prev),
        .I2(trn_rd[104]),
        .O(p_1_in[8]));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[90]_i_1 
       (.I0(trn_rd_prev[90]),
        .I1(data_prev),
        .I2(trn_rd[58]),
        .O(p_1_in[90]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[91]_i_1 
       (.I0(trn_rd_prev[91]),
        .I1(data_prev),
        .I2(trn_rd[59]),
        .O(p_1_in[91]));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[92]_i_1 
       (.I0(trn_rd_prev[92]),
        .I1(data_prev),
        .I2(trn_rd[60]),
        .O(p_1_in[92]));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[93]_i_1 
       (.I0(trn_rd_prev[93]),
        .I1(data_prev),
        .I2(trn_rd[61]),
        .O(p_1_in[93]));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[94]_i_1 
       (.I0(trn_rd_prev[94]),
        .I1(data_prev),
        .I2(trn_rd[62]),
        .O(p_1_in[94]));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[95]_i_1 
       (.I0(trn_rd_prev[95]),
        .I1(data_prev),
        .I2(trn_rd[63]),
        .O(p_1_in[95]));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[96]_i_1 
       (.I0(trn_rd_prev[96]),
        .I1(data_prev),
        .I2(trn_rd[0]),
        .O(p_1_in[96]));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[97]_i_1 
       (.I0(trn_rd_prev[97]),
        .I1(data_prev),
        .I2(trn_rd[1]),
        .O(p_1_in[97]));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[98]_i_1 
       (.I0(trn_rd_prev[98]),
        .I1(data_prev),
        .I2(trn_rd[2]),
        .O(p_1_in[98]));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[99]_i_1 
       (.I0(trn_rd_prev[99]),
        .I1(data_prev),
        .I2(trn_rd[3]),
        .O(p_1_in[99]));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[9]_i_1 
       (.I0(trn_rd_prev[9]),
        .I1(data_prev),
        .I2(trn_rd[105]),
        .O(p_1_in[9]));
  FDRE \m_axis_rx_tdata_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[0]),
        .Q(Q[0]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[100] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[100]),
        .Q(Q[98]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[101] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[101]),
        .Q(Q[99]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[102] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[102]),
        .Q(Q[100]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[103] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[103]),
        .Q(Q[101]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[104] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[104]),
        .Q(Q[102]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[105] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[105]),
        .Q(Q[103]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[106] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[106]),
        .Q(Q[104]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[107] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[107]),
        .Q(Q[105]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[108] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[108]),
        .Q(Q[106]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[109] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[109]),
        .Q(Q[107]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[10] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[10]),
        .Q(Q[10]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[110] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[110]),
        .Q(Q[108]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[111] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[111]),
        .Q(Q[109]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[112] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[112]),
        .Q(Q[110]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[113] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[113]),
        .Q(Q[111]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[114] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[114]),
        .Q(Q[112]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[115] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[115]),
        .Q(Q[113]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[116] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[116]),
        .Q(Q[114]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[117] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[117]),
        .Q(Q[115]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[118] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[118]),
        .Q(Q[116]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[119] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[119]),
        .Q(Q[117]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[11] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[11]),
        .Q(Q[11]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[120] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[120]),
        .Q(Q[118]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[121] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[121]),
        .Q(Q[119]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[122] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[122]),
        .Q(Q[120]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[123] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[123]),
        .Q(Q[121]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[124] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[124]),
        .Q(Q[122]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[125] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[125]),
        .Q(Q[123]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[126] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[126]),
        .Q(Q[124]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[127] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[127]),
        .Q(Q[125]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[12] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[12]),
        .Q(Q[12]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[13] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[13]),
        .Q(Q[13]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[14] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[14]),
        .Q(m_axis_rx_tdata_mux[14]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[15] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[15]),
        .Q(Q[14]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[16] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[16]),
        .Q(Q[15]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[17] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[17]),
        .Q(Q[16]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[18] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[18]),
        .Q(Q[17]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[19] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[19]),
        .Q(Q[18]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[1]),
        .Q(Q[1]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[20] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[20]),
        .Q(Q[19]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[21] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[21]),
        .Q(Q[20]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[22] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[22]),
        .Q(Q[21]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[23] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[23]),
        .Q(Q[22]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[24] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[24]),
        .Q(Q[23]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[25] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[25]),
        .Q(Q[24]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[26] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[26]),
        .Q(Q[25]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[27] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[27]),
        .Q(Q[26]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[28] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[28]),
        .Q(Q[27]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[29] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[29]),
        .Q(Q[28]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[2] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[2]),
        .Q(Q[2]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[30] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[30]),
        .Q(Q[29]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[31] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[31]),
        .Q(Q[30]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[32] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[32]),
        .Q(Q[31]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[33] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[33]),
        .Q(Q[32]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[34] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[34]),
        .Q(Q[33]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[35] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[35]),
        .Q(Q[34]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[36] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[36]),
        .Q(Q[35]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[37] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[37]),
        .Q(Q[36]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[38] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[38]),
        .Q(Q[37]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[39] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[39]),
        .Q(Q[38]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[3] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[3]),
        .Q(Q[3]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[40] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[40]),
        .Q(Q[39]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[41] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[41]),
        .Q(Q[40]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[42] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[42]),
        .Q(Q[41]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[43] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[43]),
        .Q(Q[42]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[44] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[44]),
        .Q(Q[43]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[45] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[45]),
        .Q(Q[44]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[46] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[46]),
        .Q(Q[45]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[47] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[47]),
        .Q(Q[46]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[48] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[48]),
        .Q(Q[47]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[49] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[49]),
        .Q(Q[48]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[4] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[4]),
        .Q(Q[4]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[50] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[50]),
        .Q(Q[49]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[51] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[51]),
        .Q(Q[50]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[52] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[52]),
        .Q(Q[51]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[53] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[53]),
        .Q(Q[52]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[54] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[54]),
        .Q(Q[53]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[55] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[55]),
        .Q(Q[54]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[56] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[56]),
        .Q(Q[55]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[57] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[57]),
        .Q(Q[56]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[58] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[58]),
        .Q(Q[57]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[59] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[59]),
        .Q(Q[58]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[5] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[5]),
        .Q(Q[5]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[60] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[60]),
        .Q(Q[59]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[61] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[61]),
        .Q(Q[60]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[62] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[62]),
        .Q(Q[61]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[63] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[63]),
        .Q(Q[62]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[64] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[64]),
        .Q(Q[63]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[65] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[65]),
        .Q(Q[64]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[66] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[66]),
        .Q(Q[65]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[67] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[67]),
        .Q(Q[66]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[68] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[68]),
        .Q(Q[67]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[69] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[69]),
        .Q(Q[68]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[6] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[6]),
        .Q(Q[6]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[70] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[70]),
        .Q(Q[69]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[71] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[71]),
        .Q(Q[70]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[72] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[72]),
        .Q(Q[71]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[73] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[73]),
        .Q(Q[72]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[74] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[74]),
        .Q(Q[73]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[75] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[75]),
        .Q(Q[74]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[76] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[76]),
        .Q(Q[75]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[77] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[77]),
        .Q(Q[76]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[78] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[78]),
        .Q(m_axis_rx_tdata_mux[78]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[79] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[79]),
        .Q(Q[77]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[7] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[7]),
        .Q(Q[7]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[80] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[80]),
        .Q(Q[78]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[81] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[81]),
        .Q(Q[79]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[82] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[82]),
        .Q(Q[80]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[83] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[83]),
        .Q(Q[81]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[84] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[84]),
        .Q(Q[82]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[85] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[85]),
        .Q(Q[83]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[86] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[86]),
        .Q(Q[84]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[87] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[87]),
        .Q(Q[85]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[88] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[88]),
        .Q(Q[86]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[89] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[89]),
        .Q(Q[87]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[8] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[8]),
        .Q(Q[8]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[90] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[90]),
        .Q(Q[88]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[91] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[91]),
        .Q(Q[89]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[92] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[92]),
        .Q(Q[90]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[93] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[93]),
        .Q(Q[91]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[94] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[94]),
        .Q(Q[92]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[95] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[95]),
        .Q(Q[93]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[96] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[96]),
        .Q(Q[94]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[97] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[97]),
        .Q(Q[95]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[98] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[98]),
        .Q(Q[96]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[99] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[99]),
        .Q(Q[97]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[9] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(p_1_in[9]),
        .Q(Q[9]),
        .R(SR));
  LUT5 #(
    .INIT(32'h000000CA)) 
    \m_axis_rx_tuser[0]_i_1 
       (.I0(trn_recrc_err),
        .I1(trn_recrc_err_prev),
        .I2(data_prev),
        .I3(SR),
        .I4(null_mux_sel),
        .O(\m_axis_rx_tuser[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tuser[13]_INST_0 
       (.I0(m_axis_rx_tuser_mux),
        .I1(\m_axis_rx_tuser[14] ),
        .O(m_axis_rx_tuser[0]));
  LUT6 #(
    .INIT(64'h00080008AA080008)) 
    \m_axis_rx_tuser[13]_i_1 
       (.I0(\m_axis_rx_tuser[21]_i_3_n_0 ),
        .I1(trn_rsof),
        .I2(trn_rrem[1]),
        .I3(data_prev),
        .I4(trn_rsof_prev),
        .I5(trn_rrem_prev[1]),
        .O(\m_axis_rx_tuser[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tuser[14]_INST_0 
       (.I0(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I1(\m_axis_rx_tuser[14] ),
        .O(m_axis_rx_tuser[1]));
  LUT6 #(
    .INIT(64'h0020AA2000200020)) 
    \m_axis_rx_tuser[14]_i_1 
       (.I0(\m_axis_rx_tuser[21]_i_3_n_0 ),
        .I1(trn_rsrc_dsc),
        .I2(trn_rsof),
        .I3(data_prev),
        .I4(trn_rsrc_dsc_prev),
        .I5(trn_rsof_prev),
        .O(\m_axis_rx_tuser[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hB800FFFFB800B800)) 
    \m_axis_rx_tuser[19]_i_1 
       (.I0(trn_rrem_prev[0]),
        .I1(data_prev),
        .I2(trn_rrem[0]),
        .I3(\m_axis_rx_tuser[21]_i_3_n_0 ),
        .I4(\m_axis_rx_tuser_reg[19]_0 ),
        .I5(\m_axis_rx_tuser_reg[21]_2 ),
        .O(\m_axis_rx_tuser[19]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h000000B8)) 
    \m_axis_rx_tuser[1]_i_1 
       (.I0(trn_rerrfwd_prev),
        .I1(data_prev),
        .I2(trn_rerrfwd),
        .I3(SR),
        .I4(null_mux_sel),
        .O(\m_axis_rx_tuser[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hB800FFFFB800B800)) 
    \m_axis_rx_tuser[20]_i_1 
       (.I0(trn_rrem_prev[1]),
        .I1(data_prev),
        .I2(trn_rrem[1]),
        .I3(\m_axis_rx_tuser[21]_i_3_n_0 ),
        .I4(\m_axis_rx_tuser_reg[20]_0 ),
        .I5(\m_axis_rx_tuser_reg[21]_2 ),
        .O(\m_axis_rx_tuser[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hB800FFFFB800B800)) 
    \m_axis_rx_tuser[21]_i_2 
       (.I0(trn_reof_prev),
        .I1(data_prev),
        .I2(trn_reof),
        .I3(\m_axis_rx_tuser[21]_i_3_n_0 ),
        .I4(\m_axis_rx_tuser_reg[21]_1 ),
        .I5(\m_axis_rx_tuser_reg[21]_2 ),
        .O(\m_axis_rx_tuser[21]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \m_axis_rx_tuser[21]_i_3 
       (.I0(SR),
        .I1(null_mux_sel),
        .O(\m_axis_rx_tuser[21]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h000000CA)) 
    \m_axis_rx_tuser[2]_i_1 
       (.I0(trn_rbar_hit[0]),
        .I1(trn_rbar_hit_prev[0]),
        .I2(data_prev),
        .I3(SR),
        .I4(null_mux_sel),
        .O(\m_axis_rx_tuser[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h000000CA)) 
    \m_axis_rx_tuser[3]_i_1 
       (.I0(trn_rbar_hit[1]),
        .I1(trn_rbar_hit_prev[1]),
        .I2(data_prev),
        .I3(SR),
        .I4(null_mux_sel),
        .O(\m_axis_rx_tuser[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT5 #(
    .INIT(32'h000000B8)) 
    \m_axis_rx_tuser[4]_i_1 
       (.I0(trn_rbar_hit_prev[2]),
        .I1(data_prev),
        .I2(trn_rbar_hit[2]),
        .I3(SR),
        .I4(null_mux_sel),
        .O(\m_axis_rx_tuser[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h000000B8)) 
    \m_axis_rx_tuser[5]_i_1 
       (.I0(trn_rbar_hit_prev[3]),
        .I1(data_prev),
        .I2(trn_rbar_hit[3]),
        .I3(SR),
        .I4(null_mux_sel),
        .O(\m_axis_rx_tuser[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h000000CA)) 
    \m_axis_rx_tuser[6]_i_1 
       (.I0(trn_rbar_hit[4]),
        .I1(trn_rbar_hit_prev[4]),
        .I2(data_prev),
        .I3(SR),
        .I4(null_mux_sel),
        .O(\m_axis_rx_tuser[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT5 #(
    .INIT(32'h000000CA)) 
    \m_axis_rx_tuser[7]_i_1 
       (.I0(trn_rbar_hit[5]),
        .I1(trn_rbar_hit_prev[5]),
        .I2(data_prev),
        .I3(SR),
        .I4(null_mux_sel),
        .O(\m_axis_rx_tuser[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h000000CA)) 
    \m_axis_rx_tuser[8]_i_1 
       (.I0(trn_rbar_hit[6]),
        .I1(trn_rbar_hit_prev[6]),
        .I2(data_prev),
        .I3(SR),
        .I4(null_mux_sel),
        .O(\m_axis_rx_tuser[8]_i_1_n_0 ));
  FDRE \m_axis_rx_tuser_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(\m_axis_rx_tuser_reg[21]_3 ),
        .D(\m_axis_rx_tuser[0]_i_1_n_0 ),
        .Q(\m_axis_rx_tuser_reg[21]_0 [0]),
        .R(1'b0));
  FDRE \m_axis_rx_tuser_reg[13] 
       (.C(pipe_userclk2_in),
        .CE(\m_axis_rx_tuser_reg[21]_3 ),
        .D(\m_axis_rx_tuser[13]_i_1_n_0 ),
        .Q(m_axis_rx_tuser_mux),
        .R(1'b0));
  FDRE \m_axis_rx_tuser_reg[14] 
       (.C(pipe_userclk2_in),
        .CE(\m_axis_rx_tuser_reg[21]_3 ),
        .D(\m_axis_rx_tuser[14]_i_1_n_0 ),
        .Q(\m_axis_rx_tuser_reg[21]_0 [9]),
        .R(1'b0));
  FDRE \m_axis_rx_tuser_reg[18] 
       (.C(pipe_userclk2_in),
        .CE(\m_axis_rx_tuser_reg[21]_3 ),
        .D(user_reset_out_reg),
        .Q(\m_axis_rx_tuser_reg[21]_0 [10]),
        .R(1'b0));
  FDRE \m_axis_rx_tuser_reg[19] 
       (.C(pipe_userclk2_in),
        .CE(\m_axis_rx_tuser_reg[21]_3 ),
        .D(\m_axis_rx_tuser[19]_i_1_n_0 ),
        .Q(\m_axis_rx_tuser_reg[21]_0 [11]),
        .R(1'b0));
  FDRE \m_axis_rx_tuser_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(\m_axis_rx_tuser_reg[21]_3 ),
        .D(\m_axis_rx_tuser[1]_i_1_n_0 ),
        .Q(\m_axis_rx_tuser_reg[21]_0 [1]),
        .R(1'b0));
  FDRE \m_axis_rx_tuser_reg[20] 
       (.C(pipe_userclk2_in),
        .CE(\m_axis_rx_tuser_reg[21]_3 ),
        .D(\m_axis_rx_tuser[20]_i_1_n_0 ),
        .Q(\m_axis_rx_tuser_reg[21]_0 [12]),
        .R(1'b0));
  FDRE \m_axis_rx_tuser_reg[21] 
       (.C(pipe_userclk2_in),
        .CE(\m_axis_rx_tuser_reg[21]_3 ),
        .D(\m_axis_rx_tuser[21]_i_2_n_0 ),
        .Q(\m_axis_rx_tuser_reg[21]_0 [13]),
        .R(1'b0));
  FDRE \m_axis_rx_tuser_reg[2] 
       (.C(pipe_userclk2_in),
        .CE(\m_axis_rx_tuser_reg[21]_3 ),
        .D(\m_axis_rx_tuser[2]_i_1_n_0 ),
        .Q(\m_axis_rx_tuser_reg[21]_0 [2]),
        .R(1'b0));
  FDRE \m_axis_rx_tuser_reg[3] 
       (.C(pipe_userclk2_in),
        .CE(\m_axis_rx_tuser_reg[21]_3 ),
        .D(\m_axis_rx_tuser[3]_i_1_n_0 ),
        .Q(\m_axis_rx_tuser_reg[21]_0 [3]),
        .R(1'b0));
  FDRE \m_axis_rx_tuser_reg[4] 
       (.C(pipe_userclk2_in),
        .CE(\m_axis_rx_tuser_reg[21]_3 ),
        .D(\m_axis_rx_tuser[4]_i_1_n_0 ),
        .Q(\m_axis_rx_tuser_reg[21]_0 [4]),
        .R(1'b0));
  FDRE \m_axis_rx_tuser_reg[5] 
       (.C(pipe_userclk2_in),
        .CE(\m_axis_rx_tuser_reg[21]_3 ),
        .D(\m_axis_rx_tuser[5]_i_1_n_0 ),
        .Q(\m_axis_rx_tuser_reg[21]_0 [5]),
        .R(1'b0));
  FDRE \m_axis_rx_tuser_reg[6] 
       (.C(pipe_userclk2_in),
        .CE(\m_axis_rx_tuser_reg[21]_3 ),
        .D(\m_axis_rx_tuser[6]_i_1_n_0 ),
        .Q(\m_axis_rx_tuser_reg[21]_0 [6]),
        .R(1'b0));
  FDRE \m_axis_rx_tuser_reg[7] 
       (.C(pipe_userclk2_in),
        .CE(\m_axis_rx_tuser_reg[21]_3 ),
        .D(\m_axis_rx_tuser[7]_i_1_n_0 ),
        .Q(\m_axis_rx_tuser_reg[21]_0 [7]),
        .R(1'b0));
  FDRE \m_axis_rx_tuser_reg[8] 
       (.C(pipe_userclk2_in),
        .CE(\m_axis_rx_tuser_reg[21]_3 ),
        .D(\m_axis_rx_tuser[8]_i_1_n_0 ),
        .Q(\m_axis_rx_tuser_reg[21]_0 [8]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT2 #(
    .INIT(4'h8)) 
    m_axis_rx_tvalid_INST_0
       (.I0(m_axis_rx_tvalid_reg_0),
        .I1(m_axis_rx_tvalid_0),
        .O(m_axis_rx_tvalid));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFE2)) 
    m_axis_rx_tvalid_i_2
       (.I0(rsrc_rdy_filtered),
        .I1(data_prev),
        .I2(trn_rsrc_rdy_prev),
        .I3(null_mux_sel),
        .I4(dsc_detect),
        .I5(reg_dsc_detect_reg_0),
        .O(m_axis_rx_tvalid_i_2_n_0));
  FDRE m_axis_rx_tvalid_reg
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(m_axis_rx_tvalid_i_2_n_0),
        .Q(m_axis_rx_tvalid_reg_0),
        .R(SR));
  LUT6 #(
    .INIT(64'hA0CCCCCCA0000000)) 
    new_pkt_len_carry__0_i_1
       (.I0(Q[92]),
        .I1(Q[29]),
        .I2(Q[69]),
        .I3(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I4(m_axis_rx_tuser_mux),
        .I5(Q[6]),
        .O(\m_axis_rx_tdata_reg[94]_0 [3]));
  LUT6 #(
    .INIT(64'hA0CCCCCCA0000000)) 
    new_pkt_len_carry__0_i_2
       (.I0(Q[92]),
        .I1(Q[29]),
        .I2(Q[68]),
        .I3(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I4(m_axis_rx_tuser_mux),
        .I5(Q[5]),
        .O(\m_axis_rx_tdata_reg[94]_0 [2]));
  LUT6 #(
    .INIT(64'hA0CCCCCCA0000000)) 
    new_pkt_len_carry__0_i_3
       (.I0(Q[92]),
        .I1(Q[29]),
        .I2(Q[67]),
        .I3(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I4(m_axis_rx_tuser_mux),
        .I5(Q[4]),
        .O(\m_axis_rx_tdata_reg[94]_0 [1]));
  LUT6 #(
    .INIT(64'hA0CCCCCCA0000000)) 
    new_pkt_len_carry__0_i_4
       (.I0(Q[92]),
        .I1(Q[29]),
        .I2(Q[66]),
        .I3(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I4(m_axis_rx_tuser_mux),
        .I5(Q[3]),
        .O(\m_axis_rx_tdata_reg[94]_0 [0]));
  LUT6 #(
    .INIT(64'hA5CCA533FFFFFFFF)) 
    new_pkt_len_carry__0_i_5
       (.I0(Q[6]),
        .I1(Q[69]),
        .I2(Q[7]),
        .I3(\m_axis_rx_tuser_reg[13]_0 ),
        .I4(Q[70]),
        .I5(\m_axis_rx_tdata_reg[30]_0 ),
        .O(\m_axis_rx_tdata_reg[6]_0 [3]));
  LUT6 #(
    .INIT(64'hA5CCA533FFFFFFFF)) 
    new_pkt_len_carry__0_i_6
       (.I0(Q[5]),
        .I1(Q[68]),
        .I2(Q[6]),
        .I3(\m_axis_rx_tuser_reg[13]_0 ),
        .I4(Q[69]),
        .I5(\m_axis_rx_tdata_reg[30]_0 ),
        .O(\m_axis_rx_tdata_reg[6]_0 [2]));
  LUT6 #(
    .INIT(64'hA5CCA533FFFFFFFF)) 
    new_pkt_len_carry__0_i_7
       (.I0(Q[4]),
        .I1(Q[67]),
        .I2(Q[5]),
        .I3(\m_axis_rx_tuser_reg[13]_0 ),
        .I4(Q[68]),
        .I5(\m_axis_rx_tdata_reg[30]_0 ),
        .O(\m_axis_rx_tdata_reg[6]_0 [1]));
  LUT6 #(
    .INIT(64'hA5CCA533FFFFFFFF)) 
    new_pkt_len_carry__0_i_8
       (.I0(Q[3]),
        .I1(Q[66]),
        .I2(Q[4]),
        .I3(\m_axis_rx_tuser_reg[13]_0 ),
        .I4(Q[67]),
        .I5(\m_axis_rx_tdata_reg[30]_0 ),
        .O(\m_axis_rx_tdata_reg[6]_0 [0]));
  LUT6 #(
    .INIT(64'hA0CCCCCCA0000000)) 
    new_pkt_len_carry__1_i_1
       (.I0(Q[92]),
        .I1(Q[29]),
        .I2(Q[72]),
        .I3(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I4(m_axis_rx_tuser_mux),
        .I5(Q[9]),
        .O(\m_axis_rx_tdata_reg[94]_1 [2]));
  LUT6 #(
    .INIT(64'hA0CCCCCCA0000000)) 
    new_pkt_len_carry__1_i_2
       (.I0(Q[92]),
        .I1(Q[29]),
        .I2(Q[71]),
        .I3(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I4(m_axis_rx_tuser_mux),
        .I5(Q[8]),
        .O(\m_axis_rx_tdata_reg[94]_1 [1]));
  LUT6 #(
    .INIT(64'hA0CCCCCCA0000000)) 
    new_pkt_len_carry__1_i_3
       (.I0(Q[92]),
        .I1(Q[29]),
        .I2(Q[70]),
        .I3(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I4(m_axis_rx_tuser_mux),
        .I5(Q[7]),
        .O(\m_axis_rx_tdata_reg[94]_1 [0]));
  LUT6 #(
    .INIT(64'h15D53FFFD5D5FFFF)) 
    new_pkt_len_carry__1_i_4
       (.I0(Q[9]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[72]),
        .I4(Q[29]),
        .I5(Q[92]),
        .O(\m_axis_rx_tdata_reg[9]_0 [2]));
  LUT6 #(
    .INIT(64'hA5CCA533FFFFFFFF)) 
    new_pkt_len_carry__1_i_5
       (.I0(Q[8]),
        .I1(Q[71]),
        .I2(Q[9]),
        .I3(\m_axis_rx_tuser_reg[13]_0 ),
        .I4(Q[72]),
        .I5(\m_axis_rx_tdata_reg[30]_0 ),
        .O(\m_axis_rx_tdata_reg[9]_0 [1]));
  LUT6 #(
    .INIT(64'hA5CCA533FFFFFFFF)) 
    new_pkt_len_carry__1_i_6
       (.I0(Q[7]),
        .I1(Q[70]),
        .I2(Q[8]),
        .I3(\m_axis_rx_tuser_reg[13]_0 ),
        .I4(Q[71]),
        .I5(\m_axis_rx_tdata_reg[30]_0 ),
        .O(\m_axis_rx_tdata_reg[9]_0 [0]));
  LUT6 #(
    .INIT(64'h15D53FFFD5D5FFFF)) 
    new_pkt_len_carry_i_1
       (.I0(Q[3]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[66]),
        .I4(Q[29]),
        .I5(Q[92]),
        .O(\m_axis_rx_tdata_reg[3]_0 [3]));
  LUT4 #(
    .INIT(16'h0015)) 
    new_pkt_len_carry_i_2
       (.I0(Q[14]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[28]),
        .O(\m_axis_rx_tdata_reg[3]_0 [2]));
  LUT6 #(
    .INIT(64'hC0C0D5D5C000D515)) 
    new_pkt_len_carry_i_3
       (.I0(Q[14]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[77]),
        .I4(Q[28]),
        .I5(Q[91]),
        .O(\m_axis_rx_tdata_reg[3]_0 [1]));
  LUT6 #(
    .INIT(64'hA5CCCCCCA5333333)) 
    new_pkt_len_carry_i_4
       (.I0(Q[77]),
        .I1(Q[14]),
        .I2(Q[91]),
        .I3(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I4(m_axis_rx_tuser_mux),
        .I5(Q[28]),
        .O(\m_axis_rx_tdata_reg[3]_0 [0]));
  LUT6 #(
    .INIT(64'hA0A0C0C0A05FC0C0)) 
    new_pkt_len_carry_i_5
       (.I0(Q[3]),
        .I1(Q[66]),
        .I2(\m_axis_rx_tdata_reg[30]_0 ),
        .I3(Q[28]),
        .I4(\m_axis_rx_tuser_reg[13]_0 ),
        .I5(Q[14]),
        .O(\m_axis_rx_tdata_reg[3]_1 [3]));
  LUT6 #(
    .INIT(64'hE1FFE10011001100)) 
    new_pkt_len_carry_i_6
       (.I0(Q[28]),
        .I1(Q[14]),
        .I2(Q[2]),
        .I3(\m_axis_rx_tuser_reg[13]_0 ),
        .I4(Q[65]),
        .I5(\m_axis_rx_tdata_reg[30]_0 ),
        .O(\m_axis_rx_tdata_reg[3]_1 [2]));
  LUT6 #(
    .INIT(64'h656AA5AA6A6AAAAA)) 
    new_pkt_len_carry_i_7
       (.I0(\m_axis_rx_tdata_reg[3]_0 [1]),
        .I1(Q[1]),
        .I2(\m_axis_rx_tuser_reg[13]_0 ),
        .I3(Q[64]),
        .I4(Q[29]),
        .I5(Q[92]),
        .O(\m_axis_rx_tdata_reg[3]_1 [1]));
  LUT6 #(
    .INIT(64'h665AAA5A66AAAAAA)) 
    new_pkt_len_carry_i_8
       (.I0(\m_axis_rx_tdata_reg[3]_0 [0]),
        .I1(Q[0]),
        .I2(Q[63]),
        .I3(\m_axis_rx_tuser_reg[13]_0 ),
        .I4(Q[29]),
        .I5(Q[92]),
        .O(\m_axis_rx_tdata_reg[3]_1 [0]));
  LUT6 #(
    .INIT(64'hB8FFB8FFB8FF0000)) 
    null_mux_sel_i_2
       (.I0(m_axis_rx_tready),
        .I1(m_axis_rx_tvalid_0),
        .I2(m_axis_rx_tready_cpler),
        .I3(m_axis_rx_tvalid_reg_0),
        .I4(dsc_detect),
        .I5(reg_dsc_detect_reg_0),
        .O(m_axis_rx_tready_0));
  FDRE null_mux_sel_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(null_mux_sel_reg_0),
        .Q(null_mux_sel),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT4 #(
    .INIT(16'h2F20)) 
    \pio_rx_sm_128.req_addr[2]_i_1 
       (.I0(Q[2]),
        .I1(\pio_rx_sm_128.req_addr_reg[2] [2]),
        .I2(\pio_rx_sm_128.req_addr_reg[2] [0]),
        .I3(Q[65]),
        .O(\m_axis_rx_tdata_reg[6]_1 [0]));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT4 #(
    .INIT(16'h2F20)) 
    \pio_rx_sm_128.req_addr[3]_i_1 
       (.I0(Q[3]),
        .I1(\pio_rx_sm_128.req_addr_reg[2] [2]),
        .I2(\pio_rx_sm_128.req_addr_reg[2] [0]),
        .I3(Q[66]),
        .O(\m_axis_rx_tdata_reg[6]_1 [1]));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT4 #(
    .INIT(16'h2F20)) 
    \pio_rx_sm_128.req_addr[4]_i_1 
       (.I0(Q[4]),
        .I1(\pio_rx_sm_128.req_addr_reg[2] [2]),
        .I2(\pio_rx_sm_128.req_addr_reg[2] [0]),
        .I3(Q[67]),
        .O(\m_axis_rx_tdata_reg[6]_1 [2]));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT4 #(
    .INIT(16'h2F20)) 
    \pio_rx_sm_128.req_addr[5]_i_1 
       (.I0(Q[5]),
        .I1(\pio_rx_sm_128.req_addr_reg[2] [2]),
        .I2(\pio_rx_sm_128.req_addr_reg[2] [0]),
        .I3(Q[68]),
        .O(\m_axis_rx_tdata_reg[6]_1 [3]));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT4 #(
    .INIT(16'h2F20)) 
    \pio_rx_sm_128.req_addr[6]_i_2 
       (.I0(Q[6]),
        .I1(\pio_rx_sm_128.req_addr_reg[2] [2]),
        .I2(\pio_rx_sm_128.req_addr_reg[2] [0]),
        .I3(Q[69]),
        .O(\m_axis_rx_tdata_reg[6]_1 [4]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_attr[0]_i_1 
       (.I0(Q[12]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[75]),
        .O(\m_axis_rx_tdata_reg[13]_0 [0]));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT5 #(
    .INIT(32'hBABBAAAA)) 
    \pio_rx_sm_128.req_attr[1]_i_1 
       (.I0(\pio_rx_sm_128.req_compl_i_2_n_0 ),
        .I1(\pio_rx_sm_128.req_td_reg ),
        .I2(Q[87]),
        .I3(Q[92]),
        .I4(\pio_rx_sm_128.req_attr[1]_i_4_n_0 ),
        .O(\m_axis_rx_tdata_reg[89]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_attr[1]_i_2 
       (.I0(Q[13]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[76]),
        .O(\m_axis_rx_tdata_reg[13]_0 [1]));
  LUT5 #(
    .INIT(32'h2000A000)) 
    \pio_rx_sm_128.req_attr[1]_i_4 
       (.I0(\pio_rx_sm_128.req_attr[1]_i_5_n_0 ),
        .I1(Q[87]),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(m_axis_rx_tuser_mux),
        .I4(Q[91]),
        .O(\pio_rx_sm_128.req_attr[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    \pio_rx_sm_128.req_attr[1]_i_5 
       (.I0(\pio_rx_sm_128.req_attr[1]_i_6_n_0 ),
        .I1(Q[90]),
        .I2(Q[89]),
        .I3(Q[63]),
        .I4(Q[64]),
        .I5(\pio_rx_sm_128.req_attr[1]_i_7_n_0 ),
        .O(\pio_rx_sm_128.req_attr[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \pio_rx_sm_128.req_attr[1]_i_6 
       (.I0(Q[86]),
        .I1(Q[88]),
        .I2(Q[71]),
        .I3(Q[72]),
        .I4(Q[67]),
        .I5(Q[70]),
        .O(\pio_rx_sm_128.req_attr[1]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \pio_rx_sm_128.req_attr[1]_i_7 
       (.I0(Q[69]),
        .I1(Q[65]),
        .I2(Q[68]),
        .I3(Q[66]),
        .O(\pio_rx_sm_128.req_attr[1]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_be[0]_i_1 
       (.I0(Q[31]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[94]),
        .O(\m_axis_rx_tdata_reg[35]_0 [0]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_be[1]_i_1 
       (.I0(Q[32]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[95]),
        .O(\m_axis_rx_tdata_reg[35]_0 [1]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_be[2]_i_1 
       (.I0(Q[33]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[96]),
        .O(\m_axis_rx_tdata_reg[35]_0 [2]));
  LUT2 #(
    .INIT(4'hE)) 
    \pio_rx_sm_128.req_be[3]_i_1 
       (.I0(\m_axis_rx_tdata_reg[30]_2 ),
        .I1(\FSM_sequential_pio_rx_sm_128.state[0]_i_2_n_0 ),
        .O(\m_axis_rx_tdata_reg[30]_1 ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_be[3]_i_2 
       (.I0(Q[34]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[97]),
        .O(\m_axis_rx_tdata_reg[35]_0 [3]));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \pio_rx_sm_128.req_be[3]_i_3 
       (.I0(\pio_rx_sm_128.req_compl_i_3_n_0 ),
        .I1(\pio_rx_sm_128.req_td_reg ),
        .I2(\pio_rx_sm_128.req_compl_i_4_n_0 ),
        .I3(Q[29]),
        .O(\m_axis_rx_tdata_reg[30]_2 ));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT4 #(
    .INIT(16'hAAEA)) 
    \pio_rx_sm_128.req_compl_i_1 
       (.I0(\pio_rx_sm_128.req_compl_i_2_n_0 ),
        .I1(\pio_rx_sm_128.req_addr_reg[2] [0]),
        .I2(m_axis_rx_tvalid_reg_0),
        .I3(\pio_rx_sm_128.req_addr_reg[2] [2]),
        .O(\FSM_sequential_pio_rx_sm_128.state_reg[0] ));
  LUT6 #(
    .INIT(64'h0000000010100010)) 
    \pio_rx_sm_128.req_compl_i_2 
       (.I0(\pio_rx_sm_128.req_compl_i_3_n_0 ),
        .I1(\pio_rx_sm_128.req_td_reg ),
        .I2(\m_axis_rx_tuser_reg[13]_0 ),
        .I3(Q[29]),
        .I4(Q[24]),
        .I5(\pio_rx_sm_128.req_compl_i_4_n_0 ),
        .O(\pio_rx_sm_128.req_compl_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \pio_rx_sm_128.req_compl_i_3 
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(Q[8]),
        .I4(\pio_rx_sm_128.req_compl_i_5_n_0 ),
        .O(\pio_rx_sm_128.req_compl_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \pio_rx_sm_128.req_compl_i_4 
       (.I0(Q[28]),
        .I1(Q[24]),
        .I2(\FSM_sequential_pio_rx_sm_128.state[0]_i_5_n_0 ),
        .O(\pio_rx_sm_128.req_compl_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
    \pio_rx_sm_128.req_compl_i_5 
       (.I0(Q[9]),
        .I1(Q[4]),
        .I2(Q[6]),
        .I3(Q[0]),
        .I4(Q[7]),
        .I5(Q[1]),
        .O(\pio_rx_sm_128.req_compl_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hDFFFFFFFFFFFFFFF)) 
    \pio_rx_sm_128.req_compl_wd_i_2 
       (.I0(\FSM_sequential_pio_rx_sm_128.state[0]_i_4_n_0 ),
        .I1(Q[28]),
        .I2(Q[24]),
        .I3(Q[29]),
        .I4(m_axis_rx_tvalid_reg_0),
        .I5(m_axis_rx_tready_cpler),
        .O(\m_axis_rx_tdata_reg[29]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_ep_i_1 
       (.I0(m_axis_rx_tdata_mux[14]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(m_axis_rx_tdata_mux[78]),
        .O(\m_axis_rx_tdata_reg[14]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT3 #(
    .INIT(8'hD8)) 
    \pio_rx_sm_128.req_len[0]_i_1 
       (.I0(m_axis_rx_tuser_mux),
        .I1(Q[63]),
        .I2(Q[0]),
        .O(\m_axis_rx_tdata_reg[9]_1 [0]));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \pio_rx_sm_128.req_len[1]_i_1 
       (.I0(Q[1]),
        .I1(m_axis_rx_tuser_mux),
        .I2(Q[64]),
        .O(\m_axis_rx_tdata_reg[9]_1 [1]));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \pio_rx_sm_128.req_len[2]_i_1 
       (.I0(Q[2]),
        .I1(m_axis_rx_tuser_mux),
        .I2(Q[65]),
        .O(\m_axis_rx_tdata_reg[9]_1 [2]));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \pio_rx_sm_128.req_len[3]_i_1 
       (.I0(Q[3]),
        .I1(m_axis_rx_tuser_mux),
        .I2(Q[66]),
        .O(\m_axis_rx_tdata_reg[9]_1 [3]));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \pio_rx_sm_128.req_len[4]_i_1 
       (.I0(Q[4]),
        .I1(m_axis_rx_tuser_mux),
        .I2(Q[67]),
        .O(\m_axis_rx_tdata_reg[9]_1 [4]));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \pio_rx_sm_128.req_len[5]_i_1 
       (.I0(Q[5]),
        .I1(m_axis_rx_tuser_mux),
        .I2(Q[68]),
        .O(\m_axis_rx_tdata_reg[9]_1 [5]));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \pio_rx_sm_128.req_len[6]_i_1 
       (.I0(Q[6]),
        .I1(m_axis_rx_tuser_mux),
        .I2(Q[69]),
        .O(\m_axis_rx_tdata_reg[9]_1 [6]));
  LUT3 #(
    .INIT(8'hE2)) 
    \pio_rx_sm_128.req_len[7]_i_1 
       (.I0(Q[7]),
        .I1(m_axis_rx_tuser_mux),
        .I2(Q[70]),
        .O(\m_axis_rx_tdata_reg[9]_1 [7]));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \pio_rx_sm_128.req_len[8]_i_1 
       (.I0(Q[8]),
        .I1(m_axis_rx_tuser_mux),
        .I2(Q[71]),
        .O(\m_axis_rx_tdata_reg[9]_1 [8]));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \pio_rx_sm_128.req_len[9]_i_1 
       (.I0(Q[9]),
        .I1(m_axis_rx_tuser_mux),
        .I2(Q[72]),
        .O(\m_axis_rx_tdata_reg[9]_1 [9]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_rid[0]_i_1 
       (.I0(Q[47]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[110]),
        .O(\m_axis_rx_tdata_reg[63]_0 [0]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_rid[10]_i_1 
       (.I0(Q[57]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[120]),
        .O(\m_axis_rx_tdata_reg[63]_0 [10]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_rid[11]_i_1 
       (.I0(Q[58]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[121]),
        .O(\m_axis_rx_tdata_reg[63]_0 [11]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_rid[12]_i_1 
       (.I0(Q[59]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[122]),
        .O(\m_axis_rx_tdata_reg[63]_0 [12]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_rid[13]_i_1 
       (.I0(Q[60]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[123]),
        .O(\m_axis_rx_tdata_reg[63]_0 [13]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_rid[14]_i_1 
       (.I0(Q[61]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[124]),
        .O(\m_axis_rx_tdata_reg[63]_0 [14]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_rid[15]_i_1 
       (.I0(Q[62]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[125]),
        .O(\m_axis_rx_tdata_reg[63]_0 [15]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_rid[1]_i_1 
       (.I0(Q[48]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[111]),
        .O(\m_axis_rx_tdata_reg[63]_0 [1]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_rid[2]_i_1 
       (.I0(Q[49]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[112]),
        .O(\m_axis_rx_tdata_reg[63]_0 [2]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_rid[3]_i_1 
       (.I0(Q[50]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[113]),
        .O(\m_axis_rx_tdata_reg[63]_0 [3]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_rid[4]_i_1 
       (.I0(Q[51]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[114]),
        .O(\m_axis_rx_tdata_reg[63]_0 [4]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_rid[5]_i_1 
       (.I0(Q[52]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[115]),
        .O(\m_axis_rx_tdata_reg[63]_0 [5]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_rid[6]_i_1 
       (.I0(Q[53]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[116]),
        .O(\m_axis_rx_tdata_reg[63]_0 [6]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_rid[7]_i_1 
       (.I0(Q[54]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[117]),
        .O(\m_axis_rx_tdata_reg[63]_0 [7]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_rid[8]_i_1 
       (.I0(Q[55]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[118]),
        .O(\m_axis_rx_tdata_reg[63]_0 [8]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_rid[9]_i_1 
       (.I0(Q[56]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[119]),
        .O(\m_axis_rx_tdata_reg[63]_0 [9]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_tag[0]_i_1 
       (.I0(Q[39]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[102]),
        .O(\m_axis_rx_tdata_reg[47]_0 [0]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_tag[1]_i_1 
       (.I0(Q[40]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[103]),
        .O(\m_axis_rx_tdata_reg[47]_0 [1]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_tag[2]_i_1 
       (.I0(Q[41]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[104]),
        .O(\m_axis_rx_tdata_reg[47]_0 [2]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_tag[3]_i_1 
       (.I0(Q[42]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[105]),
        .O(\m_axis_rx_tdata_reg[47]_0 [3]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_tag[4]_i_1 
       (.I0(Q[43]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[106]),
        .O(\m_axis_rx_tdata_reg[47]_0 [4]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_tag[5]_i_1 
       (.I0(Q[44]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[107]),
        .O(\m_axis_rx_tdata_reg[47]_0 [5]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_tag[6]_i_1 
       (.I0(Q[45]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[108]),
        .O(\m_axis_rx_tdata_reg[47]_0 [6]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_tag[7]_i_1 
       (.I0(Q[46]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[109]),
        .O(\m_axis_rx_tdata_reg[47]_0 [7]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_tc[0]_i_1 
       (.I0(Q[19]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[82]),
        .O(\m_axis_rx_tdata_reg[22]_0 [0]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_tc[1]_i_1 
       (.I0(Q[20]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[83]),
        .O(\m_axis_rx_tdata_reg[22]_0 [1]));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_tc[2]_i_1 
       (.I0(Q[21]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[84]),
        .O(\m_axis_rx_tdata_reg[22]_0 [2]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.req_td_i_1 
       (.I0(Q[14]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[77]),
        .O(\m_axis_rx_tdata_reg[15]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \pio_rx_sm_128.tlp_type[0]_i_1 
       (.I0(Q[23]),
        .I1(m_axis_rx_tuser_mux),
        .I2(Q[86]),
        .O(\m_axis_rx_tdata_reg[31]_0 [0]));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \pio_rx_sm_128.tlp_type[1]_i_1 
       (.I0(Q[24]),
        .I1(m_axis_rx_tuser_mux),
        .I2(Q[87]),
        .O(\m_axis_rx_tdata_reg[31]_0 [1]));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \pio_rx_sm_128.tlp_type[2]_i_1 
       (.I0(Q[25]),
        .I1(m_axis_rx_tuser_mux),
        .I2(Q[88]),
        .O(\m_axis_rx_tdata_reg[31]_0 [2]));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \pio_rx_sm_128.tlp_type[3]_i_1 
       (.I0(Q[26]),
        .I1(m_axis_rx_tuser_mux),
        .I2(Q[89]),
        .O(\m_axis_rx_tdata_reg[31]_0 [3]));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \pio_rx_sm_128.tlp_type[4]_i_1 
       (.I0(Q[27]),
        .I1(m_axis_rx_tuser_mux),
        .I2(Q[90]),
        .O(\m_axis_rx_tdata_reg[31]_0 [4]));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \pio_rx_sm_128.tlp_type[5]_i_1 
       (.I0(Q[28]),
        .I1(m_axis_rx_tuser_mux),
        .I2(Q[91]),
        .O(\m_axis_rx_tdata_reg[31]_0 [5]));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT4 #(
    .INIT(16'hEA2A)) 
    \pio_rx_sm_128.tlp_type[6]_i_1 
       (.I0(Q[29]),
        .I1(m_axis_rx_tuser_mux),
        .I2(\m_axis_rx_tuser_reg[21]_0 [9]),
        .I3(Q[92]),
        .O(\m_axis_rx_tdata_reg[30]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \pio_rx_sm_128.tlp_type[7]_i_2 
       (.I0(Q[30]),
        .I1(m_axis_rx_tuser_mux),
        .I2(Q[93]),
        .O(\m_axis_rx_tdata_reg[31]_0 [6]));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT3 #(
    .INIT(8'hDC)) 
    reg_dsc_detect_i_1
       (.I0(null_mux_sel),
        .I1(dsc_detect),
        .I2(reg_dsc_detect_reg_0),
        .O(reg_dsc_detect_i_1_n_0));
  FDRE reg_dsc_detect_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(reg_dsc_detect_i_1_n_0),
        .Q(reg_dsc_detect_reg_0),
        .R(SR));
  FDRE trn_in_packet_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(trn_in_packet_reg_0),
        .Q(trn_in_packet),
        .R(SR));
  FDRE \trn_rbar_hit_prev_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rbar_hit[0]),
        .Q(trn_rbar_hit_prev[0]),
        .R(SR));
  FDRE \trn_rbar_hit_prev_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rbar_hit[1]),
        .Q(trn_rbar_hit_prev[1]),
        .R(SR));
  FDRE \trn_rbar_hit_prev_reg[2] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rbar_hit[2]),
        .Q(trn_rbar_hit_prev[2]),
        .R(SR));
  FDRE \trn_rbar_hit_prev_reg[3] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rbar_hit[3]),
        .Q(trn_rbar_hit_prev[3]),
        .R(SR));
  FDRE \trn_rbar_hit_prev_reg[4] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rbar_hit[4]),
        .Q(trn_rbar_hit_prev[4]),
        .R(SR));
  FDRE \trn_rbar_hit_prev_reg[5] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rbar_hit[5]),
        .Q(trn_rbar_hit_prev[5]),
        .R(SR));
  FDRE \trn_rbar_hit_prev_reg[6] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rbar_hit[6]),
        .Q(trn_rbar_hit_prev[6]),
        .R(SR));
  FDRE \trn_rd_prev_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[96]),
        .Q(trn_rd_prev[0]),
        .R(SR));
  FDRE \trn_rd_prev_reg[100] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[4]),
        .Q(trn_rd_prev[100]),
        .R(SR));
  FDRE \trn_rd_prev_reg[101] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[5]),
        .Q(trn_rd_prev[101]),
        .R(SR));
  FDRE \trn_rd_prev_reg[102] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[6]),
        .Q(trn_rd_prev[102]),
        .R(SR));
  FDRE \trn_rd_prev_reg[103] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[7]),
        .Q(trn_rd_prev[103]),
        .R(SR));
  FDRE \trn_rd_prev_reg[104] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[8]),
        .Q(trn_rd_prev[104]),
        .R(SR));
  FDRE \trn_rd_prev_reg[105] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[9]),
        .Q(trn_rd_prev[105]),
        .R(SR));
  FDRE \trn_rd_prev_reg[106] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[10]),
        .Q(trn_rd_prev[106]),
        .R(SR));
  FDRE \trn_rd_prev_reg[107] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[11]),
        .Q(trn_rd_prev[107]),
        .R(SR));
  FDRE \trn_rd_prev_reg[108] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[12]),
        .Q(trn_rd_prev[108]),
        .R(SR));
  FDRE \trn_rd_prev_reg[109] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[13]),
        .Q(trn_rd_prev[109]),
        .R(SR));
  FDRE \trn_rd_prev_reg[10] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[106]),
        .Q(trn_rd_prev[10]),
        .R(SR));
  FDRE \trn_rd_prev_reg[110] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[14]),
        .Q(trn_rd_prev[110]),
        .R(SR));
  FDRE \trn_rd_prev_reg[111] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[15]),
        .Q(trn_rd_prev[111]),
        .R(SR));
  FDRE \trn_rd_prev_reg[112] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[16]),
        .Q(trn_rd_prev[112]),
        .R(SR));
  FDRE \trn_rd_prev_reg[113] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[17]),
        .Q(trn_rd_prev[113]),
        .R(SR));
  FDRE \trn_rd_prev_reg[114] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[18]),
        .Q(trn_rd_prev[114]),
        .R(SR));
  FDRE \trn_rd_prev_reg[115] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[19]),
        .Q(trn_rd_prev[115]),
        .R(SR));
  FDRE \trn_rd_prev_reg[116] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[20]),
        .Q(trn_rd_prev[116]),
        .R(SR));
  FDRE \trn_rd_prev_reg[117] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[21]),
        .Q(trn_rd_prev[117]),
        .R(SR));
  FDRE \trn_rd_prev_reg[118] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[22]),
        .Q(trn_rd_prev[118]),
        .R(SR));
  FDRE \trn_rd_prev_reg[119] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[23]),
        .Q(trn_rd_prev[119]),
        .R(SR));
  FDRE \trn_rd_prev_reg[11] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[107]),
        .Q(trn_rd_prev[11]),
        .R(SR));
  FDRE \trn_rd_prev_reg[120] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[24]),
        .Q(trn_rd_prev[120]),
        .R(SR));
  FDRE \trn_rd_prev_reg[121] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[25]),
        .Q(trn_rd_prev[121]),
        .R(SR));
  FDRE \trn_rd_prev_reg[122] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[26]),
        .Q(trn_rd_prev[122]),
        .R(SR));
  FDRE \trn_rd_prev_reg[123] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[27]),
        .Q(trn_rd_prev[123]),
        .R(SR));
  FDRE \trn_rd_prev_reg[124] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[28]),
        .Q(trn_rd_prev[124]),
        .R(SR));
  FDRE \trn_rd_prev_reg[125] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[29]),
        .Q(trn_rd_prev[125]),
        .R(SR));
  FDRE \trn_rd_prev_reg[126] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[30]),
        .Q(trn_rd_prev[126]),
        .R(SR));
  FDRE \trn_rd_prev_reg[127] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[31]),
        .Q(trn_rd_prev[127]),
        .R(SR));
  FDRE \trn_rd_prev_reg[12] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[108]),
        .Q(trn_rd_prev[12]),
        .R(SR));
  FDRE \trn_rd_prev_reg[13] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[109]),
        .Q(trn_rd_prev[13]),
        .R(SR));
  FDRE \trn_rd_prev_reg[14] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[110]),
        .Q(trn_rd_prev[14]),
        .R(SR));
  FDRE \trn_rd_prev_reg[15] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[111]),
        .Q(trn_rd_prev[15]),
        .R(SR));
  FDRE \trn_rd_prev_reg[16] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[112]),
        .Q(trn_rd_prev[16]),
        .R(SR));
  FDRE \trn_rd_prev_reg[17] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[113]),
        .Q(trn_rd_prev[17]),
        .R(SR));
  FDRE \trn_rd_prev_reg[18] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[114]),
        .Q(trn_rd_prev[18]),
        .R(SR));
  FDRE \trn_rd_prev_reg[19] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[115]),
        .Q(trn_rd_prev[19]),
        .R(SR));
  FDRE \trn_rd_prev_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[97]),
        .Q(trn_rd_prev[1]),
        .R(SR));
  FDRE \trn_rd_prev_reg[20] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[116]),
        .Q(trn_rd_prev[20]),
        .R(SR));
  FDRE \trn_rd_prev_reg[21] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[117]),
        .Q(trn_rd_prev[21]),
        .R(SR));
  FDRE \trn_rd_prev_reg[22] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[118]),
        .Q(trn_rd_prev[22]),
        .R(SR));
  FDRE \trn_rd_prev_reg[23] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[119]),
        .Q(trn_rd_prev[23]),
        .R(SR));
  FDRE \trn_rd_prev_reg[24] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[120]),
        .Q(trn_rd_prev[24]),
        .R(SR));
  FDRE \trn_rd_prev_reg[25] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[121]),
        .Q(trn_rd_prev[25]),
        .R(SR));
  FDRE \trn_rd_prev_reg[26] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[122]),
        .Q(trn_rd_prev[26]),
        .R(SR));
  FDRE \trn_rd_prev_reg[27] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[123]),
        .Q(trn_rd_prev[27]),
        .R(SR));
  FDRE \trn_rd_prev_reg[28] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[124]),
        .Q(trn_rd_prev[28]),
        .R(SR));
  FDRE \trn_rd_prev_reg[29] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[125]),
        .Q(trn_rd_prev[29]),
        .R(SR));
  FDRE \trn_rd_prev_reg[2] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[98]),
        .Q(trn_rd_prev[2]),
        .R(SR));
  FDRE \trn_rd_prev_reg[30] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[126]),
        .Q(trn_rd_prev[30]),
        .R(SR));
  FDRE \trn_rd_prev_reg[31] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[127]),
        .Q(trn_rd_prev[31]),
        .R(SR));
  FDRE \trn_rd_prev_reg[32] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[64]),
        .Q(trn_rd_prev[32]),
        .R(SR));
  FDRE \trn_rd_prev_reg[33] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[65]),
        .Q(trn_rd_prev[33]),
        .R(SR));
  FDRE \trn_rd_prev_reg[34] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[66]),
        .Q(trn_rd_prev[34]),
        .R(SR));
  FDRE \trn_rd_prev_reg[35] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[67]),
        .Q(trn_rd_prev[35]),
        .R(SR));
  FDRE \trn_rd_prev_reg[36] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[68]),
        .Q(trn_rd_prev[36]),
        .R(SR));
  FDRE \trn_rd_prev_reg[37] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[69]),
        .Q(trn_rd_prev[37]),
        .R(SR));
  FDRE \trn_rd_prev_reg[38] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[70]),
        .Q(trn_rd_prev[38]),
        .R(SR));
  FDRE \trn_rd_prev_reg[39] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[71]),
        .Q(trn_rd_prev[39]),
        .R(SR));
  FDRE \trn_rd_prev_reg[3] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[99]),
        .Q(trn_rd_prev[3]),
        .R(SR));
  FDRE \trn_rd_prev_reg[40] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[72]),
        .Q(trn_rd_prev[40]),
        .R(SR));
  FDRE \trn_rd_prev_reg[41] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[73]),
        .Q(trn_rd_prev[41]),
        .R(SR));
  FDRE \trn_rd_prev_reg[42] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[74]),
        .Q(trn_rd_prev[42]),
        .R(SR));
  FDRE \trn_rd_prev_reg[43] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[75]),
        .Q(trn_rd_prev[43]),
        .R(SR));
  FDRE \trn_rd_prev_reg[44] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[76]),
        .Q(trn_rd_prev[44]),
        .R(SR));
  FDRE \trn_rd_prev_reg[45] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[77]),
        .Q(trn_rd_prev[45]),
        .R(SR));
  FDRE \trn_rd_prev_reg[46] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[78]),
        .Q(trn_rd_prev[46]),
        .R(SR));
  FDRE \trn_rd_prev_reg[47] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[79]),
        .Q(trn_rd_prev[47]),
        .R(SR));
  FDRE \trn_rd_prev_reg[48] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[80]),
        .Q(trn_rd_prev[48]),
        .R(SR));
  FDRE \trn_rd_prev_reg[49] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[81]),
        .Q(trn_rd_prev[49]),
        .R(SR));
  FDRE \trn_rd_prev_reg[4] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[100]),
        .Q(trn_rd_prev[4]),
        .R(SR));
  FDRE \trn_rd_prev_reg[50] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[82]),
        .Q(trn_rd_prev[50]),
        .R(SR));
  FDRE \trn_rd_prev_reg[51] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[83]),
        .Q(trn_rd_prev[51]),
        .R(SR));
  FDRE \trn_rd_prev_reg[52] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[84]),
        .Q(trn_rd_prev[52]),
        .R(SR));
  FDRE \trn_rd_prev_reg[53] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[85]),
        .Q(trn_rd_prev[53]),
        .R(SR));
  FDRE \trn_rd_prev_reg[54] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[86]),
        .Q(trn_rd_prev[54]),
        .R(SR));
  FDRE \trn_rd_prev_reg[55] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[87]),
        .Q(trn_rd_prev[55]),
        .R(SR));
  FDRE \trn_rd_prev_reg[56] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[88]),
        .Q(trn_rd_prev[56]),
        .R(SR));
  FDRE \trn_rd_prev_reg[57] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[89]),
        .Q(trn_rd_prev[57]),
        .R(SR));
  FDRE \trn_rd_prev_reg[58] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[90]),
        .Q(trn_rd_prev[58]),
        .R(SR));
  FDRE \trn_rd_prev_reg[59] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[91]),
        .Q(trn_rd_prev[59]),
        .R(SR));
  FDRE \trn_rd_prev_reg[5] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[101]),
        .Q(trn_rd_prev[5]),
        .R(SR));
  FDRE \trn_rd_prev_reg[60] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[92]),
        .Q(trn_rd_prev[60]),
        .R(SR));
  FDRE \trn_rd_prev_reg[61] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[93]),
        .Q(trn_rd_prev[61]),
        .R(SR));
  FDRE \trn_rd_prev_reg[62] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[94]),
        .Q(trn_rd_prev[62]),
        .R(SR));
  FDRE \trn_rd_prev_reg[63] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[95]),
        .Q(trn_rd_prev[63]),
        .R(SR));
  FDRE \trn_rd_prev_reg[64] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[32]),
        .Q(trn_rd_prev[64]),
        .R(SR));
  FDRE \trn_rd_prev_reg[65] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[33]),
        .Q(trn_rd_prev[65]),
        .R(SR));
  FDRE \trn_rd_prev_reg[66] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[34]),
        .Q(trn_rd_prev[66]),
        .R(SR));
  FDRE \trn_rd_prev_reg[67] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[35]),
        .Q(trn_rd_prev[67]),
        .R(SR));
  FDRE \trn_rd_prev_reg[68] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[36]),
        .Q(trn_rd_prev[68]),
        .R(SR));
  FDRE \trn_rd_prev_reg[69] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[37]),
        .Q(trn_rd_prev[69]),
        .R(SR));
  FDRE \trn_rd_prev_reg[6] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[102]),
        .Q(trn_rd_prev[6]),
        .R(SR));
  FDRE \trn_rd_prev_reg[70] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[38]),
        .Q(trn_rd_prev[70]),
        .R(SR));
  FDRE \trn_rd_prev_reg[71] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[39]),
        .Q(trn_rd_prev[71]),
        .R(SR));
  FDRE \trn_rd_prev_reg[72] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[40]),
        .Q(trn_rd_prev[72]),
        .R(SR));
  FDRE \trn_rd_prev_reg[73] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[41]),
        .Q(trn_rd_prev[73]),
        .R(SR));
  FDRE \trn_rd_prev_reg[74] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[42]),
        .Q(trn_rd_prev[74]),
        .R(SR));
  FDRE \trn_rd_prev_reg[75] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[43]),
        .Q(trn_rd_prev[75]),
        .R(SR));
  FDRE \trn_rd_prev_reg[76] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[44]),
        .Q(trn_rd_prev[76]),
        .R(SR));
  FDRE \trn_rd_prev_reg[77] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[45]),
        .Q(trn_rd_prev[77]),
        .R(SR));
  FDRE \trn_rd_prev_reg[78] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[46]),
        .Q(trn_rd_prev[78]),
        .R(SR));
  FDRE \trn_rd_prev_reg[79] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[47]),
        .Q(trn_rd_prev[79]),
        .R(SR));
  FDRE \trn_rd_prev_reg[7] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[103]),
        .Q(trn_rd_prev[7]),
        .R(SR));
  FDRE \trn_rd_prev_reg[80] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[48]),
        .Q(trn_rd_prev[80]),
        .R(SR));
  FDRE \trn_rd_prev_reg[81] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[49]),
        .Q(trn_rd_prev[81]),
        .R(SR));
  FDRE \trn_rd_prev_reg[82] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[50]),
        .Q(trn_rd_prev[82]),
        .R(SR));
  FDRE \trn_rd_prev_reg[83] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[51]),
        .Q(trn_rd_prev[83]),
        .R(SR));
  FDRE \trn_rd_prev_reg[84] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[52]),
        .Q(trn_rd_prev[84]),
        .R(SR));
  FDRE \trn_rd_prev_reg[85] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[53]),
        .Q(trn_rd_prev[85]),
        .R(SR));
  FDRE \trn_rd_prev_reg[86] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[54]),
        .Q(trn_rd_prev[86]),
        .R(SR));
  FDRE \trn_rd_prev_reg[87] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[55]),
        .Q(trn_rd_prev[87]),
        .R(SR));
  FDRE \trn_rd_prev_reg[88] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[56]),
        .Q(trn_rd_prev[88]),
        .R(SR));
  FDRE \trn_rd_prev_reg[89] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[57]),
        .Q(trn_rd_prev[89]),
        .R(SR));
  FDRE \trn_rd_prev_reg[8] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[104]),
        .Q(trn_rd_prev[8]),
        .R(SR));
  FDRE \trn_rd_prev_reg[90] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[58]),
        .Q(trn_rd_prev[90]),
        .R(SR));
  FDRE \trn_rd_prev_reg[91] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[59]),
        .Q(trn_rd_prev[91]),
        .R(SR));
  FDRE \trn_rd_prev_reg[92] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[60]),
        .Q(trn_rd_prev[92]),
        .R(SR));
  FDRE \trn_rd_prev_reg[93] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[61]),
        .Q(trn_rd_prev[93]),
        .R(SR));
  FDRE \trn_rd_prev_reg[94] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[62]),
        .Q(trn_rd_prev[94]),
        .R(SR));
  FDRE \trn_rd_prev_reg[95] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[63]),
        .Q(trn_rd_prev[95]),
        .R(SR));
  FDRE \trn_rd_prev_reg[96] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[0]),
        .Q(trn_rd_prev[96]),
        .R(SR));
  FDRE \trn_rd_prev_reg[97] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[1]),
        .Q(trn_rd_prev[97]),
        .R(SR));
  FDRE \trn_rd_prev_reg[98] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[2]),
        .Q(trn_rd_prev[98]),
        .R(SR));
  FDRE \trn_rd_prev_reg[99] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[3]),
        .Q(trn_rd_prev[99]),
        .R(SR));
  FDRE \trn_rd_prev_reg[9] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rd[105]),
        .Q(trn_rd_prev[9]),
        .R(SR));
  LUT6 #(
    .INIT(64'h00F02222AAAA2222)) 
    trn_rdst_rdy_i_1
       (.I0(trn_rdst_rdy_i_2_n_0),
        .I1(m_axis_rx_tvalid_reg_0),
        .I2(\m_axis_rx_tuser_reg[21]_2 ),
        .I3(trn_rdst_rdy_reg_1),
        .I4(m_axis_rx_tready_mux),
        .I5(null_mux_sel),
        .O(trn_rdst_rdy_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT2 #(
    .INIT(4'h1)) 
    trn_rdst_rdy_i_2
       (.I0(reg_dsc_detect_reg_0),
        .I1(dsc_detect),
        .O(trn_rdst_rdy_i_2_n_0));
  FDRE trn_rdst_rdy_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(trn_rdst_rdy_i_1_n_0),
        .Q(trn_rdst_rdy_reg_0),
        .R(SR));
  FDRE trn_recrc_err_prev_reg
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_recrc_err),
        .Q(trn_recrc_err_prev),
        .R(SR));
  FDRE trn_reof_prev_reg
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_reof),
        .Q(trn_reof_prev),
        .R(SR));
  FDRE trn_rerrfwd_prev_reg
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rerrfwd),
        .Q(trn_rerrfwd_prev),
        .R(SR));
  FDRE \trn_rrem_prev_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rrem[0]),
        .Q(trn_rrem_prev[0]),
        .R(SR));
  FDRE \trn_rrem_prev_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rrem[1]),
        .Q(trn_rrem_prev[1]),
        .R(SR));
  FDRE trn_rsof_prev_reg
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rsof),
        .Q(trn_rsof_prev),
        .R(SR));
  FDRE trn_rsrc_dsc_d_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(trn_rsrc_dsc),
        .Q(trn_rsrc_dsc_d),
        .R(SR));
  FDRE trn_rsrc_dsc_prev_reg
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(trn_rsrc_dsc_prev0),
        .Q(trn_rsrc_dsc_prev),
        .R(SR));
  FDRE trn_rsrc_rdy_prev_reg
       (.C(pipe_userclk2_in),
        .CE(trn_rdst_rdy_reg_0),
        .D(rsrc_rdy_filtered),
        .Q(trn_rsrc_rdy_prev),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT2 #(
    .INIT(4'h8)) 
    user_app_rdy_gnt_i_2
       (.I0(m_axis_rx_tvalid_reg_0),
        .I1(m_axis_rx_tready_cpler),
        .O(m_axis_rx_tvalid_reg_2));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_axi_basic_top" *) 
module pcie_7x_0_pcie_7x_0_axi_basic_top
   (trn_trem,
    trn_rsrc_dsc_d,
    m_axis_rx_tvalid_reg,
    trn_rdst_rdy,
    reg_tcfg_gnt,
    tready_thrtl_reg,
    trn_teof,
    trn_tsrc_rdy,
    Q,
    trn_in_packet,
    reg_dsc_detect,
    reg_axi_in_pkt,
    \ecrc_pause_enabled.reg_tx_ecrc_pkt ,
    \L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff ,
    ppm_L1_thrtl,
    axi_in_packet,
    lnk_up_thrtl,
    \m_axis_rx_tdata_reg[127] ,
    \m_axis_rx_tuser_reg[21] ,
    \m_axis_rx_tdata_reg[30] ,
    m_axis_rx_tvalid_reg_0,
    \m_axis_rx_tdata_reg[63] ,
    \m_axis_rx_tdata_reg[47] ,
    \m_axis_rx_tdata_reg[35] ,
    \m_axis_rx_tdata_reg[13] ,
    \m_axis_rx_tdata_reg[22] ,
    \m_axis_rx_tdata_reg[29] ,
    \FSM_sequential_pio_rx_sm_128.state_reg[0] ,
    \m_axis_rx_tdata_reg[89] ,
    \m_axis_rx_tdata_reg[30]_0 ,
    \m_axis_rx_tdata_reg[30]_1 ,
    \m_axis_rx_tdata_reg[73] ,
    \m_axis_rx_tdata_reg[15] ,
    \m_axis_rx_tdata_reg[14] ,
    \m_axis_rx_tdata_reg[29]_0 ,
    m_axis_rx_tvalid_reg_1,
    user_reset_out_reg,
    ppm_L1_trig,
    cfg_pm_turnoff_ok_n,
    trn_tcfg_gnt,
    \tbuf_av_d_reg[4] ,
    trn_tsof,
    s_axis_tx_tready,
    m_axis_rx_tvalid,
    \m_axis_rx_tdata_reg[30]_2 ,
    \m_axis_rx_tdata_reg[6] ,
    m_axis_rx_tdata,
    m_axis_rx_tuser,
    \m_axis_rx_tdata_reg[31] ,
    \m_axis_rx_tdata_reg[9] ,
    \throttle_ctl_pipeline.reg_tdata_reg[127] ,
    \throttle_ctl_pipeline.reg_tuser_reg[3] ,
    SR,
    data_hold,
    pipe_userclk2_in,
    trn_rsrc_dsc,
    E,
    rsrc_rdy_filtered,
    trn_rsof,
    trn_rsrc_dsc_prev0,
    trn_recrc_err,
    trn_rerrfwd,
    trn_reof,
    tx_cfg_gnt_mux,
    trn_tcfg_req,
    trn_tdst_rdy,
    cfg_turnoff_ok_mux,
    tbuf_av_min_trig,
    s_axis_tx_tlast_mux,
    s_axis_tx_tvalid_mux,
    DI,
    S,
    trn_in_packet_reg,
    reg_axi_in_pkt_reg,
    \ecrc_pause_enabled.reg_tx_ecrc_pkt_reg ,
    \L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg ,
    ppm_L1_thrtl_reg,
    axi_in_packet_reg,
    lnk_up_thrtl_reg,
    m_axis_rx_tready,
    m_axis_rx_tvalid_0,
    m_axis_rx_tready_cpler,
    dsc_detect,
    \pio_rx_sm_128.req_addr_reg[2] ,
    \pio_rx_sm_128.req_td_reg ,
    m_axis_rx_tready_mux,
    trn_rrem,
    \thrtl_ctl_trn_flush.reg_disable_trn_reg ,
    tready_thrtl_reg_0,
    tcfg_req_trig,
    out,
    s_axis_tx_tvalid,
    \throttle_ctl_pipeline.reg_tsrc_rdy_reg ,
    s_axis_tx_tvalid_cpler,
    s_axis_tx_tlast,
    tbuf_av_gap_thrtl_reg,
    tbuf_av_gap_thrtl_i_2,
    cfg_pcie_link_state,
    s_axis_tx_tready_0,
    trn_rd,
    trn_rbar_hit,
    \m_axis_rx_tuser_reg[21]_0 ,
    trn_tbuf_av,
    \throttle_ctl_pipeline.reg_tdata_reg[127]_0 ,
    \throttle_ctl_pipeline.reg_tuser_reg[3]_0 ,
    \throttle_ctl_pipeline.reg_tkeep_reg[15] );
  output [1:0]trn_trem;
  output trn_rsrc_dsc_d;
  output m_axis_rx_tvalid_reg;
  output trn_rdst_rdy;
  output reg_tcfg_gnt;
  output tready_thrtl_reg;
  output trn_teof;
  output trn_tsrc_rdy;
  output [1:0]Q;
  output trn_in_packet;
  output reg_dsc_detect;
  output reg_axi_in_pkt;
  output \ecrc_pause_enabled.reg_tx_ecrc_pkt ;
  output \L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff ;
  output ppm_L1_thrtl;
  output axi_in_packet;
  output lnk_up_thrtl;
  output [125:0]\m_axis_rx_tdata_reg[127] ;
  output [13:0]\m_axis_rx_tuser_reg[21] ;
  output \m_axis_rx_tdata_reg[30] ;
  output [0:0]m_axis_rx_tvalid_reg_0;
  output [15:0]\m_axis_rx_tdata_reg[63] ;
  output [7:0]\m_axis_rx_tdata_reg[47] ;
  output [3:0]\m_axis_rx_tdata_reg[35] ;
  output [1:0]\m_axis_rx_tdata_reg[13] ;
  output [2:0]\m_axis_rx_tdata_reg[22] ;
  output \m_axis_rx_tdata_reg[29] ;
  output \FSM_sequential_pio_rx_sm_128.state_reg[0] ;
  output [0:0]\m_axis_rx_tdata_reg[89] ;
  output [0:0]\m_axis_rx_tdata_reg[30]_0 ;
  output \m_axis_rx_tdata_reg[30]_1 ;
  output \m_axis_rx_tdata_reg[73] ;
  output \m_axis_rx_tdata_reg[15] ;
  output \m_axis_rx_tdata_reg[14] ;
  output \m_axis_rx_tdata_reg[29]_0 ;
  output m_axis_rx_tvalid_reg_1;
  output [0:0]user_reset_out_reg;
  output ppm_L1_trig;
  output cfg_pm_turnoff_ok_n;
  output trn_tcfg_gnt;
  output [1:0]\tbuf_av_d_reg[4] ;
  output trn_tsof;
  output s_axis_tx_tready;
  output m_axis_rx_tvalid;
  output \m_axis_rx_tdata_reg[30]_2 ;
  output [4:0]\m_axis_rx_tdata_reg[6] ;
  output [1:0]m_axis_rx_tdata;
  output [1:0]m_axis_rx_tuser;
  output [6:0]\m_axis_rx_tdata_reg[31] ;
  output [9:0]\m_axis_rx_tdata_reg[9] ;
  output [127:0]\throttle_ctl_pipeline.reg_tdata_reg[127] ;
  output [3:0]\throttle_ctl_pipeline.reg_tuser_reg[3] ;
  input [0:0]SR;
  input data_hold;
  input pipe_userclk2_in;
  input trn_rsrc_dsc;
  input [0:0]E;
  input rsrc_rdy_filtered;
  input trn_rsof;
  input trn_rsrc_dsc_prev0;
  input trn_recrc_err;
  input trn_rerrfwd;
  input trn_reof;
  input tx_cfg_gnt_mux;
  input trn_tcfg_req;
  input trn_tdst_rdy;
  input cfg_turnoff_ok_mux;
  input tbuf_av_min_trig;
  input s_axis_tx_tlast_mux;
  input s_axis_tx_tvalid_mux;
  input [0:0]DI;
  input [1:0]S;
  input trn_in_packet_reg;
  input reg_axi_in_pkt_reg;
  input \ecrc_pause_enabled.reg_tx_ecrc_pkt_reg ;
  input \L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg ;
  input ppm_L1_thrtl_reg;
  input axi_in_packet_reg;
  input lnk_up_thrtl_reg;
  input m_axis_rx_tready;
  input m_axis_rx_tvalid_0;
  input m_axis_rx_tready_cpler;
  input dsc_detect;
  input [2:0]\pio_rx_sm_128.req_addr_reg[2] ;
  input \pio_rx_sm_128.req_td_reg ;
  input m_axis_rx_tready_mux;
  input [1:0]trn_rrem;
  input \thrtl_ctl_trn_flush.reg_disable_trn_reg ;
  input tready_thrtl_reg_0;
  input tcfg_req_trig;
  input out;
  input s_axis_tx_tvalid;
  input \throttle_ctl_pipeline.reg_tsrc_rdy_reg ;
  input s_axis_tx_tvalid_cpler;
  input s_axis_tx_tlast;
  input tbuf_av_gap_thrtl_reg;
  input tbuf_av_gap_thrtl_i_2;
  input [2:0]cfg_pcie_link_state;
  input s_axis_tx_tready_0;
  input [127:0]trn_rd;
  input [6:0]trn_rbar_hit;
  input [0:0]\m_axis_rx_tuser_reg[21]_0 ;
  input [5:0]trn_tbuf_av;
  input [127:0]\throttle_ctl_pipeline.reg_tdata_reg[127]_0 ;
  input [3:0]\throttle_ctl_pipeline.reg_tuser_reg[3]_0 ;
  input [2:0]\throttle_ctl_pipeline.reg_tkeep_reg[15] ;

  wire [0:0]DI;
  wire [0:0]E;
  wire \FSM_sequential_pio_rx_sm_128.state_reg[0] ;
  wire \L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff ;
  wire \L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg ;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire axi_in_packet;
  wire axi_in_packet_reg;
  wire [2:0]cfg_pcie_link_state;
  wire cfg_pm_turnoff_ok_n;
  wire cfg_turnoff_ok_mux;
  wire data_hold;
  wire dsc_detect;
  wire \ecrc_pause_enabled.reg_tx_ecrc_pkt ;
  wire \ecrc_pause_enabled.reg_tx_ecrc_pkt_reg ;
  wire lnk_up_thrtl;
  wire lnk_up_thrtl_reg;
  wire [1:0]m_axis_rx_tdata;
  wire [125:0]\m_axis_rx_tdata_reg[127] ;
  wire [1:0]\m_axis_rx_tdata_reg[13] ;
  wire \m_axis_rx_tdata_reg[14] ;
  wire \m_axis_rx_tdata_reg[15] ;
  wire [2:0]\m_axis_rx_tdata_reg[22] ;
  wire \m_axis_rx_tdata_reg[29] ;
  wire \m_axis_rx_tdata_reg[29]_0 ;
  wire \m_axis_rx_tdata_reg[30] ;
  wire [0:0]\m_axis_rx_tdata_reg[30]_0 ;
  wire \m_axis_rx_tdata_reg[30]_1 ;
  wire \m_axis_rx_tdata_reg[30]_2 ;
  wire [6:0]\m_axis_rx_tdata_reg[31] ;
  wire [3:0]\m_axis_rx_tdata_reg[35] ;
  wire [7:0]\m_axis_rx_tdata_reg[47] ;
  wire [15:0]\m_axis_rx_tdata_reg[63] ;
  wire [4:0]\m_axis_rx_tdata_reg[6] ;
  wire \m_axis_rx_tdata_reg[73] ;
  wire [0:0]\m_axis_rx_tdata_reg[89] ;
  wire [9:0]\m_axis_rx_tdata_reg[9] ;
  wire m_axis_rx_tready;
  wire m_axis_rx_tready_cpler;
  wire m_axis_rx_tready_mux;
  wire [1:0]m_axis_rx_tuser;
  wire [13:0]\m_axis_rx_tuser_reg[21] ;
  wire [0:0]\m_axis_rx_tuser_reg[21]_0 ;
  wire m_axis_rx_tvalid;
  wire m_axis_rx_tvalid_0;
  wire m_axis_rx_tvalid_reg;
  wire [0:0]m_axis_rx_tvalid_reg_0;
  wire m_axis_rx_tvalid_reg_1;
  wire out;
  wire [2:0]\pio_rx_sm_128.req_addr_reg[2] ;
  wire \pio_rx_sm_128.req_td_reg ;
  wire pipe_userclk2_in;
  wire ppm_L1_thrtl;
  wire ppm_L1_thrtl_reg;
  wire ppm_L1_trig;
  wire reg_axi_in_pkt;
  wire reg_axi_in_pkt_reg;
  wire reg_dsc_detect;
  wire reg_tcfg_gnt;
  wire rsrc_rdy_filtered;
  wire s_axis_tx_tlast;
  wire s_axis_tx_tlast_mux;
  wire s_axis_tx_tready;
  wire s_axis_tx_tready_0;
  wire s_axis_tx_tvalid;
  wire s_axis_tx_tvalid_cpler;
  wire s_axis_tx_tvalid_mux;
  wire [1:0]\tbuf_av_d_reg[4] ;
  wire tbuf_av_gap_thrtl_i_2;
  wire tbuf_av_gap_thrtl_reg;
  wire tbuf_av_min_trig;
  wire tcfg_req_trig;
  wire [127:0]\throttle_ctl_pipeline.reg_tdata_reg[127] ;
  wire [127:0]\throttle_ctl_pipeline.reg_tdata_reg[127]_0 ;
  wire [2:0]\throttle_ctl_pipeline.reg_tkeep_reg[15] ;
  wire \throttle_ctl_pipeline.reg_tsrc_rdy_reg ;
  wire [3:0]\throttle_ctl_pipeline.reg_tuser_reg[3] ;
  wire [3:0]\throttle_ctl_pipeline.reg_tuser_reg[3]_0 ;
  wire \thrtl_ctl_trn_flush.reg_disable_trn_reg ;
  wire tready_thrtl_reg;
  wire tready_thrtl_reg_0;
  wire trn_in_packet;
  wire trn_in_packet_reg;
  wire [6:0]trn_rbar_hit;
  wire [127:0]trn_rd;
  wire trn_rdst_rdy;
  wire trn_recrc_err;
  wire trn_reof;
  wire trn_rerrfwd;
  wire [1:0]trn_rrem;
  wire trn_rsof;
  wire trn_rsrc_dsc;
  wire trn_rsrc_dsc_d;
  wire trn_rsrc_dsc_prev0;
  wire [5:0]trn_tbuf_av;
  wire trn_tcfg_gnt;
  wire trn_tcfg_req;
  wire trn_tdst_rdy;
  wire trn_teof;
  wire [1:0]trn_trem;
  wire trn_tsof;
  wire trn_tsrc_rdy;
  wire tx_cfg_gnt_mux;
  wire [0:0]user_reset_out_reg;

  pcie_7x_0_pcie_7x_0_axi_basic_rx rx_inst
       (.DI(DI),
        .E(E),
        .\FSM_sequential_pio_rx_sm_128.state_reg[0] (\FSM_sequential_pio_rx_sm_128.state_reg[0] ),
        .Q(Q),
        .S(S),
        .SR(SR),
        .data_hold(data_hold),
        .dsc_detect(dsc_detect),
        .m_axis_rx_tdata(m_axis_rx_tdata),
        .\m_axis_rx_tdata_reg[127] (\m_axis_rx_tdata_reg[127] ),
        .\m_axis_rx_tdata_reg[13] (\m_axis_rx_tdata_reg[13] ),
        .\m_axis_rx_tdata_reg[14] (\m_axis_rx_tdata_reg[14] ),
        .\m_axis_rx_tdata_reg[15] (\m_axis_rx_tdata_reg[15] ),
        .\m_axis_rx_tdata_reg[22] (\m_axis_rx_tdata_reg[22] ),
        .\m_axis_rx_tdata_reg[29] (\m_axis_rx_tdata_reg[29] ),
        .\m_axis_rx_tdata_reg[29]_0 (\m_axis_rx_tdata_reg[29]_0 ),
        .\m_axis_rx_tdata_reg[30] (\m_axis_rx_tdata_reg[30] ),
        .\m_axis_rx_tdata_reg[30]_0 (\m_axis_rx_tdata_reg[30]_0 ),
        .\m_axis_rx_tdata_reg[30]_1 (\m_axis_rx_tdata_reg[30]_1 ),
        .\m_axis_rx_tdata_reg[30]_2 (\m_axis_rx_tdata_reg[30]_2 ),
        .\m_axis_rx_tdata_reg[31] (\m_axis_rx_tdata_reg[31] ),
        .\m_axis_rx_tdata_reg[35] (\m_axis_rx_tdata_reg[35] ),
        .\m_axis_rx_tdata_reg[47] (\m_axis_rx_tdata_reg[47] ),
        .\m_axis_rx_tdata_reg[63] (\m_axis_rx_tdata_reg[63] ),
        .\m_axis_rx_tdata_reg[6] (\m_axis_rx_tdata_reg[6] ),
        .\m_axis_rx_tdata_reg[73] (\m_axis_rx_tdata_reg[73] ),
        .\m_axis_rx_tdata_reg[89] (\m_axis_rx_tdata_reg[89] ),
        .\m_axis_rx_tdata_reg[9] (\m_axis_rx_tdata_reg[9] ),
        .m_axis_rx_tready(m_axis_rx_tready),
        .m_axis_rx_tready_cpler(m_axis_rx_tready_cpler),
        .m_axis_rx_tready_mux(m_axis_rx_tready_mux),
        .m_axis_rx_tuser(m_axis_rx_tuser),
        .\m_axis_rx_tuser[14] (s_axis_tx_tready_0),
        .\m_axis_rx_tuser_reg[21] (\m_axis_rx_tuser_reg[21] ),
        .\m_axis_rx_tuser_reg[21]_0 (\m_axis_rx_tuser_reg[21]_0 ),
        .m_axis_rx_tvalid(m_axis_rx_tvalid),
        .m_axis_rx_tvalid_0(m_axis_rx_tvalid_0),
        .m_axis_rx_tvalid_reg(m_axis_rx_tvalid_reg),
        .m_axis_rx_tvalid_reg_0(m_axis_rx_tvalid_reg_0),
        .m_axis_rx_tvalid_reg_1(m_axis_rx_tvalid_reg_1),
        .\pio_rx_sm_128.req_addr_reg[2] (\pio_rx_sm_128.req_addr_reg[2] ),
        .\pio_rx_sm_128.req_td_reg (\pio_rx_sm_128.req_td_reg ),
        .pipe_userclk2_in(pipe_userclk2_in),
        .reg_dsc_detect_reg(reg_dsc_detect),
        .rsrc_rdy_filtered(rsrc_rdy_filtered),
        .trn_in_packet(trn_in_packet),
        .trn_in_packet_reg(trn_in_packet_reg),
        .trn_rbar_hit(trn_rbar_hit),
        .trn_rd(trn_rd),
        .trn_rdst_rdy_reg(trn_rdst_rdy),
        .trn_recrc_err(trn_recrc_err),
        .trn_reof(trn_reof),
        .trn_rerrfwd(trn_rerrfwd),
        .trn_rrem(trn_rrem),
        .trn_rsof(trn_rsof),
        .trn_rsrc_dsc(trn_rsrc_dsc),
        .trn_rsrc_dsc_d(trn_rsrc_dsc_d),
        .trn_rsrc_dsc_prev0(trn_rsrc_dsc_prev0),
        .user_reset_out_reg(user_reset_out_reg));
  pcie_7x_0_pcie_7x_0_axi_basic_tx tx_inst
       (.\L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg (\L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff ),
        .\L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg_0 (\L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg ),
        .SR(SR),
        .axi_in_packet(axi_in_packet),
        .axi_in_packet_reg(axi_in_packet_reg),
        .cfg_pcie_link_state(cfg_pcie_link_state),
        .cfg_pm_turnoff_ok_n(cfg_pm_turnoff_ok_n),
        .cfg_turnoff_ok_mux(cfg_turnoff_ok_mux),
        .\ecrc_pause_enabled.reg_tx_ecrc_pkt (\ecrc_pause_enabled.reg_tx_ecrc_pkt ),
        .\ecrc_pause_enabled.reg_tx_ecrc_pkt_reg (\ecrc_pause_enabled.reg_tx_ecrc_pkt_reg ),
        .lnk_up_thrtl(lnk_up_thrtl),
        .lnk_up_thrtl_reg(lnk_up_thrtl_reg),
        .out(out),
        .pipe_userclk2_in(pipe_userclk2_in),
        .ppm_L1_thrtl(ppm_L1_thrtl),
        .ppm_L1_thrtl_reg(ppm_L1_thrtl_reg),
        .ppm_L1_trig(ppm_L1_trig),
        .reg_axi_in_pkt(reg_axi_in_pkt),
        .reg_axi_in_pkt_reg(reg_axi_in_pkt_reg),
        .reg_tcfg_gnt(reg_tcfg_gnt),
        .s_axis_tx_tlast(s_axis_tx_tlast),
        .s_axis_tx_tlast_mux(s_axis_tx_tlast_mux),
        .s_axis_tx_tready(s_axis_tx_tready),
        .s_axis_tx_tready_0(s_axis_tx_tready_0),
        .s_axis_tx_tvalid(s_axis_tx_tvalid),
        .s_axis_tx_tvalid_cpler(s_axis_tx_tvalid_cpler),
        .s_axis_tx_tvalid_mux(s_axis_tx_tvalid_mux),
        .\tbuf_av_d_reg[4] (\tbuf_av_d_reg[4] ),
        .tbuf_av_gap_thrtl_i_2(tbuf_av_gap_thrtl_i_2),
        .tbuf_av_gap_thrtl_reg(tbuf_av_gap_thrtl_reg),
        .tbuf_av_min_trig(tbuf_av_min_trig),
        .tcfg_req_trig(tcfg_req_trig),
        .\throttle_ctl_pipeline.reg_tdata_reg[127] (\throttle_ctl_pipeline.reg_tdata_reg[127] ),
        .\throttle_ctl_pipeline.reg_tdata_reg[127]_0 (\throttle_ctl_pipeline.reg_tdata_reg[127]_0 ),
        .\throttle_ctl_pipeline.reg_tkeep_reg[15] (\throttle_ctl_pipeline.reg_tkeep_reg[15] ),
        .\throttle_ctl_pipeline.reg_tsrc_rdy_reg (\throttle_ctl_pipeline.reg_tsrc_rdy_reg ),
        .\throttle_ctl_pipeline.reg_tuser_reg[3] (\throttle_ctl_pipeline.reg_tuser_reg[3] ),
        .\throttle_ctl_pipeline.reg_tuser_reg[3]_0 (\throttle_ctl_pipeline.reg_tuser_reg[3]_0 ),
        .\thrtl_ctl_trn_flush.reg_disable_trn_reg (\thrtl_ctl_trn_flush.reg_disable_trn_reg ),
        .tready_thrtl_reg(tready_thrtl_reg),
        .tready_thrtl_reg_0(tready_thrtl_reg_0),
        .trn_tbuf_av(trn_tbuf_av),
        .trn_tcfg_gnt(trn_tcfg_gnt),
        .trn_tcfg_req(trn_tcfg_req),
        .trn_tdst_rdy(trn_tdst_rdy),
        .trn_teof(trn_teof),
        .trn_trem(trn_trem),
        .trn_tsof(trn_tsof),
        .trn_tsrc_rdy(trn_tsrc_rdy),
        .tx_cfg_gnt_mux(tx_cfg_gnt_mux));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_axi_basic_tx" *) 
module pcie_7x_0_pcie_7x_0_axi_basic_tx
   (trn_trem,
    reg_tcfg_gnt,
    tready_thrtl_reg,
    trn_teof,
    trn_tsrc_rdy,
    reg_axi_in_pkt,
    \ecrc_pause_enabled.reg_tx_ecrc_pkt ,
    \L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg ,
    ppm_L1_thrtl,
    axi_in_packet,
    lnk_up_thrtl,
    ppm_L1_trig,
    cfg_pm_turnoff_ok_n,
    trn_tcfg_gnt,
    trn_tsof,
    s_axis_tx_tready,
    \tbuf_av_d_reg[4] ,
    \throttle_ctl_pipeline.reg_tdata_reg[127] ,
    \throttle_ctl_pipeline.reg_tuser_reg[3] ,
    SR,
    tx_cfg_gnt_mux,
    pipe_userclk2_in,
    trn_tcfg_req,
    trn_tdst_rdy,
    cfg_turnoff_ok_mux,
    tbuf_av_min_trig,
    s_axis_tx_tlast_mux,
    s_axis_tx_tvalid_mux,
    reg_axi_in_pkt_reg,
    \ecrc_pause_enabled.reg_tx_ecrc_pkt_reg ,
    \L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg_0 ,
    ppm_L1_thrtl_reg,
    axi_in_packet_reg,
    lnk_up_thrtl_reg,
    \thrtl_ctl_trn_flush.reg_disable_trn_reg ,
    tready_thrtl_reg_0,
    tcfg_req_trig,
    out,
    s_axis_tx_tvalid,
    \throttle_ctl_pipeline.reg_tsrc_rdy_reg ,
    s_axis_tx_tvalid_cpler,
    s_axis_tx_tlast,
    tbuf_av_gap_thrtl_reg,
    tbuf_av_gap_thrtl_i_2,
    cfg_pcie_link_state,
    s_axis_tx_tready_0,
    trn_tbuf_av,
    \throttle_ctl_pipeline.reg_tdata_reg[127]_0 ,
    \throttle_ctl_pipeline.reg_tuser_reg[3]_0 ,
    \throttle_ctl_pipeline.reg_tkeep_reg[15] );
  output [1:0]trn_trem;
  output reg_tcfg_gnt;
  output tready_thrtl_reg;
  output trn_teof;
  output trn_tsrc_rdy;
  output reg_axi_in_pkt;
  output \ecrc_pause_enabled.reg_tx_ecrc_pkt ;
  output \L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg ;
  output ppm_L1_thrtl;
  output axi_in_packet;
  output lnk_up_thrtl;
  output ppm_L1_trig;
  output cfg_pm_turnoff_ok_n;
  output trn_tcfg_gnt;
  output trn_tsof;
  output s_axis_tx_tready;
  output [1:0]\tbuf_av_d_reg[4] ;
  output [127:0]\throttle_ctl_pipeline.reg_tdata_reg[127] ;
  output [3:0]\throttle_ctl_pipeline.reg_tuser_reg[3] ;
  input [0:0]SR;
  input tx_cfg_gnt_mux;
  input pipe_userclk2_in;
  input trn_tcfg_req;
  input trn_tdst_rdy;
  input cfg_turnoff_ok_mux;
  input tbuf_av_min_trig;
  input s_axis_tx_tlast_mux;
  input s_axis_tx_tvalid_mux;
  input reg_axi_in_pkt_reg;
  input \ecrc_pause_enabled.reg_tx_ecrc_pkt_reg ;
  input \L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg_0 ;
  input ppm_L1_thrtl_reg;
  input axi_in_packet_reg;
  input lnk_up_thrtl_reg;
  input \thrtl_ctl_trn_flush.reg_disable_trn_reg ;
  input tready_thrtl_reg_0;
  input tcfg_req_trig;
  input out;
  input s_axis_tx_tvalid;
  input \throttle_ctl_pipeline.reg_tsrc_rdy_reg ;
  input s_axis_tx_tvalid_cpler;
  input s_axis_tx_tlast;
  input tbuf_av_gap_thrtl_reg;
  input tbuf_av_gap_thrtl_i_2;
  input [2:0]cfg_pcie_link_state;
  input s_axis_tx_tready_0;
  input [5:0]trn_tbuf_av;
  input [127:0]\throttle_ctl_pipeline.reg_tdata_reg[127]_0 ;
  input [3:0]\throttle_ctl_pipeline.reg_tuser_reg[3]_0 ;
  input [2:0]\throttle_ctl_pipeline.reg_tkeep_reg[15] ;

  wire \L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg ;
  wire \L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg_0 ;
  wire [0:0]SR;
  wire axi_in_packet;
  wire axi_in_packet_reg;
  wire [2:0]cfg_pcie_link_state;
  wire cfg_pm_turnoff_ok_n;
  wire cfg_turnoff_ok_mux;
  wire \ecrc_pause_enabled.reg_tx_ecrc_pkt ;
  wire \ecrc_pause_enabled.reg_tx_ecrc_pkt_reg ;
  wire lnk_up_thrtl;
  wire lnk_up_thrtl_reg;
  wire out;
  wire pipe_userclk2_in;
  wire ppm_L1_thrtl;
  wire ppm_L1_thrtl_reg;
  wire ppm_L1_trig;
  wire reg_axi_in_pkt;
  wire reg_axi_in_pkt_reg;
  wire reg_disable_trn;
  wire reg_tcfg_gnt;
  wire reg_tsrc_rdy0;
  wire s_axis_tx_tlast;
  wire s_axis_tx_tlast_mux;
  wire s_axis_tx_tready;
  wire s_axis_tx_tready_0;
  wire s_axis_tx_tvalid;
  wire s_axis_tx_tvalid_cpler;
  wire s_axis_tx_tvalid_mux;
  wire [1:0]\tbuf_av_d_reg[4] ;
  wire tbuf_av_gap_thrtl_i_2;
  wire tbuf_av_gap_thrtl_reg;
  wire tbuf_av_min_trig;
  wire tcfg_req_trig;
  wire [127:0]\throttle_ctl_pipeline.reg_tdata_reg[127] ;
  wire [127:0]\throttle_ctl_pipeline.reg_tdata_reg[127]_0 ;
  wire [2:0]\throttle_ctl_pipeline.reg_tkeep_reg[15] ;
  wire \throttle_ctl_pipeline.reg_tsrc_rdy_reg ;
  wire [3:0]\throttle_ctl_pipeline.reg_tuser_reg[3] ;
  wire [3:0]\throttle_ctl_pipeline.reg_tuser_reg[3]_0 ;
  wire \thrtl_ctl_trn_flush.reg_disable_trn_reg ;
  wire tready_thrtl_reg;
  wire tready_thrtl_reg_0;
  wire [5:0]trn_tbuf_av;
  wire trn_tcfg_gnt;
  wire trn_tcfg_req;
  wire trn_tdst_rdy;
  wire trn_teof;
  wire [1:0]trn_trem;
  wire trn_tsof;
  wire trn_tsrc_rdy;
  wire tx_cfg_gnt_mux;

  pcie_7x_0_pcie_7x_0_axi_basic_tx_thrtl_ctl \thrtl_ctl_enabled.tx_thrl_ctl_inst 
       (.\L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg_0 (\L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg ),
        .\L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg_1 (\L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg_0 ),
        .SR(SR),
        .cfg_pcie_link_state(cfg_pcie_link_state),
        .cfg_pm_turnoff_ok_n(cfg_pm_turnoff_ok_n),
        .cfg_turnoff_ok_mux(cfg_turnoff_ok_mux),
        .\ecrc_pause_enabled.reg_tx_ecrc_pkt (\ecrc_pause_enabled.reg_tx_ecrc_pkt ),
        .\ecrc_pause_enabled.reg_tx_ecrc_pkt_reg_0 (\ecrc_pause_enabled.reg_tx_ecrc_pkt_reg ),
        .lnk_up_thrtl(lnk_up_thrtl),
        .lnk_up_thrtl_reg_0(lnk_up_thrtl_reg),
        .out(out),
        .pipe_userclk2_in(pipe_userclk2_in),
        .ppm_L1_thrtl(ppm_L1_thrtl),
        .ppm_L1_thrtl_reg_0(ppm_L1_thrtl_reg),
        .ppm_L1_trig(ppm_L1_trig),
        .reg_axi_in_pkt(reg_axi_in_pkt),
        .reg_axi_in_pkt_reg_0(reg_axi_in_pkt_reg),
        .reg_disable_trn(reg_disable_trn),
        .reg_tcfg_gnt(reg_tcfg_gnt),
        .reg_tsrc_rdy0(reg_tsrc_rdy0),
        .s_axis_tx_tlast(s_axis_tx_tlast),
        .s_axis_tx_tready(s_axis_tx_tready),
        .s_axis_tx_tready_0(s_axis_tx_tready_0),
        .s_axis_tx_tvalid(s_axis_tx_tvalid),
        .s_axis_tx_tvalid_cpler(s_axis_tx_tvalid_cpler),
        .\tbuf_av_d_reg[4]_0 (\tbuf_av_d_reg[4] ),
        .tbuf_av_gap_thrtl_i_2_0(tbuf_av_gap_thrtl_i_2),
        .tbuf_av_gap_thrtl_reg_0(tbuf_av_gap_thrtl_reg),
        .tbuf_av_min_trig(tbuf_av_min_trig),
        .tcfg_req_trig(tcfg_req_trig),
        .\throttle_ctl_pipeline.reg_tsrc_rdy_reg (\throttle_ctl_pipeline.reg_tsrc_rdy_reg ),
        .tready_thrtl_reg_0(tready_thrtl_reg),
        .tready_thrtl_reg_1(\thrtl_ctl_trn_flush.reg_disable_trn_reg ),
        .tready_thrtl_reg_2(tready_thrtl_reg_0),
        .trn_tbuf_av(trn_tbuf_av),
        .trn_tcfg_gnt(trn_tcfg_gnt),
        .trn_tcfg_req(trn_tcfg_req),
        .trn_tdst_rdy(trn_tdst_rdy),
        .tx_cfg_gnt_mux(tx_cfg_gnt_mux));
  pcie_7x_0_pcie_7x_0_axi_basic_tx_pipeline tx_pipeline_inst
       (.SR(SR),
        .axi_in_packet(axi_in_packet),
        .axi_in_packet_reg_0(axi_in_packet_reg),
        .out(out),
        .pipe_userclk2_in(pipe_userclk2_in),
        .reg_disable_trn(reg_disable_trn),
        .reg_tsrc_rdy0(reg_tsrc_rdy0),
        .s_axis_tx_tlast_mux(s_axis_tx_tlast_mux),
        .s_axis_tx_tvalid_mux(s_axis_tx_tvalid_mux),
        .\throttle_ctl_pipeline.reg_tdata_reg[127]_0 (\throttle_ctl_pipeline.reg_tdata_reg[127] ),
        .\throttle_ctl_pipeline.reg_tdata_reg[127]_1 (\throttle_ctl_pipeline.reg_tdata_reg[127]_0 ),
        .\throttle_ctl_pipeline.reg_tkeep_reg[15]_0 (\throttle_ctl_pipeline.reg_tkeep_reg[15] ),
        .\throttle_ctl_pipeline.reg_tuser_reg[3]_0 (\throttle_ctl_pipeline.reg_tuser_reg[3] ),
        .\throttle_ctl_pipeline.reg_tuser_reg[3]_1 (\throttle_ctl_pipeline.reg_tuser_reg[3]_0 ),
        .\thrtl_ctl_trn_flush.reg_disable_trn_reg_0 (\thrtl_ctl_trn_flush.reg_disable_trn_reg ),
        .trn_tdst_rdy(trn_tdst_rdy),
        .trn_teof(trn_teof),
        .trn_trem(trn_trem),
        .trn_tsof(trn_tsof),
        .trn_tsrc_rdy(trn_tsrc_rdy));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_axi_basic_tx_pipeline" *) 
module pcie_7x_0_pcie_7x_0_axi_basic_tx_pipeline
   (trn_trem,
    trn_teof,
    trn_tsrc_rdy,
    axi_in_packet,
    reg_disable_trn,
    trn_tsof,
    \throttle_ctl_pipeline.reg_tdata_reg[127]_0 ,
    \throttle_ctl_pipeline.reg_tuser_reg[3]_0 ,
    SR,
    s_axis_tx_tlast_mux,
    pipe_userclk2_in,
    reg_tsrc_rdy0,
    s_axis_tx_tvalid_mux,
    axi_in_packet_reg_0,
    out,
    \thrtl_ctl_trn_flush.reg_disable_trn_reg_0 ,
    trn_tdst_rdy,
    \throttle_ctl_pipeline.reg_tdata_reg[127]_1 ,
    \throttle_ctl_pipeline.reg_tuser_reg[3]_1 ,
    \throttle_ctl_pipeline.reg_tkeep_reg[15]_0 );
  output [1:0]trn_trem;
  output trn_teof;
  output trn_tsrc_rdy;
  output axi_in_packet;
  output reg_disable_trn;
  output trn_tsof;
  output [127:0]\throttle_ctl_pipeline.reg_tdata_reg[127]_0 ;
  output [3:0]\throttle_ctl_pipeline.reg_tuser_reg[3]_0 ;
  input [0:0]SR;
  input s_axis_tx_tlast_mux;
  input pipe_userclk2_in;
  input reg_tsrc_rdy0;
  input s_axis_tx_tvalid_mux;
  input axi_in_packet_reg_0;
  input out;
  input \thrtl_ctl_trn_flush.reg_disable_trn_reg_0 ;
  input trn_tdst_rdy;
  input [127:0]\throttle_ctl_pipeline.reg_tdata_reg[127]_1 ;
  input [3:0]\throttle_ctl_pipeline.reg_tuser_reg[3]_1 ;
  input [2:0]\throttle_ctl_pipeline.reg_tkeep_reg[15]_0 ;

  wire [0:0]SR;
  wire axi_in_packet;
  wire axi_in_packet_reg_0;
  wire out;
  wire pipe_userclk2_in;
  wire reg_disable_trn;
  wire reg_tsrc_rdy0;
  wire reg_tvalid;
  wire s_axis_tx_tlast_mux;
  wire s_axis_tx_tvalid_mux;
  wire [127:0]\throttle_ctl_pipeline.reg_tdata_reg[127]_0 ;
  wire [127:0]\throttle_ctl_pipeline.reg_tdata_reg[127]_1 ;
  wire [2:0]\throttle_ctl_pipeline.reg_tkeep_reg[15]_0 ;
  wire \throttle_ctl_pipeline.reg_tkeep_reg_n_0_[15] ;
  wire [3:0]\throttle_ctl_pipeline.reg_tuser_reg[3]_0 ;
  wire [3:0]\throttle_ctl_pipeline.reg_tuser_reg[3]_1 ;
  wire \thrtl_ctl_trn_flush.reg_disable_trn_i_1_n_0 ;
  wire \thrtl_ctl_trn_flush.reg_disable_trn_reg_0 ;
  wire \tkeep_to_trem_128.axi_DW_1 ;
  wire trn_in_packet;
  wire trn_in_packet_i_1__0_n_0;
  wire trn_tdst_rdy;
  wire trn_teof;
  wire [1:0]trn_trem;
  wire trn_tsof;
  wire trn_tsrc_rdy;

  FDRE axi_in_packet_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(axi_in_packet_reg_0),
        .Q(axi_in_packet),
        .R(SR));
  LUT3 #(
    .INIT(8'hBA)) 
    p_0_out
       (.I0(\throttle_ctl_pipeline.reg_tkeep_reg_n_0_[15] ),
        .I1(trn_trem[1]),
        .I2(\tkeep_to_trem_128.axi_DW_1 ),
        .O(trn_trem[0]));
  LUT2 #(
    .INIT(4'h2)) 
    pcie_block_i_i_37
       (.I0(reg_tvalid),
        .I1(trn_in_packet),
        .O(trn_tsof));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [0]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [0]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[100] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [100]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [100]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[101] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [101]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [101]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[102] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [102]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [102]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[103] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [103]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [103]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[104] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [104]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [104]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[105] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [105]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [105]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[106] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [106]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [106]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[107] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [107]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [107]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[108] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [108]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [108]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[109] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [109]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [109]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[10] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [10]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [10]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[110] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [110]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [110]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[111] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [111]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [111]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[112] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [112]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [112]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[113] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [113]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [113]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[114] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [114]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [114]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[115] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [115]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [115]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[116] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [116]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [116]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[117] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [117]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [117]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[118] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [118]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [118]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[119] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [119]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [119]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[11] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [11]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [11]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[120] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [120]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [120]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[121] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [121]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [121]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[122] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [122]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [122]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[123] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [123]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [123]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[124] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [124]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [124]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[125] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [125]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [125]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[126] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [126]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [126]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[127] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [127]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [127]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[12] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [12]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [12]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[13] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [13]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [13]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[14] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [14]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [14]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[15] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [15]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [15]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[16] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [16]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [16]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[17] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [17]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [17]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[18] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [18]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [18]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[19] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [19]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [19]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [1]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [1]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[20] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [20]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [20]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[21] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [21]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [21]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[22] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [22]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [22]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[23] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [23]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [23]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[24] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [24]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [24]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[25] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [25]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [25]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[26] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [26]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [26]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[27] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [27]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [27]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[28] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [28]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [28]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[29] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [29]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [29]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[2] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [2]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [2]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[30] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [30]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [30]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[31] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [31]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [31]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[32] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [32]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [32]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[33] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [33]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [33]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[34] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [34]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [34]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[35] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [35]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [35]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[36] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [36]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [36]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[37] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [37]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [37]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[38] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [38]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [38]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[39] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [39]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [39]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[3] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [3]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [3]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[40] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [40]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [40]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[41] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [41]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [41]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[42] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [42]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [42]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[43] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [43]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [43]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[44] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [44]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [44]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[45] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [45]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [45]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[46] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [46]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [46]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[47] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [47]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [47]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[48] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [48]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [48]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[49] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [49]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [49]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[4] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [4]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [4]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[50] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [50]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [50]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[51] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [51]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [51]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[52] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [52]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [52]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[53] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [53]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [53]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[54] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [54]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [54]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[55] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [55]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [55]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[56] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [56]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [56]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[57] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [57]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [57]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[58] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [58]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [58]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[59] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [59]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [59]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[5] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [5]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [5]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[60] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [60]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [60]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[61] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [61]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [61]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[62] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [62]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [62]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[63] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [63]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [63]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[64] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [64]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [64]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[65] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [65]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [65]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[66] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [66]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [66]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[67] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [67]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [67]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[68] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [68]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [68]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[69] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [69]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [69]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[6] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [6]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [6]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[70] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [70]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [70]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[71] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [71]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [71]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[72] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [72]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [72]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[73] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [73]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [73]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[74] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [74]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [74]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[75] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [75]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [75]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[76] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [76]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [76]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[77] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [77]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [77]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[78] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [78]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [78]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[79] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [79]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [79]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[7] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [7]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [7]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[80] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [80]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [80]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[81] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [81]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [81]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[82] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [82]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [82]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[83] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [83]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [83]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[84] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [84]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [84]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[85] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [85]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [85]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[86] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [86]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [86]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[87] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [87]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [87]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[88] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [88]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [88]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[89] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [89]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [89]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[8] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [8]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [8]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[90] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [90]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [90]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[91] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [91]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [91]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[92] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [92]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [92]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[93] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [93]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [93]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[94] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [94]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [94]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[95] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [95]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [95]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[96] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [96]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [96]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[97] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [97]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [97]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[98] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [98]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [98]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[99] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [99]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [99]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tdata_reg[9] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tdata_reg[127]_1 [9]),
        .Q(\throttle_ctl_pipeline.reg_tdata_reg[127]_0 [9]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tkeep_reg[11] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tkeep_reg[15]_0 [1]),
        .Q(trn_trem[1]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tkeep_reg[15] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tkeep_reg[15]_0 [2]),
        .Q(\throttle_ctl_pipeline.reg_tkeep_reg_n_0_[15] ),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tkeep_reg[7] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tkeep_reg[15]_0 [0]),
        .Q(\tkeep_to_trem_128.axi_DW_1 ),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tlast_reg 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(s_axis_tx_tlast_mux),
        .Q(trn_teof),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tsrc_rdy_reg 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(reg_tsrc_rdy0),
        .Q(trn_tsrc_rdy),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tuser_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tuser_reg[3]_1 [0]),
        .Q(\throttle_ctl_pipeline.reg_tuser_reg[3]_0 [0]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tuser_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tuser_reg[3]_1 [1]),
        .Q(\throttle_ctl_pipeline.reg_tuser_reg[3]_0 [1]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tuser_reg[2] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tuser_reg[3]_1 [2]),
        .Q(\throttle_ctl_pipeline.reg_tuser_reg[3]_0 [2]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tuser_reg[3] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\throttle_ctl_pipeline.reg_tuser_reg[3]_1 [3]),
        .Q(\throttle_ctl_pipeline.reg_tuser_reg[3]_0 [3]),
        .R(SR));
  FDRE \throttle_ctl_pipeline.reg_tvalid_reg 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(s_axis_tx_tvalid_mux),
        .Q(reg_tvalid),
        .R(SR));
  LUT4 #(
    .INIT(16'hF040)) 
    \thrtl_ctl_trn_flush.reg_disable_trn_i_1 
       (.I0(out),
        .I1(axi_in_packet),
        .I2(\thrtl_ctl_trn_flush.reg_disable_trn_reg_0 ),
        .I3(reg_disable_trn),
        .O(\thrtl_ctl_trn_flush.reg_disable_trn_i_1_n_0 ));
  FDRE \thrtl_ctl_trn_flush.reg_disable_trn_reg 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\thrtl_ctl_trn_flush.reg_disable_trn_i_1_n_0 ),
        .Q(reg_disable_trn),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000F088F000F000)) 
    trn_in_packet_i_1__0
       (.I0(trn_tdst_rdy),
        .I1(reg_tvalid),
        .I2(out),
        .I3(trn_in_packet),
        .I4(trn_teof),
        .I5(trn_tsrc_rdy),
        .O(trn_in_packet_i_1__0_n_0));
  FDRE trn_in_packet_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(trn_in_packet_i_1__0_n_0),
        .Q(trn_in_packet),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_axi_basic_tx_thrtl_ctl" *) 
module pcie_7x_0_pcie_7x_0_axi_basic_tx_thrtl_ctl
   (reg_tcfg_gnt,
    tready_thrtl_reg_0,
    reg_axi_in_pkt,
    \ecrc_pause_enabled.reg_tx_ecrc_pkt ,
    \L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg_0 ,
    ppm_L1_thrtl,
    lnk_up_thrtl,
    ppm_L1_trig,
    cfg_pm_turnoff_ok_n,
    trn_tcfg_gnt,
    reg_tsrc_rdy0,
    s_axis_tx_tready,
    \tbuf_av_d_reg[4]_0 ,
    SR,
    tx_cfg_gnt_mux,
    pipe_userclk2_in,
    trn_tcfg_req,
    trn_tdst_rdy,
    cfg_turnoff_ok_mux,
    tbuf_av_min_trig,
    reg_axi_in_pkt_reg_0,
    \ecrc_pause_enabled.reg_tx_ecrc_pkt_reg_0 ,
    \L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg_1 ,
    ppm_L1_thrtl_reg_0,
    lnk_up_thrtl_reg_0,
    tready_thrtl_reg_1,
    tready_thrtl_reg_2,
    tcfg_req_trig,
    out,
    s_axis_tx_tvalid,
    \throttle_ctl_pipeline.reg_tsrc_rdy_reg ,
    s_axis_tx_tvalid_cpler,
    reg_disable_trn,
    s_axis_tx_tlast,
    tbuf_av_gap_thrtl_reg_0,
    tbuf_av_gap_thrtl_i_2_0,
    cfg_pcie_link_state,
    s_axis_tx_tready_0,
    trn_tbuf_av);
  output reg_tcfg_gnt;
  output tready_thrtl_reg_0;
  output reg_axi_in_pkt;
  output \ecrc_pause_enabled.reg_tx_ecrc_pkt ;
  output \L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg_0 ;
  output ppm_L1_thrtl;
  output lnk_up_thrtl;
  output ppm_L1_trig;
  output cfg_pm_turnoff_ok_n;
  output trn_tcfg_gnt;
  output reg_tsrc_rdy0;
  output s_axis_tx_tready;
  output [1:0]\tbuf_av_d_reg[4]_0 ;
  input [0:0]SR;
  input tx_cfg_gnt_mux;
  input pipe_userclk2_in;
  input trn_tcfg_req;
  input trn_tdst_rdy;
  input cfg_turnoff_ok_mux;
  input tbuf_av_min_trig;
  input reg_axi_in_pkt_reg_0;
  input \ecrc_pause_enabled.reg_tx_ecrc_pkt_reg_0 ;
  input \L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg_1 ;
  input ppm_L1_thrtl_reg_0;
  input lnk_up_thrtl_reg_0;
  input tready_thrtl_reg_1;
  input tready_thrtl_reg_2;
  input tcfg_req_trig;
  input out;
  input s_axis_tx_tvalid;
  input \throttle_ctl_pipeline.reg_tsrc_rdy_reg ;
  input s_axis_tx_tvalid_cpler;
  input reg_disable_trn;
  input s_axis_tx_tlast;
  input tbuf_av_gap_thrtl_reg_0;
  input tbuf_av_gap_thrtl_i_2_0;
  input [2:0]cfg_pcie_link_state;
  input s_axis_tx_tready_0;
  input [5:0]trn_tbuf_av;

  wire \L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg_0 ;
  wire \L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg_1 ;
  wire [0:0]SR;
  wire [2:0]cfg_pcie_link_state;
  wire [2:0]cfg_pcie_link_state_d;
  wire cfg_pm_turnoff_ok_n;
  wire cfg_turnoff_ok_mux;
  wire cfg_turnoff_ok_pending;
  wire cfg_turnoff_ok_pending_i_1_n_0;
  wire cur_state;
  wire \ecrc_pause_enabled.reg_tx_ecrc_pkt ;
  wire \ecrc_pause_enabled.reg_tx_ecrc_pkt_reg_0 ;
  wire lnk_up_thrtl;
  wire lnk_up_thrtl_reg_0;
  wire next_state;
  wire out;
  wire p_2_in;
  wire pcie_block_i_i_152_n_0;
  wire pcie_block_i_i_153_n_0;
  wire pcie_block_i_i_154_n_0;
  wire pipe_userclk2_in;
  wire ppm_L1_thrtl;
  wire ppm_L1_thrtl_reg_0;
  wire ppm_L1_trig;
  wire ppm_L23_thrtl;
  wire ppm_L23_thrtl_i_1_n_0;
  wire ppm_L23_trig;
  wire reg_axi_in_pkt;
  wire reg_axi_in_pkt_reg_0;
  wire reg_disable_trn;
  wire reg_tcfg_gnt;
  wire reg_tsrc_rdy0;
  wire reg_turnoff_ok;
  wire s_axis_tx_tlast;
  wire s_axis_tx_tready;
  wire s_axis_tx_tready_0;
  wire s_axis_tx_tvalid;
  wire s_axis_tx_tvalid_cpler;
  wire [5:0]tbuf_av_d;
  wire [1:0]\tbuf_av_d_reg[4]_0 ;
  wire tbuf_av_gap_thrtl;
  wire tbuf_av_gap_thrtl_i_1_n_0;
  wire tbuf_av_gap_thrtl_i_2_0;
  wire tbuf_av_gap_thrtl_i_3_n_0;
  wire tbuf_av_gap_thrtl_reg_0;
  wire tbuf_av_gap_trig;
  wire tbuf_av_min_thrtl;
  wire tbuf_av_min_trig;
  wire \tbuf_gap_cnt[0]_i_1_n_0 ;
  wire \tbuf_gap_cnt[1]_i_1_n_0 ;
  wire \tbuf_gap_cnt[2]_i_1_n_0 ;
  wire \tbuf_gap_cnt_reg_n_0_[0] ;
  wire \tbuf_gap_cnt_reg_n_0_[1] ;
  wire \tbuf_gap_cnt_reg_n_0_[2] ;
  wire tcfg_gnt_pending;
  wire tcfg_gnt_pending_i_1_n_0;
  wire [1:0]tcfg_req_cnt;
  wire \tcfg_req_cnt[0]_i_1_n_0 ;
  wire \tcfg_req_cnt[1]_i_1_n_0 ;
  wire tcfg_req_thrtl;
  wire tcfg_req_thrtl_i_1_n_0;
  wire tcfg_req_trig;
  wire \throttle_ctl_pipeline.reg_tsrc_rdy_reg ;
  wire tready_thrtl0;
  wire tready_thrtl_i_2_n_0;
  wire tready_thrtl_i_5_n_0;
  wire tready_thrtl_reg_0;
  wire tready_thrtl_reg_1;
  wire tready_thrtl_reg_2;
  wire [5:0]trn_tbuf_av;
  wire trn_tcfg_gnt;
  wire trn_tcfg_req;
  wire trn_tcfg_req_d;
  wire trn_tdst_rdy;
  wire trn_tdst_rdy_d;
  wire tx_cfg_gnt_mux;

  FDRE \L23_thrtl_ep.reg_turnoff_ok_reg 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(cfg_turnoff_ok_mux),
        .Q(reg_turnoff_ok),
        .R(SR));
  FDRE \L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg_1 ),
        .Q(\L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg_0 ),
        .R(SR));
  FDRE \cfg_pcie_link_state_d_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(cfg_pcie_link_state[0]),
        .Q(cfg_pcie_link_state_d[0]),
        .R(SR));
  FDRE \cfg_pcie_link_state_d_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(cfg_pcie_link_state[1]),
        .Q(cfg_pcie_link_state_d[1]),
        .R(SR));
  FDRE \cfg_pcie_link_state_d_reg[2] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(cfg_pcie_link_state[2]),
        .Q(cfg_pcie_link_state_d[2]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT5 #(
    .INIT(32'h75553000)) 
    cfg_turnoff_ok_pending_i_1
       (.I0(cfg_pm_turnoff_ok_n),
        .I1(ppm_L23_thrtl),
        .I2(reg_turnoff_ok),
        .I3(\L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg_0 ),
        .I4(cfg_turnoff_ok_pending),
        .O(cfg_turnoff_ok_pending_i_1_n_0));
  FDRE cfg_turnoff_ok_pending_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(cfg_turnoff_ok_pending_i_1_n_0),
        .Q(cfg_turnoff_ok_pending),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT3 #(
    .INIT(8'h45)) 
    cur_state_i_1__0
       (.I0(pcie_block_i_i_153_n_0),
        .I1(cur_state),
        .I2(pcie_block_i_i_154_n_0),
        .O(next_state));
  FDSE cur_state_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(next_state),
        .Q(cur_state),
        .S(SR));
  FDRE \ecrc_pause_enabled.reg_tx_ecrc_pkt_reg 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\ecrc_pause_enabled.reg_tx_ecrc_pkt_reg_0 ),
        .Q(\ecrc_pause_enabled.reg_tx_ecrc_pkt ),
        .R(SR));
  FDSE lnk_up_thrtl_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(lnk_up_thrtl_reg_0),
        .Q(lnk_up_thrtl),
        .S(SR));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT2 #(
    .INIT(4'hE)) 
    pcie_block_i_i_152
       (.I0(pcie_block_i_i_154_n_0),
        .I1(pcie_block_i_i_153_n_0),
        .O(pcie_block_i_i_152_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    pcie_block_i_i_153
       (.I0(ppm_L1_thrtl),
        .I1(lnk_up_thrtl),
        .I2(tbuf_av_gap_thrtl),
        .I3(tbuf_av_min_thrtl),
        .I4(tcfg_req_thrtl),
        .I5(ppm_L23_thrtl),
        .O(pcie_block_i_i_153_n_0));
  LUT6 #(
    .INIT(64'h444400C0C0C000C0)) 
    pcie_block_i_i_154
       (.I0(s_axis_tx_tlast),
        .I1(tready_thrtl_reg_0),
        .I2(reg_axi_in_pkt),
        .I3(s_axis_tx_tvalid_cpler),
        .I4(\throttle_ctl_pipeline.reg_tsrc_rdy_reg ),
        .I5(s_axis_tx_tvalid),
        .O(pcie_block_i_i_154_n_0));
  LUT6 #(
    .INIT(64'h20202020A0AFA0A0)) 
    pcie_block_i_i_26
       (.I0(cfg_turnoff_ok_pending),
        .I1(tcfg_gnt_pending),
        .I2(cur_state),
        .I3(pcie_block_i_i_152_n_0),
        .I4(ppm_L23_thrtl),
        .I5(tcfg_req_thrtl),
        .O(cfg_pm_turnoff_ok_n));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT5 #(
    .INIT(32'hAA020002)) 
    pcie_block_i_i_36
       (.I0(tcfg_req_thrtl),
        .I1(pcie_block_i_i_153_n_0),
        .I2(pcie_block_i_i_154_n_0),
        .I3(cur_state),
        .I4(tcfg_gnt_pending),
        .O(trn_tcfg_gnt));
  LUT6 #(
    .INIT(64'h0000010000000000)) 
    ppm_L1_thrtl_i_2
       (.I0(cfg_pcie_link_state_d[1]),
        .I1(cfg_pcie_link_state_d[2]),
        .I2(cfg_pcie_link_state_d[0]),
        .I3(cfg_pcie_link_state[0]),
        .I4(cfg_pcie_link_state[1]),
        .I5(cfg_pcie_link_state[2]),
        .O(ppm_L1_trig));
  FDRE ppm_L1_thrtl_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(ppm_L1_thrtl_reg_0),
        .Q(ppm_L1_thrtl),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    ppm_L23_thrtl_i_1
       (.I0(\L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg_0 ),
        .I1(reg_turnoff_ok),
        .I2(ppm_L23_thrtl),
        .O(ppm_L23_thrtl_i_1_n_0));
  FDRE ppm_L23_thrtl_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(ppm_L23_thrtl_i_1_n_0),
        .Q(ppm_L23_thrtl),
        .R(SR));
  FDRE reg_axi_in_pkt_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(reg_axi_in_pkt_reg_0),
        .Q(reg_axi_in_pkt),
        .R(1'b0));
  FDRE reg_tcfg_gnt_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(tx_cfg_gnt_mux),
        .Q(reg_tcfg_gnt),
        .R(SR));
  LUT2 #(
    .INIT(4'h8)) 
    s_axis_tx_tready_INST_0
       (.I0(tready_thrtl_reg_0),
        .I1(s_axis_tx_tready_0),
        .O(s_axis_tx_tready));
  FDRE \tbuf_av_d_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(trn_tbuf_av[0]),
        .Q(tbuf_av_d[0]),
        .R(SR));
  FDRE \tbuf_av_d_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(trn_tbuf_av[1]),
        .Q(tbuf_av_d[1]),
        .R(SR));
  FDRE \tbuf_av_d_reg[2] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(trn_tbuf_av[2]),
        .Q(tbuf_av_d[2]),
        .R(SR));
  FDRE \tbuf_av_d_reg[3] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(trn_tbuf_av[3]),
        .Q(\tbuf_av_d_reg[4]_0 [0]),
        .R(SR));
  FDRE \tbuf_av_d_reg[4] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(trn_tbuf_av[4]),
        .Q(\tbuf_av_d_reg[4]_0 [1]),
        .R(SR));
  FDRE \tbuf_av_d_reg[5] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(trn_tbuf_av[5]),
        .Q(tbuf_av_d[5]),
        .R(SR));
  LUT5 #(
    .INIT(32'hFFFEFF00)) 
    tbuf_av_gap_thrtl_i_1
       (.I0(\tbuf_gap_cnt_reg_n_0_[2] ),
        .I1(\tbuf_gap_cnt_reg_n_0_[1] ),
        .I2(\tbuf_gap_cnt_reg_n_0_[0] ),
        .I3(tbuf_av_gap_trig),
        .I4(tbuf_av_gap_thrtl),
        .O(tbuf_av_gap_thrtl_i_1_n_0));
  LUT6 #(
    .INIT(64'h0400FFFF04000400)) 
    tbuf_av_gap_thrtl_i_2
       (.I0(p_2_in),
        .I1(trn_tdst_rdy),
        .I2(trn_tdst_rdy_d),
        .I3(tcfg_req_thrtl),
        .I4(tbuf_av_gap_thrtl_i_3_n_0),
        .I5(tbuf_av_gap_thrtl_reg_0),
        .O(tbuf_av_gap_trig));
  LUT6 #(
    .INIT(64'hA8AAAAAAAAAAAAAA)) 
    tbuf_av_gap_thrtl_i_3
       (.I0(tready_thrtl_reg_1),
        .I1(tbuf_av_gap_thrtl_i_2_0),
        .I2(tbuf_av_d[5]),
        .I3(tbuf_av_d[0]),
        .I4(tbuf_av_d[2]),
        .I5(tbuf_av_d[1]),
        .O(tbuf_av_gap_thrtl_i_3_n_0));
  FDRE tbuf_av_gap_thrtl_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(tbuf_av_gap_thrtl_i_1_n_0),
        .Q(tbuf_av_gap_thrtl),
        .R(SR));
  FDRE tbuf_av_min_thrtl_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(tbuf_av_min_trig),
        .Q(tbuf_av_min_thrtl),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000000054000000)) 
    \tbuf_gap_cnt[0]_i_1 
       (.I0(\tbuf_gap_cnt_reg_n_0_[0] ),
        .I1(\tbuf_gap_cnt_reg_n_0_[2] ),
        .I2(\tbuf_gap_cnt_reg_n_0_[1] ),
        .I3(cur_state),
        .I4(tbuf_av_gap_thrtl),
        .I5(SR),
        .O(\tbuf_gap_cnt[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000098000000)) 
    \tbuf_gap_cnt[1]_i_1 
       (.I0(\tbuf_gap_cnt_reg_n_0_[0] ),
        .I1(\tbuf_gap_cnt_reg_n_0_[1] ),
        .I2(\tbuf_gap_cnt_reg_n_0_[2] ),
        .I3(cur_state),
        .I4(tbuf_av_gap_thrtl),
        .I5(SR),
        .O(\tbuf_gap_cnt[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF7F7F777)) 
    \tbuf_gap_cnt[2]_i_1 
       (.I0(tbuf_av_gap_thrtl),
        .I1(cur_state),
        .I2(\tbuf_gap_cnt_reg_n_0_[2] ),
        .I3(\tbuf_gap_cnt_reg_n_0_[1] ),
        .I4(\tbuf_gap_cnt_reg_n_0_[0] ),
        .O(\tbuf_gap_cnt[2]_i_1_n_0 ));
  FDRE \tbuf_gap_cnt_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\tbuf_gap_cnt[0]_i_1_n_0 ),
        .Q(\tbuf_gap_cnt_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \tbuf_gap_cnt_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\tbuf_gap_cnt[1]_i_1_n_0 ),
        .Q(\tbuf_gap_cnt_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \tbuf_gap_cnt_reg[2] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\tbuf_gap_cnt[2]_i_1_n_0 ),
        .Q(\tbuf_gap_cnt_reg_n_0_[2] ),
        .R(SR));
  LUT4 #(
    .INIT(16'h4F44)) 
    tcfg_gnt_pending_i_1
       (.I0(trn_tcfg_req_d),
        .I1(trn_tcfg_req),
        .I2(trn_tcfg_gnt),
        .I3(tcfg_gnt_pending),
        .O(tcfg_gnt_pending_i_1_n_0));
  FDRE tcfg_gnt_pending_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(tcfg_gnt_pending_i_1_n_0),
        .Q(tcfg_gnt_pending),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000000000000D00)) 
    \tcfg_req_cnt[0]_i_1 
       (.I0(trn_tcfg_req),
        .I1(trn_tcfg_req_d),
        .I2(tcfg_gnt_pending),
        .I3(tcfg_req_cnt[1]),
        .I4(tcfg_req_cnt[0]),
        .I5(SR),
        .O(\tcfg_req_cnt[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT5 #(
    .INIT(32'hFFFF88F8)) 
    \tcfg_req_cnt[1]_i_1 
       (.I0(tcfg_req_cnt[0]),
        .I1(tcfg_req_cnt[1]),
        .I2(trn_tcfg_req),
        .I3(trn_tcfg_req_d),
        .I4(tcfg_gnt_pending),
        .O(\tcfg_req_cnt[1]_i_1_n_0 ));
  FDRE \tcfg_req_cnt_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\tcfg_req_cnt[0]_i_1_n_0 ),
        .Q(tcfg_req_cnt[0]),
        .R(1'b0));
  FDRE \tcfg_req_cnt_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\tcfg_req_cnt[1]_i_1_n_0 ),
        .Q(tcfg_req_cnt[1]),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFF8FF88888888)) 
    tcfg_req_thrtl_i_1
       (.I0(reg_tcfg_gnt),
        .I1(trn_tcfg_req),
        .I2(trn_tdst_rdy_d),
        .I3(trn_tdst_rdy),
        .I4(p_2_in),
        .I5(tcfg_req_thrtl),
        .O(tcfg_req_thrtl_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT2 #(
    .INIT(4'hE)) 
    tcfg_req_thrtl_i_2
       (.I0(tcfg_req_cnt[1]),
        .I1(tcfg_req_cnt[0]),
        .O(p_2_in));
  FDRE tcfg_req_thrtl_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(tcfg_req_thrtl_i_1_n_0),
        .Q(tcfg_req_thrtl),
        .R(SR));
  LUT6 #(
    .INIT(64'h000000008A800000)) 
    \throttle_ctl_pipeline.reg_tsrc_rdy_i_1 
       (.I0(tready_thrtl_reg_0),
        .I1(s_axis_tx_tvalid),
        .I2(\throttle_ctl_pipeline.reg_tsrc_rdy_reg ),
        .I3(s_axis_tx_tvalid_cpler),
        .I4(out),
        .I5(reg_disable_trn),
        .O(reg_tsrc_rdy0));
  LUT6 #(
    .INIT(64'hCCCFCCCF888A0000)) 
    tready_thrtl_i_1
       (.I0(tready_thrtl_i_2_n_0),
        .I1(tready_thrtl_reg_1),
        .I2(tready_thrtl_reg_2),
        .I3(\ecrc_pause_enabled.reg_tx_ecrc_pkt ),
        .I4(pcie_block_i_i_153_n_0),
        .I5(tready_thrtl_i_5_n_0),
        .O(tready_thrtl0));
  LUT6 #(
    .INIT(64'h0000000000000100)) 
    tready_thrtl_i_2
       (.I0(tbuf_av_gap_trig),
        .I1(ppm_L1_trig),
        .I2(tcfg_req_trig),
        .I3(out),
        .I4(ppm_L23_trig),
        .I5(tbuf_av_min_trig),
        .O(tready_thrtl_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT2 #(
    .INIT(4'h2)) 
    tready_thrtl_i_5
       (.I0(pcie_block_i_i_154_n_0),
        .I1(cur_state),
        .O(tready_thrtl_i_5_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    tready_thrtl_i_7
       (.I0(reg_turnoff_ok),
        .I1(\L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg_0 ),
        .O(ppm_L23_trig));
  FDRE tready_thrtl_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(tready_thrtl0),
        .Q(tready_thrtl_reg_0),
        .R(SR));
  FDRE trn_tcfg_req_d_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(trn_tcfg_req),
        .Q(trn_tcfg_req_d),
        .R(SR));
  FDSE trn_tdst_rdy_d_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(trn_tdst_rdy),
        .Q(trn_tdst_rdy_d),
        .S(SR));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_core_top" *) 
module pcie_7x_0_pcie_7x_0_core_top
   (pl_ltssm_state,
    PIPE_DRP_FSM,
    user_reset_out,
    startup_eos,
    cfg_aer_ecrc_check_en,
    cfg_aer_ecrc_gen_en,
    cfg_aer_rooterr_corr_err_received,
    cfg_aer_rooterr_corr_err_reporting_en,
    cfg_aer_rooterr_fatal_err_received,
    cfg_aer_rooterr_fatal_err_reporting_en,
    cfg_aer_rooterr_non_fatal_err_received,
    cfg_aer_rooterr_non_fatal_err_reporting_en,
    cfg_bridge_serr_en,
    cfg_command,
    cfg_dcommand2,
    cfg_dcommand,
    cfg_dstatus,
    cfg_interrupt_msienable,
    cfg_interrupt_msixenable,
    cfg_interrupt_msixfm,
    cfg_lcommand,
    cfg_lstatus,
    cfg_msg_received_assert_int_a,
    cfg_msg_received_assert_int_b,
    cfg_msg_received_assert_int_c,
    cfg_msg_received_assert_int_d,
    cfg_msg_received_deassert_int_a,
    cfg_msg_received_deassert_int_b,
    cfg_msg_received_deassert_int_c,
    cfg_msg_received_deassert_int_d,
    cfg_msg_received_err_cor,
    cfg_msg_received_err_fatal,
    cfg_msg_received_err_non_fatal,
    cfg_msg_received_pm_as_nak,
    cfg_msg_received_pme_to_ack,
    cfg_msg_received_pm_pme,
    cfg_msg_received_setslotpowerlimit,
    cfg_pmcsr_pme_en,
    cfg_pmcsr_pme_status,
    cfg_root_control_pme_int_en,
    cfg_root_control_syserr_corr_err_en,
    cfg_root_control_syserr_fatal_err_en,
    cfg_root_control_syserr_non_fatal_err_en,
    cfg_slot_control_electromech_il_ctl_pulse,
    pl_directed_change_done,
    pl_link_gen2_cap,
    pl_link_partner_gen2_supported,
    pl_link_upcfg_cap,
    pl_sel_lnk_rate,
    fc_cpld,
    fc_npd,
    fc_pd,
    pl_lane_reversal_mode,
    pl_rx_pm_state,
    pl_sel_lnk_width,
    cfg_interrupt_mmenable,
    pl_initial_link_width,
    pl_tx_pm_state,
    cfg_mgmt_do,
    cfg_vc_tcvc_map,
    cfg_interrupt_do,
    fc_cplh,
    fc_nph,
    fc_ph,
    PIPE_RST_IDLE,
    PIPE_RST_FSM,
    pipe_cpll_lock,
    PIPE_QRST_IDLE,
    pipe_rst_fsm,
    int_qplllock_out,
    pipe_qrst_fsm,
    pipe_rate_fsm,
    pipe_pclk_sel_out,
    gen3_reg,
    ext_ch_gt_drprdy,
    ext_ch_gt_drpdo,
    int_qplloutclk_out,
    int_qplloutrefclk_out,
    pipe_rxstatus,
    PIPE_SYNC_FSM_TX,
    pipe_sync_fsm_rx,
    pipe_rxphaligndone,
    pipe_eyescandataerror,
    pci_exp_txn,
    pci_exp_txp,
    pipe_rxcommadet,
    pipe_rxdlysresetdone,
    pipe_rxoutclk_out,
    pipe_rxprbserr,
    pipe_txdlysresetdone,
    pipe_txoutclk_out,
    pipe_txphaligndone,
    pipe_txphinitdone,
    pipe_rxbufstatus,
    pipe_dmonitorout,
    pipe_rxdisperr,
    pipe_rxnotintable,
    pipe_rate_idle,
    gt_ch_drp_rdy,
    user_app_rdy_gnt_reg,
    user_lnk_up,
    tx_err_drop,
    tx_cfg_req,
    s_axis_tx_tready,
    m_axis_rx_tvalid,
    cfg_msg_received,
    cfg_to_turnoff,
    pl_phy_lnk_up,
    pl_received_hot_rst,
    startup_cfgclk,
    startup_cfgmclk,
    startup_preq,
    pcie_drp_rdy,
    tx_buf_av,
    cfg_pcie_link_state,
    cfg_pmcsr_powerstate,
    cfg_device_number,
    cfg_function_number,
    m_axis_rx_tdata,
    m_axis_rx_tuser,
    cfg_msg_data,
    cfg_bus_number,
    pcie_drp_do,
    cfg_mgmt_rd_wr_done,
    cfg_err_aer_headerlog_set,
    cfg_err_cpl_rdy,
    cfg_interrupt_rdy,
    cfg_received_func_lvl_rst,
    pipe_pclk_in,
    ext_ch_gt_drpaddr,
    m_axis_rx_tready,
    s_axis_tx_tvalid,
    s_axis_tx_tlast,
    pipe_userclk2_in,
    pipe_userclk1_in,
    pcie_drp_clk,
    pl_directed_link_auton,
    pl_directed_link_speed,
    pl_downstream_deemph_source,
    cfg_err_aer_headerlog,
    cfg_pm_force_state,
    pl_directed_link_width,
    cfg_mgmt_di,
    cfg_err_tlp_cpl_header,
    cfg_aer_interrupt_msgnum,
    cfg_pciecap_interrupt_msgnum,
    cfg_interrupt_di,
    cfg_mgmt_dwaddr,
    pipe_mmcm_lock_in,
    pipe_rxusrclk_in,
    pipe_dclk_in,
    sys_clk,
    pipe_oobclk_in,
    pci_exp_rxn,
    pci_exp_rxp,
    pipe_rxprbscntreset,
    pipe_txinhibit,
    pipe_txprbsforceerr,
    pipe_loopback,
    pipe_rxprbssel,
    pipe_txprbssel,
    ext_ch_gt_drpdi,
    ext_ch_gt_drpen,
    ext_ch_gt_drpwe,
    sys_rst_n,
    cfg_mgmt_byte_en,
    s_axis_tx_tdata,
    s_axis_tx_tuser,
    cfg_trn_pending,
    pl_transmit_hot_rst,
    cfg_mgmt_wr_en,
    cfg_mgmt_rd_en,
    cfg_err_malformed,
    cfg_err_cor,
    cfg_err_ur,
    cfg_err_ecrc,
    cfg_err_cpl_timeout,
    cfg_err_cpl_abort,
    cfg_err_cpl_unexpect,
    cfg_err_poisoned,
    cfg_err_atomic_egress_blocked,
    cfg_err_mc_blocked,
    cfg_err_internal_uncor,
    cfg_err_internal_cor,
    cfg_interrupt,
    cfg_pm_halt_aspm_l0s,
    cfg_pm_halt_aspm_l1,
    cfg_pm_force_state_en,
    cfg_pm_wake,
    cfg_turnoff_ok,
    pcie_drp_en,
    pcie_drp_we,
    startup_clk,
    startup_gsr,
    startup_gts,
    startup_pack,
    startup_usrcclko,
    startup_usrdoneo,
    tx_cfg_gnt,
    rx_np_ok,
    rx_np_req,
    fc_sel,
    pl_directed_link_change,
    pl_upstream_prefer_deemph,
    cfg_ds_device_number,
    cfg_ds_function_number,
    startup_keyclearb,
    startup_usrcclkts,
    startup_usrdonets,
    s_axis_tx_tkeep,
    cfg_ds_bus_number,
    cfg_dsn,
    pcie_drp_addr,
    pcie_drp_di,
    cfg_mgmt_wr_rw1c_as_rw,
    cfg_mgmt_wr_readonly,
    cfg_err_posted,
    cfg_err_locked,
    cfg_err_norecovery,
    cfg_interrupt_assert,
    cfg_interrupt_stat);
  output [5:0]pl_ltssm_state;
  output [11:0]PIPE_DRP_FSM;
  output user_reset_out;
  output startup_eos;
  output cfg_aer_ecrc_check_en;
  output cfg_aer_ecrc_gen_en;
  output cfg_aer_rooterr_corr_err_received;
  output cfg_aer_rooterr_corr_err_reporting_en;
  output cfg_aer_rooterr_fatal_err_received;
  output cfg_aer_rooterr_fatal_err_reporting_en;
  output cfg_aer_rooterr_non_fatal_err_received;
  output cfg_aer_rooterr_non_fatal_err_reporting_en;
  output cfg_bridge_serr_en;
  output [4:0]cfg_command;
  output [11:0]cfg_dcommand2;
  output [14:0]cfg_dcommand;
  output [4:0]cfg_dstatus;
  output cfg_interrupt_msienable;
  output cfg_interrupt_msixenable;
  output cfg_interrupt_msixfm;
  output [10:0]cfg_lcommand;
  output [9:0]cfg_lstatus;
  output cfg_msg_received_assert_int_a;
  output cfg_msg_received_assert_int_b;
  output cfg_msg_received_assert_int_c;
  output cfg_msg_received_assert_int_d;
  output cfg_msg_received_deassert_int_a;
  output cfg_msg_received_deassert_int_b;
  output cfg_msg_received_deassert_int_c;
  output cfg_msg_received_deassert_int_d;
  output cfg_msg_received_err_cor;
  output cfg_msg_received_err_fatal;
  output cfg_msg_received_err_non_fatal;
  output cfg_msg_received_pm_as_nak;
  output cfg_msg_received_pme_to_ack;
  output cfg_msg_received_pm_pme;
  output cfg_msg_received_setslotpowerlimit;
  output cfg_pmcsr_pme_en;
  output cfg_pmcsr_pme_status;
  output cfg_root_control_pme_int_en;
  output cfg_root_control_syserr_corr_err_en;
  output cfg_root_control_syserr_fatal_err_en;
  output cfg_root_control_syserr_non_fatal_err_en;
  output cfg_slot_control_electromech_il_ctl_pulse;
  output pl_directed_change_done;
  output pl_link_gen2_cap;
  output pl_link_partner_gen2_supported;
  output pl_link_upcfg_cap;
  output pl_sel_lnk_rate;
  output [11:0]fc_cpld;
  output [11:0]fc_npd;
  output [11:0]fc_pd;
  output [1:0]pl_lane_reversal_mode;
  output [1:0]pl_rx_pm_state;
  output [1:0]pl_sel_lnk_width;
  output [2:0]cfg_interrupt_mmenable;
  output [2:0]pl_initial_link_width;
  output [2:0]pl_tx_pm_state;
  output [31:0]cfg_mgmt_do;
  output [6:0]cfg_vc_tcvc_map;
  output [7:0]cfg_interrupt_do;
  output [7:0]fc_cplh;
  output [7:0]fc_nph;
  output [7:0]fc_ph;
  output PIPE_RST_IDLE;
  output [0:0]PIPE_RST_FSM;
  output [3:0]pipe_cpll_lock;
  output PIPE_QRST_IDLE;
  output [3:0]pipe_rst_fsm;
  output [0:0]int_qplllock_out;
  output [3:0]pipe_qrst_fsm;
  output [19:0]pipe_rate_fsm;
  output [3:0]pipe_pclk_sel_out;
  output gen3_reg;
  output [3:0]ext_ch_gt_drprdy;
  output [63:0]ext_ch_gt_drpdo;
  output [0:0]int_qplloutclk_out;
  output [0:0]int_qplloutrefclk_out;
  output [11:0]pipe_rxstatus;
  output [23:0]PIPE_SYNC_FSM_TX;
  output [3:0]pipe_sync_fsm_rx;
  output [3:0]pipe_rxphaligndone;
  output [3:0]pipe_eyescandataerror;
  output [3:0]pci_exp_txn;
  output [3:0]pci_exp_txp;
  output [3:0]pipe_rxcommadet;
  output [3:0]pipe_rxdlysresetdone;
  output [3:0]pipe_rxoutclk_out;
  output [3:0]pipe_rxprbserr;
  output [3:0]pipe_txdlysresetdone;
  output pipe_txoutclk_out;
  output [3:0]pipe_txphaligndone;
  output [3:0]pipe_txphinitdone;
  output [11:0]pipe_rxbufstatus;
  output [31:0]pipe_dmonitorout;
  output [31:0]pipe_rxdisperr;
  output [31:0]pipe_rxnotintable;
  output pipe_rate_idle;
  output [3:0]gt_ch_drp_rdy;
  output user_app_rdy_gnt_reg;
  output user_lnk_up;
  output tx_err_drop;
  output tx_cfg_req;
  output s_axis_tx_tready;
  output m_axis_rx_tvalid;
  output cfg_msg_received;
  output cfg_to_turnoff;
  output pl_phy_lnk_up;
  output pl_received_hot_rst;
  output startup_cfgclk;
  output startup_cfgmclk;
  output startup_preq;
  output pcie_drp_rdy;
  output [5:0]tx_buf_av;
  output [2:0]cfg_pcie_link_state;
  output [1:0]cfg_pmcsr_powerstate;
  output [4:0]cfg_device_number;
  output [2:0]cfg_function_number;
  output [127:0]m_axis_rx_tdata;
  output [14:0]m_axis_rx_tuser;
  output [15:0]cfg_msg_data;
  output [7:0]cfg_bus_number;
  output [15:0]pcie_drp_do;
  output cfg_mgmt_rd_wr_done;
  output cfg_err_aer_headerlog_set;
  output cfg_err_cpl_rdy;
  output cfg_interrupt_rdy;
  output cfg_received_func_lvl_rst;
  input pipe_pclk_in;
  input [35:0]ext_ch_gt_drpaddr;
  input m_axis_rx_tready;
  input s_axis_tx_tvalid;
  input s_axis_tx_tlast;
  input pipe_userclk2_in;
  input pipe_userclk1_in;
  input pcie_drp_clk;
  input pl_directed_link_auton;
  input pl_directed_link_speed;
  input pl_downstream_deemph_source;
  input [127:0]cfg_err_aer_headerlog;
  input [1:0]cfg_pm_force_state;
  input [1:0]pl_directed_link_width;
  input [31:0]cfg_mgmt_di;
  input [47:0]cfg_err_tlp_cpl_header;
  input [4:0]cfg_aer_interrupt_msgnum;
  input [4:0]cfg_pciecap_interrupt_msgnum;
  input [7:0]cfg_interrupt_di;
  input [9:0]cfg_mgmt_dwaddr;
  input pipe_mmcm_lock_in;
  input pipe_rxusrclk_in;
  input pipe_dclk_in;
  input sys_clk;
  input pipe_oobclk_in;
  input [3:0]pci_exp_rxn;
  input [3:0]pci_exp_rxp;
  input pipe_rxprbscntreset;
  input [3:0]pipe_txinhibit;
  input pipe_txprbsforceerr;
  input [2:0]pipe_loopback;
  input [2:0]pipe_rxprbssel;
  input [2:0]pipe_txprbssel;
  input [63:0]ext_ch_gt_drpdi;
  input [3:0]ext_ch_gt_drpen;
  input [3:0]ext_ch_gt_drpwe;
  input sys_rst_n;
  input [3:0]cfg_mgmt_byte_en;
  input [127:0]s_axis_tx_tdata;
  input [3:0]s_axis_tx_tuser;
  input cfg_trn_pending;
  input pl_transmit_hot_rst;
  input cfg_mgmt_wr_en;
  input cfg_mgmt_rd_en;
  input cfg_err_malformed;
  input cfg_err_cor;
  input cfg_err_ur;
  input cfg_err_ecrc;
  input cfg_err_cpl_timeout;
  input cfg_err_cpl_abort;
  input cfg_err_cpl_unexpect;
  input cfg_err_poisoned;
  input cfg_err_atomic_egress_blocked;
  input cfg_err_mc_blocked;
  input cfg_err_internal_uncor;
  input cfg_err_internal_cor;
  input cfg_interrupt;
  input cfg_pm_halt_aspm_l0s;
  input cfg_pm_halt_aspm_l1;
  input cfg_pm_force_state_en;
  input cfg_pm_wake;
  input cfg_turnoff_ok;
  input pcie_drp_en;
  input pcie_drp_we;
  input startup_clk;
  input startup_gsr;
  input startup_gts;
  input startup_pack;
  input startup_usrcclko;
  input startup_usrdoneo;
  input tx_cfg_gnt;
  input rx_np_ok;
  input rx_np_req;
  input [2:0]fc_sel;
  input [1:0]pl_directed_link_change;
  input pl_upstream_prefer_deemph;
  input [4:0]cfg_ds_device_number;
  input [2:0]cfg_ds_function_number;
  input startup_keyclearb;
  input startup_usrcclkts;
  input startup_usrdonets;
  input [2:0]s_axis_tx_tkeep;
  input [7:0]cfg_ds_bus_number;
  input [63:0]cfg_dsn;
  input [8:0]pcie_drp_addr;
  input [15:0]pcie_drp_di;
  input cfg_mgmt_wr_rw1c_as_rw;
  input cfg_mgmt_wr_readonly;
  input cfg_err_posted;
  input cfg_err_locked;
  input cfg_err_norecovery;
  input cfg_interrupt_assert;
  input cfg_interrupt_stat;

  wire [11:0]PIPE_DRP_FSM;
  wire PIPE_QRST_IDLE;
  wire [0:0]PIPE_RST_FSM;
  wire PIPE_RST_IDLE;
  wire [23:0]PIPE_SYNC_FSM_TX;
  wire [3:2]\axi_basic_top/rx_inst/rx_null_gen_inst/reg_pkt_len_counter ;
  wire \axi_basic_top/rx_inst/rx_pipeline_inst/data_hold ;
  wire \axi_basic_top/tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/ecrc_pause_enabled.reg_tx_ecrc_pkt ;
  wire \axi_basic_top/tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/reg_axi_in_pkt ;
  wire \axi_basic_top/tx_inst/tx_pipeline_inst/axi_in_packet ;
  wire bridge_reset_int;
  wire cfg_aer_ecrc_check_en;
  wire cfg_aer_ecrc_gen_en;
  wire [4:0]cfg_aer_interrupt_msgnum;
  wire cfg_aer_rooterr_corr_err_received;
  wire cfg_aer_rooterr_corr_err_reporting_en;
  wire cfg_aer_rooterr_fatal_err_received;
  wire cfg_aer_rooterr_fatal_err_reporting_en;
  wire cfg_aer_rooterr_non_fatal_err_received;
  wire cfg_aer_rooterr_non_fatal_err_reporting_en;
  wire cfg_bridge_serr_en;
  wire [7:0]cfg_bus_number;
  wire [7:0]cfg_bus_number_mux;
  wire [4:0]cfg_command;
  wire [14:0]cfg_dcommand;
  wire [11:0]cfg_dcommand2;
  wire [4:0]cfg_device_number;
  wire [4:0]cfg_device_number_mux;
  wire [7:0]cfg_ds_bus_number;
  wire [7:0]cfg_ds_bus_number_mux;
  wire [4:0]cfg_ds_device_number;
  wire [4:0]cfg_ds_device_number_mux;
  wire [2:0]cfg_ds_function_number;
  wire [2:0]cfg_ds_function_number_mux;
  wire [63:0]cfg_dsn;
  wire [63:0]cfg_dsn_mux;
  wire [4:0]cfg_dstatus;
  wire [127:0]cfg_err_aer_headerlog;
  wire cfg_err_aer_headerlog_set;
  wire cfg_err_atomic_egress_blocked;
  wire cfg_err_cor;
  wire cfg_err_cpl_abort;
  wire cfg_err_cpl_rdy;
  wire cfg_err_cpl_timeout;
  wire cfg_err_cpl_unexpect;
  wire cfg_err_ecrc;
  wire cfg_err_internal_cor;
  wire cfg_err_internal_uncor;
  wire cfg_err_locked;
  wire cfg_err_malformed;
  wire cfg_err_mc_blocked;
  wire cfg_err_norecovery;
  wire cfg_err_poisoned;
  wire cfg_err_posted;
  wire [47:0]cfg_err_tlp_cpl_header;
  wire cfg_err_ur;
  wire [2:0]cfg_function_number;
  wire [2:0]cfg_function_number_mux;
  wire cfg_interrupt;
  wire cfg_interrupt_assert;
  wire [7:0]cfg_interrupt_di;
  wire [7:0]cfg_interrupt_do;
  wire [2:0]cfg_interrupt_mmenable;
  wire cfg_interrupt_msienable;
  wire cfg_interrupt_msixenable;
  wire cfg_interrupt_msixfm;
  wire cfg_interrupt_rdy;
  wire cfg_interrupt_stat;
  wire [10:0]cfg_lcommand;
  wire [9:0]cfg_lstatus;
  wire [3:0]cfg_mgmt_byte_en;
  wire [31:0]cfg_mgmt_di;
  wire [31:0]cfg_mgmt_do;
  wire [9:0]cfg_mgmt_dwaddr;
  wire cfg_mgmt_rd_en;
  wire cfg_mgmt_rd_wr_done;
  wire cfg_mgmt_wr_en;
  wire cfg_mgmt_wr_readonly;
  wire cfg_mgmt_wr_rw1c_as_rw;
  wire [15:0]cfg_msg_data;
  wire [15:0]cfg_msg_data_mux;
  wire cfg_msg_received;
  wire cfg_msg_received_assert_int_a;
  wire cfg_msg_received_assert_int_b;
  wire cfg_msg_received_assert_int_c;
  wire cfg_msg_received_assert_int_d;
  wire cfg_msg_received_deassert_int_a;
  wire cfg_msg_received_deassert_int_b;
  wire cfg_msg_received_deassert_int_c;
  wire cfg_msg_received_deassert_int_d;
  wire cfg_msg_received_err_cor;
  wire cfg_msg_received_err_fatal;
  wire cfg_msg_received_err_non_fatal;
  wire cfg_msg_received_mux;
  wire cfg_msg_received_pm_as_nak;
  wire cfg_msg_received_pm_pme;
  wire cfg_msg_received_pme_to_ack;
  wire cfg_msg_received_setslotpowerlimit;
  wire [2:0]cfg_pcie_link_state;
  wire [2:0]cfg_pcie_link_state_mux;
  wire [4:0]cfg_pciecap_interrupt_msgnum;
  wire [1:0]cfg_pm_force_state;
  wire cfg_pm_force_state_en;
  wire cfg_pm_halt_aspm_l0s;
  wire cfg_pm_halt_aspm_l1;
  wire cfg_pm_wake;
  wire cfg_pmcsr_pme_en;
  wire cfg_pmcsr_pme_status;
  wire [1:0]cfg_pmcsr_powerstate;
  wire [1:0]cfg_pmcsr_powerstate_mux;
  wire cfg_received_func_lvl_rst;
  wire cfg_root_control_pme_int_en;
  wire cfg_root_control_syserr_corr_err_en;
  wire cfg_root_control_syserr_fatal_err_en;
  wire cfg_root_control_syserr_non_fatal_err_en;
  wire cfg_slot_control_electromech_il_ctl_pulse;
  wire cfg_to_turnoff;
  wire cfg_to_turnoff_mux;
  wire cfg_trn_pending;
  wire cfg_turnoff_ok;
  wire cfg_turnoff_ok_mux;
  wire [6:0]cfg_vc_tcvc_map;
  wire [35:0]ext_ch_gt_drpaddr;
  wire [63:0]ext_ch_gt_drpdi;
  wire [63:0]ext_ch_gt_drpdo;
  wire [3:0]ext_ch_gt_drpen;
  wire [3:0]ext_ch_gt_drprdy;
  wire [3:0]ext_ch_gt_drpwe;
  wire [11:0]fc_cpld;
  wire [7:0]fc_cplh;
  wire [11:0]fc_npd;
  wire [7:0]fc_nph;
  wire [11:0]fc_pd;
  wire [7:0]fc_ph;
  wire [2:0]fc_sel;
  wire [2:0]fc_sel_mux;
  wire gen3_reg;
  wire [3:0]gt_ch_drp_rdy;
  wire gt_top_i_n_12;
  wire [0:0]int_qplllock_out;
  wire [0:0]int_qplloutclk_out;
  wire [0:0]int_qplloutrefclk_out;
  wire \ltssm_reg1_reg[0]_srl2_n_0 ;
  wire \ltssm_reg1_reg[1]_srl2_n_0 ;
  wire \ltssm_reg1_reg[2]_srl2_n_0 ;
  wire \ltssm_reg1_reg[3]_srl2_n_0 ;
  wire \ltssm_reg1_reg[4]_srl2_n_0 ;
  wire \ltssm_reg1_reg[5]_srl2_n_0 ;
  wire [5:0]ltssm_reg2;
  wire [127:0]m_axis_rx_tdata;
  wire [127:0]m_axis_rx_tdata_mux;
  wire m_axis_rx_tready;
  wire m_axis_rx_tready_cpler;
  wire m_axis_rx_tready_mux;
  wire [14:0]m_axis_rx_tuser;
  wire [21:0]m_axis_rx_tuser_mux;
  wire m_axis_rx_tvalid;
  wire m_axis_rx_tvalid_mux;
  wire p_0_in__0;
  wire [3:0]pci_exp_rxn;
  wire [3:0]pci_exp_rxp;
  wire [3:0]pci_exp_txn;
  wire [3:0]pci_exp_txp;
  wire pcie_block_i_i_62_n_0;
  wire pcie_block_i_i_63_n_0;
  wire pcie_block_i_i_64_n_0;
  wire pcie_block_i_i_65_n_0;
  wire [8:0]pcie_drp_addr;
  wire [8:0]pcie_drp_addr_mux;
  wire pcie_drp_clk;
  wire [15:0]pcie_drp_di;
  wire [15:0]pcie_drp_di_mux;
  wire [15:0]pcie_drp_do;
  wire [15:0]pcie_drp_do_mux;
  wire pcie_drp_en;
  wire pcie_drp_en_mux;
  wire pcie_drp_rdy;
  wire pcie_drp_rdy_mux;
  wire pcie_drp_we;
  wire pcie_drp_we_mux;
  wire pcie_top_i_n_163;
  wire pcie_top_i_n_164;
  wire pcie_top_i_n_165;
  wire pcie_top_i_n_166;
  wire pcie_top_i_n_167;
  wire pcie_top_i_n_168;
  wire pcie_top_i_n_169;
  wire pcie_top_i_n_170;
  wire pcie_top_i_n_171;
  wire pcie_top_i_n_172;
  wire pcie_top_i_n_173;
  wire pcie_top_i_n_174;
  wire pcie_top_i_n_175;
  wire pcie_top_i_n_176;
  wire pcie_top_i_n_177;
  wire pcie_top_i_n_178;
  wire pcie_top_i_n_179;
  wire pcie_top_i_n_180;
  wire pcie_top_i_n_181;
  wire pcie_top_i_n_182;
  wire pcie_top_i_n_183;
  wire pcie_top_i_n_184;
  wire pcie_top_i_n_185;
  wire pcie_top_i_n_186;
  wire pcie_top_i_n_187;
  wire pcie_top_i_n_188;
  wire pcie_top_i_n_189;
  wire pcie_top_i_n_194;
  wire pcie_top_i_n_195;
  wire pcie_top_i_n_196;
  wire pcie_top_i_n_197;
  wire pcie_top_i_n_198;
  wire pcie_top_i_n_199;
  wire pcie_top_i_n_200;
  wire pcie_top_i_n_201;
  wire pcie_top_i_n_202;
  wire pcie_top_i_n_203;
  wire pcie_top_i_n_204;
  wire pcie_top_i_n_205;
  wire pcie_top_i_n_206;
  wire pcie_top_i_n_207;
  wire pcie_top_i_n_208;
  wire pcie_top_i_n_209;
  wire pcie_top_i_n_222;
  wire pcie_top_i_n_239;
  wire pcie_top_i_n_240;
  wire pcie_top_i_n_241;
  wire pcie_top_i_n_242;
  wire pcie_top_i_n_243;
  wire pcie_top_i_n_244;
  wire pcie_top_i_n_245;
  wire pcie_top_i_n_246;
  wire pcie_top_i_n_247;
  wire pcie_top_i_n_248;
  wire pcie_top_i_n_249;
  wire pcie_top_i_n_250;
  wire pcie_top_i_n_251;
  wire pcie_top_i_n_252;
  wire pcie_top_i_n_253;
  wire pcie_top_i_n_254;
  wire pcie_top_i_n_255;
  wire phy_rdy_n;
  wire [3:0]pipe_cpll_lock;
  wire pipe_dclk_in;
  wire [31:0]pipe_dmonitorout;
  wire [3:0]pipe_eyescandataerror;
  wire [2:0]pipe_loopback;
  wire pipe_mmcm_lock_in;
  wire pipe_oobclk_in;
  wire pipe_pclk_in;
  wire [3:0]pipe_pclk_sel_out;
  wire [3:0]pipe_qrst_fsm;
  wire [19:0]pipe_rate_fsm;
  wire pipe_rate_idle;
  wire [3:0]pipe_rst_fsm;
  wire pipe_rx0_chanisaligned_gt;
  wire [1:0]pipe_rx0_char_is_k_gt;
  wire [15:0]pipe_rx0_data_gt;
  wire pipe_rx0_elec_idle_gt;
  wire pipe_rx0_phy_status_gt;
  wire pipe_rx0_polarity_gt;
  wire [2:0]pipe_rx0_status_gt;
  wire pipe_rx0_valid_gt;
  wire pipe_rx1_chanisaligned_gt;
  wire [1:0]pipe_rx1_char_is_k_gt;
  wire [15:0]pipe_rx1_data_gt;
  wire pipe_rx1_elec_idle_gt;
  wire pipe_rx1_phy_status_gt;
  wire pipe_rx1_polarity_gt;
  wire [2:0]pipe_rx1_status_gt;
  wire pipe_rx1_valid_gt;
  wire pipe_rx2_chanisaligned_gt;
  wire [1:0]pipe_rx2_char_is_k_gt;
  wire [15:0]pipe_rx2_data_gt;
  wire pipe_rx2_elec_idle_gt;
  wire pipe_rx2_phy_status_gt;
  wire pipe_rx2_polarity_gt;
  wire [2:0]pipe_rx2_status_gt;
  wire pipe_rx2_valid_gt;
  wire pipe_rx3_chanisaligned_gt;
  wire [1:0]pipe_rx3_char_is_k_gt;
  wire [15:0]pipe_rx3_data_gt;
  wire pipe_rx3_elec_idle_gt;
  wire pipe_rx3_phy_status_gt;
  wire pipe_rx3_polarity_gt;
  wire [2:0]pipe_rx3_status_gt;
  wire pipe_rx3_valid_gt;
  wire [11:0]pipe_rxbufstatus;
  wire [3:0]pipe_rxcommadet;
  wire [31:0]pipe_rxdisperr;
  wire [3:0]pipe_rxdlysresetdone;
  wire [31:0]pipe_rxnotintable;
  wire [3:0]pipe_rxoutclk_out;
  wire [3:0]pipe_rxphaligndone;
  wire pipe_rxprbscntreset;
  wire [3:0]pipe_rxprbserr;
  wire [2:0]pipe_rxprbssel;
  wire [11:0]pipe_rxstatus;
  wire pipe_rxusrclk_in;
  wire [3:0]pipe_sync_fsm_rx;
  wire [1:0]pipe_tx0_char_is_k_gt;
  wire pipe_tx0_compliance_gt;
  wire [15:0]pipe_tx0_data_gt;
  wire pipe_tx0_elec_idle_gt;
  wire [1:0]pipe_tx0_powerdown_gt;
  wire [1:0]pipe_tx1_char_is_k_gt;
  wire pipe_tx1_compliance_gt;
  wire [15:0]pipe_tx1_data_gt;
  wire pipe_tx1_elec_idle_gt;
  wire [1:0]pipe_tx1_powerdown_gt;
  wire [1:0]pipe_tx2_char_is_k_gt;
  wire pipe_tx2_compliance_gt;
  wire [15:0]pipe_tx2_data_gt;
  wire pipe_tx2_elec_idle_gt;
  wire [1:0]pipe_tx2_powerdown_gt;
  wire [1:0]pipe_tx3_char_is_k_gt;
  wire pipe_tx3_compliance_gt;
  wire [15:0]pipe_tx3_data_gt;
  wire pipe_tx3_elec_idle_gt;
  wire [1:0]pipe_tx3_powerdown_gt;
  wire pipe_tx_deemph_gt;
  wire [2:0]pipe_tx_margin_gt;
  wire pipe_tx_rate_gt;
  wire pipe_tx_rcvr_det_gt;
  wire [3:0]pipe_txdlysresetdone;
  wire [3:0]pipe_txinhibit;
  wire pipe_txoutclk_out;
  wire [3:0]pipe_txphaligndone;
  wire [3:0]pipe_txphinitdone;
  wire pipe_txprbsforceerr;
  wire [2:0]pipe_txprbssel;
  wire pipe_userclk1_in;
  wire pipe_userclk2_in;
  wire pl_directed_change_done;
  wire pl_directed_link_auton;
  wire [1:0]pl_directed_link_change;
  wire [1:0]pl_directed_link_change_mux;
  wire pl_directed_link_speed;
  wire [1:0]pl_directed_link_width;
  wire pl_downstream_deemph_source;
  wire [2:0]pl_initial_link_width;
  wire [1:0]pl_lane_reversal_mode;
  wire pl_link_gen2_cap;
  wire pl_link_partner_gen2_supported;
  wire pl_link_upcfg_cap;
  wire [5:0]pl_ltssm_state;
  wire [5:0]pl_ltssm_state_int;
  wire pl_phy_lnk_up;
  wire pl_phy_lnk_up_q;
  wire pl_phy_lnk_up_sync;
  wire pl_phy_lnk_up_wire;
  wire pl_received_hot_rst;
  wire pl_received_hot_rst_q;
  wire pl_received_hot_rst_sync;
  wire pl_received_hot_rst_wire;
  wire [1:0]pl_rx_pm_state;
  wire pl_sel_lnk_rate;
  wire [1:0]pl_sel_lnk_width;
  wire pl_transmit_hot_rst;
  wire pl_transmit_hot_rst_mux;
  wire [2:0]pl_tx_pm_state;
  wire pl_upstream_prefer_deemph;
  wire pl_upstream_prefer_deemph_mux;
  wire [6:2]req_addr1_in;
  wire rx_np_ok;
  wire rx_np_ok_mux;
  wire rx_np_req;
  wire rx_np_req_mux;
  wire [127:0]s_axis_tx_tdata;
  wire [127:0]s_axis_tx_tdata_mux;
  wire [2:0]s_axis_tx_tkeep;
  wire [15:7]s_axis_tx_tkeep_mux;
  wire s_axis_tx_tlast;
  wire s_axis_tx_tlast_mux;
  wire s_axis_tx_tready;
  wire s_axis_tx_tready_mux;
  wire [3:0]s_axis_tx_tuser;
  wire [3:0]s_axis_tx_tuser_mux;
  wire s_axis_tx_tvalid;
  wire s_axis_tx_tvalid_cpler;
  wire s_axis_tx_tvalid_mux;
  wire startup_cfgclk;
  wire startup_cfgclk_mux;
  wire startup_cfgmclk;
  wire startup_cfgmclk_mux;
  wire startup_clk;
  wire startup_clk_mux;
  wire startup_eos;
  wire startup_gsr;
  wire startup_gsr_mux;
  wire startup_gts;
  wire startup_gts_mux;
  wire startup_keyclearb;
  wire startup_keyclearb_mux;
  wire startup_pack;
  wire startup_pack_mux;
  wire startup_preq;
  wire startup_preq_mux;
  wire startup_usrcclko;
  wire startup_usrcclko_mux;
  wire startup_usrcclkts;
  wire startup_usrcclkts_mux;
  wire startup_usrdoneo;
  wire startup_usrdoneo_mux;
  wire startup_usrdonets;
  wire startup_usrdonets_mux;
  (* DONT_TOUCH *) wire store_ltssm;
  wire sys_clk;
  wire sys_or_hot_rst;
  wire sys_rst_n;
  wire [2:0]\tandem_EP_RX_i/state ;
  wire tandem_cpler_inst_n_10;
  wire tandem_cpler_inst_n_11;
  wire tandem_cpler_inst_n_12;
  wire tandem_cpler_inst_n_13;
  wire tandem_cpler_inst_n_14;
  wire tandem_cpler_inst_n_154;
  wire tandem_cpler_inst_n_16;
  wire tandem_cpler_inst_n_168;
  wire tandem_cpler_inst_n_169;
  wire tandem_cpler_inst_n_170;
  wire tandem_cpler_inst_n_171;
  wire tandem_cpler_inst_n_172;
  wire tandem_cpler_inst_n_173;
  wire tandem_cpler_inst_n_174;
  wire tandem_cpler_inst_n_175;
  wire tandem_cpler_inst_n_176;
  wire tandem_cpler_inst_n_177;
  wire tandem_cpler_inst_n_178;
  wire tandem_cpler_inst_n_179;
  wire tandem_cpler_inst_n_18;
  wire tandem_cpler_inst_n_180;
  wire tandem_cpler_inst_n_181;
  wire tandem_cpler_inst_n_182;
  wire tandem_cpler_inst_n_183;
  wire tandem_cpler_inst_n_184;
  wire tandem_cpler_inst_n_185;
  wire tandem_cpler_inst_n_186;
  wire tandem_cpler_inst_n_21;
  wire tandem_cpler_inst_n_3;
  wire tandem_cpler_inst_n_4;
  wire tandem_cpler_inst_n_5;
  wire tandem_cpler_inst_n_520;
  wire tandem_cpler_inst_n_521;
  wire tandem_cpler_inst_n_6;
  wire trn_lnk_up;
  wire [5:0]tx_buf_av;
  wire [5:0]tx_buf_av_mux;
  wire tx_cfg_gnt;
  wire tx_cfg_gnt_mux;
  wire tx_cfg_req;
  wire tx_cfg_req_mux;
  wire tx_err_drop;
  wire tx_err_drop_mux;
  wire user_app_rdy_gnt_reg;
  wire user_app_rdy_req;
  wire user_lnk_up;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) wire user_lnk_up_int;
  (* async_reg = "true" *) wire user_lnk_up_mux;
  wire user_reset_out;
  wire [3:0]wr_be1_in;

  pcie_7x_0_pcie_7x_0_gt_top gt_top_i
       (.D(pipe_tx_rate_gt),
        .INT_QPLLLOCK_OUT(int_qplllock_out),
        .INT_QPLLOUTCLK_OUT(int_qplloutclk_out),
        .INT_QPLLOUTREFCLK_OUT(int_qplloutrefclk_out),
        .PIPE_CPLL_LOCK(pipe_cpll_lock),
        .PIPE_DRP_FSM(PIPE_DRP_FSM),
        .PIPE_QRST_IDLE(PIPE_QRST_IDLE),
        .PIPE_RST_FSM(PIPE_RST_FSM),
        .PIPE_RST_IDLE(PIPE_RST_IDLE),
        .PIPE_RXPHALIGNDONE(pipe_rxphaligndone),
        .PIPE_SYNC_FSM_TX(PIPE_SYNC_FSM_TX),
        .Q(pipe_tx0_powerdown_gt),
        .SR(phy_rdy_n),
        .USER_RATE_GEN3(gen3_reg),
        .USER_TXCOMPLIANCE(pipe_tx0_compliance_gt),
        .USER_TXELECIDLE(pipe_tx0_elec_idle_gt),
        .\cplllock_reg1_reg[0] (pipe_tx0_data_gt),
        .\cplllock_reg1_reg[0]_0 (pipe_tx0_char_is_k_gt),
        .\cplllock_reg1_reg[1] (pipe_tx1_powerdown_gt),
        .\cplllock_reg1_reg[1]_0 (pipe_tx1_data_gt),
        .\cplllock_reg1_reg[1]_1 (pipe_tx1_char_is_k_gt),
        .\cplllock_reg1_reg[2] (pipe_tx2_powerdown_gt),
        .\cplllock_reg1_reg[2]_0 (pipe_tx2_data_gt),
        .\cplllock_reg1_reg[2]_1 (pipe_tx2_char_is_k_gt),
        .\cplllock_reg1_reg[3] (pipe_tx_margin_gt),
        .\cplllock_reg1_reg[3]_0 (pipe_tx3_powerdown_gt),
        .\cplllock_reg1_reg[3]_1 (pipe_tx3_data_gt),
        .\cplllock_reg1_reg[3]_2 (pipe_tx3_char_is_k_gt),
        .ext_ch_gt_drpaddr(ext_ch_gt_drpaddr),
        .ext_ch_gt_drpdi(ext_ch_gt_drpdi),
        .ext_ch_gt_drpdo(ext_ch_gt_drpdo),
        .ext_ch_gt_drpen(ext_ch_gt_drpen),
        .ext_ch_gt_drprdy(ext_ch_gt_drprdy),
        .ext_ch_gt_drpwe(ext_ch_gt_drpwe),
        .gt_ch_drp_rdy(gt_ch_drp_rdy),
        .\gt_rxcharisk_q_reg[1] (pipe_rx0_char_is_k_gt),
        .\gt_rxcharisk_q_reg[1]_0 (pipe_rx1_char_is_k_gt),
        .\gt_rxcharisk_q_reg[1]_1 (pipe_rx2_char_is_k_gt),
        .\gt_rxcharisk_q_reg[1]_2 (pipe_rx3_char_is_k_gt),
        .p_0_in__0(p_0_in__0),
        .pci_exp_rxn(pci_exp_rxn),
        .pci_exp_rxp(pci_exp_rxp),
        .pci_exp_txn(pci_exp_txn),
        .pci_exp_txp(pci_exp_txp),
        .pipe_dclk_in(pipe_dclk_in),
        .pipe_dmonitorout(pipe_dmonitorout),
        .pipe_eyescandataerror(pipe_eyescandataerror),
        .pipe_loopback(pipe_loopback),
        .pipe_mmcm_lock_in(pipe_mmcm_lock_in),
        .pipe_oobclk_in(pipe_oobclk_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_pclk_sel_out(pipe_pclk_sel_out),
        .pipe_qrst_fsm(pipe_qrst_fsm),
        .pipe_rate_fsm(pipe_rate_fsm),
        .pipe_rate_idle(pipe_rate_idle),
        .pipe_rst_fsm(pipe_rst_fsm),
        .pipe_rx0_chanisaligned(pipe_rx0_chanisaligned_gt),
        .pipe_rx0_data(pipe_rx0_data_gt),
        .pipe_rx0_elec_idle(pipe_rx0_elec_idle_gt),
        .pipe_rx0_phy_status(pipe_rx0_phy_status_gt),
        .pipe_rx0_polarity(pipe_rx0_polarity_gt),
        .pipe_rx0_status(pipe_rx0_status_gt),
        .pipe_rx0_valid(pipe_rx0_valid_gt),
        .pipe_rx1_chanisaligned(pipe_rx1_chanisaligned_gt),
        .pipe_rx1_data(pipe_rx1_data_gt),
        .pipe_rx1_elec_idle(pipe_rx1_elec_idle_gt),
        .pipe_rx1_phy_status(pipe_rx1_phy_status_gt),
        .pipe_rx1_polarity(pipe_rx1_polarity_gt),
        .pipe_rx1_status(pipe_rx1_status_gt),
        .pipe_rx1_valid(pipe_rx1_valid_gt),
        .pipe_rx2_chanisaligned(pipe_rx2_chanisaligned_gt),
        .pipe_rx2_data(pipe_rx2_data_gt),
        .pipe_rx2_elec_idle(pipe_rx2_elec_idle_gt),
        .pipe_rx2_phy_status(pipe_rx2_phy_status_gt),
        .pipe_rx2_polarity(pipe_rx2_polarity_gt),
        .pipe_rx2_status(pipe_rx2_status_gt),
        .pipe_rx2_valid(pipe_rx2_valid_gt),
        .pipe_rx3_chanisaligned(pipe_rx3_chanisaligned_gt),
        .pipe_rx3_data(pipe_rx3_data_gt),
        .pipe_rx3_elec_idle(pipe_rx3_elec_idle_gt),
        .pipe_rx3_phy_status(pipe_rx3_phy_status_gt),
        .pipe_rx3_polarity(pipe_rx3_polarity_gt),
        .pipe_rx3_status(pipe_rx3_status_gt),
        .pipe_rx3_valid(pipe_rx3_valid_gt),
        .pipe_rxbufstatus(pipe_rxbufstatus),
        .pipe_rxcommadet(pipe_rxcommadet),
        .pipe_rxdisperr(pipe_rxdisperr),
        .pipe_rxdlysresetdone(pipe_rxdlysresetdone),
        .pipe_rxnotintable(pipe_rxnotintable),
        .pipe_rxoutclk_out(pipe_rxoutclk_out),
        .pipe_rxprbscntreset(pipe_rxprbscntreset),
        .pipe_rxprbserr(pipe_rxprbserr),
        .pipe_rxprbssel(pipe_rxprbssel),
        .pipe_rxstatus(pipe_rxstatus),
        .pipe_rxusrclk_in(pipe_rxusrclk_in),
        .pipe_sync_fsm_rx(pipe_sync_fsm_rx),
        .pipe_tx_deemph_gt(pipe_tx_deemph_gt),
        .pipe_tx_rcvr_det_gt(pipe_tx_rcvr_det_gt),
        .pipe_txdlysresetdone(pipe_txdlysresetdone),
        .pipe_txinhibit(pipe_txinhibit),
        .pipe_txoutclk_out(pipe_txoutclk_out),
        .pipe_txphaligndone(pipe_txphaligndone),
        .pipe_txphinitdone(pipe_txphinitdone),
        .pipe_txprbsforceerr(pipe_txprbsforceerr),
        .pipe_txprbssel(pipe_txprbssel),
        .pl_ltssm_state(pl_ltssm_state_int),
        .reset_n_reg2_reg(sys_rst_n),
        .sys_clk(sys_clk),
        .sys_rst_n(gt_top_i_n_12),
        .txcompliance_reg1_reg(pipe_tx1_compliance_gt),
        .txcompliance_reg1_reg_0(pipe_tx2_compliance_gt),
        .txcompliance_reg1_reg_1(pipe_tx3_compliance_gt),
        .txelecidle_reg1_reg(pipe_tx1_elec_idle_gt),
        .txelecidle_reg1_reg_0(pipe_tx2_elec_idle_gt),
        .txelecidle_reg1_reg_1(pipe_tx3_elec_idle_gt));
  (* srl_bus_name = "inst/\inst/ltssm_reg1_reg " *) 
  (* srl_name = "inst/\inst/ltssm_reg1_reg[0]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ltssm_reg1_reg[0]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(pipe_pclk_in),
        .D(pl_ltssm_state[0]),
        .Q(\ltssm_reg1_reg[0]_srl2_n_0 ));
  (* srl_bus_name = "inst/\inst/ltssm_reg1_reg " *) 
  (* srl_name = "inst/\inst/ltssm_reg1_reg[1]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ltssm_reg1_reg[1]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(pipe_pclk_in),
        .D(pl_ltssm_state[1]),
        .Q(\ltssm_reg1_reg[1]_srl2_n_0 ));
  (* srl_bus_name = "inst/\inst/ltssm_reg1_reg " *) 
  (* srl_name = "inst/\inst/ltssm_reg1_reg[2]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ltssm_reg1_reg[2]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(pipe_pclk_in),
        .D(pl_ltssm_state[2]),
        .Q(\ltssm_reg1_reg[2]_srl2_n_0 ));
  (* srl_bus_name = "inst/\inst/ltssm_reg1_reg " *) 
  (* srl_name = "inst/\inst/ltssm_reg1_reg[3]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ltssm_reg1_reg[3]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(pipe_pclk_in),
        .D(pl_ltssm_state[3]),
        .Q(\ltssm_reg1_reg[3]_srl2_n_0 ));
  (* srl_bus_name = "inst/\inst/ltssm_reg1_reg " *) 
  (* srl_name = "inst/\inst/ltssm_reg1_reg[4]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ltssm_reg1_reg[4]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(pipe_pclk_in),
        .D(pl_ltssm_state[4]),
        .Q(\ltssm_reg1_reg[4]_srl2_n_0 ));
  (* srl_bus_name = "inst/\inst/ltssm_reg1_reg " *) 
  (* srl_name = "inst/\inst/ltssm_reg1_reg[5]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ltssm_reg1_reg[5]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(pipe_pclk_in),
        .D(pl_ltssm_state[5]),
        .Q(\ltssm_reg1_reg[5]_srl2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ltssm_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\ltssm_reg1_reg[0]_srl2_n_0 ),
        .Q(ltssm_reg2[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ltssm_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\ltssm_reg1_reg[1]_srl2_n_0 ),
        .Q(ltssm_reg2[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ltssm_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\ltssm_reg1_reg[2]_srl2_n_0 ),
        .Q(ltssm_reg2[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ltssm_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\ltssm_reg1_reg[3]_srl2_n_0 ),
        .Q(ltssm_reg2[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ltssm_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\ltssm_reg1_reg[4]_srl2_n_0 ),
        .Q(ltssm_reg2[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ltssm_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\ltssm_reg1_reg[5]_srl2_n_0 ),
        .Q(ltssm_reg2[5]),
        .R(1'b0));
  pcie_7x_0_pcie_7x_0_fast_cfg_init_cntr pcie_7x_0_fast_cfg_init_cntr_i
       (.out(user_app_rdy_req),
        .pipe_userclk2_in(pipe_userclk2_in),
        .startup_cfgclk_mux(startup_cfgclk_mux),
        .startup_cfgmclk_mux(startup_cfgmclk_mux),
        .startup_clk_mux(startup_clk_mux),
        .startup_eos(startup_eos),
        .startup_gsr_mux(startup_gsr_mux),
        .startup_gts_mux(startup_gts_mux),
        .startup_keyclearb_mux(startup_keyclearb_mux),
        .startup_pack_mux(startup_pack_mux),
        .startup_preq_mux(startup_preq_mux),
        .startup_usrcclko_mux(startup_usrcclko_mux),
        .startup_usrcclkts_mux(startup_usrcclkts_mux),
        .startup_usrdoneo_mux(startup_usrdoneo_mux),
        .startup_usrdonets_mux(startup_usrdonets_mux));
  LUT1 #(
    .INIT(2'h1)) 
    pcie_block_i_i_62
       (.I0(cfg_mgmt_byte_en[3]),
        .O(pcie_block_i_i_62_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    pcie_block_i_i_63
       (.I0(cfg_mgmt_byte_en[2]),
        .O(pcie_block_i_i_63_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    pcie_block_i_i_64
       (.I0(cfg_mgmt_byte_en[1]),
        .O(pcie_block_i_i_64_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    pcie_block_i_i_65
       (.I0(cfg_mgmt_byte_en[0]),
        .O(pcie_block_i_i_65_n_0));
  pcie_7x_0_pcie_7x_0_pcie_top pcie_top_i
       (.D(pipe_tx_rate_gt),
        .DI(tandem_cpler_inst_n_16),
        .E(tandem_cpler_inst_n_14),
        .\FSM_sequential_pio_rx_sm_128.state_reg[0] (pcie_top_i_n_200),
        .Q(\axi_basic_top/rx_inst/rx_null_gen_inst/reg_pkt_len_counter ),
        .S({tandem_cpler_inst_n_11,tandem_cpler_inst_n_12}),
        .SR(user_reset_out),
        .USER_TXCOMPLIANCE(pipe_tx0_compliance_gt),
        .USER_TXELECIDLE(pipe_tx0_elec_idle_gt),
        .axi_in_packet(\axi_basic_top/tx_inst/tx_pipeline_inst/axi_in_packet ),
        .axi_in_packet_reg(tandem_cpler_inst_n_521),
        .bridge_reset_int(bridge_reset_int),
        .cfg_aer_ecrc_check_en(cfg_aer_ecrc_check_en),
        .cfg_aer_ecrc_gen_en(cfg_aer_ecrc_gen_en),
        .cfg_aer_interrupt_msgnum(cfg_aer_interrupt_msgnum),
        .cfg_aer_rooterr_corr_err_received(cfg_aer_rooterr_corr_err_received),
        .cfg_aer_rooterr_corr_err_reporting_en(cfg_aer_rooterr_corr_err_reporting_en),
        .cfg_aer_rooterr_fatal_err_received(cfg_aer_rooterr_fatal_err_received),
        .cfg_aer_rooterr_fatal_err_reporting_en(cfg_aer_rooterr_fatal_err_reporting_en),
        .cfg_aer_rooterr_non_fatal_err_received(cfg_aer_rooterr_non_fatal_err_received),
        .cfg_aer_rooterr_non_fatal_err_reporting_en(cfg_aer_rooterr_non_fatal_err_reporting_en),
        .cfg_bridge_serr_en(cfg_bridge_serr_en),
        .\cfg_bus_number_d_reg[7]_0 (cfg_bus_number_mux),
        .cfg_command(cfg_command),
        .cfg_dcommand(cfg_dcommand),
        .cfg_dcommand2(cfg_dcommand2),
        .\cfg_device_number_d_reg[4]_0 (cfg_device_number_mux),
        .cfg_ds_bus_number(cfg_ds_bus_number_mux),
        .cfg_ds_device_number(cfg_ds_device_number_mux),
        .cfg_ds_function_number(cfg_ds_function_number_mux),
        .cfg_dsn(cfg_dsn_mux),
        .cfg_dstatus(cfg_dstatus[3:0]),
        .cfg_err_aer_headerlog(cfg_err_aer_headerlog),
        .cfg_err_aer_headerlog_set(cfg_err_aer_headerlog_set),
        .cfg_err_atomic_egress_blocked_n(tandem_cpler_inst_n_178),
        .cfg_err_cor_n(tandem_cpler_inst_n_171),
        .cfg_err_cpl_abort_n(tandem_cpler_inst_n_175),
        .cfg_err_cpl_rdy(cfg_err_cpl_rdy),
        .cfg_err_cpl_timeout_n(tandem_cpler_inst_n_174),
        .cfg_err_cpl_unexpect_n(tandem_cpler_inst_n_176),
        .cfg_err_ecrc_n(tandem_cpler_inst_n_173),
        .cfg_err_internal_cor_n(tandem_cpler_inst_n_181),
        .cfg_err_internal_uncor_n(tandem_cpler_inst_n_180),
        .cfg_err_locked(cfg_err_locked),
        .cfg_err_malformed_n(tandem_cpler_inst_n_170),
        .cfg_err_mc_blocked_n(tandem_cpler_inst_n_179),
        .cfg_err_norecovery(cfg_err_norecovery),
        .cfg_err_poisoned_n(tandem_cpler_inst_n_177),
        .cfg_err_posted(cfg_err_posted),
        .cfg_err_tlp_cpl_header(cfg_err_tlp_cpl_header),
        .cfg_err_ur_n(tandem_cpler_inst_n_172),
        .\cfg_function_number_d_reg[2]_0 (cfg_function_number_mux),
        .cfg_interrupt_assert(cfg_interrupt_assert),
        .cfg_interrupt_di(cfg_interrupt_di),
        .cfg_interrupt_do(cfg_interrupt_do),
        .cfg_interrupt_mmenable(cfg_interrupt_mmenable),
        .cfg_interrupt_msienable(cfg_interrupt_msienable),
        .cfg_interrupt_msixenable(cfg_interrupt_msixenable),
        .cfg_interrupt_msixfm(cfg_interrupt_msixfm),
        .cfg_interrupt_n(tandem_cpler_inst_n_182),
        .cfg_interrupt_rdy(cfg_interrupt_rdy),
        .cfg_interrupt_stat(cfg_interrupt_stat),
        .cfg_lcommand(cfg_lcommand),
        .cfg_lstatus(cfg_lstatus),
        .cfg_mgmt_byte_en_n({pcie_block_i_i_62_n_0,pcie_block_i_i_63_n_0,pcie_block_i_i_64_n_0,pcie_block_i_i_65_n_0}),
        .cfg_mgmt_di(cfg_mgmt_di),
        .cfg_mgmt_do(cfg_mgmt_do),
        .cfg_mgmt_dwaddr(cfg_mgmt_dwaddr),
        .cfg_mgmt_rd_en_n(tandem_cpler_inst_n_169),
        .cfg_mgmt_rd_wr_done(cfg_mgmt_rd_wr_done),
        .cfg_mgmt_wr_en_n(tandem_cpler_inst_n_168),
        .cfg_mgmt_wr_readonly(cfg_mgmt_wr_readonly),
        .cfg_mgmt_wr_rw1c_as_rw(cfg_mgmt_wr_rw1c_as_rw),
        .cfg_msg_data(cfg_msg_data_mux),
        .cfg_msg_received(cfg_msg_received_mux),
        .cfg_msg_received_assert_int_a(cfg_msg_received_assert_int_a),
        .cfg_msg_received_assert_int_b(cfg_msg_received_assert_int_b),
        .cfg_msg_received_assert_int_c(cfg_msg_received_assert_int_c),
        .cfg_msg_received_assert_int_d(cfg_msg_received_assert_int_d),
        .cfg_msg_received_deassert_int_a(cfg_msg_received_deassert_int_a),
        .cfg_msg_received_deassert_int_b(cfg_msg_received_deassert_int_b),
        .cfg_msg_received_deassert_int_c(cfg_msg_received_deassert_int_c),
        .cfg_msg_received_deassert_int_d(cfg_msg_received_deassert_int_d),
        .cfg_msg_received_err_cor(cfg_msg_received_err_cor),
        .cfg_msg_received_err_fatal(cfg_msg_received_err_fatal),
        .cfg_msg_received_err_non_fatal(cfg_msg_received_err_non_fatal),
        .cfg_msg_received_pm_as_nak(cfg_msg_received_pm_as_nak),
        .cfg_msg_received_pm_pme(cfg_msg_received_pm_pme),
        .cfg_msg_received_pme_to(cfg_to_turnoff_mux),
        .cfg_msg_received_pme_to_ack(cfg_msg_received_pme_to_ack),
        .cfg_msg_received_setslotpowerlimit(cfg_msg_received_setslotpowerlimit),
        .cfg_pcie_link_state(cfg_pcie_link_state_mux),
        .cfg_pciecap_interrupt_msgnum(cfg_pciecap_interrupt_msgnum),
        .cfg_pm_force_state(cfg_pm_force_state),
        .cfg_pm_force_state_en_n(tandem_cpler_inst_n_185),
        .cfg_pm_halt_aspm_l0s_n(tandem_cpler_inst_n_183),
        .cfg_pm_halt_aspm_l1_n(tandem_cpler_inst_n_184),
        .cfg_pm_wake_n(tandem_cpler_inst_n_186),
        .cfg_pmcsr_pme_en(cfg_pmcsr_pme_en),
        .cfg_pmcsr_pme_status(cfg_pmcsr_pme_status),
        .cfg_pmcsr_powerstate(cfg_pmcsr_powerstate_mux),
        .cfg_received_func_lvl_rst(cfg_received_func_lvl_rst),
        .cfg_root_control_pme_int_en(cfg_root_control_pme_int_en),
        .cfg_root_control_syserr_corr_err_en(cfg_root_control_syserr_corr_err_en),
        .cfg_root_control_syserr_fatal_err_en(cfg_root_control_syserr_fatal_err_en),
        .cfg_root_control_syserr_non_fatal_err_en(cfg_root_control_syserr_non_fatal_err_en),
        .cfg_slot_control_electromech_il_ctl_pulse(cfg_slot_control_electromech_il_ctl_pulse),
        .cfg_trn_pending_n(tandem_cpler_inst_n_154),
        .cfg_turnoff_ok_mux(cfg_turnoff_ok_mux),
        .cfg_vc_tcvc_map(cfg_vc_tcvc_map),
        .data_hold(\axi_basic_top/rx_inst/rx_pipeline_inst/data_hold ),
        .drp_addr(pcie_drp_addr_mux),
        .drp_di(pcie_drp_di_mux),
        .drp_do(pcie_drp_do_mux),
        .drp_en(pcie_drp_en_mux),
        .drp_rdy(pcie_drp_rdy_mux),
        .drp_we(pcie_drp_we_mux),
        .\ecrc_pause_enabled.reg_tx_ecrc_pkt (\axi_basic_top/tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/ecrc_pause_enabled.reg_tx_ecrc_pkt ),
        .\ecrc_pause_enabled.reg_tx_ecrc_pkt_reg (tandem_cpler_inst_n_520),
        .fc_cpld(fc_cpld),
        .fc_cplh(fc_cplh),
        .fc_npd(fc_npd),
        .fc_nph(fc_nph),
        .fc_pd(fc_pd),
        .fc_ph(fc_ph),
        .in0(store_ltssm),
        .ltssm_reg2(ltssm_reg2),
        .m_axis_rx_tdata({m_axis_rx_tdata[78],m_axis_rx_tdata[14]}),
        .\m_axis_rx_tdata_reg[127] ({m_axis_rx_tdata_mux[127:79],m_axis_rx_tdata_mux[77:15],m_axis_rx_tdata_mux[13:0]}),
        .\m_axis_rx_tdata_reg[13] ({pcie_top_i_n_194,pcie_top_i_n_195}),
        .\m_axis_rx_tdata_reg[14] (pcie_top_i_n_206),
        .\m_axis_rx_tdata_reg[15] (pcie_top_i_n_205),
        .\m_axis_rx_tdata_reg[22] ({pcie_top_i_n_196,pcie_top_i_n_197,pcie_top_i_n_198}),
        .\m_axis_rx_tdata_reg[29] (pcie_top_i_n_199),
        .\m_axis_rx_tdata_reg[29]_0 (pcie_top_i_n_207),
        .\m_axis_rx_tdata_reg[30] (pcie_top_i_n_163),
        .\m_axis_rx_tdata_reg[30]_0 (pcie_top_i_n_202),
        .\m_axis_rx_tdata_reg[30]_1 (pcie_top_i_n_203),
        .\m_axis_rx_tdata_reg[30]_2 (pcie_top_i_n_222),
        .\m_axis_rx_tdata_reg[31] ({pcie_top_i_n_239,pcie_top_i_n_240,pcie_top_i_n_241,pcie_top_i_n_242,pcie_top_i_n_243,pcie_top_i_n_244,pcie_top_i_n_245}),
        .\m_axis_rx_tdata_reg[35] (wr_be1_in),
        .\m_axis_rx_tdata_reg[47] ({pcie_top_i_n_182,pcie_top_i_n_183,pcie_top_i_n_184,pcie_top_i_n_185,pcie_top_i_n_186,pcie_top_i_n_187,pcie_top_i_n_188,pcie_top_i_n_189}),
        .\m_axis_rx_tdata_reg[63] ({pcie_top_i_n_166,pcie_top_i_n_167,pcie_top_i_n_168,pcie_top_i_n_169,pcie_top_i_n_170,pcie_top_i_n_171,pcie_top_i_n_172,pcie_top_i_n_173,pcie_top_i_n_174,pcie_top_i_n_175,pcie_top_i_n_176,pcie_top_i_n_177,pcie_top_i_n_178,pcie_top_i_n_179,pcie_top_i_n_180,pcie_top_i_n_181}),
        .\m_axis_rx_tdata_reg[6] (req_addr1_in),
        .\m_axis_rx_tdata_reg[73] (pcie_top_i_n_204),
        .\m_axis_rx_tdata_reg[89] (pcie_top_i_n_201),
        .\m_axis_rx_tdata_reg[9] ({pcie_top_i_n_246,pcie_top_i_n_247,pcie_top_i_n_248,pcie_top_i_n_249,pcie_top_i_n_250,pcie_top_i_n_251,pcie_top_i_n_252,pcie_top_i_n_253,pcie_top_i_n_254,pcie_top_i_n_255}),
        .m_axis_rx_tready(m_axis_rx_tready),
        .m_axis_rx_tready_cpler(m_axis_rx_tready_cpler),
        .m_axis_rx_tready_mux(m_axis_rx_tready_mux),
        .m_axis_rx_tuser(m_axis_rx_tuser[10:9]),
        .\m_axis_rx_tuser_reg[21] ({m_axis_rx_tuser_mux[21:18],m_axis_rx_tuser_mux[14],m_axis_rx_tuser_mux[8:0]}),
        .\m_axis_rx_tuser_reg[21]_0 (tandem_cpler_inst_n_10),
        .m_axis_rx_tvalid(m_axis_rx_tvalid),
        .m_axis_rx_tvalid_0(tandem_cpler_inst_n_4),
        .m_axis_rx_tvalid_mux(m_axis_rx_tvalid_mux),
        .m_axis_rx_tvalid_reg(pcie_top_i_n_165),
        .m_axis_rx_tvalid_reg_0(pcie_top_i_n_208),
        .out(user_lnk_up_mux),
        .pcie_drp_clk(pcie_drp_clk),
        .pcie_drp_clk_0(pl_ltssm_state_int),
        .\pio_rx_sm_128.req_addr_reg[2] (\tandem_EP_RX_i/state ),
        .\pio_rx_sm_128.req_td_reg (tandem_cpler_inst_n_6),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_rx0_chanisaligned(pipe_rx0_chanisaligned_gt),
        .pipe_rx0_elec_idle(pipe_rx0_elec_idle_gt),
        .pipe_rx0_phy_status(pipe_rx0_phy_status_gt),
        .pipe_rx0_polarity(pipe_rx0_polarity_gt),
        .pipe_rx0_valid(pipe_rx0_valid_gt),
        .pipe_rx1_chanisaligned(pipe_rx1_chanisaligned_gt),
        .pipe_rx1_elec_idle(pipe_rx1_elec_idle_gt),
        .pipe_rx1_phy_status(pipe_rx1_phy_status_gt),
        .pipe_rx1_polarity(pipe_rx1_polarity_gt),
        .pipe_rx1_valid(pipe_rx1_valid_gt),
        .pipe_rx2_chanisaligned(pipe_rx2_chanisaligned_gt),
        .pipe_rx2_elec_idle(pipe_rx2_elec_idle_gt),
        .pipe_rx2_phy_status(pipe_rx2_phy_status_gt),
        .pipe_rx2_polarity(pipe_rx2_polarity_gt),
        .pipe_rx2_valid(pipe_rx2_valid_gt),
        .pipe_rx3_chanisaligned(pipe_rx3_chanisaligned_gt),
        .pipe_rx3_elec_idle(pipe_rx3_elec_idle_gt),
        .pipe_rx3_phy_status(pipe_rx3_phy_status_gt),
        .pipe_rx3_polarity(pipe_rx3_polarity_gt),
        .pipe_rx3_valid(pipe_rx3_valid_gt),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1] (pipe_rx1_char_is_k_gt),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 (pipe_rx2_char_is_k_gt),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 (pipe_rx3_char_is_k_gt),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 (pipe_rx0_char_is_k_gt),
        .\pipe_stages_1.pipe_rx_data_q_reg[15] (pipe_rx1_data_gt),
        .\pipe_stages_1.pipe_rx_data_q_reg[15]_0 (pipe_rx2_data_gt),
        .\pipe_stages_1.pipe_rx_data_q_reg[15]_1 (pipe_rx3_data_gt),
        .\pipe_stages_1.pipe_rx_data_q_reg[15]_2 (pipe_rx0_data_gt),
        .\pipe_stages_1.pipe_rx_status_q_reg[2] (pipe_rx1_status_gt),
        .\pipe_stages_1.pipe_rx_status_q_reg[2]_0 (pipe_rx2_status_gt),
        .\pipe_stages_1.pipe_rx_status_q_reg[2]_1 (pipe_rx3_status_gt),
        .\pipe_stages_1.pipe_rx_status_q_reg[2]_2 (pipe_rx0_status_gt),
        .\pipe_stages_1.pipe_tx_char_is_k_q_reg[1] (pipe_tx1_char_is_k_gt),
        .\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 (pipe_tx2_char_is_k_gt),
        .\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 (pipe_tx3_char_is_k_gt),
        .\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_2 (pipe_tx0_char_is_k_gt),
        .\pipe_stages_1.pipe_tx_compliance_q_reg (pipe_tx1_compliance_gt),
        .\pipe_stages_1.pipe_tx_compliance_q_reg_0 (pipe_tx2_compliance_gt),
        .\pipe_stages_1.pipe_tx_compliance_q_reg_1 (pipe_tx3_compliance_gt),
        .\pipe_stages_1.pipe_tx_data_q_reg[15] (pipe_tx1_data_gt),
        .\pipe_stages_1.pipe_tx_data_q_reg[15]_0 (pipe_tx2_data_gt),
        .\pipe_stages_1.pipe_tx_data_q_reg[15]_1 (pipe_tx3_data_gt),
        .\pipe_stages_1.pipe_tx_data_q_reg[15]_2 (pipe_tx0_data_gt),
        .\pipe_stages_1.pipe_tx_elec_idle_q_reg (pipe_tx1_elec_idle_gt),
        .\pipe_stages_1.pipe_tx_elec_idle_q_reg_0 (pipe_tx2_elec_idle_gt),
        .\pipe_stages_1.pipe_tx_elec_idle_q_reg_1 (pipe_tx3_elec_idle_gt),
        .\pipe_stages_1.pipe_tx_margin_q_reg[2] (pipe_tx_margin_gt),
        .\pipe_stages_1.pipe_tx_powerdown_q_reg[1] (pipe_tx1_powerdown_gt),
        .\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 (pipe_tx2_powerdown_gt),
        .\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 (pipe_tx3_powerdown_gt),
        .\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_2 (pipe_tx0_powerdown_gt),
        .\pipe_stages_1.pipe_tx_rcvr_det_q_reg (phy_rdy_n),
        .pipe_tx_deemph_gt(pipe_tx_deemph_gt),
        .pipe_tx_rcvr_det_gt(pipe_tx_rcvr_det_gt),
        .pipe_userclk1_in(pipe_userclk1_in),
        .pipe_userclk2_in(pipe_userclk2_in),
        .pl_directed_change_done(pl_directed_change_done),
        .pl_directed_link_auton(pl_directed_link_auton),
        .pl_directed_link_change(pl_directed_link_change_mux),
        .pl_directed_link_speed(pl_directed_link_speed),
        .pl_directed_link_width(pl_directed_link_width),
        .pl_downstream_deemph_source(pl_downstream_deemph_source),
        .pl_initial_link_width(pl_initial_link_width),
        .pl_lane_reversal_mode(pl_lane_reversal_mode),
        .pl_link_gen2_cap(pl_link_gen2_cap),
        .pl_link_partner_gen2_supported(pl_link_partner_gen2_supported),
        .pl_link_upcfg_cap(pl_link_upcfg_cap),
        .pl_ltssm_state({pl_ltssm_state[3],pl_ltssm_state[0]}),
        .pl_phy_lnk_up_q(pl_phy_lnk_up_q),
        .pl_received_hot_rst(pl_received_hot_rst_wire),
        .pl_rx_pm_state(pl_rx_pm_state),
        .pl_sel_lnk_rate(pl_sel_lnk_rate),
        .pl_sel_lnk_width(pl_sel_lnk_width),
        .pl_transmit_hot_rst(pl_transmit_hot_rst_mux),
        .pl_tx_pm_state(pl_tx_pm_state),
        .pl_upstream_prefer_deemph(pl_upstream_prefer_deemph_mux),
        .reg_axi_in_pkt(\axi_basic_top/tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/reg_axi_in_pkt ),
        .reg_axi_in_pkt_reg(tandem_cpler_inst_n_18),
        .s_axis_tx_tlast(s_axis_tx_tlast),
        .s_axis_tx_tlast_mux(s_axis_tx_tlast_mux),
        .s_axis_tx_tready(s_axis_tx_tready),
        .s_axis_tx_tready_0(user_app_rdy_gnt_reg),
        .s_axis_tx_tready_mux(s_axis_tx_tready_mux),
        .s_axis_tx_tvalid(s_axis_tx_tvalid),
        .s_axis_tx_tvalid_cpler(s_axis_tx_tvalid_cpler),
        .s_axis_tx_tvalid_mux(s_axis_tx_tvalid_mux),
        .src_in(pl_phy_lnk_up_wire),
        .store_ltssm_inferred_i_1(tandem_cpler_inst_n_3),
        .sys_rst_n(gt_top_i_n_12),
        .\throttle_ctl_pipeline.reg_tdata_reg[127] (s_axis_tx_tdata_mux),
        .\throttle_ctl_pipeline.reg_tkeep_reg[15] ({s_axis_tx_tkeep_mux[15],s_axis_tx_tkeep_mux[11],s_axis_tx_tkeep_mux[7]}),
        .\throttle_ctl_pipeline.reg_tsrc_rdy_reg (tandem_cpler_inst_n_5),
        .\throttle_ctl_pipeline.reg_tuser_reg[3] (s_axis_tx_tuser_mux),
        .\thrtl_ctl_trn_flush.reg_disable_trn_reg (tandem_cpler_inst_n_13),
        .tready_thrtl_reg(tandem_cpler_inst_n_21),
        .trn_fc_sel(fc_sel_mux),
        .trn_lnk_up(trn_lnk_up),
        .trn_rnp_ok(rx_np_ok_mux),
        .trn_rnp_req(rx_np_req_mux),
        .trn_tbuf_av(tx_buf_av_mux),
        .trn_tcfg_req(tx_cfg_req_mux),
        .trn_terr_drop(tx_err_drop_mux),
        .tx_cfg_gnt_mux(tx_cfg_gnt_mux),
        .user_reset_int_reg(pcie_top_i_n_164),
        .user_reset_out_reg(pcie_top_i_n_209));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  pcie_7x_0_xpm_cdc_single__2 phy_lnk_up_cdc
       (.dest_clk(pipe_userclk2_in),
        .dest_out(pl_phy_lnk_up_sync),
        .src_clk(pipe_pclk_in),
        .src_in(pl_phy_lnk_up_wire));
  FDRE pl_phy_lnk_up_q_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(pl_phy_lnk_up_sync),
        .Q(pl_phy_lnk_up_q),
        .R(p_0_in__0));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  pcie_7x_0_xpm_cdc_single pl_received_hot_rst_cdc
       (.dest_clk(pipe_userclk2_in),
        .dest_out(pl_received_hot_rst_sync),
        .src_clk(pipe_pclk_in),
        .src_in(pl_received_hot_rst_wire));
  FDRE pl_received_hot_rst_q_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(pl_received_hot_rst_sync),
        .Q(pl_received_hot_rst_q),
        .R(p_0_in__0));
  pcie_7x_0_pcie_7x_0_tandem_cpler tandem_cpler_inst
       (.D(pcie_top_i_n_165),
        .DI(tandem_cpler_inst_n_16),
        .E(pcie_top_i_n_201),
        .\FSM_sequential_pio_rx_sm_128.state_reg[1] (pcie_top_i_n_199),
        .\FSM_sequential_pio_rx_sm_128.state_reg[2] (tandem_cpler_inst_n_6),
        .\FSM_sequential_pio_rx_sm_128.state_reg[2]_0 (pcie_top_i_n_222),
        .\FSM_sequential_pio_rx_sm_128.state_reg[2]_1 (pcie_top_i_n_204),
        .Q(\tandem_EP_RX_i/state ),
        .S({tandem_cpler_inst_n_11,tandem_cpler_inst_n_12}),
        .SR(user_reset_out),
        .axi_in_packet(\axi_basic_top/tx_inst/tx_pipeline_inst/axi_in_packet ),
        .cfg_aer_ecrc_check_en(pl_transmit_hot_rst),
        .cfg_aer_ecrc_check_en_0(pl_directed_link_change),
        .cfg_aer_ecrc_check_en_1(pl_upstream_prefer_deemph),
        .cfg_aer_ecrc_check_en_2(cfg_ds_device_number),
        .cfg_aer_ecrc_check_en_3(cfg_ds_function_number),
        .cfg_aer_ecrc_check_en_4(cfg_ds_bus_number),
        .cfg_aer_ecrc_check_en_5(cfg_dsn),
        .cfg_bus_number(cfg_bus_number),
        .cfg_device_number(cfg_device_number),
        .cfg_ds_bus_number(cfg_ds_bus_number_mux),
        .cfg_ds_device_number(cfg_ds_device_number_mux),
        .cfg_ds_function_number(cfg_ds_function_number_mux),
        .cfg_dsn(cfg_dsn_mux),
        .cfg_dstatus(cfg_dstatus[4]),
        .cfg_err_atomic_egress_blocked(cfg_err_atomic_egress_blocked),
        .cfg_err_atomic_egress_blocked_n(tandem_cpler_inst_n_178),
        .cfg_err_cor(cfg_err_cor),
        .cfg_err_cor_n(tandem_cpler_inst_n_171),
        .cfg_err_cpl_abort(cfg_err_cpl_abort),
        .cfg_err_cpl_abort_n(tandem_cpler_inst_n_175),
        .cfg_err_cpl_timeout(cfg_err_cpl_timeout),
        .cfg_err_cpl_timeout_n(tandem_cpler_inst_n_174),
        .cfg_err_cpl_unexpect(cfg_err_cpl_unexpect),
        .cfg_err_cpl_unexpect_n(tandem_cpler_inst_n_176),
        .cfg_err_ecrc(cfg_err_ecrc),
        .cfg_err_ecrc_n(tandem_cpler_inst_n_173),
        .cfg_err_internal_cor(cfg_err_internal_cor),
        .cfg_err_internal_cor_n(tandem_cpler_inst_n_181),
        .cfg_err_internal_uncor(cfg_err_internal_uncor),
        .cfg_err_internal_uncor_n(tandem_cpler_inst_n_180),
        .cfg_err_malformed(cfg_err_malformed),
        .cfg_err_malformed_n(tandem_cpler_inst_n_170),
        .cfg_err_mc_blocked(cfg_err_mc_blocked),
        .cfg_err_mc_blocked_n(tandem_cpler_inst_n_179),
        .cfg_err_poisoned(cfg_err_poisoned),
        .cfg_err_poisoned_n(tandem_cpler_inst_n_177),
        .cfg_err_ur(cfg_err_ur),
        .cfg_err_ur_n(tandem_cpler_inst_n_172),
        .cfg_function_number(cfg_function_number),
        .cfg_interrupt(cfg_interrupt),
        .cfg_interrupt_n(tandem_cpler_inst_n_182),
        .cfg_mgmt_rd_en(cfg_mgmt_rd_en),
        .cfg_mgmt_rd_en_n(tandem_cpler_inst_n_169),
        .cfg_mgmt_wr_en(cfg_mgmt_wr_en),
        .cfg_mgmt_wr_en_n(tandem_cpler_inst_n_168),
        .cfg_msg_data(cfg_msg_data),
        .\cfg_msg_data[15] (cfg_msg_data_mux),
        .cfg_msg_received(cfg_msg_received),
        .cfg_msg_received_0(cfg_msg_received_mux),
        .cfg_msg_received_pme_to(cfg_to_turnoff_mux),
        .cfg_pcie_link_state(cfg_pcie_link_state),
        .\cfg_pcie_link_state[2] (cfg_pcie_link_state_mux),
        .cfg_pm_force_state_en(cfg_pm_force_state_en),
        .cfg_pm_force_state_en_n(tandem_cpler_inst_n_185),
        .cfg_pm_halt_aspm_l0s(cfg_pm_halt_aspm_l0s),
        .cfg_pm_halt_aspm_l0s_n(tandem_cpler_inst_n_183),
        .cfg_pm_halt_aspm_l1(cfg_pm_halt_aspm_l1),
        .cfg_pm_halt_aspm_l1_n(tandem_cpler_inst_n_184),
        .cfg_pm_wake(cfg_pm_wake),
        .cfg_pm_wake_n(tandem_cpler_inst_n_186),
        .cfg_pmcsr_powerstate(cfg_pmcsr_powerstate),
        .\cfg_pmcsr_powerstate[1] (cfg_pmcsr_powerstate_mux),
        .cfg_to_turnoff(cfg_to_turnoff),
        .cfg_trn_pending(cfg_trn_pending),
        .cfg_trn_pending_n(tandem_cpler_inst_n_154),
        .cfg_turnoff_ok(cfg_turnoff_ok),
        .cfg_turnoff_ok_mux(cfg_turnoff_ok_mux),
        .data_hold(\axi_basic_top/rx_inst/rx_pipeline_inst/data_hold ),
        .drp_addr(pcie_drp_addr_mux),
        .drp_di(pcie_drp_di_mux),
        .drp_do(pcie_drp_do_mux),
        .drp_en(pcie_drp_en_mux),
        .drp_rdy(pcie_drp_rdy_mux),
        .drp_we(pcie_drp_we_mux),
        .\ecrc_pause_enabled.reg_tx_ecrc_pkt (\axi_basic_top/tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/ecrc_pause_enabled.reg_tx_ecrc_pkt ),
        .fc_sel(fc_sel),
        .\gen_cpl_128.s_axis_tx_tdata_reg[0] (tandem_cpler_inst_n_21),
        .\gen_cpl_128.s_axis_tx_tdata_reg[50] (cfg_function_number_mux),
        .\gen_cpl_128.s_axis_tx_tdata_reg[55] (cfg_device_number_mux),
        .\gen_cpl_128.s_axis_tx_tdata_reg[63] (cfg_bus_number_mux),
        .\gen_cpl_128.s_axis_tx_tkeep_reg[11] (pcie_top_i_n_209),
        .m_axis_rx_tdata({m_axis_rx_tdata[127:79],m_axis_rx_tdata[77:15],m_axis_rx_tdata[13:0]}),
        .\m_axis_rx_tdata[127] ({m_axis_rx_tdata_mux[127:79],m_axis_rx_tdata_mux[77:15],m_axis_rx_tdata_mux[13:0]}),
        .m_axis_rx_tready(m_axis_rx_tready),
        .m_axis_rx_tready_0(tandem_cpler_inst_n_14),
        .m_axis_rx_tready_cpler(m_axis_rx_tready_cpler),
        .m_axis_rx_tready_mux(m_axis_rx_tready_mux),
        .m_axis_rx_tuser({m_axis_rx_tuser[14:11],m_axis_rx_tuser[8:0]}),
        .\m_axis_rx_tuser[21] ({m_axis_rx_tuser_mux[21:18],m_axis_rx_tuser_mux[14],m_axis_rx_tuser_mux[8:0]}),
        .m_axis_rx_tvalid_mux(m_axis_rx_tvalid_mux),
        .out(user_lnk_up_mux),
        .pcie_drp_addr(pcie_drp_addr),
        .pcie_drp_di(pcie_drp_di),
        .pcie_drp_do(pcie_drp_do),
        .pcie_drp_en(pcie_drp_en),
        .pcie_drp_rdy(pcie_drp_rdy),
        .pcie_drp_we(pcie_drp_we),
        .\pio_rx_sm_128.req_addr_reg[2] (pcie_top_i_n_203),
        .\pio_rx_sm_128.req_addr_reg[6] (req_addr1_in),
        .\pio_rx_sm_128.req_attr_reg[1] ({pcie_top_i_n_194,pcie_top_i_n_195}),
        .\pio_rx_sm_128.req_be_reg[0] (pcie_top_i_n_202),
        .\pio_rx_sm_128.req_be_reg[3] (wr_be1_in),
        .\pio_rx_sm_128.req_compl_reg (pcie_top_i_n_200),
        .\pio_rx_sm_128.req_compl_wd_reg (pcie_top_i_n_207),
        .\pio_rx_sm_128.req_ep_reg (pcie_top_i_n_206),
        .\pio_rx_sm_128.req_len_reg[9] ({pcie_top_i_n_246,pcie_top_i_n_247,pcie_top_i_n_248,pcie_top_i_n_249,pcie_top_i_n_250,pcie_top_i_n_251,pcie_top_i_n_252,pcie_top_i_n_253,pcie_top_i_n_254,pcie_top_i_n_255}),
        .\pio_rx_sm_128.req_rid_reg[15] ({pcie_top_i_n_166,pcie_top_i_n_167,pcie_top_i_n_168,pcie_top_i_n_169,pcie_top_i_n_170,pcie_top_i_n_171,pcie_top_i_n_172,pcie_top_i_n_173,pcie_top_i_n_174,pcie_top_i_n_175,pcie_top_i_n_176,pcie_top_i_n_177,pcie_top_i_n_178,pcie_top_i_n_179,pcie_top_i_n_180,pcie_top_i_n_181}),
        .\pio_rx_sm_128.req_tag_reg[7] ({pcie_top_i_n_182,pcie_top_i_n_183,pcie_top_i_n_184,pcie_top_i_n_185,pcie_top_i_n_186,pcie_top_i_n_187,pcie_top_i_n_188,pcie_top_i_n_189}),
        .\pio_rx_sm_128.req_tc_reg[2] ({pcie_top_i_n_196,pcie_top_i_n_197,pcie_top_i_n_198}),
        .\pio_rx_sm_128.req_td_reg (pcie_top_i_n_205),
        .\pio_rx_sm_128.tlp_type_reg[7] ({pcie_top_i_n_239,pcie_top_i_n_163,pcie_top_i_n_240,pcie_top_i_n_241,pcie_top_i_n_242,pcie_top_i_n_243,pcie_top_i_n_244,pcie_top_i_n_245}),
        .pipe_userclk2_in(pipe_userclk2_in),
        .pkt_len_counter_dec__0_carry(\axi_basic_top/rx_inst/rx_null_gen_inst/reg_pkt_len_counter ),
        .pl_directed_link_change(pl_directed_link_change_mux),
        .pl_ltssm_state(pl_ltssm_state),
        .\pl_ltssm_state[5] (pl_ltssm_state_int),
        .pl_phy_lnk_up(pl_phy_lnk_up),
        .pl_phy_lnk_up_q(pl_phy_lnk_up_q),
        .pl_received_hot_rst(pl_received_hot_rst),
        .pl_received_hot_rst_q(pl_received_hot_rst_q),
        .pl_transmit_hot_rst(pl_transmit_hot_rst_mux),
        .pl_upstream_prefer_deemph(pl_upstream_prefer_deemph_mux),
        .reg_axi_in_pkt(\axi_basic_top/tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/reg_axi_in_pkt ),
        .rx_np_ok(rx_np_ok),
        .rx_np_req(rx_np_req),
        .s_axis_tx_tdata(s_axis_tx_tdata),
        .s_axis_tx_tkeep(s_axis_tx_tkeep),
        .\s_axis_tx_tkeep[15] ({s_axis_tx_tkeep_mux[15],s_axis_tx_tkeep_mux[11],s_axis_tx_tkeep_mux[7]}),
        .s_axis_tx_tlast(s_axis_tx_tlast),
        .s_axis_tx_tlast_0(tandem_cpler_inst_n_13),
        .s_axis_tx_tlast_1(tandem_cpler_inst_n_520),
        .s_axis_tx_tlast_2(tandem_cpler_inst_n_521),
        .s_axis_tx_tlast_mux(s_axis_tx_tlast_mux),
        .s_axis_tx_tready_mux(s_axis_tx_tready_mux),
        .s_axis_tx_tuser(s_axis_tx_tuser),
        .s_axis_tx_tvalid(s_axis_tx_tvalid),
        .s_axis_tx_tvalid_cpler(s_axis_tx_tvalid_cpler),
        .s_axis_tx_tvalid_mux(s_axis_tx_tvalid_mux),
        .startup_cfgclk(startup_cfgclk),
        .startup_cfgclk_mux(startup_cfgclk_mux),
        .startup_cfgmclk(startup_cfgmclk),
        .startup_cfgmclk_mux(startup_cfgmclk_mux),
        .startup_clk(startup_clk),
        .startup_clk_mux(startup_clk_mux),
        .startup_gsr(startup_gsr),
        .startup_gsr_mux(startup_gsr_mux),
        .startup_gts(startup_gts),
        .startup_gts_mux(startup_gts_mux),
        .startup_keyclearb(startup_keyclearb),
        .startup_keyclearb_mux(startup_keyclearb_mux),
        .startup_pack(startup_pack),
        .startup_pack_mux(startup_pack_mux),
        .startup_preq(startup_preq),
        .startup_preq_mux(startup_preq_mux),
        .startup_usrcclko(startup_usrcclko),
        .startup_usrcclko_mux(startup_usrcclko_mux),
        .startup_usrcclkts(startup_usrcclkts),
        .startup_usrcclkts_mux(startup_usrcclkts_mux),
        .startup_usrdoneo(startup_usrdoneo),
        .startup_usrdoneo_mux(startup_usrdoneo_mux),
        .startup_usrdonets(startup_usrdonets),
        .startup_usrdonets_mux(startup_usrdonets_mux),
        .tready_thrtl_reg(tandem_cpler_inst_n_18),
        .trn_fc_sel(fc_sel_mux),
        .trn_rnp_ok(rx_np_ok_mux),
        .trn_rnp_req(rx_np_req_mux),
        .trn_tbuf_av(tx_buf_av_mux),
        .trn_tcfg_req(tx_cfg_req_mux),
        .trn_terr_drop(tx_err_drop_mux),
        .tx_buf_av(tx_buf_av),
        .tx_cfg_gnt(tx_cfg_gnt),
        .tx_cfg_gnt_mux(tx_cfg_gnt_mux),
        .tx_cfg_req(tx_cfg_req),
        .tx_err_drop(tx_err_drop),
        .user_app_rdy_gnt_reg(user_app_rdy_gnt_reg),
        .user_app_rdy_gnt_reg_rep(tandem_cpler_inst_n_3),
        .user_app_rdy_gnt_reg_rep__0(tandem_cpler_inst_n_4),
        .user_app_rdy_gnt_reg_rep__1(tandem_cpler_inst_n_5),
        .user_app_rdy_gnt_reg_rep__1_0(s_axis_tx_tdata_mux),
        .user_app_rdy_gnt_reg_rep__1_1(s_axis_tx_tuser_mux),
        .user_app_rdy_gnt_reg_rep__3(user_app_rdy_req),
        .user_app_rdy_gnt_reg_rep__3_0(pcie_top_i_n_208),
        .user_lnk_up(user_lnk_up),
        .user_reset_out_reg(tandem_cpler_inst_n_10));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE user_lnk_up_int_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(trn_lnk_up),
        .Q(user_lnk_up_int),
        .R(p_0_in__0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE user_lnk_up_mux_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(user_lnk_up_int),
        .Q(user_lnk_up_mux),
        .R(p_0_in__0));
  FDPE user_reset_int_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(pcie_top_i_n_164),
        .PRE(sys_or_hot_rst),
        .Q(bridge_reset_int));
  LUT2 #(
    .INIT(4'hB)) 
    user_reset_out_i_1
       (.I0(pl_received_hot_rst_q),
        .I1(sys_rst_n),
        .O(sys_or_hot_rst));
  FDPE user_reset_out_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(bridge_reset_int),
        .PRE(sys_or_hot_rst),
        .Q(user_reset_out));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_fast_cfg_init_cntr" *) 
module pcie_7x_0_pcie_7x_0_fast_cfg_init_cntr
   (startup_cfgclk_mux,
    startup_cfgmclk_mux,
    startup_eos,
    startup_preq_mux,
    out,
    startup_clk_mux,
    startup_gsr_mux,
    startup_gts_mux,
    startup_keyclearb_mux,
    startup_pack_mux,
    startup_usrcclko_mux,
    startup_usrcclkts_mux,
    startup_usrdoneo_mux,
    startup_usrdonets_mux,
    pipe_userclk2_in);
  output startup_cfgclk_mux;
  output startup_cfgmclk_mux;
  output startup_eos;
  output startup_preq_mux;
  output out;
  input startup_clk_mux;
  input startup_gsr_mux;
  input startup_gts_mux;
  input startup_keyclearb_mux;
  input startup_pack_mux;
  input startup_usrcclko_mux;
  input startup_usrcclkts_mux;
  input startup_usrdoneo_mux;
  input startup_usrdonets_mux;
  input pipe_userclk2_in;

  (* async_reg = "true" *) wire cdc_reg1;
  (* async_reg = "true" *) wire cdc_reg2;
  wire pipe_userclk2_in;
  wire stage2_end;
  wire stage2_end_i_1_n_0;
  wire stage2_start;
  wire startup_cfgclk_mux;
  wire startup_cfgmclk_mux;
  wire startup_clk_mux;
  wire startup_eos;
  wire startup_gsr_mux;
  wire startup_gts_mux;
  wire startup_keyclearb_mux;
  wire startup_pack_mux;
  wire startup_preq_mux;
  wire startup_usrcclko_mux;
  wire startup_usrcclkts_mux;
  wire startup_usrdoneo_mux;
  wire startup_usrdonets_mux;

  assign out = cdc_reg2;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    cdc_reg1_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(stage2_end),
        .Q(cdc_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    cdc_reg2_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(cdc_reg1),
        .Q(cdc_reg2),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    stage2_end_i_1
       (.I0(stage2_start),
        .I1(stage2_end),
        .O(stage2_end_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    stage2_end_reg
       (.C(startup_eos),
        .CE(1'b1),
        .D(stage2_end_i_1_n_0),
        .Q(stage2_end),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    stage2_start_reg
       (.C(startup_eos),
        .CE(1'b1),
        .D(1'b1),
        .Q(stage2_start),
        .R(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  STARTUPE2 #(
    .PROG_USR("FALSE"),
    .SIM_CCLK_FREQ(0.000000)) 
    startup_inst
       (.CFGCLK(startup_cfgclk_mux),
        .CFGMCLK(startup_cfgmclk_mux),
        .CLK(startup_clk_mux),
        .EOS(startup_eos),
        .GSR(startup_gsr_mux),
        .GTS(startup_gts_mux),
        .KEYCLEARB(startup_keyclearb_mux),
        .PACK(startup_pack_mux),
        .PREQ(startup_preq_mux),
        .USRCCLKO(startup_usrcclko_mux),
        .USRCCLKTS(startup_usrcclkts_mux),
        .USRDONEO(startup_usrdoneo_mux),
        .USRDONETS(startup_usrdonets_mux));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_gt_common" *) 
module pcie_7x_0_pcie_7x_0_gt_common
   (QPLL_QPLLLOCK,
    QPLL_QPLLOUTCLK,
    QPLL_QPLLOUTREFCLK,
    QPLL_DRP_DONE,
    RST_DCLK_RESET,
    pipe_dclk_in,
    sys_clk,
    QPLL_QPLLPD,
    QPLL_QPLLRESET,
    QRST_DRP_START,
    QPLL_DRP_GEN3);
  output QPLL_QPLLLOCK;
  output QPLL_QPLLOUTCLK;
  output QPLL_QPLLOUTREFCLK;
  output QPLL_DRP_DONE;
  input RST_DCLK_RESET;
  input pipe_dclk_in;
  input sys_clk;
  input QPLL_QPLLPD;
  input QPLL_QPLLRESET;
  input QRST_DRP_START;
  input QPLL_DRP_GEN3;

  wire QPLL_DRP_DONE;
  wire QPLL_DRP_GEN3;
  wire QPLL_QPLLLOCK;
  wire QPLL_QPLLOUTCLK;
  wire QPLL_QPLLOUTREFCLK;
  wire QPLL_QPLLPD;
  wire QPLL_QPLLRESET;
  wire QRST_DRP_START;
  wire RST_DCLK_RESET;
  wire pipe_dclk_in;
  wire [7:0]qpll_drp_addr;
  wire [15:0]qpll_drp_di;
  wire [15:0]qpll_drp_do;
  wire qpll_drp_en;
  wire qpll_drp_rdy;
  wire qpll_drp_we;
  wire sys_clk;

  pcie_7x_0_pcie_7x_0_qpll_drp qpll_drp_i
       (.D(qpll_drp_do),
        .Q({qpll_drp_addr[7],qpll_drp_addr[5],qpll_drp_addr[2:0]}),
        .QPLL_DRP_DONE(QPLL_DRP_DONE),
        .QPLL_DRP_GEN3(QPLL_DRP_GEN3),
        .QPLL_QPLLLOCK(QPLL_QPLLLOCK),
        .QRST_DRP_START(QRST_DRP_START),
        .RST_DCLK_RESET(RST_DCLK_RESET),
        .\di_reg[15]_0 (qpll_drp_di),
        .pipe_dclk_in(pipe_dclk_in),
        .qpll_drp_en(qpll_drp_en),
        .qpll_drp_rdy(qpll_drp_rdy),
        .qpll_drp_we(qpll_drp_we));
  pcie_7x_0_pcie_7x_0_qpll_wrapper qpll_wrapper_i
       (.D(qpll_drp_do),
        .Q({qpll_drp_addr[7],qpll_drp_addr[5],qpll_drp_addr[2:0]}),
        .QPLL_QPLLLOCK(QPLL_QPLLLOCK),
        .QPLL_QPLLOUTCLK(QPLL_QPLLOUTCLK),
        .QPLL_QPLLOUTREFCLK(QPLL_QPLLOUTREFCLK),
        .QPLL_QPLLPD(QPLL_QPLLPD),
        .QPLL_QPLLRESET(QPLL_QPLLRESET),
        .pipe_dclk_in(pipe_dclk_in),
        .qpll_drp_en(qpll_drp_en),
        .qpll_drp_rdy(qpll_drp_rdy),
        .qpll_drp_we(qpll_drp_we),
        .rdy_reg1_reg(qpll_drp_di),
        .sys_clk(sys_clk));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_gt_rx_valid_filter_7x" *) 
module pcie_7x_0_pcie_7x_0_gt_rx_valid_filter_7x
   (gt_rxvalid_q_reg_0,
    pipe_rx0_elec_idle,
    pipe_rx0_phy_status,
    \pl_ltssm_state_q_reg[3] ,
    Q,
    \gt_rxcharisk_q_reg[1]_0 ,
    pipe_rx0_status,
    SR,
    pipe_pclk_in,
    PIPE_RXELECIDLE,
    gt_rx_phy_status_q_reg_0,
    gt_rxvalid_q_reg_1,
    gt_rxvalid_q_reg_2,
    PIPE_RXDATAK,
    PIPE_RXDATA,
    D);
  output gt_rxvalid_q_reg_0;
  output pipe_rx0_elec_idle;
  output pipe_rx0_phy_status;
  output \pl_ltssm_state_q_reg[3] ;
  output [15:0]Q;
  output [1:0]\gt_rxcharisk_q_reg[1]_0 ;
  output [2:0]pipe_rx0_status;
  input [0:0]SR;
  input pipe_pclk_in;
  input [0:0]PIPE_RXELECIDLE;
  input gt_rx_phy_status_q_reg_0;
  input gt_rxvalid_q_reg_1;
  input [5:0]gt_rxvalid_q_reg_2;
  input [1:0]PIPE_RXDATAK;
  input [15:0]PIPE_RXDATA;
  input [2:0]D;

  wire [2:0]D;
  wire [15:0]PIPE_RXDATA;
  wire [1:0]PIPE_RXDATAK;
  wire [0:0]PIPE_RXELECIDLE;
  wire [15:0]Q;
  wire [0:0]SR;
  wire gt_rx_phy_status_q_reg_0;
  wire [1:0]\gt_rxcharisk_q_reg[1]_0 ;
  wire \gt_rxcharisk_q_reg_n_0_[0] ;
  wire gt_rxvalid_q__0;
  wire gt_rxvalid_q_i_2_n_0;
  wire gt_rxvalid_q_i_3_n_0;
  wire gt_rxvalid_q_n_0;
  wire gt_rxvalid_q_reg_0;
  wire gt_rxvalid_q_reg_1;
  wire [5:0]gt_rxvalid_q_reg_2;
  wire p_1_in;
  wire [4:0]p_1_in__0;
  wire pipe_pclk_in;
  wire pipe_rx0_elec_idle;
  wire pipe_rx0_phy_status;
  wire [2:0]pipe_rx0_status;
  wire \pl_ltssm_state_q_reg[3] ;
  wire \reg_state_eios_det[0]_i_2_n_0 ;
  wire \reg_state_eios_det[0]_i_3__0_n_0 ;
  wire \reg_state_eios_det[0]_i_4_n_0 ;
  wire \reg_state_eios_det[0]_i_5__1_n_0 ;
  wire \reg_state_eios_det[1]_i_2_n_0 ;
  wire \reg_state_eios_det[1]_i_3_n_0 ;
  wire \reg_state_eios_det[2]_i_2_n_0 ;
  wire \reg_state_eios_det[2]_i_3_n_0 ;
  wire \reg_state_eios_det[3]_i_2_n_0 ;
  wire \reg_state_eios_det[4]_i_1_n_0 ;
  wire \reg_state_eios_det[4]_i_3_n_0 ;
  wire reg_symbol_after_eios;
  wire reg_symbol_after_eios_i_2_n_0;
  wire [4:0]state_eios_det;
  wire symbol_after_eios;

  FDRE gt_rx_phy_status_q_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gt_rx_phy_status_q_reg_0),
        .Q(pipe_rx0_phy_status),
        .R(SR));
  FDRE \gt_rx_status_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D[0]),
        .Q(pipe_rx0_status[0]),
        .R(SR));
  FDRE \gt_rx_status_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D[1]),
        .Q(pipe_rx0_status[1]),
        .R(SR));
  FDRE \gt_rx_status_q_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D[2]),
        .Q(pipe_rx0_status[2]),
        .R(SR));
  FDRE \gt_rxcharisk_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATAK[0]),
        .Q(\gt_rxcharisk_q_reg_n_0_[0] ),
        .R(SR));
  FDRE \gt_rxcharisk_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATAK[1]),
        .Q(p_1_in),
        .R(SR));
  FDRE \gt_rxdata_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[0]),
        .Q(Q[0]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[10]),
        .Q(Q[10]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[11]),
        .Q(Q[11]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[12]),
        .Q(Q[12]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[13]),
        .Q(Q[13]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[14]),
        .Q(Q[14]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[15]),
        .Q(Q[15]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[1]),
        .Q(Q[1]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[2]),
        .Q(Q[2]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[3]),
        .Q(Q[3]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[4]),
        .Q(Q[4]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[5]),
        .Q(Q[5]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[6]),
        .Q(Q[6]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[7]),
        .Q(Q[7]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[8]),
        .Q(Q[8]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[9]),
        .Q(Q[9]),
        .R(SR));
  FDRE gt_rxelecidle_q_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXELECIDLE),
        .Q(pipe_rx0_elec_idle),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    gt_rxvalid_q
       (.I0(state_eios_det[0]),
        .I1(state_eios_det[1]),
        .I2(state_eios_det[2]),
        .I3(state_eios_det[3]),
        .I4(state_eios_det[4]),
        .O(gt_rxvalid_q_n_0));
  LUT6 #(
    .INIT(64'hEEEEEEEEFEFEEEFF)) 
    gt_rxvalid_q_i_1
       (.I0(gt_rxvalid_q_i_2_n_0),
        .I1(gt_rxvalid_q_i_3_n_0),
        .I2(\pl_ltssm_state_q_reg[3] ),
        .I3(gt_rxvalid_q_n_0),
        .I4(state_eios_det[4]),
        .I5(gt_rxvalid_q_reg_1),
        .O(gt_rxvalid_q__0));
  LUT6 #(
    .INIT(64'h00FE00FE00FE0000)) 
    gt_rxvalid_q_i_2
       (.I0(state_eios_det[2]),
        .I1(state_eios_det[1]),
        .I2(state_eios_det[3]),
        .I3(gt_rxvalid_q_reg_1),
        .I4(\reg_state_eios_det[4]_i_3_n_0 ),
        .I5(state_eios_det[4]),
        .O(gt_rxvalid_q_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT4 #(
    .INIT(16'h3222)) 
    gt_rxvalid_q_i_3
       (.I0(state_eios_det[0]),
        .I1(gt_rxvalid_q_reg_1),
        .I2(state_eios_det[2]),
        .I3(\reg_state_eios_det[3]_i_2_n_0 ),
        .O(gt_rxvalid_q_i_3_n_0));
  LUT6 #(
    .INIT(64'hFFFFEFFFFFFFFFFF)) 
    gt_rxvalid_q_i_4__2
       (.I0(gt_rxvalid_q_reg_2[3]),
        .I1(gt_rxvalid_q_reg_2[5]),
        .I2(gt_rxvalid_q_reg_2[1]),
        .I3(gt_rxvalid_q_reg_2[2]),
        .I4(gt_rxvalid_q_reg_2[0]),
        .I5(gt_rxvalid_q_reg_2[4]),
        .O(\pl_ltssm_state_q_reg[3] ));
  FDRE gt_rxvalid_q_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gt_rxvalid_q__0),
        .Q(gt_rxvalid_q_reg_0),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \pipe_stages_1.pipe_rx_char_is_k_q[0]_i_1 
       (.I0(gt_rxvalid_q_reg_0),
        .I1(\gt_rxcharisk_q_reg_n_0_[0] ),
        .O(\gt_rxcharisk_q_reg[1]_0 [0]));
  LUT3 #(
    .INIT(8'h08)) 
    \pipe_stages_1.pipe_rx_char_is_k_q[1]_i_1 
       (.I0(p_1_in),
        .I1(gt_rxvalid_q_reg_0),
        .I2(symbol_after_eios),
        .O(\gt_rxcharisk_q_reg[1]_0 [1]));
  LUT6 #(
    .INIT(64'hFFFFFFFFD5F7D0F0)) 
    \reg_state_eios_det[0]_i_1 
       (.I0(\reg_state_eios_det[2]_i_2_n_0 ),
        .I1(Q[15]),
        .I2(state_eios_det[2]),
        .I3(Q[14]),
        .I4(state_eios_det[0]),
        .I5(\reg_state_eios_det[0]_i_2_n_0 ),
        .O(p_1_in__0[0]));
  LUT6 #(
    .INIT(64'hFF80FF80FFFFFFF0)) 
    \reg_state_eios_det[0]_i_2 
       (.I0(Q[14]),
        .I1(state_eios_det[0]),
        .I2(\reg_state_eios_det[1]_i_2_n_0 ),
        .I3(\reg_state_eios_det[0]_i_3__0_n_0 ),
        .I4(\reg_state_eios_det[0]_i_4_n_0 ),
        .I5(\reg_state_eios_det[0]_i_5__1_n_0 ),
        .O(\reg_state_eios_det[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFEFAAAAAAAAAAAA)) 
    \reg_state_eios_det[0]_i_3__0 
       (.I0(state_eios_det[4]),
        .I1(Q[15]),
        .I2(Q[7]),
        .I3(Q[6]),
        .I4(state_eios_det[0]),
        .I5(Q[14]),
        .O(\reg_state_eios_det[0]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \reg_state_eios_det[0]_i_4 
       (.I0(Q[7]),
        .I1(Q[6]),
        .O(\reg_state_eios_det[0]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \reg_state_eios_det[0]_i_5__1 
       (.I0(state_eios_det[2]),
        .I1(state_eios_det[1]),
        .I2(state_eios_det[3]),
        .O(\reg_state_eios_det[0]_i_5__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'h00000400)) 
    \reg_state_eios_det[1]_i_1 
       (.I0(\reg_state_eios_det[3]_i_2_n_0 ),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(state_eios_det[0]),
        .I4(\reg_state_eios_det[1]_i_2_n_0 ),
        .O(p_1_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    \reg_state_eios_det[1]_i_2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\gt_rxcharisk_q_reg_n_0_[0] ),
        .I3(\reg_state_eios_det[1]_i_3_n_0 ),
        .O(\reg_state_eios_det[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFF7F)) 
    \reg_state_eios_det[1]_i_3 
       (.I0(Q[4]),
        .I1(Q[5]),
        .I2(Q[3]),
        .I3(Q[1]),
        .O(\reg_state_eios_det[1]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \reg_state_eios_det[2]_i_1 
       (.I0(\reg_state_eios_det[2]_i_2_n_0 ),
        .I1(Q[15]),
        .I2(Q[14]),
        .I3(state_eios_det[0]),
        .O(p_1_in__0[2]));
  LUT4 #(
    .INIT(16'h0040)) 
    \reg_state_eios_det[2]_i_2 
       (.I0(Q[8]),
        .I1(Q[10]),
        .I2(p_1_in),
        .I3(\reg_state_eios_det[2]_i_3_n_0 ),
        .O(\reg_state_eios_det[2]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFF7F)) 
    \reg_state_eios_det[2]_i_3 
       (.I0(Q[12]),
        .I1(Q[13]),
        .I2(Q[11]),
        .I3(Q[9]),
        .O(\reg_state_eios_det[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \reg_state_eios_det[3]_i_1 
       (.I0(\reg_state_eios_det[4]_i_3_n_0 ),
        .I1(state_eios_det[2]),
        .I2(\reg_state_eios_det[3]_i_2_n_0 ),
        .O(p_1_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    \reg_state_eios_det[3]_i_2 
       (.I0(Q[14]),
        .I1(Q[15]),
        .I2(\reg_state_eios_det[2]_i_2_n_0 ),
        .O(\reg_state_eios_det[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00010116)) 
    \reg_state_eios_det[4]_i_1 
       (.I0(state_eios_det[4]),
        .I1(state_eios_det[2]),
        .I2(state_eios_det[0]),
        .I3(state_eios_det[3]),
        .I4(state_eios_det[1]),
        .O(\reg_state_eios_det[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    \reg_state_eios_det[4]_i_2 
       (.I0(state_eios_det[1]),
        .I1(state_eios_det[3]),
        .I2(\reg_state_eios_det[4]_i_3_n_0 ),
        .O(p_1_in__0[4]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT3 #(
    .INIT(8'hFB)) 
    \reg_state_eios_det[4]_i_3 
       (.I0(\reg_state_eios_det[1]_i_2_n_0 ),
        .I1(Q[6]),
        .I2(Q[7]),
        .O(\reg_state_eios_det[4]_i_3_n_0 ));
  (* FSM_ENCODED_STATES = "EIOS_DET_NO_STR0:00010,EIOS_DET_STR0:00100,EIOS_DET_STR1:01000,EIOS_DET_IDL:00001,EIOS_DET_DONE:10000" *) 
  FDSE \reg_state_eios_det_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\reg_state_eios_det[4]_i_1_n_0 ),
        .D(p_1_in__0[0]),
        .Q(state_eios_det[0]),
        .S(SR));
  (* FSM_ENCODED_STATES = "EIOS_DET_NO_STR0:00010,EIOS_DET_STR0:00100,EIOS_DET_STR1:01000,EIOS_DET_IDL:00001,EIOS_DET_DONE:10000" *) 
  FDRE \reg_state_eios_det_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\reg_state_eios_det[4]_i_1_n_0 ),
        .D(p_1_in__0[1]),
        .Q(state_eios_det[1]),
        .R(SR));
  (* FSM_ENCODED_STATES = "EIOS_DET_NO_STR0:00010,EIOS_DET_STR0:00100,EIOS_DET_STR1:01000,EIOS_DET_IDL:00001,EIOS_DET_DONE:10000" *) 
  FDRE \reg_state_eios_det_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\reg_state_eios_det[4]_i_1_n_0 ),
        .D(p_1_in__0[2]),
        .Q(state_eios_det[2]),
        .R(SR));
  (* FSM_ENCODED_STATES = "EIOS_DET_NO_STR0:00010,EIOS_DET_STR0:00100,EIOS_DET_STR1:01000,EIOS_DET_IDL:00001,EIOS_DET_DONE:10000" *) 
  FDRE \reg_state_eios_det_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\reg_state_eios_det[4]_i_1_n_0 ),
        .D(p_1_in__0[3]),
        .Q(state_eios_det[3]),
        .R(SR));
  (* FSM_ENCODED_STATES = "EIOS_DET_NO_STR0:00010,EIOS_DET_STR0:00100,EIOS_DET_STR1:01000,EIOS_DET_IDL:00001,EIOS_DET_DONE:10000" *) 
  FDRE \reg_state_eios_det_reg[4] 
       (.C(pipe_pclk_in),
        .CE(\reg_state_eios_det[4]_i_1_n_0 ),
        .D(p_1_in__0[4]),
        .Q(state_eios_det[4]),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    reg_symbol_after_eios_i_1
       (.I0(\reg_state_eios_det[4]_i_3_n_0 ),
        .I1(state_eios_det[4]),
        .I2(state_eios_det[0]),
        .I3(state_eios_det[1]),
        .I4(state_eios_det[3]),
        .I5(reg_symbol_after_eios_i_2_n_0),
        .O(reg_symbol_after_eios));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'hB)) 
    reg_symbol_after_eios_i_2
       (.I0(\reg_state_eios_det[3]_i_2_n_0 ),
        .I1(state_eios_det[2]),
        .O(reg_symbol_after_eios_i_2_n_0));
  FDRE reg_symbol_after_eios_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(reg_symbol_after_eios),
        .Q(symbol_after_eios),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_gt_rx_valid_filter_7x" *) 
module pcie_7x_0_pcie_7x_0_gt_rx_valid_filter_7x_18
   (gt_rxvalid_q_reg_0,
    pipe_rx1_elec_idle,
    pipe_rx1_phy_status,
    Q,
    \gt_rxcharisk_q_reg[1]_0 ,
    pipe_rx1_status,
    SR,
    pipe_pclk_in,
    PIPE_RXELECIDLE,
    gt_rx_phy_status_q_reg_0,
    gt_rxvalid_q_reg_1,
    gt_rxvalid_q_reg_2,
    PIPE_RXDATAK,
    PIPE_RXDATA,
    D);
  output gt_rxvalid_q_reg_0;
  output pipe_rx1_elec_idle;
  output pipe_rx1_phy_status;
  output [15:0]Q;
  output [1:0]\gt_rxcharisk_q_reg[1]_0 ;
  output [2:0]pipe_rx1_status;
  input [0:0]SR;
  input pipe_pclk_in;
  input [0:0]PIPE_RXELECIDLE;
  input gt_rx_phy_status_q_reg_0;
  input gt_rxvalid_q_reg_1;
  input gt_rxvalid_q_reg_2;
  input [1:0]PIPE_RXDATAK;
  input [15:0]PIPE_RXDATA;
  input [2:0]D;

  wire [2:0]D;
  wire [15:0]PIPE_RXDATA;
  wire [1:0]PIPE_RXDATAK;
  wire [0:0]PIPE_RXELECIDLE;
  wire [15:0]Q;
  wire [0:0]SR;
  wire gt_rx_phy_status_q_reg_0;
  wire [1:0]\gt_rxcharisk_q_reg[1]_0 ;
  wire \gt_rxcharisk_q_reg_n_0_[0] ;
  wire gt_rxvalid_q__0;
  wire gt_rxvalid_q_i_2__0_n_0;
  wire gt_rxvalid_q_i_3__0_n_0;
  wire gt_rxvalid_q_n_0;
  wire gt_rxvalid_q_reg_0;
  wire gt_rxvalid_q_reg_1;
  wire gt_rxvalid_q_reg_2;
  wire p_1_in;
  wire [4:0]p_1_in__0;
  wire pipe_pclk_in;
  wire pipe_rx1_elec_idle;
  wire pipe_rx1_phy_status;
  wire [2:0]pipe_rx1_status;
  wire \reg_state_eios_det[0]_i_2__0_n_0 ;
  wire \reg_state_eios_det[0]_i_3__1_n_0 ;
  wire \reg_state_eios_det[0]_i_4__0_n_0 ;
  wire \reg_state_eios_det[0]_i_5_n_0 ;
  wire \reg_state_eios_det[1]_i_2__0_n_0 ;
  wire \reg_state_eios_det[1]_i_3__0_n_0 ;
  wire \reg_state_eios_det[2]_i_2__0_n_0 ;
  wire \reg_state_eios_det[2]_i_3__0_n_0 ;
  wire \reg_state_eios_det[3]_i_2__0_n_0 ;
  wire \reg_state_eios_det[4]_i_1__0_n_0 ;
  wire \reg_state_eios_det[4]_i_3__0_n_0 ;
  wire reg_symbol_after_eios;
  wire reg_symbol_after_eios_i_2__0_n_0;
  wire [4:0]state_eios_det;
  wire symbol_after_eios;

  FDRE gt_rx_phy_status_q_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gt_rx_phy_status_q_reg_0),
        .Q(pipe_rx1_phy_status),
        .R(SR));
  FDRE \gt_rx_status_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D[0]),
        .Q(pipe_rx1_status[0]),
        .R(SR));
  FDRE \gt_rx_status_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D[1]),
        .Q(pipe_rx1_status[1]),
        .R(SR));
  FDRE \gt_rx_status_q_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D[2]),
        .Q(pipe_rx1_status[2]),
        .R(SR));
  FDRE \gt_rxcharisk_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATAK[0]),
        .Q(\gt_rxcharisk_q_reg_n_0_[0] ),
        .R(SR));
  FDRE \gt_rxcharisk_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATAK[1]),
        .Q(p_1_in),
        .R(SR));
  FDRE \gt_rxdata_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[0]),
        .Q(Q[0]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[10]),
        .Q(Q[10]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[11]),
        .Q(Q[11]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[12]),
        .Q(Q[12]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[13]),
        .Q(Q[13]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[14]),
        .Q(Q[14]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[15]),
        .Q(Q[15]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[1]),
        .Q(Q[1]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[2]),
        .Q(Q[2]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[3]),
        .Q(Q[3]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[4]),
        .Q(Q[4]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[5]),
        .Q(Q[5]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[6]),
        .Q(Q[6]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[7]),
        .Q(Q[7]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[8]),
        .Q(Q[8]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[9]),
        .Q(Q[9]),
        .R(SR));
  FDRE gt_rxelecidle_q_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXELECIDLE),
        .Q(pipe_rx1_elec_idle),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    gt_rxvalid_q
       (.I0(state_eios_det[0]),
        .I1(state_eios_det[1]),
        .I2(state_eios_det[2]),
        .I3(state_eios_det[3]),
        .I4(state_eios_det[4]),
        .O(gt_rxvalid_q_n_0));
  LUT6 #(
    .INIT(64'hEEEEEEEEFEFEEEFF)) 
    gt_rxvalid_q_i_1__0
       (.I0(gt_rxvalid_q_i_2__0_n_0),
        .I1(gt_rxvalid_q_i_3__0_n_0),
        .I2(gt_rxvalid_q_reg_1),
        .I3(gt_rxvalid_q_n_0),
        .I4(state_eios_det[4]),
        .I5(gt_rxvalid_q_reg_2),
        .O(gt_rxvalid_q__0));
  LUT6 #(
    .INIT(64'h00FE00FE00FE0000)) 
    gt_rxvalid_q_i_2__0
       (.I0(state_eios_det[2]),
        .I1(state_eios_det[1]),
        .I2(state_eios_det[3]),
        .I3(gt_rxvalid_q_reg_2),
        .I4(\reg_state_eios_det[4]_i_3__0_n_0 ),
        .I5(state_eios_det[4]),
        .O(gt_rxvalid_q_i_2__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT4 #(
    .INIT(16'h3222)) 
    gt_rxvalid_q_i_3__0
       (.I0(state_eios_det[0]),
        .I1(gt_rxvalid_q_reg_2),
        .I2(state_eios_det[2]),
        .I3(\reg_state_eios_det[3]_i_2__0_n_0 ),
        .O(gt_rxvalid_q_i_3__0_n_0));
  FDRE gt_rxvalid_q_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gt_rxvalid_q__0),
        .Q(gt_rxvalid_q_reg_0),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \pipe_stages_1.pipe_rx_char_is_k_q[0]_i_1__0 
       (.I0(gt_rxvalid_q_reg_0),
        .I1(\gt_rxcharisk_q_reg_n_0_[0] ),
        .O(\gt_rxcharisk_q_reg[1]_0 [0]));
  LUT3 #(
    .INIT(8'h08)) 
    \pipe_stages_1.pipe_rx_char_is_k_q[1]_i_1__0 
       (.I0(p_1_in),
        .I1(gt_rxvalid_q_reg_0),
        .I2(symbol_after_eios),
        .O(\gt_rxcharisk_q_reg[1]_0 [1]));
  LUT6 #(
    .INIT(64'hFFFFFFFFD5F7D0F0)) 
    \reg_state_eios_det[0]_i_1__0 
       (.I0(\reg_state_eios_det[2]_i_2__0_n_0 ),
        .I1(Q[15]),
        .I2(state_eios_det[2]),
        .I3(Q[14]),
        .I4(state_eios_det[0]),
        .I5(\reg_state_eios_det[0]_i_2__0_n_0 ),
        .O(p_1_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT5 #(
    .INIT(32'hFFFFD500)) 
    \reg_state_eios_det[0]_i_2__0 
       (.I0(\reg_state_eios_det[0]_i_3__1_n_0 ),
        .I1(Q[14]),
        .I2(state_eios_det[0]),
        .I3(\reg_state_eios_det[1]_i_2__0_n_0 ),
        .I4(\reg_state_eios_det[0]_i_4__0_n_0 ),
        .O(\reg_state_eios_det[0]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \reg_state_eios_det[0]_i_3__1 
       (.I0(state_eios_det[2]),
        .I1(state_eios_det[1]),
        .I2(state_eios_det[3]),
        .O(\reg_state_eios_det[0]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFDFFDDCCDDDD)) 
    \reg_state_eios_det[0]_i_4__0 
       (.I0(\reg_state_eios_det[0]_i_3__1_n_0 ),
        .I1(state_eios_det[4]),
        .I2(Q[15]),
        .I3(Q[7]),
        .I4(Q[6]),
        .I5(\reg_state_eios_det[0]_i_5_n_0 ),
        .O(\reg_state_eios_det[0]_i_4__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_state_eios_det[0]_i_5 
       (.I0(state_eios_det[0]),
        .I1(Q[14]),
        .O(\reg_state_eios_det[0]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT5 #(
    .INIT(32'h00000400)) 
    \reg_state_eios_det[1]_i_1__0 
       (.I0(\reg_state_eios_det[3]_i_2__0_n_0 ),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(state_eios_det[0]),
        .I4(\reg_state_eios_det[1]_i_2__0_n_0 ),
        .O(p_1_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    \reg_state_eios_det[1]_i_2__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\gt_rxcharisk_q_reg_n_0_[0] ),
        .I3(\reg_state_eios_det[1]_i_3__0_n_0 ),
        .O(\reg_state_eios_det[1]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'hFF7F)) 
    \reg_state_eios_det[1]_i_3__0 
       (.I0(Q[4]),
        .I1(Q[5]),
        .I2(Q[3]),
        .I3(Q[1]),
        .O(\reg_state_eios_det[1]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \reg_state_eios_det[2]_i_1__0 
       (.I0(\reg_state_eios_det[2]_i_2__0_n_0 ),
        .I1(Q[15]),
        .I2(Q[14]),
        .I3(state_eios_det[0]),
        .O(p_1_in__0[2]));
  LUT4 #(
    .INIT(16'h0040)) 
    \reg_state_eios_det[2]_i_2__0 
       (.I0(Q[8]),
        .I1(Q[10]),
        .I2(p_1_in),
        .I3(\reg_state_eios_det[2]_i_3__0_n_0 ),
        .O(\reg_state_eios_det[2]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'hFF7F)) 
    \reg_state_eios_det[2]_i_3__0 
       (.I0(Q[12]),
        .I1(Q[13]),
        .I2(Q[11]),
        .I3(Q[9]),
        .O(\reg_state_eios_det[2]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \reg_state_eios_det[3]_i_1__0 
       (.I0(\reg_state_eios_det[4]_i_3__0_n_0 ),
        .I1(state_eios_det[2]),
        .I2(\reg_state_eios_det[3]_i_2__0_n_0 ),
        .O(p_1_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    \reg_state_eios_det[3]_i_2__0 
       (.I0(Q[14]),
        .I1(Q[15]),
        .I2(\reg_state_eios_det[2]_i_2__0_n_0 ),
        .O(\reg_state_eios_det[3]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'h00010116)) 
    \reg_state_eios_det[4]_i_1__0 
       (.I0(state_eios_det[4]),
        .I1(state_eios_det[2]),
        .I2(state_eios_det[0]),
        .I3(state_eios_det[3]),
        .I4(state_eios_det[1]),
        .O(\reg_state_eios_det[4]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    \reg_state_eios_det[4]_i_2__0 
       (.I0(state_eios_det[1]),
        .I1(state_eios_det[3]),
        .I2(\reg_state_eios_det[4]_i_3__0_n_0 ),
        .O(p_1_in__0[4]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'hFB)) 
    \reg_state_eios_det[4]_i_3__0 
       (.I0(\reg_state_eios_det[1]_i_2__0_n_0 ),
        .I1(Q[6]),
        .I2(Q[7]),
        .O(\reg_state_eios_det[4]_i_3__0_n_0 ));
  (* FSM_ENCODED_STATES = "EIOS_DET_NO_STR0:00010,EIOS_DET_STR0:00100,EIOS_DET_STR1:01000,EIOS_DET_IDL:00001,EIOS_DET_DONE:10000" *) 
  FDSE \reg_state_eios_det_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\reg_state_eios_det[4]_i_1__0_n_0 ),
        .D(p_1_in__0[0]),
        .Q(state_eios_det[0]),
        .S(SR));
  (* FSM_ENCODED_STATES = "EIOS_DET_NO_STR0:00010,EIOS_DET_STR0:00100,EIOS_DET_STR1:01000,EIOS_DET_IDL:00001,EIOS_DET_DONE:10000" *) 
  FDRE \reg_state_eios_det_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\reg_state_eios_det[4]_i_1__0_n_0 ),
        .D(p_1_in__0[1]),
        .Q(state_eios_det[1]),
        .R(SR));
  (* FSM_ENCODED_STATES = "EIOS_DET_NO_STR0:00010,EIOS_DET_STR0:00100,EIOS_DET_STR1:01000,EIOS_DET_IDL:00001,EIOS_DET_DONE:10000" *) 
  FDRE \reg_state_eios_det_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\reg_state_eios_det[4]_i_1__0_n_0 ),
        .D(p_1_in__0[2]),
        .Q(state_eios_det[2]),
        .R(SR));
  (* FSM_ENCODED_STATES = "EIOS_DET_NO_STR0:00010,EIOS_DET_STR0:00100,EIOS_DET_STR1:01000,EIOS_DET_IDL:00001,EIOS_DET_DONE:10000" *) 
  FDRE \reg_state_eios_det_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\reg_state_eios_det[4]_i_1__0_n_0 ),
        .D(p_1_in__0[3]),
        .Q(state_eios_det[3]),
        .R(SR));
  (* FSM_ENCODED_STATES = "EIOS_DET_NO_STR0:00010,EIOS_DET_STR0:00100,EIOS_DET_STR1:01000,EIOS_DET_IDL:00001,EIOS_DET_DONE:10000" *) 
  FDRE \reg_state_eios_det_reg[4] 
       (.C(pipe_pclk_in),
        .CE(\reg_state_eios_det[4]_i_1__0_n_0 ),
        .D(p_1_in__0[4]),
        .Q(state_eios_det[4]),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    reg_symbol_after_eios_i_1__0
       (.I0(\reg_state_eios_det[4]_i_3__0_n_0 ),
        .I1(state_eios_det[4]),
        .I2(state_eios_det[0]),
        .I3(state_eios_det[1]),
        .I4(state_eios_det[3]),
        .I5(reg_symbol_after_eios_i_2__0_n_0),
        .O(reg_symbol_after_eios));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'hB)) 
    reg_symbol_after_eios_i_2__0
       (.I0(\reg_state_eios_det[3]_i_2__0_n_0 ),
        .I1(state_eios_det[2]),
        .O(reg_symbol_after_eios_i_2__0_n_0));
  FDRE reg_symbol_after_eios_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(reg_symbol_after_eios),
        .Q(symbol_after_eios),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_gt_rx_valid_filter_7x" *) 
module pcie_7x_0_pcie_7x_0_gt_rx_valid_filter_7x_19
   (gt_rxvalid_q_reg_0,
    pipe_rx2_elec_idle,
    pipe_rx2_phy_status,
    Q,
    \gt_rxcharisk_q_reg[1]_0 ,
    pipe_rx2_status,
    SR,
    pipe_pclk_in,
    PIPE_RXELECIDLE,
    gt_rx_phy_status_q_reg_0,
    gt_rxvalid_q_reg_1,
    gt_rxvalid_q_reg_2,
    PIPE_RXDATAK,
    PIPE_RXDATA,
    D);
  output gt_rxvalid_q_reg_0;
  output pipe_rx2_elec_idle;
  output pipe_rx2_phy_status;
  output [15:0]Q;
  output [1:0]\gt_rxcharisk_q_reg[1]_0 ;
  output [2:0]pipe_rx2_status;
  input [0:0]SR;
  input pipe_pclk_in;
  input [0:0]PIPE_RXELECIDLE;
  input gt_rx_phy_status_q_reg_0;
  input gt_rxvalid_q_reg_1;
  input gt_rxvalid_q_reg_2;
  input [1:0]PIPE_RXDATAK;
  input [15:0]PIPE_RXDATA;
  input [2:0]D;

  wire [2:0]D;
  wire [15:0]PIPE_RXDATA;
  wire [1:0]PIPE_RXDATAK;
  wire [0:0]PIPE_RXELECIDLE;
  wire [15:0]Q;
  wire [0:0]SR;
  wire gt_rx_phy_status_q_reg_0;
  wire [1:0]\gt_rxcharisk_q_reg[1]_0 ;
  wire \gt_rxcharisk_q_reg_n_0_[0] ;
  wire gt_rxvalid_q__0;
  wire gt_rxvalid_q_i_2__1_n_0;
  wire gt_rxvalid_q_i_3__1_n_0;
  wire gt_rxvalid_q_n_0;
  wire gt_rxvalid_q_reg_0;
  wire gt_rxvalid_q_reg_1;
  wire gt_rxvalid_q_reg_2;
  wire p_1_in;
  wire [4:0]p_1_in__0;
  wire pipe_pclk_in;
  wire pipe_rx2_elec_idle;
  wire pipe_rx2_phy_status;
  wire [2:0]pipe_rx2_status;
  wire \reg_state_eios_det[0]_i_2__1_n_0 ;
  wire \reg_state_eios_det[0]_i_3__2_n_0 ;
  wire \reg_state_eios_det[0]_i_4__1_n_0 ;
  wire \reg_state_eios_det[0]_i_5__0_n_0 ;
  wire \reg_state_eios_det[1]_i_2__1_n_0 ;
  wire \reg_state_eios_det[1]_i_3__1_n_0 ;
  wire \reg_state_eios_det[2]_i_2__1_n_0 ;
  wire \reg_state_eios_det[2]_i_3__1_n_0 ;
  wire \reg_state_eios_det[3]_i_2__1_n_0 ;
  wire \reg_state_eios_det[4]_i_1__1_n_0 ;
  wire \reg_state_eios_det[4]_i_3__1_n_0 ;
  wire reg_symbol_after_eios;
  wire reg_symbol_after_eios_i_2__1_n_0;
  wire [4:0]state_eios_det;
  wire symbol_after_eios;

  FDRE gt_rx_phy_status_q_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gt_rx_phy_status_q_reg_0),
        .Q(pipe_rx2_phy_status),
        .R(SR));
  FDRE \gt_rx_status_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D[0]),
        .Q(pipe_rx2_status[0]),
        .R(SR));
  FDRE \gt_rx_status_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D[1]),
        .Q(pipe_rx2_status[1]),
        .R(SR));
  FDRE \gt_rx_status_q_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D[2]),
        .Q(pipe_rx2_status[2]),
        .R(SR));
  FDRE \gt_rxcharisk_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATAK[0]),
        .Q(\gt_rxcharisk_q_reg_n_0_[0] ),
        .R(SR));
  FDRE \gt_rxcharisk_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATAK[1]),
        .Q(p_1_in),
        .R(SR));
  FDRE \gt_rxdata_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[0]),
        .Q(Q[0]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[10]),
        .Q(Q[10]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[11]),
        .Q(Q[11]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[12]),
        .Q(Q[12]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[13]),
        .Q(Q[13]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[14]),
        .Q(Q[14]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[15]),
        .Q(Q[15]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[1]),
        .Q(Q[1]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[2]),
        .Q(Q[2]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[3]),
        .Q(Q[3]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[4]),
        .Q(Q[4]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[5]),
        .Q(Q[5]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[6]),
        .Q(Q[6]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[7]),
        .Q(Q[7]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[8]),
        .Q(Q[8]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[9]),
        .Q(Q[9]),
        .R(SR));
  FDRE gt_rxelecidle_q_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXELECIDLE),
        .Q(pipe_rx2_elec_idle),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    gt_rxvalid_q
       (.I0(state_eios_det[0]),
        .I1(state_eios_det[1]),
        .I2(state_eios_det[2]),
        .I3(state_eios_det[3]),
        .I4(state_eios_det[4]),
        .O(gt_rxvalid_q_n_0));
  LUT6 #(
    .INIT(64'hEEEEEEEEFEFEEEFF)) 
    gt_rxvalid_q_i_1__1
       (.I0(gt_rxvalid_q_i_2__1_n_0),
        .I1(gt_rxvalid_q_i_3__1_n_0),
        .I2(gt_rxvalid_q_reg_1),
        .I3(gt_rxvalid_q_n_0),
        .I4(state_eios_det[4]),
        .I5(gt_rxvalid_q_reg_2),
        .O(gt_rxvalid_q__0));
  LUT6 #(
    .INIT(64'h00FE00FE00FE0000)) 
    gt_rxvalid_q_i_2__1
       (.I0(state_eios_det[2]),
        .I1(state_eios_det[1]),
        .I2(state_eios_det[3]),
        .I3(gt_rxvalid_q_reg_2),
        .I4(\reg_state_eios_det[4]_i_3__1_n_0 ),
        .I5(state_eios_det[4]),
        .O(gt_rxvalid_q_i_2__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT4 #(
    .INIT(16'h3222)) 
    gt_rxvalid_q_i_3__1
       (.I0(state_eios_det[0]),
        .I1(gt_rxvalid_q_reg_2),
        .I2(state_eios_det[2]),
        .I3(\reg_state_eios_det[3]_i_2__1_n_0 ),
        .O(gt_rxvalid_q_i_3__1_n_0));
  FDRE gt_rxvalid_q_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gt_rxvalid_q__0),
        .Q(gt_rxvalid_q_reg_0),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \pipe_stages_1.pipe_rx_char_is_k_q[0]_i_1__1 
       (.I0(gt_rxvalid_q_reg_0),
        .I1(\gt_rxcharisk_q_reg_n_0_[0] ),
        .O(\gt_rxcharisk_q_reg[1]_0 [0]));
  LUT3 #(
    .INIT(8'h08)) 
    \pipe_stages_1.pipe_rx_char_is_k_q[1]_i_1__1 
       (.I0(p_1_in),
        .I1(gt_rxvalid_q_reg_0),
        .I2(symbol_after_eios),
        .O(\gt_rxcharisk_q_reg[1]_0 [1]));
  LUT6 #(
    .INIT(64'hFFFFFFFFD5F7D0F0)) 
    \reg_state_eios_det[0]_i_1__1 
       (.I0(\reg_state_eios_det[2]_i_2__1_n_0 ),
        .I1(Q[15]),
        .I2(state_eios_det[2]),
        .I3(Q[14]),
        .I4(state_eios_det[0]),
        .I5(\reg_state_eios_det[0]_i_2__1_n_0 ),
        .O(p_1_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT5 #(
    .INIT(32'hFFFFD500)) 
    \reg_state_eios_det[0]_i_2__1 
       (.I0(\reg_state_eios_det[0]_i_3__2_n_0 ),
        .I1(Q[14]),
        .I2(state_eios_det[0]),
        .I3(\reg_state_eios_det[1]_i_2__1_n_0 ),
        .I4(\reg_state_eios_det[0]_i_4__1_n_0 ),
        .O(\reg_state_eios_det[0]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \reg_state_eios_det[0]_i_3__2 
       (.I0(state_eios_det[2]),
        .I1(state_eios_det[1]),
        .I2(state_eios_det[3]),
        .O(\reg_state_eios_det[0]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFDFFDDCCDDDD)) 
    \reg_state_eios_det[0]_i_4__1 
       (.I0(\reg_state_eios_det[0]_i_3__2_n_0 ),
        .I1(state_eios_det[4]),
        .I2(Q[15]),
        .I3(Q[7]),
        .I4(Q[6]),
        .I5(\reg_state_eios_det[0]_i_5__0_n_0 ),
        .O(\reg_state_eios_det[0]_i_4__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_state_eios_det[0]_i_5__0 
       (.I0(state_eios_det[0]),
        .I1(Q[14]),
        .O(\reg_state_eios_det[0]_i_5__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT5 #(
    .INIT(32'h00000400)) 
    \reg_state_eios_det[1]_i_1__1 
       (.I0(\reg_state_eios_det[3]_i_2__1_n_0 ),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(state_eios_det[0]),
        .I4(\reg_state_eios_det[1]_i_2__1_n_0 ),
        .O(p_1_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    \reg_state_eios_det[1]_i_2__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\gt_rxcharisk_q_reg_n_0_[0] ),
        .I3(\reg_state_eios_det[1]_i_3__1_n_0 ),
        .O(\reg_state_eios_det[1]_i_2__1_n_0 ));
  LUT4 #(
    .INIT(16'hFF7F)) 
    \reg_state_eios_det[1]_i_3__1 
       (.I0(Q[4]),
        .I1(Q[5]),
        .I2(Q[3]),
        .I3(Q[1]),
        .O(\reg_state_eios_det[1]_i_3__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \reg_state_eios_det[2]_i_1__1 
       (.I0(\reg_state_eios_det[2]_i_2__1_n_0 ),
        .I1(Q[15]),
        .I2(Q[14]),
        .I3(state_eios_det[0]),
        .O(p_1_in__0[2]));
  LUT4 #(
    .INIT(16'h0040)) 
    \reg_state_eios_det[2]_i_2__1 
       (.I0(Q[8]),
        .I1(Q[10]),
        .I2(p_1_in),
        .I3(\reg_state_eios_det[2]_i_3__1_n_0 ),
        .O(\reg_state_eios_det[2]_i_2__1_n_0 ));
  LUT4 #(
    .INIT(16'hFF7F)) 
    \reg_state_eios_det[2]_i_3__1 
       (.I0(Q[12]),
        .I1(Q[13]),
        .I2(Q[11]),
        .I3(Q[9]),
        .O(\reg_state_eios_det[2]_i_3__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \reg_state_eios_det[3]_i_1__1 
       (.I0(\reg_state_eios_det[4]_i_3__1_n_0 ),
        .I1(state_eios_det[2]),
        .I2(\reg_state_eios_det[3]_i_2__1_n_0 ),
        .O(p_1_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    \reg_state_eios_det[3]_i_2__1 
       (.I0(Q[14]),
        .I1(Q[15]),
        .I2(\reg_state_eios_det[2]_i_2__1_n_0 ),
        .O(\reg_state_eios_det[3]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'h00010116)) 
    \reg_state_eios_det[4]_i_1__1 
       (.I0(state_eios_det[4]),
        .I1(state_eios_det[2]),
        .I2(state_eios_det[0]),
        .I3(state_eios_det[3]),
        .I4(state_eios_det[1]),
        .O(\reg_state_eios_det[4]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    \reg_state_eios_det[4]_i_2__1 
       (.I0(state_eios_det[1]),
        .I1(state_eios_det[3]),
        .I2(\reg_state_eios_det[4]_i_3__1_n_0 ),
        .O(p_1_in__0[4]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'hFB)) 
    \reg_state_eios_det[4]_i_3__1 
       (.I0(\reg_state_eios_det[1]_i_2__1_n_0 ),
        .I1(Q[6]),
        .I2(Q[7]),
        .O(\reg_state_eios_det[4]_i_3__1_n_0 ));
  (* FSM_ENCODED_STATES = "EIOS_DET_NO_STR0:00010,EIOS_DET_STR0:00100,EIOS_DET_STR1:01000,EIOS_DET_IDL:00001,EIOS_DET_DONE:10000" *) 
  FDSE \reg_state_eios_det_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\reg_state_eios_det[4]_i_1__1_n_0 ),
        .D(p_1_in__0[0]),
        .Q(state_eios_det[0]),
        .S(SR));
  (* FSM_ENCODED_STATES = "EIOS_DET_NO_STR0:00010,EIOS_DET_STR0:00100,EIOS_DET_STR1:01000,EIOS_DET_IDL:00001,EIOS_DET_DONE:10000" *) 
  FDRE \reg_state_eios_det_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\reg_state_eios_det[4]_i_1__1_n_0 ),
        .D(p_1_in__0[1]),
        .Q(state_eios_det[1]),
        .R(SR));
  (* FSM_ENCODED_STATES = "EIOS_DET_NO_STR0:00010,EIOS_DET_STR0:00100,EIOS_DET_STR1:01000,EIOS_DET_IDL:00001,EIOS_DET_DONE:10000" *) 
  FDRE \reg_state_eios_det_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\reg_state_eios_det[4]_i_1__1_n_0 ),
        .D(p_1_in__0[2]),
        .Q(state_eios_det[2]),
        .R(SR));
  (* FSM_ENCODED_STATES = "EIOS_DET_NO_STR0:00010,EIOS_DET_STR0:00100,EIOS_DET_STR1:01000,EIOS_DET_IDL:00001,EIOS_DET_DONE:10000" *) 
  FDRE \reg_state_eios_det_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\reg_state_eios_det[4]_i_1__1_n_0 ),
        .D(p_1_in__0[3]),
        .Q(state_eios_det[3]),
        .R(SR));
  (* FSM_ENCODED_STATES = "EIOS_DET_NO_STR0:00010,EIOS_DET_STR0:00100,EIOS_DET_STR1:01000,EIOS_DET_IDL:00001,EIOS_DET_DONE:10000" *) 
  FDRE \reg_state_eios_det_reg[4] 
       (.C(pipe_pclk_in),
        .CE(\reg_state_eios_det[4]_i_1__1_n_0 ),
        .D(p_1_in__0[4]),
        .Q(state_eios_det[4]),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    reg_symbol_after_eios_i_1__1
       (.I0(\reg_state_eios_det[4]_i_3__1_n_0 ),
        .I1(state_eios_det[4]),
        .I2(state_eios_det[0]),
        .I3(state_eios_det[1]),
        .I4(state_eios_det[3]),
        .I5(reg_symbol_after_eios_i_2__1_n_0),
        .O(reg_symbol_after_eios));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'hB)) 
    reg_symbol_after_eios_i_2__1
       (.I0(\reg_state_eios_det[3]_i_2__1_n_0 ),
        .I1(state_eios_det[2]),
        .O(reg_symbol_after_eios_i_2__1_n_0));
  FDRE reg_symbol_after_eios_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(reg_symbol_after_eios),
        .Q(symbol_after_eios),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_gt_rx_valid_filter_7x" *) 
module pcie_7x_0_pcie_7x_0_gt_rx_valid_filter_7x_20
   (gt_rxvalid_q_reg_0,
    pipe_rx3_elec_idle,
    pipe_rx3_phy_status,
    Q,
    \gt_rxcharisk_q_reg[1]_0 ,
    pipe_rx3_status,
    SR,
    pipe_pclk_in,
    PIPE_RXELECIDLE,
    gt_rx_phy_status_q_reg_0,
    gt_rxvalid_q_reg_1,
    gt_rxvalid_q_reg_2,
    PIPE_RXDATAK,
    PIPE_RXDATA,
    D);
  output gt_rxvalid_q_reg_0;
  output pipe_rx3_elec_idle;
  output pipe_rx3_phy_status;
  output [15:0]Q;
  output [1:0]\gt_rxcharisk_q_reg[1]_0 ;
  output [2:0]pipe_rx3_status;
  input [0:0]SR;
  input pipe_pclk_in;
  input [0:0]PIPE_RXELECIDLE;
  input gt_rx_phy_status_q_reg_0;
  input gt_rxvalid_q_reg_1;
  input gt_rxvalid_q_reg_2;
  input [1:0]PIPE_RXDATAK;
  input [15:0]PIPE_RXDATA;
  input [2:0]D;

  wire [2:0]D;
  wire [15:0]PIPE_RXDATA;
  wire [1:0]PIPE_RXDATAK;
  wire [0:0]PIPE_RXELECIDLE;
  wire [15:0]Q;
  wire [0:0]SR;
  wire gt_rx_phy_status_q_reg_0;
  wire [1:0]\gt_rxcharisk_q_reg[1]_0 ;
  wire \gt_rxcharisk_q_reg_n_0_[0] ;
  wire gt_rxvalid_q__0;
  wire gt_rxvalid_q_i_2__2_n_0;
  wire gt_rxvalid_q_i_3__2_n_0;
  wire gt_rxvalid_q_n_0;
  wire gt_rxvalid_q_reg_0;
  wire gt_rxvalid_q_reg_1;
  wire gt_rxvalid_q_reg_2;
  wire p_1_in;
  wire [4:0]p_1_in__0;
  wire pipe_pclk_in;
  wire pipe_rx3_elec_idle;
  wire pipe_rx3_phy_status;
  wire [2:0]pipe_rx3_status;
  wire \reg_state_eios_det[0]_i_2__2_n_0 ;
  wire \reg_state_eios_det[0]_i_3_n_0 ;
  wire \reg_state_eios_det[0]_i_4__2_n_0 ;
  wire \reg_state_eios_det[0]_i_5__2_n_0 ;
  wire \reg_state_eios_det[1]_i_2__2_n_0 ;
  wire \reg_state_eios_det[1]_i_3__2_n_0 ;
  wire \reg_state_eios_det[2]_i_2__2_n_0 ;
  wire \reg_state_eios_det[2]_i_3__2_n_0 ;
  wire \reg_state_eios_det[3]_i_2__2_n_0 ;
  wire \reg_state_eios_det[4]_i_1__2_n_0 ;
  wire \reg_state_eios_det[4]_i_3__2_n_0 ;
  wire reg_symbol_after_eios;
  wire reg_symbol_after_eios_i_2__2_n_0;
  wire [4:0]state_eios_det;
  wire symbol_after_eios;

  FDRE gt_rx_phy_status_q_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gt_rx_phy_status_q_reg_0),
        .Q(pipe_rx3_phy_status),
        .R(SR));
  FDRE \gt_rx_status_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D[0]),
        .Q(pipe_rx3_status[0]),
        .R(SR));
  FDRE \gt_rx_status_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D[1]),
        .Q(pipe_rx3_status[1]),
        .R(SR));
  FDRE \gt_rx_status_q_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D[2]),
        .Q(pipe_rx3_status[2]),
        .R(SR));
  FDRE \gt_rxcharisk_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATAK[0]),
        .Q(\gt_rxcharisk_q_reg_n_0_[0] ),
        .R(SR));
  FDRE \gt_rxcharisk_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATAK[1]),
        .Q(p_1_in),
        .R(SR));
  FDRE \gt_rxdata_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[0]),
        .Q(Q[0]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[10]),
        .Q(Q[10]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[11]),
        .Q(Q[11]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[12]),
        .Q(Q[12]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[13]),
        .Q(Q[13]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[14]),
        .Q(Q[14]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[15]),
        .Q(Q[15]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[1]),
        .Q(Q[1]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[2]),
        .Q(Q[2]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[3]),
        .Q(Q[3]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[4]),
        .Q(Q[4]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[5]),
        .Q(Q[5]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[6]),
        .Q(Q[6]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[7]),
        .Q(Q[7]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[8]),
        .Q(Q[8]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXDATA[9]),
        .Q(Q[9]),
        .R(SR));
  FDRE gt_rxelecidle_q_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(PIPE_RXELECIDLE),
        .Q(pipe_rx3_elec_idle),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    gt_rxvalid_q
       (.I0(state_eios_det[0]),
        .I1(state_eios_det[1]),
        .I2(state_eios_det[2]),
        .I3(state_eios_det[3]),
        .I4(state_eios_det[4]),
        .O(gt_rxvalid_q_n_0));
  LUT6 #(
    .INIT(64'hEEEEEEEEFEFEEEFF)) 
    gt_rxvalid_q_i_1__2
       (.I0(gt_rxvalid_q_i_2__2_n_0),
        .I1(gt_rxvalid_q_i_3__2_n_0),
        .I2(gt_rxvalid_q_reg_1),
        .I3(gt_rxvalid_q_n_0),
        .I4(state_eios_det[4]),
        .I5(gt_rxvalid_q_reg_2),
        .O(gt_rxvalid_q__0));
  LUT6 #(
    .INIT(64'h00FE00FE00FE0000)) 
    gt_rxvalid_q_i_2__2
       (.I0(state_eios_det[2]),
        .I1(state_eios_det[1]),
        .I2(state_eios_det[3]),
        .I3(gt_rxvalid_q_reg_2),
        .I4(\reg_state_eios_det[4]_i_3__2_n_0 ),
        .I5(state_eios_det[4]),
        .O(gt_rxvalid_q_i_2__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT4 #(
    .INIT(16'h3222)) 
    gt_rxvalid_q_i_3__2
       (.I0(state_eios_det[0]),
        .I1(gt_rxvalid_q_reg_2),
        .I2(state_eios_det[2]),
        .I3(\reg_state_eios_det[3]_i_2__2_n_0 ),
        .O(gt_rxvalid_q_i_3__2_n_0));
  FDRE gt_rxvalid_q_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gt_rxvalid_q__0),
        .Q(gt_rxvalid_q_reg_0),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \pipe_stages_1.pipe_rx_char_is_k_q[0]_i_1__2 
       (.I0(gt_rxvalid_q_reg_0),
        .I1(\gt_rxcharisk_q_reg_n_0_[0] ),
        .O(\gt_rxcharisk_q_reg[1]_0 [0]));
  LUT3 #(
    .INIT(8'h08)) 
    \pipe_stages_1.pipe_rx_char_is_k_q[1]_i_1__2 
       (.I0(p_1_in),
        .I1(gt_rxvalid_q_reg_0),
        .I2(symbol_after_eios),
        .O(\gt_rxcharisk_q_reg[1]_0 [1]));
  LUT5 #(
    .INIT(32'hFFFFBBBA)) 
    \reg_state_eios_det[0]_i_1__2 
       (.I0(\reg_state_eios_det[0]_i_2__2_n_0 ),
        .I1(\reg_state_eios_det[2]_i_2__2_n_0 ),
        .I2(state_eios_det[2]),
        .I3(state_eios_det[0]),
        .I4(\reg_state_eios_det[0]_i_3_n_0 ),
        .O(p_1_in__0[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFAFFEAAA)) 
    \reg_state_eios_det[0]_i_2__2 
       (.I0(state_eios_det[4]),
        .I1(state_eios_det[0]),
        .I2(Q[15]),
        .I3(Q[14]),
        .I4(state_eios_det[2]),
        .I5(\reg_state_eios_det[0]_i_4__2_n_0 ),
        .O(\reg_state_eios_det[0]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAA08)) 
    \reg_state_eios_det[0]_i_3 
       (.I0(\reg_state_eios_det[1]_i_2__2_n_0 ),
        .I1(state_eios_det[0]),
        .I2(Q[15]),
        .I3(state_eios_det[2]),
        .I4(state_eios_det[1]),
        .I5(state_eios_det[3]),
        .O(\reg_state_eios_det[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h50555055FF7F5055)) 
    \reg_state_eios_det[0]_i_4__2 
       (.I0(\reg_state_eios_det[0]_i_5__2_n_0 ),
        .I1(Q[14]),
        .I2(Q[7]),
        .I3(Q[6]),
        .I4(state_eios_det[0]),
        .I5(Q[15]),
        .O(\reg_state_eios_det[0]_i_4__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \reg_state_eios_det[0]_i_5__2 
       (.I0(state_eios_det[2]),
        .I1(state_eios_det[1]),
        .I2(state_eios_det[3]),
        .O(\reg_state_eios_det[0]_i_5__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT5 #(
    .INIT(32'h00000400)) 
    \reg_state_eios_det[1]_i_1__2 
       (.I0(\reg_state_eios_det[3]_i_2__2_n_0 ),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(state_eios_det[0]),
        .I4(\reg_state_eios_det[1]_i_2__2_n_0 ),
        .O(p_1_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    \reg_state_eios_det[1]_i_2__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\gt_rxcharisk_q_reg_n_0_[0] ),
        .I3(\reg_state_eios_det[1]_i_3__2_n_0 ),
        .O(\reg_state_eios_det[1]_i_2__2_n_0 ));
  LUT4 #(
    .INIT(16'hFF7F)) 
    \reg_state_eios_det[1]_i_3__2 
       (.I0(Q[4]),
        .I1(Q[5]),
        .I2(Q[3]),
        .I3(Q[1]),
        .O(\reg_state_eios_det[1]_i_3__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \reg_state_eios_det[2]_i_1__2 
       (.I0(\reg_state_eios_det[2]_i_2__2_n_0 ),
        .I1(state_eios_det[0]),
        .I2(Q[15]),
        .I3(Q[14]),
        .O(p_1_in__0[2]));
  LUT4 #(
    .INIT(16'h0040)) 
    \reg_state_eios_det[2]_i_2__2 
       (.I0(Q[8]),
        .I1(Q[10]),
        .I2(p_1_in),
        .I3(\reg_state_eios_det[2]_i_3__2_n_0 ),
        .O(\reg_state_eios_det[2]_i_2__2_n_0 ));
  LUT4 #(
    .INIT(16'hFF7F)) 
    \reg_state_eios_det[2]_i_3__2 
       (.I0(Q[12]),
        .I1(Q[13]),
        .I2(Q[11]),
        .I3(Q[9]),
        .O(\reg_state_eios_det[2]_i_3__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \reg_state_eios_det[3]_i_1__2 
       (.I0(\reg_state_eios_det[4]_i_3__2_n_0 ),
        .I1(state_eios_det[2]),
        .I2(\reg_state_eios_det[3]_i_2__2_n_0 ),
        .O(p_1_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    \reg_state_eios_det[3]_i_2__2 
       (.I0(\reg_state_eios_det[2]_i_2__2_n_0 ),
        .I1(Q[15]),
        .I2(Q[14]),
        .O(\reg_state_eios_det[3]_i_2__2_n_0 ));
  LUT5 #(
    .INIT(32'h00010116)) 
    \reg_state_eios_det[4]_i_1__2 
       (.I0(state_eios_det[3]),
        .I1(state_eios_det[1]),
        .I2(state_eios_det[2]),
        .I3(state_eios_det[0]),
        .I4(state_eios_det[4]),
        .O(\reg_state_eios_det[4]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    \reg_state_eios_det[4]_i_2__2 
       (.I0(state_eios_det[1]),
        .I1(state_eios_det[3]),
        .I2(\reg_state_eios_det[4]_i_3__2_n_0 ),
        .O(p_1_in__0[4]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'hFB)) 
    \reg_state_eios_det[4]_i_3__2 
       (.I0(\reg_state_eios_det[1]_i_2__2_n_0 ),
        .I1(Q[6]),
        .I2(Q[7]),
        .O(\reg_state_eios_det[4]_i_3__2_n_0 ));
  (* FSM_ENCODED_STATES = "EIOS_DET_NO_STR0:00010,EIOS_DET_STR0:00100,EIOS_DET_STR1:01000,EIOS_DET_IDL:00001,EIOS_DET_DONE:10000" *) 
  FDSE \reg_state_eios_det_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\reg_state_eios_det[4]_i_1__2_n_0 ),
        .D(p_1_in__0[0]),
        .Q(state_eios_det[0]),
        .S(SR));
  (* FSM_ENCODED_STATES = "EIOS_DET_NO_STR0:00010,EIOS_DET_STR0:00100,EIOS_DET_STR1:01000,EIOS_DET_IDL:00001,EIOS_DET_DONE:10000" *) 
  FDRE \reg_state_eios_det_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\reg_state_eios_det[4]_i_1__2_n_0 ),
        .D(p_1_in__0[1]),
        .Q(state_eios_det[1]),
        .R(SR));
  (* FSM_ENCODED_STATES = "EIOS_DET_NO_STR0:00010,EIOS_DET_STR0:00100,EIOS_DET_STR1:01000,EIOS_DET_IDL:00001,EIOS_DET_DONE:10000" *) 
  FDRE \reg_state_eios_det_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\reg_state_eios_det[4]_i_1__2_n_0 ),
        .D(p_1_in__0[2]),
        .Q(state_eios_det[2]),
        .R(SR));
  (* FSM_ENCODED_STATES = "EIOS_DET_NO_STR0:00010,EIOS_DET_STR0:00100,EIOS_DET_STR1:01000,EIOS_DET_IDL:00001,EIOS_DET_DONE:10000" *) 
  FDRE \reg_state_eios_det_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\reg_state_eios_det[4]_i_1__2_n_0 ),
        .D(p_1_in__0[3]),
        .Q(state_eios_det[3]),
        .R(SR));
  (* FSM_ENCODED_STATES = "EIOS_DET_NO_STR0:00010,EIOS_DET_STR0:00100,EIOS_DET_STR1:01000,EIOS_DET_IDL:00001,EIOS_DET_DONE:10000" *) 
  FDRE \reg_state_eios_det_reg[4] 
       (.C(pipe_pclk_in),
        .CE(\reg_state_eios_det[4]_i_1__2_n_0 ),
        .D(p_1_in__0[4]),
        .Q(state_eios_det[4]),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    reg_symbol_after_eios_i_1__2
       (.I0(\reg_state_eios_det[4]_i_3__2_n_0 ),
        .I1(state_eios_det[4]),
        .I2(state_eios_det[0]),
        .I3(state_eios_det[1]),
        .I4(state_eios_det[3]),
        .I5(reg_symbol_after_eios_i_2__2_n_0),
        .O(reg_symbol_after_eios));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'hB)) 
    reg_symbol_after_eios_i_2__2
       (.I0(\reg_state_eios_det[3]_i_2__2_n_0 ),
        .I1(state_eios_det[2]),
        .O(reg_symbol_after_eios_i_2__2_n_0));
  FDRE reg_symbol_after_eios_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(reg_symbol_after_eios),
        .Q(symbol_after_eios),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_gt_top" *) 
module pcie_7x_0_pcie_7x_0_gt_top
   (PIPE_DRP_FSM,
    sys_rst_n,
    SR,
    PIPE_RST_IDLE,
    PIPE_RST_FSM,
    PIPE_CPLL_LOCK,
    PIPE_QRST_IDLE,
    pipe_rst_fsm,
    INT_QPLLLOCK_OUT,
    pipe_qrst_fsm,
    pipe_rate_fsm,
    pipe_pclk_sel_out,
    USER_RATE_GEN3,
    ext_ch_gt_drprdy,
    ext_ch_gt_drpdo,
    INT_QPLLOUTCLK_OUT,
    INT_QPLLOUTREFCLK_OUT,
    pipe_rxstatus,
    PIPE_SYNC_FSM_TX,
    pipe_sync_fsm_rx,
    PIPE_RXPHALIGNDONE,
    pipe_eyescandataerror,
    pci_exp_txn,
    pci_exp_txp,
    pipe_rx0_chanisaligned,
    pipe_rxcommadet,
    pipe_rxdlysresetdone,
    pipe_rxoutclk_out,
    pipe_rxprbserr,
    pipe_txdlysresetdone,
    pipe_txoutclk_out,
    pipe_txphaligndone,
    pipe_txphinitdone,
    pipe_rxbufstatus,
    pipe_dmonitorout,
    pipe_rxdisperr,
    pipe_rxnotintable,
    pipe_rx1_chanisaligned,
    pipe_rx2_chanisaligned,
    pipe_rx3_chanisaligned,
    pipe_rate_idle,
    p_0_in__0,
    gt_ch_drp_rdy,
    pipe_rx0_data,
    pipe_rx0_valid,
    pipe_rx0_elec_idle,
    pipe_rx0_status,
    pipe_rx0_phy_status,
    pipe_rx1_data,
    pipe_rx1_valid,
    pipe_rx1_elec_idle,
    pipe_rx1_status,
    pipe_rx1_phy_status,
    pipe_rx2_data,
    pipe_rx2_valid,
    pipe_rx2_elec_idle,
    pipe_rx2_status,
    pipe_rx2_phy_status,
    pipe_rx3_data,
    pipe_rx3_valid,
    pipe_rx3_elec_idle,
    pipe_rx3_status,
    pipe_rx3_phy_status,
    \gt_rxcharisk_q_reg[1] ,
    \gt_rxcharisk_q_reg[1]_0 ,
    \gt_rxcharisk_q_reg[1]_1 ,
    \gt_rxcharisk_q_reg[1]_2 ,
    ext_ch_gt_drpaddr,
    pipe_pclk_in,
    pipe_mmcm_lock_in,
    pipe_rxusrclk_in,
    pipe_dclk_in,
    D,
    sys_clk,
    pipe_oobclk_in,
    USER_TXELECIDLE,
    USER_TXCOMPLIANCE,
    pci_exp_rxn,
    pci_exp_rxp,
    pipe_rx0_polarity,
    pipe_rxprbscntreset,
    pipe_tx_deemph_gt,
    pipe_tx_rcvr_det_gt,
    pipe_txinhibit,
    pipe_txprbsforceerr,
    Q,
    pipe_loopback,
    pipe_rxprbssel,
    \cplllock_reg1_reg[3] ,
    pipe_txprbssel,
    \cplllock_reg1_reg[0] ,
    \cplllock_reg1_reg[0]_0 ,
    txelecidle_reg1_reg,
    txcompliance_reg1_reg,
    pipe_rx1_polarity,
    \cplllock_reg1_reg[1] ,
    \cplllock_reg1_reg[1]_0 ,
    \cplllock_reg1_reg[1]_1 ,
    txelecidle_reg1_reg_0,
    txcompliance_reg1_reg_0,
    pipe_rx2_polarity,
    \cplllock_reg1_reg[2] ,
    \cplllock_reg1_reg[2]_0 ,
    \cplllock_reg1_reg[2]_1 ,
    txelecidle_reg1_reg_1,
    txcompliance_reg1_reg_1,
    pipe_rx3_polarity,
    \cplllock_reg1_reg[3]_0 ,
    \cplllock_reg1_reg[3]_1 ,
    \cplllock_reg1_reg[3]_2 ,
    ext_ch_gt_drpdi,
    ext_ch_gt_drpen,
    ext_ch_gt_drpwe,
    reset_n_reg2_reg,
    pl_ltssm_state);
  output [11:0]PIPE_DRP_FSM;
  output sys_rst_n;
  output [0:0]SR;
  output PIPE_RST_IDLE;
  output [0:0]PIPE_RST_FSM;
  output [3:0]PIPE_CPLL_LOCK;
  output PIPE_QRST_IDLE;
  output [3:0]pipe_rst_fsm;
  output [0:0]INT_QPLLLOCK_OUT;
  output [3:0]pipe_qrst_fsm;
  output [19:0]pipe_rate_fsm;
  output [3:0]pipe_pclk_sel_out;
  output USER_RATE_GEN3;
  output [3:0]ext_ch_gt_drprdy;
  output [63:0]ext_ch_gt_drpdo;
  output [0:0]INT_QPLLOUTCLK_OUT;
  output [0:0]INT_QPLLOUTREFCLK_OUT;
  output [11:0]pipe_rxstatus;
  output [23:0]PIPE_SYNC_FSM_TX;
  output [3:0]pipe_sync_fsm_rx;
  output [3:0]PIPE_RXPHALIGNDONE;
  output [3:0]pipe_eyescandataerror;
  output [3:0]pci_exp_txn;
  output [3:0]pci_exp_txp;
  output pipe_rx0_chanisaligned;
  output [3:0]pipe_rxcommadet;
  output [3:0]pipe_rxdlysresetdone;
  output [3:0]pipe_rxoutclk_out;
  output [3:0]pipe_rxprbserr;
  output [3:0]pipe_txdlysresetdone;
  output pipe_txoutclk_out;
  output [3:0]pipe_txphaligndone;
  output [3:0]pipe_txphinitdone;
  output [11:0]pipe_rxbufstatus;
  output [31:0]pipe_dmonitorout;
  output [31:0]pipe_rxdisperr;
  output [31:0]pipe_rxnotintable;
  output pipe_rx1_chanisaligned;
  output pipe_rx2_chanisaligned;
  output pipe_rx3_chanisaligned;
  output pipe_rate_idle;
  output p_0_in__0;
  output [3:0]gt_ch_drp_rdy;
  output [15:0]pipe_rx0_data;
  output pipe_rx0_valid;
  output pipe_rx0_elec_idle;
  output [2:0]pipe_rx0_status;
  output pipe_rx0_phy_status;
  output [15:0]pipe_rx1_data;
  output pipe_rx1_valid;
  output pipe_rx1_elec_idle;
  output [2:0]pipe_rx1_status;
  output pipe_rx1_phy_status;
  output [15:0]pipe_rx2_data;
  output pipe_rx2_valid;
  output pipe_rx2_elec_idle;
  output [2:0]pipe_rx2_status;
  output pipe_rx2_phy_status;
  output [15:0]pipe_rx3_data;
  output pipe_rx3_valid;
  output pipe_rx3_elec_idle;
  output [2:0]pipe_rx3_status;
  output pipe_rx3_phy_status;
  output [1:0]\gt_rxcharisk_q_reg[1] ;
  output [1:0]\gt_rxcharisk_q_reg[1]_0 ;
  output [1:0]\gt_rxcharisk_q_reg[1]_1 ;
  output [1:0]\gt_rxcharisk_q_reg[1]_2 ;
  input [35:0]ext_ch_gt_drpaddr;
  input pipe_pclk_in;
  input pipe_mmcm_lock_in;
  input pipe_rxusrclk_in;
  input pipe_dclk_in;
  input [0:0]D;
  input sys_clk;
  input pipe_oobclk_in;
  input USER_TXELECIDLE;
  input USER_TXCOMPLIANCE;
  input [3:0]pci_exp_rxn;
  input [3:0]pci_exp_rxp;
  input pipe_rx0_polarity;
  input pipe_rxprbscntreset;
  input pipe_tx_deemph_gt;
  input pipe_tx_rcvr_det_gt;
  input [3:0]pipe_txinhibit;
  input pipe_txprbsforceerr;
  input [1:0]Q;
  input [2:0]pipe_loopback;
  input [2:0]pipe_rxprbssel;
  input [2:0]\cplllock_reg1_reg[3] ;
  input [2:0]pipe_txprbssel;
  input [15:0]\cplllock_reg1_reg[0] ;
  input [1:0]\cplllock_reg1_reg[0]_0 ;
  input txelecidle_reg1_reg;
  input txcompliance_reg1_reg;
  input pipe_rx1_polarity;
  input [1:0]\cplllock_reg1_reg[1] ;
  input [15:0]\cplllock_reg1_reg[1]_0 ;
  input [1:0]\cplllock_reg1_reg[1]_1 ;
  input txelecidle_reg1_reg_0;
  input txcompliance_reg1_reg_0;
  input pipe_rx2_polarity;
  input [1:0]\cplllock_reg1_reg[2] ;
  input [15:0]\cplllock_reg1_reg[2]_0 ;
  input [1:0]\cplllock_reg1_reg[2]_1 ;
  input txelecidle_reg1_reg_1;
  input txcompliance_reg1_reg_1;
  input pipe_rx3_polarity;
  input [1:0]\cplllock_reg1_reg[3]_0 ;
  input [15:0]\cplllock_reg1_reg[3]_1 ;
  input [1:0]\cplllock_reg1_reg[3]_2 ;
  input [63:0]ext_ch_gt_drpdi;
  input [3:0]ext_ch_gt_drpen;
  input [3:0]ext_ch_gt_drpwe;
  input reset_n_reg2_reg;
  input [5:0]pl_ltssm_state;

  wire [0:0]D;
  wire [0:0]INT_QPLLLOCK_OUT;
  wire [0:0]INT_QPLLOUTCLK_OUT;
  wire [0:0]INT_QPLLOUTREFCLK_OUT;
  wire [3:0]PIPE_CPLL_LOCK;
  wire [11:0]PIPE_DRP_FSM;
  wire PIPE_QRST_IDLE;
  wire [0:0]PIPE_RST_FSM;
  wire PIPE_RST_IDLE;
  wire [3:0]PIPE_RXPHALIGNDONE;
  wire [23:0]PIPE_SYNC_FSM_TX;
  wire [1:0]Q;
  wire [0:0]SR;
  wire USER_RATE_GEN3;
  wire USER_TXCOMPLIANCE;
  wire USER_TXELECIDLE;
  wire [15:0]\cplllock_reg1_reg[0] ;
  wire [1:0]\cplllock_reg1_reg[0]_0 ;
  wire [1:0]\cplllock_reg1_reg[1] ;
  wire [15:0]\cplllock_reg1_reg[1]_0 ;
  wire [1:0]\cplllock_reg1_reg[1]_1 ;
  wire [1:0]\cplllock_reg1_reg[2] ;
  wire [15:0]\cplllock_reg1_reg[2]_0 ;
  wire [1:0]\cplllock_reg1_reg[2]_1 ;
  wire [2:0]\cplllock_reg1_reg[3] ;
  wire [1:0]\cplllock_reg1_reg[3]_0 ;
  wire [15:0]\cplllock_reg1_reg[3]_1 ;
  wire [1:0]\cplllock_reg1_reg[3]_2 ;
  wire [35:0]ext_ch_gt_drpaddr;
  wire [63:0]ext_ch_gt_drpdi;
  wire [63:0]ext_ch_gt_drpdo;
  wire [3:0]ext_ch_gt_drpen;
  wire [3:0]ext_ch_gt_drprdy;
  wire [3:0]ext_ch_gt_drpwe;
  wire [3:0]gt_ch_drp_rdy;
  wire \gt_rx_valid_filter[0].GT_RX_VALID_FILTER_7x_inst_n_3 ;
  wire [1:0]\gt_rxcharisk_q_reg[1] ;
  wire [1:0]\gt_rxcharisk_q_reg[1]_0 ;
  wire [1:0]\gt_rxcharisk_q_reg[1]_1 ;
  wire [1:0]\gt_rxcharisk_q_reg[1]_2 ;
  wire p_0_in__0;
  wire [3:0]pci_exp_rxn;
  wire [3:0]pci_exp_rxp;
  wire [3:0]pci_exp_txn;
  wire [3:0]pci_exp_txp;
  wire pipe_dclk_in;
  wire [31:0]pipe_dmonitorout;
  wire [3:0]pipe_eyescandataerror;
  wire \pipe_lane[0].gt_wrapper_i/CPLLPD0 ;
  wire \pipe_lane[0].gt_wrapper_i/cpllpd ;
  wire \pipe_lane[1].gt_wrapper_i/CPLLPD0 ;
  wire \pipe_lane[1].gt_wrapper_i/cpllpd ;
  wire \pipe_lane[2].gt_wrapper_i/CPLLPD0 ;
  wire \pipe_lane[2].gt_wrapper_i/cpllpd ;
  wire \pipe_lane[3].gt_wrapper_i/CPLLPD0 ;
  wire \pipe_lane[3].gt_wrapper_i/cpllpd ;
  wire [2:0]pipe_loopback;
  wire pipe_mmcm_lock_in;
  wire pipe_oobclk_in;
  wire pipe_pclk_in;
  wire [3:0]pipe_pclk_sel_out;
  wire [3:0]pipe_qrst_fsm;
  wire [19:0]pipe_rate_fsm;
  wire pipe_rate_idle;
  wire [3:0]pipe_rst_fsm;
  wire pipe_rx0_chanisaligned;
  wire [15:0]pipe_rx0_data;
  wire pipe_rx0_elec_idle;
  wire pipe_rx0_phy_status;
  wire pipe_rx0_polarity;
  wire [2:0]pipe_rx0_status;
  wire pipe_rx0_valid;
  wire pipe_rx1_chanisaligned;
  wire [15:0]pipe_rx1_data;
  wire pipe_rx1_elec_idle;
  wire pipe_rx1_phy_status;
  wire pipe_rx1_polarity;
  wire [2:0]pipe_rx1_status;
  wire pipe_rx1_valid;
  wire pipe_rx2_chanisaligned;
  wire [15:0]pipe_rx2_data;
  wire pipe_rx2_elec_idle;
  wire pipe_rx2_phy_status;
  wire pipe_rx2_polarity;
  wire [2:0]pipe_rx2_status;
  wire pipe_rx2_valid;
  wire pipe_rx3_chanisaligned;
  wire [15:0]pipe_rx3_data;
  wire pipe_rx3_elec_idle;
  wire pipe_rx3_phy_status;
  wire pipe_rx3_polarity;
  wire [2:0]pipe_rx3_status;
  wire pipe_rx3_valid;
  wire [11:0]pipe_rxbufstatus;
  wire [3:0]pipe_rxcommadet;
  wire [31:0]pipe_rxdisperr;
  wire [3:0]pipe_rxdlysresetdone;
  wire [31:0]pipe_rxnotintable;
  wire [3:0]pipe_rxoutclk_out;
  wire pipe_rxprbscntreset;
  wire [3:0]pipe_rxprbserr;
  wire [2:0]pipe_rxprbssel;
  wire [11:0]pipe_rxstatus;
  wire pipe_rxusrclk_in;
  wire [3:0]pipe_sync_fsm_rx;
  wire pipe_tx_deemph_gt;
  wire pipe_tx_rcvr_det_gt;
  wire [3:0]pipe_txdlysresetdone;
  wire [3:0]pipe_txinhibit;
  wire pipe_txoutclk_out;
  wire [3:0]pipe_txphaligndone;
  wire [3:0]pipe_txphinitdone;
  wire pipe_txprbsforceerr;
  wire [2:0]pipe_txprbssel;
  wire pipe_wrapper_i_n_144;
  wire pipe_wrapper_i_n_145;
  wire pipe_wrapper_i_n_146;
  wire pipe_wrapper_i_n_147;
  wire pipe_wrapper_i_n_148;
  wire pipe_wrapper_i_n_149;
  wire pipe_wrapper_i_n_150;
  wire pipe_wrapper_i_n_151;
  wire pipe_wrapper_i_n_152;
  wire pipe_wrapper_i_n_153;
  wire pipe_wrapper_i_n_154;
  wire pipe_wrapper_i_n_155;
  wire pipe_wrapper_i_n_156;
  wire pipe_wrapper_i_n_157;
  wire pipe_wrapper_i_n_158;
  wire pipe_wrapper_i_n_159;
  wire pipe_wrapper_i_n_192;
  wire pipe_wrapper_i_n_193;
  wire pipe_wrapper_i_n_264;
  wire pipe_wrapper_i_n_268;
  wire pipe_wrapper_i_n_269;
  wire pipe_wrapper_i_n_270;
  wire pipe_wrapper_i_n_271;
  wire pipe_wrapper_i_n_272;
  wire pipe_wrapper_i_n_273;
  wire pipe_wrapper_i_n_274;
  wire pipe_wrapper_i_n_275;
  wire pipe_wrapper_i_n_276;
  wire pipe_wrapper_i_n_277;
  wire pipe_wrapper_i_n_278;
  wire pipe_wrapper_i_n_279;
  wire pipe_wrapper_i_n_280;
  wire pipe_wrapper_i_n_281;
  wire pipe_wrapper_i_n_282;
  wire pipe_wrapper_i_n_283;
  wire pipe_wrapper_i_n_284;
  wire pipe_wrapper_i_n_285;
  wire pipe_wrapper_i_n_290;
  wire pipe_wrapper_i_n_291;
  wire pipe_wrapper_i_n_292;
  wire pipe_wrapper_i_n_293;
  wire pipe_wrapper_i_n_294;
  wire pipe_wrapper_i_n_295;
  wire pipe_wrapper_i_n_296;
  wire pipe_wrapper_i_n_297;
  wire pipe_wrapper_i_n_298;
  wire pipe_wrapper_i_n_299;
  wire pipe_wrapper_i_n_300;
  wire pipe_wrapper_i_n_301;
  wire pipe_wrapper_i_n_302;
  wire pipe_wrapper_i_n_303;
  wire pipe_wrapper_i_n_304;
  wire pipe_wrapper_i_n_305;
  wire pipe_wrapper_i_n_306;
  wire pipe_wrapper_i_n_307;
  wire pipe_wrapper_i_n_308;
  wire pipe_wrapper_i_n_313;
  wire pipe_wrapper_i_n_314;
  wire pipe_wrapper_i_n_315;
  wire pipe_wrapper_i_n_316;
  wire pipe_wrapper_i_n_317;
  wire pipe_wrapper_i_n_318;
  wire pipe_wrapper_i_n_319;
  wire pipe_wrapper_i_n_320;
  wire pipe_wrapper_i_n_321;
  wire pipe_wrapper_i_n_322;
  wire pipe_wrapper_i_n_323;
  wire pipe_wrapper_i_n_324;
  wire pipe_wrapper_i_n_325;
  wire pipe_wrapper_i_n_326;
  wire pipe_wrapper_i_n_327;
  wire pipe_wrapper_i_n_328;
  wire pipe_wrapper_i_n_329;
  wire pipe_wrapper_i_n_33;
  wire pipe_wrapper_i_n_330;
  wire pipe_wrapper_i_n_331;
  wire pipe_wrapper_i_n_348;
  wire pipe_wrapper_i_n_349;
  wire pipe_wrapper_i_n_350;
  wire pipe_wrapper_i_n_351;
  wire pipe_wrapper_i_n_352;
  wire pipe_wrapper_i_n_353;
  wire pipe_wrapper_i_n_354;
  wire pipe_wrapper_i_n_355;
  wire pipe_wrapper_i_n_356;
  wire pipe_wrapper_i_n_357;
  wire pipe_wrapper_i_n_358;
  wire pipe_wrapper_i_n_359;
  wire pipe_wrapper_i_n_360;
  wire pipe_wrapper_i_n_361;
  wire pipe_wrapper_i_n_362;
  wire pipe_wrapper_i_n_363;
  wire pipe_wrapper_i_n_364;
  wire pipe_wrapper_i_n_426;
  wire pipe_wrapper_i_n_427;
  wire pipe_wrapper_i_n_428;
  wire pipe_wrapper_i_n_429;
  wire [5:0]pl_ltssm_state;
  wire [5:0]pl_ltssm_state_q;
  wire rate_cpllpd_0;
  wire rate_cpllpd_1;
  wire rate_cpllpd_2;
  wire rate_cpllpd_3;
  wire reg_clock_locked;
  wire reg_clock_locked_i_1_n_0;
  wire reset_n_reg2_reg;
  wire sys_clk;
  wire sys_rst_n;
  wire txcompliance_reg1_reg;
  wire txcompliance_reg1_reg_0;
  wire txcompliance_reg1_reg_1;
  wire txelecidle_reg1_reg;
  wire txelecidle_reg1_reg_0;
  wire txelecidle_reg1_reg_1;

  pcie_7x_0_pcie_7x_0_gt_rx_valid_filter_7x \gt_rx_valid_filter[0].GT_RX_VALID_FILTER_7x_inst 
       (.D({pipe_wrapper_i_n_362,pipe_wrapper_i_n_363,pipe_wrapper_i_n_364}),
        .PIPE_RXDATA({pipe_wrapper_i_n_144,pipe_wrapper_i_n_145,pipe_wrapper_i_n_146,pipe_wrapper_i_n_147,pipe_wrapper_i_n_148,pipe_wrapper_i_n_149,pipe_wrapper_i_n_150,pipe_wrapper_i_n_151,pipe_wrapper_i_n_152,pipe_wrapper_i_n_153,pipe_wrapper_i_n_154,pipe_wrapper_i_n_155,pipe_wrapper_i_n_156,pipe_wrapper_i_n_157,pipe_wrapper_i_n_158,pipe_wrapper_i_n_159}),
        .PIPE_RXDATAK({pipe_wrapper_i_n_192,pipe_wrapper_i_n_193}),
        .PIPE_RXELECIDLE(pipe_wrapper_i_n_33),
        .Q(pipe_rx0_data),
        .SR(SR),
        .gt_rx_phy_status_q_reg_0(pipe_wrapper_i_n_426),
        .\gt_rxcharisk_q_reg[1]_0 (\gt_rxcharisk_q_reg[1] ),
        .gt_rxvalid_q_reg_0(pipe_rx0_valid),
        .gt_rxvalid_q_reg_1(pipe_wrapper_i_n_349),
        .gt_rxvalid_q_reg_2(pl_ltssm_state_q),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_rx0_elec_idle(pipe_rx0_elec_idle),
        .pipe_rx0_phy_status(pipe_rx0_phy_status),
        .pipe_rx0_status(pipe_rx0_status),
        .\pl_ltssm_state_q_reg[3] (\gt_rx_valid_filter[0].GT_RX_VALID_FILTER_7x_inst_n_3 ));
  pcie_7x_0_pcie_7x_0_gt_rx_valid_filter_7x_18 \gt_rx_valid_filter[1].GT_RX_VALID_FILTER_7x_inst 
       (.D({pipe_wrapper_i_n_359,pipe_wrapper_i_n_360,pipe_wrapper_i_n_361}),
        .PIPE_RXDATA({pipe_wrapper_i_n_268,pipe_wrapper_i_n_269,pipe_wrapper_i_n_270,pipe_wrapper_i_n_271,pipe_wrapper_i_n_272,pipe_wrapper_i_n_273,pipe_wrapper_i_n_274,pipe_wrapper_i_n_275,pipe_wrapper_i_n_276,pipe_wrapper_i_n_277,pipe_wrapper_i_n_278,pipe_wrapper_i_n_279,pipe_wrapper_i_n_280,pipe_wrapper_i_n_281,pipe_wrapper_i_n_282,pipe_wrapper_i_n_283}),
        .PIPE_RXDATAK({pipe_wrapper_i_n_284,pipe_wrapper_i_n_285}),
        .PIPE_RXELECIDLE(pipe_wrapper_i_n_264),
        .Q(pipe_rx1_data),
        .SR(SR),
        .gt_rx_phy_status_q_reg_0(pipe_wrapper_i_n_427),
        .\gt_rxcharisk_q_reg[1]_0 (\gt_rxcharisk_q_reg[1]_0 ),
        .gt_rxvalid_q_reg_0(pipe_rx1_valid),
        .gt_rxvalid_q_reg_1(\gt_rx_valid_filter[0].GT_RX_VALID_FILTER_7x_inst_n_3 ),
        .gt_rxvalid_q_reg_2(pipe_wrapper_i_n_350),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_rx1_elec_idle(pipe_rx1_elec_idle),
        .pipe_rx1_phy_status(pipe_rx1_phy_status),
        .pipe_rx1_status(pipe_rx1_status));
  pcie_7x_0_pcie_7x_0_gt_rx_valid_filter_7x_19 \gt_rx_valid_filter[2].GT_RX_VALID_FILTER_7x_inst 
       (.D({pipe_wrapper_i_n_356,pipe_wrapper_i_n_357,pipe_wrapper_i_n_358}),
        .PIPE_RXDATA({pipe_wrapper_i_n_291,pipe_wrapper_i_n_292,pipe_wrapper_i_n_293,pipe_wrapper_i_n_294,pipe_wrapper_i_n_295,pipe_wrapper_i_n_296,pipe_wrapper_i_n_297,pipe_wrapper_i_n_298,pipe_wrapper_i_n_299,pipe_wrapper_i_n_300,pipe_wrapper_i_n_301,pipe_wrapper_i_n_302,pipe_wrapper_i_n_303,pipe_wrapper_i_n_304,pipe_wrapper_i_n_305,pipe_wrapper_i_n_306}),
        .PIPE_RXDATAK({pipe_wrapper_i_n_307,pipe_wrapper_i_n_308}),
        .PIPE_RXELECIDLE(pipe_wrapper_i_n_290),
        .Q(pipe_rx2_data),
        .SR(SR),
        .gt_rx_phy_status_q_reg_0(pipe_wrapper_i_n_428),
        .\gt_rxcharisk_q_reg[1]_0 (\gt_rxcharisk_q_reg[1]_1 ),
        .gt_rxvalid_q_reg_0(pipe_rx2_valid),
        .gt_rxvalid_q_reg_1(\gt_rx_valid_filter[0].GT_RX_VALID_FILTER_7x_inst_n_3 ),
        .gt_rxvalid_q_reg_2(pipe_wrapper_i_n_351),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_rx2_elec_idle(pipe_rx2_elec_idle),
        .pipe_rx2_phy_status(pipe_rx2_phy_status),
        .pipe_rx2_status(pipe_rx2_status));
  pcie_7x_0_pcie_7x_0_gt_rx_valid_filter_7x_20 \gt_rx_valid_filter[3].GT_RX_VALID_FILTER_7x_inst 
       (.D({pipe_wrapper_i_n_353,pipe_wrapper_i_n_354,pipe_wrapper_i_n_355}),
        .PIPE_RXDATA({pipe_wrapper_i_n_314,pipe_wrapper_i_n_315,pipe_wrapper_i_n_316,pipe_wrapper_i_n_317,pipe_wrapper_i_n_318,pipe_wrapper_i_n_319,pipe_wrapper_i_n_320,pipe_wrapper_i_n_321,pipe_wrapper_i_n_322,pipe_wrapper_i_n_323,pipe_wrapper_i_n_324,pipe_wrapper_i_n_325,pipe_wrapper_i_n_326,pipe_wrapper_i_n_327,pipe_wrapper_i_n_328,pipe_wrapper_i_n_329}),
        .PIPE_RXDATAK({pipe_wrapper_i_n_330,pipe_wrapper_i_n_331}),
        .PIPE_RXELECIDLE(pipe_wrapper_i_n_313),
        .Q(pipe_rx3_data),
        .SR(SR),
        .gt_rx_phy_status_q_reg_0(pipe_wrapper_i_n_429),
        .\gt_rxcharisk_q_reg[1]_0 (\gt_rxcharisk_q_reg[1]_2 ),
        .gt_rxvalid_q_reg_0(pipe_rx3_valid),
        .gt_rxvalid_q_reg_1(\gt_rx_valid_filter[0].GT_RX_VALID_FILTER_7x_inst_n_3 ),
        .gt_rxvalid_q_reg_2(pipe_wrapper_i_n_352),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_rx3_elec_idle(pipe_rx3_elec_idle),
        .pipe_rx3_phy_status(pipe_rx3_phy_status),
        .pipe_rx3_status(pipe_rx3_status));
  LUT2 #(
    .INIT(4'hE)) 
    \gtx_channel.gtxe2_channel_i_i_1 
       (.I0(\pipe_lane[0].gt_wrapper_i/cpllpd ),
        .I1(rate_cpllpd_0),
        .O(\pipe_lane[0].gt_wrapper_i/CPLLPD0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \gtx_channel.gtxe2_channel_i_i_1__0 
       (.I0(\pipe_lane[1].gt_wrapper_i/cpllpd ),
        .I1(rate_cpllpd_1),
        .O(\pipe_lane[1].gt_wrapper_i/CPLLPD0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \gtx_channel.gtxe2_channel_i_i_1__1 
       (.I0(\pipe_lane[2].gt_wrapper_i/cpllpd ),
        .I1(rate_cpllpd_2),
        .O(\pipe_lane[2].gt_wrapper_i/CPLLPD0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \gtx_channel.gtxe2_channel_i_i_1__2 
       (.I0(\pipe_lane[3].gt_wrapper_i/cpllpd ),
        .I1(rate_cpllpd_3),
        .O(\pipe_lane[3].gt_wrapper_i/CPLLPD0 ));
  LUT1 #(
    .INIT(2'h1)) 
    pcie_block_i_i_33
       (.I0(SR),
        .O(sys_rst_n));
  FDRE phy_rdy_n_int_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_wrapper_i_n_348),
        .Q(SR),
        .R(1'b0));
  pcie_7x_0_pcie_7x_0_pipe_wrapper pipe_wrapper_i
       (.CPLLPD0(\pipe_lane[0].gt_wrapper_i/CPLLPD0 ),
        .CPLLPD0_3(\pipe_lane[1].gt_wrapper_i/CPLLPD0 ),
        .CPLLPD0_4(\pipe_lane[2].gt_wrapper_i/CPLLPD0 ),
        .CPLLPD0_5(\pipe_lane[3].gt_wrapper_i/CPLLPD0 ),
        .D({pipe_wrapper_i_n_353,pipe_wrapper_i_n_354,pipe_wrapper_i_n_355}),
        .DRP_FSM(PIPE_DRP_FSM[2:0]),
        .\FSM_onehot_txsync_fsm.fsm_tx_reg[3] (PIPE_SYNC_FSM_TX[8]),
        .\FSM_onehot_txsync_fsm.fsm_tx_reg[3]_0 (PIPE_SYNC_FSM_TX[14]),
        .\FSM_onehot_txsync_fsm.fsm_tx_reg[3]_1 (PIPE_SYNC_FSM_TX[20]),
        .\FSM_onehot_txsync_fsm.fsm_tx_reg[4] (PIPE_SYNC_FSM_TX[9]),
        .\FSM_onehot_txsync_fsm.fsm_tx_reg[4]_0 (PIPE_SYNC_FSM_TX[15]),
        .\FSM_onehot_txsync_fsm.fsm_tx_reg[4]_1 (PIPE_SYNC_FSM_TX[21]),
        .\FSM_onehot_txsync_fsm.fsm_tx_reg[5] (PIPE_SYNC_FSM_TX[10]),
        .\FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 (PIPE_SYNC_FSM_TX[16]),
        .\FSM_onehot_txsync_fsm.fsm_tx_reg[5]_1 (PIPE_SYNC_FSM_TX[22]),
        .\FSM_onehot_txsync_fsm.fsm_tx_reg[6] ({PIPE_SYNC_FSM_TX[11],PIPE_SYNC_FSM_TX[7:6]}),
        .\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ({PIPE_SYNC_FSM_TX[17],PIPE_SYNC_FSM_TX[13:12]}),
        .\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_1 ({PIPE_SYNC_FSM_TX[23],PIPE_SYNC_FSM_TX[19:18]}),
        .PIPE_RXDATA({pipe_wrapper_i_n_144,pipe_wrapper_i_n_145,pipe_wrapper_i_n_146,pipe_wrapper_i_n_147,pipe_wrapper_i_n_148,pipe_wrapper_i_n_149,pipe_wrapper_i_n_150,pipe_wrapper_i_n_151,pipe_wrapper_i_n_152,pipe_wrapper_i_n_153,pipe_wrapper_i_n_154,pipe_wrapper_i_n_155,pipe_wrapper_i_n_156,pipe_wrapper_i_n_157,pipe_wrapper_i_n_158,pipe_wrapper_i_n_159}),
        .PIPE_RXDATAK({pipe_wrapper_i_n_192,pipe_wrapper_i_n_193}),
        .PIPE_RXPHALIGNDONE(PIPE_RXPHALIGNDONE[3:1]),
        .Q(Q),
        .QPLL_QPLLLOCK(INT_QPLLLOCK_OUT),
        .QPLL_QPLLOUTCLK(INT_QPLLOUTCLK_OUT),
        .QPLL_QPLLOUTREFCLK(INT_QPLLOUTREFCLK_OUT),
        .QRST_CPLLLOCK(PIPE_CPLL_LOCK),
        .QRST_IDLE(PIPE_QRST_IDLE),
        .RST_FSM(PIPE_RST_FSM),
        .RST_IDLE(PIPE_RST_IDLE),
        .SYNC_FSM_TX({PIPE_SYNC_FSM_TX[5],PIPE_SYNC_FSM_TX[1:0]}),
        .SYNC_RXELECIDLE(pipe_wrapper_i_n_33),
        .SYNC_RXPHALIGNDONE_M(PIPE_RXPHALIGNDONE[0]),
        .SYNC_TXDLYSRESET(PIPE_SYNC_FSM_TX[2]),
        .SYNC_TXPHALIGN(PIPE_SYNC_FSM_TX[4]),
        .SYNC_TXPHINIT(PIPE_SYNC_FSM_TX[3]),
        .USER_TXCOMPLIANCE(USER_TXCOMPLIANCE),
        .USER_TXELECIDLE(USER_TXELECIDLE),
        .\cplllock_reg1_reg[0] (\cplllock_reg1_reg[0] ),
        .\cplllock_reg1_reg[0]_0 (\cplllock_reg1_reg[0]_0 ),
        .\cplllock_reg1_reg[1] (\cplllock_reg1_reg[1] ),
        .\cplllock_reg1_reg[1]_0 (\cplllock_reg1_reg[1]_0 ),
        .\cplllock_reg1_reg[1]_1 (\cplllock_reg1_reg[1]_1 ),
        .\cplllock_reg1_reg[2] (\cplllock_reg1_reg[2] ),
        .\cplllock_reg1_reg[2]_0 (\cplllock_reg1_reg[2]_0 ),
        .\cplllock_reg1_reg[2]_1 (\cplllock_reg1_reg[2]_1 ),
        .\cplllock_reg1_reg[3] (\cplllock_reg1_reg[3] ),
        .\cplllock_reg1_reg[3]_0 (\cplllock_reg1_reg[3]_0 ),
        .\cplllock_reg1_reg[3]_1 (\cplllock_reg1_reg[3]_1 ),
        .\cplllock_reg1_reg[3]_2 (\cplllock_reg1_reg[3]_2 ),
        .cpllpd(\pipe_lane[0].gt_wrapper_i/cpllpd ),
        .cpllpd_0(\pipe_lane[1].gt_wrapper_i/cpllpd ),
        .cpllpd_1(\pipe_lane[2].gt_wrapper_i/cpllpd ),
        .cpllpd_2(\pipe_lane[3].gt_wrapper_i/cpllpd ),
        .ext_ch_gt_drpaddr(ext_ch_gt_drpaddr),
        .ext_ch_gt_drpdi(ext_ch_gt_drpdi),
        .ext_ch_gt_drpdo(ext_ch_gt_drpdo),
        .ext_ch_gt_drpen(ext_ch_gt_drpen),
        .ext_ch_gt_drprdy(ext_ch_gt_drprdy),
        .ext_ch_gt_drpwe(ext_ch_gt_drpwe),
        .\fsm_reg[2] (PIPE_DRP_FSM[5:3]),
        .\fsm_reg[2]_0 (PIPE_DRP_FSM[8:6]),
        .\fsm_reg[2]_1 (PIPE_DRP_FSM[11:9]),
        .gen3_reg(USER_RATE_GEN3),
        .gt_ch_drp_rdy(gt_ch_drp_rdy),
        .\gt_rx_status_q_reg[0] (pipe_rx0_valid),
        .\gt_rx_status_q_reg[0]_0 (pipe_rx1_valid),
        .\gt_rx_status_q_reg[0]_1 (pipe_rx2_valid),
        .\gt_rx_status_q_reg[0]_2 (pipe_rx3_valid),
        .\gt_rx_status_q_reg[2] (\gt_rx_valid_filter[0].GT_RX_VALID_FILTER_7x_inst_n_3 ),
        .gt_rxvalid_q_reg({pipe_wrapper_i_n_356,pipe_wrapper_i_n_357,pipe_wrapper_i_n_358}),
        .gt_rxvalid_q_reg_0({pipe_wrapper_i_n_359,pipe_wrapper_i_n_360,pipe_wrapper_i_n_361}),
        .gt_rxvalid_q_reg_1({pipe_wrapper_i_n_362,pipe_wrapper_i_n_363,pipe_wrapper_i_n_364}),
        .p_0_in__0(p_0_in__0),
        .pci_exp_rxn(pci_exp_rxn),
        .pci_exp_rxp(pci_exp_rxp),
        .pci_exp_txn(pci_exp_txn),
        .pci_exp_txp(pci_exp_txp),
        .pipe_dclk_in(pipe_dclk_in),
        .pipe_dclk_in_0(pipe_wrapper_i_n_264),
        .pipe_dclk_in_1({pipe_wrapper_i_n_268,pipe_wrapper_i_n_269,pipe_wrapper_i_n_270,pipe_wrapper_i_n_271,pipe_wrapper_i_n_272,pipe_wrapper_i_n_273,pipe_wrapper_i_n_274,pipe_wrapper_i_n_275,pipe_wrapper_i_n_276,pipe_wrapper_i_n_277,pipe_wrapper_i_n_278,pipe_wrapper_i_n_279,pipe_wrapper_i_n_280,pipe_wrapper_i_n_281,pipe_wrapper_i_n_282,pipe_wrapper_i_n_283}),
        .pipe_dclk_in_2({pipe_wrapper_i_n_284,pipe_wrapper_i_n_285}),
        .pipe_dclk_in_3(pipe_wrapper_i_n_290),
        .pipe_dclk_in_4({pipe_wrapper_i_n_291,pipe_wrapper_i_n_292,pipe_wrapper_i_n_293,pipe_wrapper_i_n_294,pipe_wrapper_i_n_295,pipe_wrapper_i_n_296,pipe_wrapper_i_n_297,pipe_wrapper_i_n_298,pipe_wrapper_i_n_299,pipe_wrapper_i_n_300,pipe_wrapper_i_n_301,pipe_wrapper_i_n_302,pipe_wrapper_i_n_303,pipe_wrapper_i_n_304,pipe_wrapper_i_n_305,pipe_wrapper_i_n_306}),
        .pipe_dclk_in_5({pipe_wrapper_i_n_307,pipe_wrapper_i_n_308}),
        .pipe_dclk_in_6(pipe_wrapper_i_n_313),
        .pipe_dclk_in_7({pipe_wrapper_i_n_314,pipe_wrapper_i_n_315,pipe_wrapper_i_n_316,pipe_wrapper_i_n_317,pipe_wrapper_i_n_318,pipe_wrapper_i_n_319,pipe_wrapper_i_n_320,pipe_wrapper_i_n_321,pipe_wrapper_i_n_322,pipe_wrapper_i_n_323,pipe_wrapper_i_n_324,pipe_wrapper_i_n_325,pipe_wrapper_i_n_326,pipe_wrapper_i_n_327,pipe_wrapper_i_n_328,pipe_wrapper_i_n_329}),
        .pipe_dclk_in_8({pipe_wrapper_i_n_330,pipe_wrapper_i_n_331}),
        .pipe_dmonitorout(pipe_dmonitorout),
        .pipe_eyescandataerror(pipe_eyescandataerror),
        .pipe_loopback(pipe_loopback),
        .pipe_mmcm_lock_in(pipe_mmcm_lock_in),
        .pipe_oobclk_in(pipe_oobclk_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_pclk_sel_out(pipe_pclk_sel_out),
        .pipe_qrst_fsm(pipe_qrst_fsm),
        .pipe_rate_fsm(pipe_rate_fsm),
        .pipe_rate_idle(pipe_rate_idle),
        .pipe_rst_fsm(pipe_rst_fsm),
        .pipe_rx0_chanisaligned(pipe_rx0_chanisaligned),
        .pipe_rx0_polarity(pipe_rx0_polarity),
        .pipe_rx1_chanisaligned(pipe_rx1_chanisaligned),
        .pipe_rx1_polarity(pipe_rx1_polarity),
        .pipe_rx2_chanisaligned(pipe_rx2_chanisaligned),
        .pipe_rx2_polarity(pipe_rx2_polarity),
        .pipe_rx3_chanisaligned(pipe_rx3_chanisaligned),
        .pipe_rx3_polarity(pipe_rx3_polarity),
        .pipe_rxbufstatus(pipe_rxbufstatus),
        .pipe_rxcommadet(pipe_rxcommadet),
        .pipe_rxdisperr(pipe_rxdisperr),
        .pipe_rxdlysresetdone(pipe_rxdlysresetdone),
        .pipe_rxnotintable(pipe_rxnotintable),
        .pipe_rxoutclk_out(pipe_rxoutclk_out),
        .pipe_rxprbscntreset(pipe_rxprbscntreset),
        .pipe_rxprbserr(pipe_rxprbserr),
        .pipe_rxprbssel(pipe_rxprbssel),
        .pipe_rxstatus(pipe_rxstatus),
        .pipe_rxusrclk_in(pipe_rxusrclk_in),
        .pipe_sync_fsm_rx(pipe_sync_fsm_rx),
        .pipe_tx_deemph_gt(pipe_tx_deemph_gt),
        .pipe_tx_rcvr_det_gt(pipe_tx_rcvr_det_gt),
        .pipe_txdlysresetdone(pipe_txdlysresetdone),
        .pipe_txinhibit(pipe_txinhibit),
        .pipe_txoutclk_out(pipe_txoutclk_out),
        .pipe_txphaligndone(pipe_txphaligndone),
        .pipe_txphinitdone(pipe_txphinitdone),
        .pipe_txprbsforceerr(pipe_txprbsforceerr),
        .pipe_txprbssel(pipe_txprbssel),
        .rate_cpllpd_0(rate_cpllpd_0),
        .rate_cpllpd_1(rate_cpllpd_1),
        .rate_cpllpd_2(rate_cpllpd_2),
        .rate_cpllpd_3(rate_cpllpd_3),
        .rate_idle_reg2_reg(pipe_wrapper_i_n_426),
        .rate_idle_reg2_reg_0(pipe_wrapper_i_n_427),
        .rate_idle_reg2_reg_1(pipe_wrapper_i_n_428),
        .\rate_reg1_reg[0] (D),
        .rate_rxsync_reg2_reg(pipe_wrapper_i_n_429),
        .reg_clock_locked(reg_clock_locked),
        .reg_clock_locked_reg(pipe_wrapper_i_n_348),
        .rst_idle_reg2_reg(pipe_wrapper_i_n_349),
        .rst_idle_reg2_reg_0(pipe_wrapper_i_n_350),
        .rst_idle_reg2_reg_1(pipe_wrapper_i_n_351),
        .rst_idle_reg2_reg_2(pipe_wrapper_i_n_352),
        .sys_clk(sys_clk),
        .txcompliance_reg1_reg(txcompliance_reg1_reg),
        .txcompliance_reg1_reg_0(txcompliance_reg1_reg_0),
        .txcompliance_reg1_reg_1(txcompliance_reg1_reg_1),
        .txelecidle_reg1_reg(txelecidle_reg1_reg),
        .txelecidle_reg1_reg_0(txelecidle_reg1_reg_0),
        .txelecidle_reg1_reg_1(txelecidle_reg1_reg_1));
  FDCE \pl_ltssm_state_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .CLR(reg_clock_locked_i_1_n_0),
        .D(pl_ltssm_state[0]),
        .Q(pl_ltssm_state_q[0]));
  FDCE \pl_ltssm_state_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .CLR(reg_clock_locked_i_1_n_0),
        .D(pl_ltssm_state[1]),
        .Q(pl_ltssm_state_q[1]));
  FDCE \pl_ltssm_state_q_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .CLR(reg_clock_locked_i_1_n_0),
        .D(pl_ltssm_state[2]),
        .Q(pl_ltssm_state_q[2]));
  FDCE \pl_ltssm_state_q_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .CLR(reg_clock_locked_i_1_n_0),
        .D(pl_ltssm_state[3]),
        .Q(pl_ltssm_state_q[3]));
  FDCE \pl_ltssm_state_q_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .CLR(reg_clock_locked_i_1_n_0),
        .D(pl_ltssm_state[4]),
        .Q(pl_ltssm_state_q[4]));
  FDCE \pl_ltssm_state_q_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .CLR(reg_clock_locked_i_1_n_0),
        .D(pl_ltssm_state[5]),
        .Q(pl_ltssm_state_q[5]));
  LUT1 #(
    .INIT(2'h1)) 
    reg_clock_locked_i_1
       (.I0(pipe_mmcm_lock_in),
        .O(reg_clock_locked_i_1_n_0));
  FDCE reg_clock_locked_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .CLR(reg_clock_locked_i_1_n_0),
        .D(1'b1),
        .Q(reg_clock_locked));
  LUT1 #(
    .INIT(2'h1)) 
    reset_n_reg1_i_1
       (.I0(reset_n_reg2_reg),
        .O(p_0_in__0));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_gt_wrapper" *) 
module pcie_7x_0_pcie_7x_0_gt_wrapper
   (cpllpd,
    RATE_CPLLLOCK,
    ext_ch_gt_drprdy,
    pipe_eyescandataerror,
    pci_exp_txn,
    pci_exp_txp,
    RATE_PHYSTATUS,
    gt_rxcdrlock_0,
    pipe_rx0_chanisaligned,
    pipe_rxcommadet,
    pipe_rxdlysresetdone,
    SYNC_RXELECIDLE,
    pipe_rxoutclk_out,
    SYNC_RXPHALIGNDONE_M,
    pipe_rxprbserr,
    RATE_RXRATEDONE,
    USER_RXRESETDONE,
    gt_rxvalid_0,
    pipe_txdlysresetdone,
    pipe_txoutclk_out,
    pipe_txphaligndone,
    pipe_txphinitdone,
    RATE_TXRATEDONE,
    USER_TXRESETDONE,
    ext_ch_gt_drpdo,
    pipe_rxbufstatus,
    pipe_rxstatus,
    RXCHBONDO,
    PIPE_RXDATA,
    pipe_dmonitorout,
    PIPE_RXDATAK,
    pipe_rxdisperr,
    pipe_rxnotintable,
    gt_rxvalid_q_reg,
    gt_cpllpdrefclk,
    CPLLPD0,
    pipe_dclk_in,
    drp_mux_en_0,
    drp_mux_we_0,
    sys_clk,
    DRP_GTXRESET,
    pci_exp_rxn,
    pci_exp_rxp,
    QPLL_QPLLOUTCLK,
    QPLL_QPLLOUTREFCLK,
    rxchbonden_0,
    \cplllock_reg1_reg[0] ,
    rate_txpmareset_0,
    pipe_rx0_polarity,
    pipe_rxprbscntreset,
    rst_userrdy,
    pipe_rxusrclk_in,
    pipe_tx_deemph_gt,
    pipe_tx_rcvr_det_gt,
    sync_txdlyen_0,
    SYNC_TXDLYSRESET,
    USER_TXELECIDLE,
    pipe_txinhibit,
    SYNC_TXPHALIGN,
    SYNC_TXPHINIT,
    pipe_txprbsforceerr,
    pipe_pclk_in,
    DRPDI,
    Q,
    RXSYSCLKSEL,
    pipe_loopback,
    pipe_rxprbssel,
    RXRATE,
    \cplllock_reg1_reg[0]_0 ,
    pipe_txprbssel,
    USER_OOBCLK,
    TXPOSTCURSOR,
    TXPRECURSOR,
    \cplllock_reg1_reg[0]_1 ,
    TXMAINCURSOR,
    USER_TXCOMPLIANCE,
    \cplllock_reg1_reg[0]_2 ,
    DRPADDR,
    \gt_rx_status_q_reg[2] ,
    \gt_rx_status_q_reg[0] ,
    rate_cpllreset_0,
    RST_CPLLRESET);
  output cpllpd;
  output RATE_CPLLLOCK;
  output [0:0]ext_ch_gt_drprdy;
  output [0:0]pipe_eyescandataerror;
  output [0:0]pci_exp_txn;
  output [0:0]pci_exp_txp;
  output RATE_PHYSTATUS;
  output gt_rxcdrlock_0;
  output pipe_rx0_chanisaligned;
  output [0:0]pipe_rxcommadet;
  output [0:0]pipe_rxdlysresetdone;
  output SYNC_RXELECIDLE;
  output [0:0]pipe_rxoutclk_out;
  output SYNC_RXPHALIGNDONE_M;
  output [0:0]pipe_rxprbserr;
  output RATE_RXRATEDONE;
  output USER_RXRESETDONE;
  output gt_rxvalid_0;
  output [0:0]pipe_txdlysresetdone;
  output pipe_txoutclk_out;
  output [0:0]pipe_txphaligndone;
  output [0:0]pipe_txphinitdone;
  output RATE_TXRATEDONE;
  output USER_TXRESETDONE;
  output [15:0]ext_ch_gt_drpdo;
  output [2:0]pipe_rxbufstatus;
  output [2:0]pipe_rxstatus;
  output [4:0]RXCHBONDO;
  output [15:0]PIPE_RXDATA;
  output [7:0]pipe_dmonitorout;
  output [1:0]PIPE_RXDATAK;
  output [7:0]pipe_rxdisperr;
  output [7:0]pipe_rxnotintable;
  output [2:0]gt_rxvalid_q_reg;
  input gt_cpllpdrefclk;
  input CPLLPD0;
  input pipe_dclk_in;
  input drp_mux_en_0;
  input drp_mux_we_0;
  input sys_clk;
  input DRP_GTXRESET;
  input [0:0]pci_exp_rxn;
  input [0:0]pci_exp_rxp;
  input QPLL_QPLLOUTCLK;
  input QPLL_QPLLOUTREFCLK;
  input rxchbonden_0;
  input \cplllock_reg1_reg[0] ;
  input rate_txpmareset_0;
  input pipe_rx0_polarity;
  input pipe_rxprbscntreset;
  input rst_userrdy;
  input pipe_rxusrclk_in;
  input pipe_tx_deemph_gt;
  input pipe_tx_rcvr_det_gt;
  input sync_txdlyen_0;
  input SYNC_TXDLYSRESET;
  input USER_TXELECIDLE;
  input [0:0]pipe_txinhibit;
  input SYNC_TXPHALIGN;
  input SYNC_TXPHINIT;
  input pipe_txprbsforceerr;
  input pipe_pclk_in;
  input [15:0]DRPDI;
  input [1:0]Q;
  input [0:0]RXSYSCLKSEL;
  input [2:0]pipe_loopback;
  input [2:0]pipe_rxprbssel;
  input [0:0]RXRATE;
  input [2:0]\cplllock_reg1_reg[0]_0 ;
  input [2:0]pipe_txprbssel;
  input USER_OOBCLK;
  input [4:0]TXPOSTCURSOR;
  input [4:0]TXPRECURSOR;
  input [15:0]\cplllock_reg1_reg[0]_1 ;
  input [6:0]TXMAINCURSOR;
  input USER_TXCOMPLIANCE;
  input [1:0]\cplllock_reg1_reg[0]_2 ;
  input [8:0]DRPADDR;
  input \gt_rx_status_q_reg[2] ;
  input \gt_rx_status_q_reg[0] ;
  input rate_cpllreset_0;
  input RST_CPLLRESET;

  wire CPLLPD0;
  wire CPLLRESET0;
  wire [8:0]DRPADDR;
  wire [15:0]DRPDI;
  wire DRP_GTXRESET;
  wire [15:0]PIPE_RXDATA;
  wire [1:0]PIPE_RXDATAK;
  wire [1:0]Q;
  wire QPLL_QPLLOUTCLK;
  wire QPLL_QPLLOUTREFCLK;
  wire RATE_CPLLLOCK;
  wire RATE_PHYSTATUS;
  wire RATE_RXRATEDONE;
  wire RATE_TXRATEDONE;
  wire RST_CPLLRESET;
  wire [4:0]RXCHBONDO;
  wire [0:0]RXRATE;
  wire [0:0]RXSYSCLKSEL;
  wire SYNC_RXELECIDLE;
  wire SYNC_RXPHALIGNDONE_M;
  wire SYNC_TXDLYSRESET;
  wire SYNC_TXPHALIGN;
  wire SYNC_TXPHINIT;
  wire [6:0]TXMAINCURSOR;
  wire [4:0]TXPOSTCURSOR;
  wire [4:0]TXPRECURSOR;
  wire USER_OOBCLK;
  wire USER_RXRESETDONE;
  wire USER_TXCOMPLIANCE;
  wire USER_TXELECIDLE;
  wire USER_TXRESETDONE;
  wire \cplllock_reg1_reg[0] ;
  wire [2:0]\cplllock_reg1_reg[0]_0 ;
  wire [15:0]\cplllock_reg1_reg[0]_1 ;
  wire [1:0]\cplllock_reg1_reg[0]_2 ;
  wire cpllpd;
  wire drp_mux_en_0;
  wire drp_mux_we_0;
  wire [15:0]ext_ch_gt_drpdo;
  wire [0:0]ext_ch_gt_drprdy;
  wire gt_cpllpdrefclk;
  wire \gt_rx_status_q_reg[0] ;
  wire \gt_rx_status_q_reg[2] ;
  wire gt_rxcdrlock_0;
  wire gt_rxvalid_0;
  wire [2:0]gt_rxvalid_q_reg;
  wire \gtx_channel.gtxe2_channel_i_n_10 ;
  wire \gtx_channel.gtxe2_channel_i_n_138 ;
  wire \gtx_channel.gtxe2_channel_i_n_139 ;
  wire \gtx_channel.gtxe2_channel_i_n_140 ;
  wire \gtx_channel.gtxe2_channel_i_n_141 ;
  wire \gtx_channel.gtxe2_channel_i_n_142 ;
  wire \gtx_channel.gtxe2_channel_i_n_143 ;
  wire \gtx_channel.gtxe2_channel_i_n_144 ;
  wire \gtx_channel.gtxe2_channel_i_n_145 ;
  wire \gtx_channel.gtxe2_channel_i_n_146 ;
  wire \gtx_channel.gtxe2_channel_i_n_147 ;
  wire \gtx_channel.gtxe2_channel_i_n_148 ;
  wire \gtx_channel.gtxe2_channel_i_n_149 ;
  wire \gtx_channel.gtxe2_channel_i_n_150 ;
  wire \gtx_channel.gtxe2_channel_i_n_151 ;
  wire \gtx_channel.gtxe2_channel_i_n_152 ;
  wire \gtx_channel.gtxe2_channel_i_n_153 ;
  wire \gtx_channel.gtxe2_channel_i_n_189 ;
  wire \gtx_channel.gtxe2_channel_i_n_190 ;
  wire \gtx_channel.gtxe2_channel_i_n_191 ;
  wire \gtx_channel.gtxe2_channel_i_n_192 ;
  wire \gtx_channel.gtxe2_channel_i_n_197 ;
  wire \gtx_channel.gtxe2_channel_i_n_198 ;
  wire \gtx_channel.gtxe2_channel_i_n_9 ;
  wire [0:0]pci_exp_rxn;
  wire [0:0]pci_exp_rxp;
  wire [0:0]pci_exp_txn;
  wire [0:0]pci_exp_txp;
  wire pipe_dclk_in;
  wire [7:0]pipe_dmonitorout;
  wire [0:0]pipe_eyescandataerror;
  wire [2:0]pipe_loopback;
  wire pipe_pclk_in;
  wire pipe_rx0_chanisaligned;
  wire pipe_rx0_polarity;
  wire [2:0]pipe_rxbufstatus;
  wire [0:0]pipe_rxcommadet;
  wire [7:0]pipe_rxdisperr;
  wire [0:0]pipe_rxdlysresetdone;
  wire [7:0]pipe_rxnotintable;
  wire [0:0]pipe_rxoutclk_out;
  wire pipe_rxprbscntreset;
  wire [0:0]pipe_rxprbserr;
  wire [2:0]pipe_rxprbssel;
  wire [2:0]pipe_rxstatus;
  wire pipe_rxusrclk_in;
  wire pipe_tx_deemph_gt;
  wire pipe_tx_rcvr_det_gt;
  wire [0:0]pipe_txdlysresetdone;
  wire [0:0]pipe_txinhibit;
  wire pipe_txoutclk_out;
  wire [0:0]pipe_txphaligndone;
  wire [0:0]pipe_txphinitdone;
  wire pipe_txprbsforceerr;
  wire [2:0]pipe_txprbssel;
  wire rate_cpllreset_0;
  wire rate_txpmareset_0;
  wire rst_userrdy;
  wire rxchbonden_0;
  wire sync_txdlyen_0;
  wire sys_clk;
  wire \NLW_gtx_channel.gtxe2_channel_i_CPLLFBCLKLOST_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_CPLLREFCLKLOST_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_GTREFCLKMONITOR_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXCHANBONDSEQ_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXCHANREALIGN_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXCOMINITDET_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXCOMSASDET_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXCOMWAKEDET_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXDATAVALID_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXHEADERVALID_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXOUTCLKFABRIC_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXOUTCLKPCS_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXQPISENN_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXQPISENP_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXSTARTOFSEQ_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_TXCOMFINISH_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_TXGEARBOXREADY_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_TXOUTCLKFABRIC_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_TXOUTCLKPCS_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_TXQPISENN_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_TXQPISENP_UNCONNECTED ;
  wire [15:0]\NLW_gtx_channel.gtxe2_channel_i_PCSRSVDOUT_UNCONNECTED ;
  wire [7:4]\NLW_gtx_channel.gtxe2_channel_i_RXCHARISCOMMA_UNCONNECTED ;
  wire [7:4]\NLW_gtx_channel.gtxe2_channel_i_RXCHARISK_UNCONNECTED ;
  wire [1:0]\NLW_gtx_channel.gtxe2_channel_i_RXCLKCORCNT_UNCONNECTED ;
  wire [63:32]\NLW_gtx_channel.gtxe2_channel_i_RXDATA_UNCONNECTED ;
  wire [2:0]\NLW_gtx_channel.gtxe2_channel_i_RXHEADER_UNCONNECTED ;
  wire [6:0]\NLW_gtx_channel.gtxe2_channel_i_RXMONITOROUT_UNCONNECTED ;
  wire [4:0]\NLW_gtx_channel.gtxe2_channel_i_RXPHMONITOR_UNCONNECTED ;
  wire [4:0]\NLW_gtx_channel.gtxe2_channel_i_RXPHSLIPMONITOR_UNCONNECTED ;
  wire [9:0]\NLW_gtx_channel.gtxe2_channel_i_TSTOUT_UNCONNECTED ;
  wire [1:0]\NLW_gtx_channel.gtxe2_channel_i_TXBUFSTATUS_UNCONNECTED ;

  pcie_7x_0_pcie_7x_0_gtx_cpllpd_ovrd_44 cpllPDInst
       (.CPLLRESET0(CPLLRESET0),
        .RST_CPLLRESET(RST_CPLLRESET),
        .cpllpd(cpllpd),
        .gt_cpllpdrefclk(gt_cpllpdrefclk),
        .rate_cpllreset_0(rate_cpllreset_0));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \gt_rx_status_q[0]_i_1__2 
       (.I0(pipe_rxstatus[0]),
        .I1(\gt_rx_status_q_reg[2] ),
        .I2(\gt_rx_status_q_reg[0] ),
        .O(gt_rxvalid_q_reg[0]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \gt_rx_status_q[1]_i_1__2 
       (.I0(pipe_rxstatus[1]),
        .I1(\gt_rx_status_q_reg[2] ),
        .I2(\gt_rx_status_q_reg[0] ),
        .O(gt_rxvalid_q_reg[1]));
  LUT3 #(
    .INIT(8'hA8)) 
    \gt_rx_status_q[2]_i_1__2 
       (.I0(pipe_rxstatus[2]),
        .I1(\gt_rx_status_q_reg[2] ),
        .I2(\gt_rx_status_q_reg[0] ),
        .O(gt_rxvalid_q_reg[2]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  GTXE2_CHANNEL #(
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b1111111111),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("TRUE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("TRUE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .CBCC_DATA_SOURCE_SEL("DECODED"),
    .CHAN_BOND_KEEP_ALIGN("TRUE"),
    .CHAN_BOND_MAX_SKEW(7),
    .CHAN_BOND_SEQ_1_1(10'b0001001010),
    .CHAN_BOND_SEQ_1_2(10'b0001001010),
    .CHAN_BOND_SEQ_1_3(10'b0001001010),
    .CHAN_BOND_SEQ_1_4(10'b0110111100),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0001000101),
    .CHAN_BOND_SEQ_2_2(10'b0001000101),
    .CHAN_BOND_SEQ_2_3(10'b0001000101),
    .CHAN_BOND_SEQ_2_4(10'b0110111100),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("TRUE"),
    .CHAN_BOND_SEQ_LEN(4),
    .CLK_CORRECT_USE("TRUE"),
    .CLK_COR_KEEP_IDLE("TRUE"),
    .CLK_COR_MAX_LAT(20),
    .CLK_COR_MIN_LAT(18),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0100011100),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b0000),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG(24'hA407CC),
    .CPLL_FBDIV(5),
    .CPLL_FBDIV_45(5),
    .CPLL_INIT_CFG(24'h00001E),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .DEC_MCOMMA_DETECT("TRUE"),
    .DEC_PCOMMA_DETECT("TRUE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DMONITOR_CFG(24'h000B01),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PMA_CFG(10'b0000000000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER(80'h00000000000000000000),
    .ES_QUAL_MASK(80'h00000000000000000000),
    .ES_SDATA_MASK(80'h00000000000000000000),
    .ES_VERT_OFFSET(9'b000000000),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("TRUE"),
    .GEARBOX_MODE(3'b000),
    .IS_CPLLLOCKDETCLK_INVERTED(1'b0),
    .IS_DRPCLK_INVERTED(1'b0),
    .IS_GTGREFCLK_INVERTED(1'b0),
    .IS_RXUSRCLK2_INVERTED(1'b0),
    .IS_RXUSRCLK_INVERTED(1'b0),
    .IS_TXPHDLYTSTCLK_INVERTED(1'b0),
    .IS_TXUSRCLK2_INVERTED(1'b0),
    .IS_TXUSRCLK_INVERTED(1'b0),
    .OUTREFCLK_SEL_INV(2'b11),
    .PCS_PCIE_EN("TRUE"),
    .PCS_RSVD_ATTR(48'h0000000001CF),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h09),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PMA_RSV(32'h00018480),
    .PMA_RSV2(16'h2050),
    .PMA_RSV3(2'b00),
    .PMA_RSV4(32'h00000000),
    .RXBUFRESET_TIME(5'b00001),
    .RXBUF_ADDR_MODE("FULL"),
    .RXBUF_EIDLE_HI_CNT(4'b0100),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("TRUE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(61),
    .RXBUF_THRESH_OVRD("FALSE"),
    .RXBUF_THRESH_UNDFLW(4),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG(72'h03000023FF10200020),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b1),
    .RXCDR_LOCK_CFG(6'b010101),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDLY_CFG(16'h001F),
    .RXDLY_LCFG(9'h030),
    .RXDLY_TAP_CFG(16'h0000),
    .RXGEARBOX_EN("FALSE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_HF_CFG(14'b00000011110000),
    .RXLPM_LF_CFG(14'b00000011110000),
    .RXOOB_CFG(7'b0000110),
    .RXOUT_DIV(2),
    .RXPCSRESET_TIME(5'b00001),
    .RXPHDLY_CFG(24'h004020),
    .RXPH_CFG(24'h000000),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("PMA"),
    .RX_BIAS_CFG(12'b000000000100),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CLK25_DIV(4),
    .RX_CLKMUX_PD(1'b1),
    .RX_CM_SEL(2'b11),
    .RX_CM_TRIM(3'b010),
    .RX_DATA_WIDTH(20),
    .RX_DDI_SEL(6'b000000),
    .RX_DEBUG_CFG(12'b000000000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DFE_GAIN_CFG(23'h020FEA),
    .RX_DFE_H2_CFG(12'b000000000000),
    .RX_DFE_H3_CFG(12'b000001000000),
    .RX_DFE_H4_CFG(11'b00011110000),
    .RX_DFE_H5_CFG(11'b00011100000),
    .RX_DFE_KL_CFG(13'b0000011111110),
    .RX_DFE_KL_CFG2(32'h3290D86C),
    .RX_DFE_LPM_CFG(16'h0954),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b1),
    .RX_DFE_UT_CFG(17'b10001111000000000),
    .RX_DFE_VP_CFG(17'b00011111100000011),
    .RX_DFE_XYD_CFG(13'b0000000000000),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_INT_DATAWIDTH(0),
    .RX_OS_CFG(13'b0000010000000),
    .RX_SIG_VALID_DLY(4),
    .RX_XCLK_SEL("RXREC"),
    .SAS_MAX_COM(64),
    .SAS_MIN_COM(36),
    .SATA_BURST_SEQ_LEN(4'b1111),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SATA_MAX_BURST(8),
    .SATA_MAX_INIT(21),
    .SATA_MAX_WAKE(7),
    .SATA_MIN_BURST(4),
    .SATA_MIN_INIT(12),
    .SATA_MIN_WAKE(4),
    .SHOW_REALIGN_COMMA("FALSE"),
    .SIM_CPLLREFCLK_SEL(3'b001),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("FALSE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("1"),
    .SIM_VERSION("3.0"),
    .TERM_RCAL_CFG(5'b10000),
    .TERM_RCAL_OVRD(1'b0),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV(32'h00000000),
    .TXBUF_EN("FALSE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h001F),
    .TXDLY_LCFG(9'h030),
    .TXDLY_TAP_CFG(16'h0000),
    .TXGEARBOX_EN("FALSE"),
    .TXOUT_DIV(2),
    .TXPCSRESET_TIME(5'b00001),
    .TXPHDLY_CFG(24'h084020),
    .TXPH_CFG(16'h0780),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPMARESET_TIME(5'b00011),
    .TX_CLK25_DIV(4),
    .TX_CLKMUX_PD(1'b1),
    .TX_DATA_WIDTH(20),
    .TX_DEEMPH0(5'b10100),
    .TX_DEEMPH1(5'b01011),
    .TX_DRIVE_MODE("PIPE"),
    .TX_EIDLE_ASSERT_DELAY(3'b010),
    .TX_EIDLE_DEASSERT_DELAY(3'b100),
    .TX_INT_DATAWIDTH(0),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1001111),
    .TX_MARGIN_FULL_1(7'b1001110),
    .TX_MARGIN_FULL_2(7'b1001101),
    .TX_MARGIN_FULL_3(7'b1001100),
    .TX_MARGIN_FULL_4(7'b1000011),
    .TX_MARGIN_LOW_0(7'b1000101),
    .TX_MARGIN_LOW_1(7'b1000110),
    .TX_MARGIN_LOW_2(7'b1000011),
    .TX_MARGIN_LOW_3(7'b1000010),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_PREDRIVER_MODE(1'b0),
    .TX_QPI_STATUS_EN(1'b0),
    .TX_RXDETECT_CFG(14'h0064),
    .TX_RXDETECT_REF(3'b011),
    .TX_XCLK_SEL("TXUSR"),
    .UCODEER_CLR(1'b0)) 
    \gtx_channel.gtxe2_channel_i 
       (.CFGRESET(1'b0),
        .CLKRSVD({1'b0,1'b0,1'b0,USER_OOBCLK}),
        .CPLLFBCLKLOST(\NLW_gtx_channel.gtxe2_channel_i_CPLLFBCLKLOST_UNCONNECTED ),
        .CPLLLOCK(RATE_CPLLLOCK),
        .CPLLLOCKDETCLK(1'b0),
        .CPLLLOCKEN(1'b1),
        .CPLLPD(CPLLPD0),
        .CPLLREFCLKLOST(\NLW_gtx_channel.gtxe2_channel_i_CPLLREFCLKLOST_UNCONNECTED ),
        .CPLLREFCLKSEL({1'b0,1'b0,1'b1}),
        .CPLLRESET(CPLLRESET0),
        .DMONITOROUT(pipe_dmonitorout),
        .DRPADDR(DRPADDR),
        .DRPCLK(pipe_dclk_in),
        .DRPDI(DRPDI),
        .DRPDO(ext_ch_gt_drpdo),
        .DRPEN(drp_mux_en_0),
        .DRPRDY(ext_ch_gt_drprdy),
        .DRPWE(drp_mux_we_0),
        .EYESCANDATAERROR(pipe_eyescandataerror),
        .EYESCANMODE(1'b0),
        .EYESCANRESET(1'b0),
        .EYESCANTRIGGER(1'b0),
        .GTGREFCLK(1'b0),
        .GTNORTHREFCLK0(1'b0),
        .GTNORTHREFCLK1(1'b0),
        .GTREFCLK0(sys_clk),
        .GTREFCLK1(1'b0),
        .GTREFCLKMONITOR(\NLW_gtx_channel.gtxe2_channel_i_GTREFCLKMONITOR_UNCONNECTED ),
        .GTRESETSEL(1'b0),
        .GTRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GTRXRESET(DRP_GTXRESET),
        .GTSOUTHREFCLK0(1'b0),
        .GTSOUTHREFCLK1(1'b0),
        .GTTXRESET(DRP_GTXRESET),
        .GTXRXN(pci_exp_rxn),
        .GTXRXP(pci_exp_rxp),
        .GTXTXN(pci_exp_txn),
        .GTXTXP(pci_exp_txp),
        .LOOPBACK(pipe_loopback),
        .PCSRSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDIN2({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDOUT(\NLW_gtx_channel.gtxe2_channel_i_PCSRSVDOUT_UNCONNECTED [15:0]),
        .PHYSTATUS(RATE_PHYSTATUS),
        .PMARSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PMARSVDIN2({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .QPLLCLK(QPLL_QPLLOUTCLK),
        .QPLLREFCLK(QPLL_QPLLOUTREFCLK),
        .RESETOVRD(1'b0),
        .RX8B10BEN(rxchbonden_0),
        .RXBUFRESET(1'b0),
        .RXBUFSTATUS(pipe_rxbufstatus),
        .RXBYTEISALIGNED(\gtx_channel.gtxe2_channel_i_n_9 ),
        .RXBYTEREALIGN(\gtx_channel.gtxe2_channel_i_n_10 ),
        .RXCDRFREQRESET(1'b0),
        .RXCDRHOLD(1'b0),
        .RXCDRLOCK(gt_rxcdrlock_0),
        .RXCDROVRDEN(1'b0),
        .RXCDRRESET(1'b0),
        .RXCDRRESETRSV(1'b0),
        .RXCHANBONDSEQ(\NLW_gtx_channel.gtxe2_channel_i_RXCHANBONDSEQ_UNCONNECTED ),
        .RXCHANISALIGNED(pipe_rx0_chanisaligned),
        .RXCHANREALIGN(\NLW_gtx_channel.gtxe2_channel_i_RXCHANREALIGN_UNCONNECTED ),
        .RXCHARISCOMMA({\NLW_gtx_channel.gtxe2_channel_i_RXCHARISCOMMA_UNCONNECTED [7:4],\gtx_channel.gtxe2_channel_i_n_189 ,\gtx_channel.gtxe2_channel_i_n_190 ,\gtx_channel.gtxe2_channel_i_n_191 ,\gtx_channel.gtxe2_channel_i_n_192 }),
        .RXCHARISK({\NLW_gtx_channel.gtxe2_channel_i_RXCHARISK_UNCONNECTED [7:4],\gtx_channel.gtxe2_channel_i_n_197 ,\gtx_channel.gtxe2_channel_i_n_198 ,PIPE_RXDATAK}),
        .RXCHBONDEN(rxchbonden_0),
        .RXCHBONDI({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCHBONDLEVEL({1'b0,1'b0,1'b1}),
        .RXCHBONDMASTER(rxchbonden_0),
        .RXCHBONDO(RXCHBONDO),
        .RXCHBONDSLAVE(1'b0),
        .RXCLKCORCNT(\NLW_gtx_channel.gtxe2_channel_i_RXCLKCORCNT_UNCONNECTED [1:0]),
        .RXCOMINITDET(\NLW_gtx_channel.gtxe2_channel_i_RXCOMINITDET_UNCONNECTED ),
        .RXCOMMADET(pipe_rxcommadet),
        .RXCOMMADETEN(1'b1),
        .RXCOMSASDET(\NLW_gtx_channel.gtxe2_channel_i_RXCOMSASDET_UNCONNECTED ),
        .RXCOMWAKEDET(\NLW_gtx_channel.gtxe2_channel_i_RXCOMWAKEDET_UNCONNECTED ),
        .RXDATA({\NLW_gtx_channel.gtxe2_channel_i_RXDATA_UNCONNECTED [63:32],\gtx_channel.gtxe2_channel_i_n_138 ,\gtx_channel.gtxe2_channel_i_n_139 ,\gtx_channel.gtxe2_channel_i_n_140 ,\gtx_channel.gtxe2_channel_i_n_141 ,\gtx_channel.gtxe2_channel_i_n_142 ,\gtx_channel.gtxe2_channel_i_n_143 ,\gtx_channel.gtxe2_channel_i_n_144 ,\gtx_channel.gtxe2_channel_i_n_145 ,\gtx_channel.gtxe2_channel_i_n_146 ,\gtx_channel.gtxe2_channel_i_n_147 ,\gtx_channel.gtxe2_channel_i_n_148 ,\gtx_channel.gtxe2_channel_i_n_149 ,\gtx_channel.gtxe2_channel_i_n_150 ,\gtx_channel.gtxe2_channel_i_n_151 ,\gtx_channel.gtxe2_channel_i_n_152 ,\gtx_channel.gtxe2_channel_i_n_153 ,PIPE_RXDATA}),
        .RXDATAVALID(\NLW_gtx_channel.gtxe2_channel_i_RXDATAVALID_UNCONNECTED ),
        .RXDDIEN(1'b0),
        .RXDFEAGCHOLD(\cplllock_reg1_reg[0] ),
        .RXDFEAGCOVRDEN(1'b0),
        .RXDFECM1EN(1'b0),
        .RXDFELFHOLD(1'b0),
        .RXDFELFOVRDEN(1'b1),
        .RXDFELPMRESET(1'b0),
        .RXDFETAP2HOLD(1'b0),
        .RXDFETAP2OVRDEN(1'b0),
        .RXDFETAP3HOLD(1'b0),
        .RXDFETAP3OVRDEN(1'b0),
        .RXDFETAP4HOLD(1'b0),
        .RXDFETAP4OVRDEN(1'b0),
        .RXDFETAP5HOLD(1'b0),
        .RXDFETAP5OVRDEN(1'b0),
        .RXDFEUTHOLD(1'b0),
        .RXDFEUTOVRDEN(1'b0),
        .RXDFEVPHOLD(1'b0),
        .RXDFEVPOVRDEN(1'b0),
        .RXDFEVSEN(1'b0),
        .RXDFEXYDEN(1'b0),
        .RXDFEXYDHOLD(1'b0),
        .RXDFEXYDOVRDEN(1'b0),
        .RXDISPERR(pipe_rxdisperr),
        .RXDLYBYPASS(1'b1),
        .RXDLYEN(1'b0),
        .RXDLYOVRDEN(1'b0),
        .RXDLYSRESET(1'b0),
        .RXDLYSRESETDONE(pipe_rxdlysresetdone),
        .RXELECIDLE(SYNC_RXELECIDLE),
        .RXELECIDLEMODE({1'b0,1'b0}),
        .RXGEARBOXSLIP(1'b0),
        .RXHEADER(\NLW_gtx_channel.gtxe2_channel_i_RXHEADER_UNCONNECTED [2:0]),
        .RXHEADERVALID(\NLW_gtx_channel.gtxe2_channel_i_RXHEADERVALID_UNCONNECTED ),
        .RXLPMEN(rxchbonden_0),
        .RXLPMHFHOLD(1'b0),
        .RXLPMHFOVRDEN(1'b0),
        .RXLPMLFHOLD(1'b0),
        .RXLPMLFKLOVRDEN(1'b0),
        .RXMCOMMAALIGNEN(rxchbonden_0),
        .RXMONITOROUT(\NLW_gtx_channel.gtxe2_channel_i_RXMONITOROUT_UNCONNECTED [6:0]),
        .RXMONITORSEL({1'b0,1'b0}),
        .RXNOTINTABLE(pipe_rxnotintable),
        .RXOOBRESET(1'b0),
        .RXOSHOLD(1'b0),
        .RXOSOVRDEN(1'b0),
        .RXOUTCLK(pipe_rxoutclk_out),
        .RXOUTCLKFABRIC(\NLW_gtx_channel.gtxe2_channel_i_RXOUTCLKFABRIC_UNCONNECTED ),
        .RXOUTCLKPCS(\NLW_gtx_channel.gtxe2_channel_i_RXOUTCLKPCS_UNCONNECTED ),
        .RXOUTCLKSEL({1'b0,1'b0,1'b0}),
        .RXPCOMMAALIGNEN(rxchbonden_0),
        .RXPCSRESET(1'b0),
        .RXPD(Q),
        .RXPHALIGN(1'b0),
        .RXPHALIGNDONE(SYNC_RXPHALIGNDONE_M),
        .RXPHALIGNEN(1'b0),
        .RXPHDLYPD(1'b0),
        .RXPHDLYRESET(1'b0),
        .RXPHMONITOR(\NLW_gtx_channel.gtxe2_channel_i_RXPHMONITOR_UNCONNECTED [4:0]),
        .RXPHOVRDEN(1'b0),
        .RXPHSLIPMONITOR(\NLW_gtx_channel.gtxe2_channel_i_RXPHSLIPMONITOR_UNCONNECTED [4:0]),
        .RXPMARESET(rate_txpmareset_0),
        .RXPOLARITY(pipe_rx0_polarity),
        .RXPRBSCNTRESET(pipe_rxprbscntreset),
        .RXPRBSERR(pipe_rxprbserr),
        .RXPRBSSEL(pipe_rxprbssel),
        .RXQPIEN(1'b0),
        .RXQPISENN(\NLW_gtx_channel.gtxe2_channel_i_RXQPISENN_UNCONNECTED ),
        .RXQPISENP(\NLW_gtx_channel.gtxe2_channel_i_RXQPISENP_UNCONNECTED ),
        .RXRATE({1'b0,1'b0,RXRATE}),
        .RXRATEDONE(RATE_RXRATEDONE),
        .RXRESETDONE(USER_RXRESETDONE),
        .RXSLIDE(1'b0),
        .RXSTARTOFSEQ(\NLW_gtx_channel.gtxe2_channel_i_RXSTARTOFSEQ_UNCONNECTED ),
        .RXSTATUS(pipe_rxstatus),
        .RXSYSCLKSEL({1'b0,RXSYSCLKSEL}),
        .RXUSERRDY(rst_userrdy),
        .RXUSRCLK(pipe_rxusrclk_in),
        .RXUSRCLK2(pipe_rxusrclk_in),
        .RXVALID(gt_rxvalid_0),
        .SETERRSTATUS(1'b0),
        .TSTIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .TSTOUT(\NLW_gtx_channel.gtxe2_channel_i_TSTOUT_UNCONNECTED [9:0]),
        .TX8B10BBYPASS({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BEN(rxchbonden_0),
        .TXBUFDIFFCTRL({1'b1,1'b0,1'b0}),
        .TXBUFSTATUS(\NLW_gtx_channel.gtxe2_channel_i_TXBUFSTATUS_UNCONNECTED [1:0]),
        .TXCHARDISPMODE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,USER_TXCOMPLIANCE}),
        .TXCHARDISPVAL({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCHARISK({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\cplllock_reg1_reg[0]_2 }),
        .TXCOMFINISH(\NLW_gtx_channel.gtxe2_channel_i_TXCOMFINISH_UNCONNECTED ),
        .TXCOMINIT(1'b0),
        .TXCOMSAS(1'b0),
        .TXCOMWAKE(1'b0),
        .TXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\cplllock_reg1_reg[0]_1 }),
        .TXDEEMPH(pipe_tx_deemph_gt),
        .TXDETECTRX(pipe_tx_rcvr_det_gt),
        .TXDIFFCTRL({1'b1,1'b1,1'b0,1'b0}),
        .TXDIFFPD(1'b0),
        .TXDLYBYPASS(1'b0),
        .TXDLYEN(sync_txdlyen_0),
        .TXDLYHOLD(1'b0),
        .TXDLYOVRDEN(1'b0),
        .TXDLYSRESET(SYNC_TXDLYSRESET),
        .TXDLYSRESETDONE(pipe_txdlysresetdone),
        .TXDLYUPDOWN(1'b0),
        .TXELECIDLE(USER_TXELECIDLE),
        .TXGEARBOXREADY(\NLW_gtx_channel.gtxe2_channel_i_TXGEARBOXREADY_UNCONNECTED ),
        .TXHEADER({1'b0,1'b0,1'b0}),
        .TXINHIBIT(pipe_txinhibit),
        .TXMAINCURSOR(TXMAINCURSOR),
        .TXMARGIN(\cplllock_reg1_reg[0]_0 ),
        .TXOUTCLK(pipe_txoutclk_out),
        .TXOUTCLKFABRIC(\NLW_gtx_channel.gtxe2_channel_i_TXOUTCLKFABRIC_UNCONNECTED ),
        .TXOUTCLKPCS(\NLW_gtx_channel.gtxe2_channel_i_TXOUTCLKPCS_UNCONNECTED ),
        .TXOUTCLKSEL({1'b0,1'b1,1'b1}),
        .TXPCSRESET(1'b0),
        .TXPD(Q),
        .TXPDELECIDLEMODE(1'b0),
        .TXPHALIGN(SYNC_TXPHALIGN),
        .TXPHALIGNDONE(pipe_txphaligndone),
        .TXPHALIGNEN(1'b1),
        .TXPHDLYPD(1'b0),
        .TXPHDLYRESET(1'b0),
        .TXPHDLYTSTCLK(1'b0),
        .TXPHINIT(SYNC_TXPHINIT),
        .TXPHINITDONE(pipe_txphinitdone),
        .TXPHOVRDEN(1'b0),
        .TXPISOPD(1'b0),
        .TXPMARESET(rate_txpmareset_0),
        .TXPOLARITY(1'b0),
        .TXPOSTCURSOR(TXPOSTCURSOR),
        .TXPOSTCURSORINV(1'b0),
        .TXPRBSFORCEERR(pipe_txprbsforceerr),
        .TXPRBSSEL(pipe_txprbssel),
        .TXPRECURSOR(TXPRECURSOR),
        .TXPRECURSORINV(1'b0),
        .TXQPIBIASEN(1'b0),
        .TXQPISENN(\NLW_gtx_channel.gtxe2_channel_i_TXQPISENN_UNCONNECTED ),
        .TXQPISENP(\NLW_gtx_channel.gtxe2_channel_i_TXQPISENP_UNCONNECTED ),
        .TXQPISTRONGPDOWN(1'b0),
        .TXQPIWEAKPUP(1'b0),
        .TXRATE({1'b0,1'b0,RXRATE}),
        .TXRATEDONE(RATE_TXRATEDONE),
        .TXRESETDONE(USER_TXRESETDONE),
        .TXSEQUENCE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXSTARTSEQ(1'b0),
        .TXSWING(1'b0),
        .TXSYSCLKSEL({1'b0,RXSYSCLKSEL}),
        .TXUSERRDY(rst_userrdy),
        .TXUSRCLK(pipe_pclk_in),
        .TXUSRCLK2(pipe_pclk_in));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_gt_wrapper" *) 
module pcie_7x_0_pcie_7x_0_gt_wrapper_21
   (cpllpd_0,
    RATE_CPLLLOCK,
    ext_ch_gt_drprdy,
    pipe_eyescandataerror,
    pci_exp_txn,
    pci_exp_txp,
    RATE_PHYSTATUS,
    gt_rxcdrlock_1,
    pipe_rx1_chanisaligned,
    pipe_rxcommadet,
    pipe_rxdlysresetdone,
    pipe_dclk_in_0,
    pipe_rxoutclk_out,
    PIPE_RXPHALIGNDONE,
    pipe_rxprbserr,
    RATE_RXRATEDONE,
    USER_RXRESETDONE,
    gt_rxvalid_1,
    pipe_txdlysresetdone,
    pipe_txphaligndone,
    pipe_txphinitdone,
    RATE_TXRATEDONE,
    USER_TXRESETDONE,
    ext_ch_gt_drpdo,
    pipe_rxbufstatus,
    pipe_rxstatus,
    pipe_dclk_in_1,
    pipe_dmonitorout,
    pipe_dclk_in_2,
    pipe_rxdisperr,
    pipe_rxnotintable,
    gt_rxvalid_q_reg,
    gt_cpllpdrefclk,
    CPLLPD0_3,
    pipe_dclk_in,
    drp_mux_en_1,
    drp_mux_we_1,
    sys_clk,
    DRP_GTXRESET,
    pci_exp_rxn,
    pci_exp_rxp,
    QPLL_QPLLOUTCLK,
    QPLL_QPLLOUTREFCLK,
    rxchbonden_1,
    \cplllock_reg1_reg[1] ,
    rate_txpmareset_1,
    pipe_rx1_polarity,
    pipe_rxprbscntreset,
    rst_userrdy,
    pipe_rxusrclk_in,
    pipe_tx_deemph_gt,
    pipe_tx_rcvr_det_gt,
    SYNC_TXDLYSRESET,
    \cplllock_reg1_reg[1]_0 ,
    pipe_txinhibit,
    SYNC_TXPHALIGN,
    SYNC_TXPHINIT,
    pipe_txprbsforceerr,
    pipe_pclk_in,
    DRPDI,
    \cplllock_reg1_reg[1]_1 ,
    RXSYSCLKSEL,
    pipe_loopback,
    pipe_rxprbssel,
    RXRATE,
    \cplllock_reg1_reg[1]_2 ,
    pipe_txprbssel,
    USER_OOBCLK,
    RXCHBONDO,
    TXPOSTCURSOR,
    TXPRECURSOR,
    \cplllock_reg1_reg[1]_3 ,
    TXMAINCURSOR,
    \cplllock_reg1_reg[1]_4 ,
    \cplllock_reg1_reg[1]_5 ,
    DRPADDR,
    \gt_rx_status_q_reg[2] ,
    \gt_rx_status_q_reg[0] ,
    rate_cpllreset_1,
    RST_CPLLRESET);
  output cpllpd_0;
  output RATE_CPLLLOCK;
  output [0:0]ext_ch_gt_drprdy;
  output [0:0]pipe_eyescandataerror;
  output [0:0]pci_exp_txn;
  output [0:0]pci_exp_txp;
  output RATE_PHYSTATUS;
  output gt_rxcdrlock_1;
  output pipe_rx1_chanisaligned;
  output [0:0]pipe_rxcommadet;
  output [0:0]pipe_rxdlysresetdone;
  output pipe_dclk_in_0;
  output [0:0]pipe_rxoutclk_out;
  output [0:0]PIPE_RXPHALIGNDONE;
  output [0:0]pipe_rxprbserr;
  output RATE_RXRATEDONE;
  output USER_RXRESETDONE;
  output gt_rxvalid_1;
  output [0:0]pipe_txdlysresetdone;
  output [0:0]pipe_txphaligndone;
  output [0:0]pipe_txphinitdone;
  output RATE_TXRATEDONE;
  output USER_TXRESETDONE;
  output [15:0]ext_ch_gt_drpdo;
  output [2:0]pipe_rxbufstatus;
  output [2:0]pipe_rxstatus;
  output [15:0]pipe_dclk_in_1;
  output [7:0]pipe_dmonitorout;
  output [1:0]pipe_dclk_in_2;
  output [7:0]pipe_rxdisperr;
  output [7:0]pipe_rxnotintable;
  output [2:0]gt_rxvalid_q_reg;
  input gt_cpllpdrefclk;
  input CPLLPD0_3;
  input pipe_dclk_in;
  input drp_mux_en_1;
  input drp_mux_we_1;
  input sys_clk;
  input DRP_GTXRESET;
  input [0:0]pci_exp_rxn;
  input [0:0]pci_exp_rxp;
  input QPLL_QPLLOUTCLK;
  input QPLL_QPLLOUTREFCLK;
  input rxchbonden_1;
  input \cplllock_reg1_reg[1] ;
  input rate_txpmareset_1;
  input pipe_rx1_polarity;
  input pipe_rxprbscntreset;
  input rst_userrdy;
  input pipe_rxusrclk_in;
  input pipe_tx_deemph_gt;
  input pipe_tx_rcvr_det_gt;
  input SYNC_TXDLYSRESET;
  input \cplllock_reg1_reg[1]_0 ;
  input [0:0]pipe_txinhibit;
  input SYNC_TXPHALIGN;
  input SYNC_TXPHINIT;
  input pipe_txprbsforceerr;
  input pipe_pclk_in;
  input [15:0]DRPDI;
  input [1:0]\cplllock_reg1_reg[1]_1 ;
  input [0:0]RXSYSCLKSEL;
  input [2:0]pipe_loopback;
  input [2:0]pipe_rxprbssel;
  input [0:0]RXRATE;
  input [2:0]\cplllock_reg1_reg[1]_2 ;
  input [2:0]pipe_txprbssel;
  input USER_OOBCLK;
  input [4:0]RXCHBONDO;
  input [4:0]TXPOSTCURSOR;
  input [4:0]TXPRECURSOR;
  input [15:0]\cplllock_reg1_reg[1]_3 ;
  input [6:0]TXMAINCURSOR;
  input \cplllock_reg1_reg[1]_4 ;
  input [1:0]\cplllock_reg1_reg[1]_5 ;
  input [8:0]DRPADDR;
  input \gt_rx_status_q_reg[2] ;
  input \gt_rx_status_q_reg[0] ;
  input rate_cpllreset_1;
  input RST_CPLLRESET;

  wire CPLLPD0_3;
  wire CPLLRESET0;
  wire [8:0]DRPADDR;
  wire [15:0]DRPDI;
  wire DRP_GTXRESET;
  wire [0:0]PIPE_RXPHALIGNDONE;
  wire QPLL_QPLLOUTCLK;
  wire QPLL_QPLLOUTREFCLK;
  wire RATE_CPLLLOCK;
  wire RATE_PHYSTATUS;
  wire RATE_RXRATEDONE;
  wire RATE_TXRATEDONE;
  wire RST_CPLLRESET;
  wire [4:0]RXCHBONDO;
  wire [0:0]RXRATE;
  wire [0:0]RXSYSCLKSEL;
  wire SYNC_TXDLYSRESET;
  wire SYNC_TXPHALIGN;
  wire SYNC_TXPHINIT;
  wire [6:0]TXMAINCURSOR;
  wire [4:0]TXPOSTCURSOR;
  wire [4:0]TXPRECURSOR;
  wire USER_OOBCLK;
  wire USER_RXRESETDONE;
  wire USER_TXRESETDONE;
  wire \cplllock_reg1_reg[1] ;
  wire \cplllock_reg1_reg[1]_0 ;
  wire [1:0]\cplllock_reg1_reg[1]_1 ;
  wire [2:0]\cplllock_reg1_reg[1]_2 ;
  wire [15:0]\cplllock_reg1_reg[1]_3 ;
  wire \cplllock_reg1_reg[1]_4 ;
  wire [1:0]\cplllock_reg1_reg[1]_5 ;
  wire cpllpd_0;
  wire drp_mux_en_1;
  wire drp_mux_we_1;
  wire [15:0]ext_ch_gt_drpdo;
  wire [0:0]ext_ch_gt_drprdy;
  wire gt_cpllpdrefclk;
  wire \gt_rx_status_q_reg[0] ;
  wire \gt_rx_status_q_reg[2] ;
  wire gt_rxcdrlock_1;
  wire gt_rxvalid_1;
  wire [2:0]gt_rxvalid_q_reg;
  wire \gtx_channel.gtxe2_channel_i_n_10 ;
  wire \gtx_channel.gtxe2_channel_i_n_138 ;
  wire \gtx_channel.gtxe2_channel_i_n_139 ;
  wire \gtx_channel.gtxe2_channel_i_n_140 ;
  wire \gtx_channel.gtxe2_channel_i_n_141 ;
  wire \gtx_channel.gtxe2_channel_i_n_142 ;
  wire \gtx_channel.gtxe2_channel_i_n_143 ;
  wire \gtx_channel.gtxe2_channel_i_n_144 ;
  wire \gtx_channel.gtxe2_channel_i_n_145 ;
  wire \gtx_channel.gtxe2_channel_i_n_146 ;
  wire \gtx_channel.gtxe2_channel_i_n_147 ;
  wire \gtx_channel.gtxe2_channel_i_n_148 ;
  wire \gtx_channel.gtxe2_channel_i_n_149 ;
  wire \gtx_channel.gtxe2_channel_i_n_150 ;
  wire \gtx_channel.gtxe2_channel_i_n_151 ;
  wire \gtx_channel.gtxe2_channel_i_n_152 ;
  wire \gtx_channel.gtxe2_channel_i_n_153 ;
  wire \gtx_channel.gtxe2_channel_i_n_189 ;
  wire \gtx_channel.gtxe2_channel_i_n_190 ;
  wire \gtx_channel.gtxe2_channel_i_n_191 ;
  wire \gtx_channel.gtxe2_channel_i_n_192 ;
  wire \gtx_channel.gtxe2_channel_i_n_197 ;
  wire \gtx_channel.gtxe2_channel_i_n_198 ;
  wire \gtx_channel.gtxe2_channel_i_n_37 ;
  wire \gtx_channel.gtxe2_channel_i_n_9 ;
  wire \gtx_channel.gtxe2_channel_i_n_91 ;
  wire \gtx_channel.gtxe2_channel_i_n_92 ;
  wire \gtx_channel.gtxe2_channel_i_n_93 ;
  wire \gtx_channel.gtxe2_channel_i_n_94 ;
  wire \gtx_channel.gtxe2_channel_i_n_95 ;
  wire [0:0]pci_exp_rxn;
  wire [0:0]pci_exp_rxp;
  wire [0:0]pci_exp_txn;
  wire [0:0]pci_exp_txp;
  wire pipe_dclk_in;
  wire pipe_dclk_in_0;
  wire [15:0]pipe_dclk_in_1;
  wire [1:0]pipe_dclk_in_2;
  wire [7:0]pipe_dmonitorout;
  wire [0:0]pipe_eyescandataerror;
  wire [2:0]pipe_loopback;
  wire pipe_pclk_in;
  wire pipe_rx1_chanisaligned;
  wire pipe_rx1_polarity;
  wire [2:0]pipe_rxbufstatus;
  wire [0:0]pipe_rxcommadet;
  wire [7:0]pipe_rxdisperr;
  wire [0:0]pipe_rxdlysresetdone;
  wire [7:0]pipe_rxnotintable;
  wire [0:0]pipe_rxoutclk_out;
  wire pipe_rxprbscntreset;
  wire [0:0]pipe_rxprbserr;
  wire [2:0]pipe_rxprbssel;
  wire [2:0]pipe_rxstatus;
  wire pipe_rxusrclk_in;
  wire pipe_tx_deemph_gt;
  wire pipe_tx_rcvr_det_gt;
  wire [0:0]pipe_txdlysresetdone;
  wire [0:0]pipe_txinhibit;
  wire [0:0]pipe_txphaligndone;
  wire [0:0]pipe_txphinitdone;
  wire pipe_txprbsforceerr;
  wire [2:0]pipe_txprbssel;
  wire rate_cpllreset_1;
  wire rate_txpmareset_1;
  wire rst_userrdy;
  wire rxchbonden_1;
  wire sys_clk;
  wire \NLW_gtx_channel.gtxe2_channel_i_CPLLFBCLKLOST_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_CPLLREFCLKLOST_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_GTREFCLKMONITOR_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXCHANBONDSEQ_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXCHANREALIGN_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXCOMINITDET_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXCOMSASDET_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXCOMWAKEDET_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXDATAVALID_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXHEADERVALID_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXOUTCLKFABRIC_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXOUTCLKPCS_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXQPISENN_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXQPISENP_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXSTARTOFSEQ_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_TXCOMFINISH_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_TXGEARBOXREADY_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_TXOUTCLKFABRIC_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_TXOUTCLKPCS_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_TXQPISENN_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_TXQPISENP_UNCONNECTED ;
  wire [15:0]\NLW_gtx_channel.gtxe2_channel_i_PCSRSVDOUT_UNCONNECTED ;
  wire [7:4]\NLW_gtx_channel.gtxe2_channel_i_RXCHARISCOMMA_UNCONNECTED ;
  wire [7:4]\NLW_gtx_channel.gtxe2_channel_i_RXCHARISK_UNCONNECTED ;
  wire [1:0]\NLW_gtx_channel.gtxe2_channel_i_RXCLKCORCNT_UNCONNECTED ;
  wire [63:32]\NLW_gtx_channel.gtxe2_channel_i_RXDATA_UNCONNECTED ;
  wire [2:0]\NLW_gtx_channel.gtxe2_channel_i_RXHEADER_UNCONNECTED ;
  wire [6:0]\NLW_gtx_channel.gtxe2_channel_i_RXMONITOROUT_UNCONNECTED ;
  wire [4:0]\NLW_gtx_channel.gtxe2_channel_i_RXPHMONITOR_UNCONNECTED ;
  wire [4:0]\NLW_gtx_channel.gtxe2_channel_i_RXPHSLIPMONITOR_UNCONNECTED ;
  wire [9:0]\NLW_gtx_channel.gtxe2_channel_i_TSTOUT_UNCONNECTED ;
  wire [1:0]\NLW_gtx_channel.gtxe2_channel_i_TXBUFSTATUS_UNCONNECTED ;

  pcie_7x_0_pcie_7x_0_gtx_cpllpd_ovrd_42 cpllPDInst
       (.CPLLRESET0(CPLLRESET0),
        .RST_CPLLRESET(RST_CPLLRESET),
        .cpllpd_0(cpllpd_0),
        .gt_cpllpdrefclk(gt_cpllpdrefclk),
        .rate_cpllreset_1(rate_cpllreset_1));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \gt_rx_status_q[0]_i_1__1 
       (.I0(pipe_rxstatus[0]),
        .I1(\gt_rx_status_q_reg[2] ),
        .I2(\gt_rx_status_q_reg[0] ),
        .O(gt_rxvalid_q_reg[0]));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \gt_rx_status_q[1]_i_1__1 
       (.I0(pipe_rxstatus[1]),
        .I1(\gt_rx_status_q_reg[2] ),
        .I2(\gt_rx_status_q_reg[0] ),
        .O(gt_rxvalid_q_reg[1]));
  LUT3 #(
    .INIT(8'hA8)) 
    \gt_rx_status_q[2]_i_1__1 
       (.I0(pipe_rxstatus[2]),
        .I1(\gt_rx_status_q_reg[2] ),
        .I2(\gt_rx_status_q_reg[0] ),
        .O(gt_rxvalid_q_reg[2]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  GTXE2_CHANNEL #(
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b1111111111),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("TRUE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("TRUE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .CBCC_DATA_SOURCE_SEL("DECODED"),
    .CHAN_BOND_KEEP_ALIGN("TRUE"),
    .CHAN_BOND_MAX_SKEW(7),
    .CHAN_BOND_SEQ_1_1(10'b0001001010),
    .CHAN_BOND_SEQ_1_2(10'b0001001010),
    .CHAN_BOND_SEQ_1_3(10'b0001001010),
    .CHAN_BOND_SEQ_1_4(10'b0110111100),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0001000101),
    .CHAN_BOND_SEQ_2_2(10'b0001000101),
    .CHAN_BOND_SEQ_2_3(10'b0001000101),
    .CHAN_BOND_SEQ_2_4(10'b0110111100),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("TRUE"),
    .CHAN_BOND_SEQ_LEN(4),
    .CLK_CORRECT_USE("TRUE"),
    .CLK_COR_KEEP_IDLE("TRUE"),
    .CLK_COR_MAX_LAT(20),
    .CLK_COR_MIN_LAT(18),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0100011100),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b0000),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG(24'hA407CC),
    .CPLL_FBDIV(5),
    .CPLL_FBDIV_45(5),
    .CPLL_INIT_CFG(24'h00001E),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .DEC_MCOMMA_DETECT("TRUE"),
    .DEC_PCOMMA_DETECT("TRUE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DMONITOR_CFG(24'h000B01),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PMA_CFG(10'b0000000000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER(80'h00000000000000000000),
    .ES_QUAL_MASK(80'h00000000000000000000),
    .ES_SDATA_MASK(80'h00000000000000000000),
    .ES_VERT_OFFSET(9'b000000000),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("TRUE"),
    .GEARBOX_MODE(3'b000),
    .IS_CPLLLOCKDETCLK_INVERTED(1'b0),
    .IS_DRPCLK_INVERTED(1'b0),
    .IS_GTGREFCLK_INVERTED(1'b0),
    .IS_RXUSRCLK2_INVERTED(1'b0),
    .IS_RXUSRCLK_INVERTED(1'b0),
    .IS_TXPHDLYTSTCLK_INVERTED(1'b0),
    .IS_TXUSRCLK2_INVERTED(1'b0),
    .IS_TXUSRCLK_INVERTED(1'b0),
    .OUTREFCLK_SEL_INV(2'b11),
    .PCS_PCIE_EN("TRUE"),
    .PCS_RSVD_ATTR(48'h0000000001CF),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h09),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PMA_RSV(32'h00018480),
    .PMA_RSV2(16'h2050),
    .PMA_RSV3(2'b00),
    .PMA_RSV4(32'h00000000),
    .RXBUFRESET_TIME(5'b00001),
    .RXBUF_ADDR_MODE("FULL"),
    .RXBUF_EIDLE_HI_CNT(4'b0100),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("TRUE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(61),
    .RXBUF_THRESH_OVRD("FALSE"),
    .RXBUF_THRESH_UNDFLW(4),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG(72'h03000023FF10200020),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b1),
    .RXCDR_LOCK_CFG(6'b010101),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDLY_CFG(16'h001F),
    .RXDLY_LCFG(9'h030),
    .RXDLY_TAP_CFG(16'h0000),
    .RXGEARBOX_EN("FALSE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_HF_CFG(14'b00000011110000),
    .RXLPM_LF_CFG(14'b00000011110000),
    .RXOOB_CFG(7'b0000110),
    .RXOUT_DIV(2),
    .RXPCSRESET_TIME(5'b00001),
    .RXPHDLY_CFG(24'h004020),
    .RXPH_CFG(24'h000000),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("PMA"),
    .RX_BIAS_CFG(12'b000000000100),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CLK25_DIV(4),
    .RX_CLKMUX_PD(1'b1),
    .RX_CM_SEL(2'b11),
    .RX_CM_TRIM(3'b010),
    .RX_DATA_WIDTH(20),
    .RX_DDI_SEL(6'b000000),
    .RX_DEBUG_CFG(12'b000000000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DFE_GAIN_CFG(23'h020FEA),
    .RX_DFE_H2_CFG(12'b000000000000),
    .RX_DFE_H3_CFG(12'b000001000000),
    .RX_DFE_H4_CFG(11'b00011110000),
    .RX_DFE_H5_CFG(11'b00011100000),
    .RX_DFE_KL_CFG(13'b0000011111110),
    .RX_DFE_KL_CFG2(32'h3290D86C),
    .RX_DFE_LPM_CFG(16'h0954),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b1),
    .RX_DFE_UT_CFG(17'b10001111000000000),
    .RX_DFE_VP_CFG(17'b00011111100000011),
    .RX_DFE_XYD_CFG(13'b0000000000000),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_INT_DATAWIDTH(0),
    .RX_OS_CFG(13'b0000010000000),
    .RX_SIG_VALID_DLY(4),
    .RX_XCLK_SEL("RXREC"),
    .SAS_MAX_COM(64),
    .SAS_MIN_COM(36),
    .SATA_BURST_SEQ_LEN(4'b1111),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SATA_MAX_BURST(8),
    .SATA_MAX_INIT(21),
    .SATA_MAX_WAKE(7),
    .SATA_MIN_BURST(4),
    .SATA_MIN_INIT(12),
    .SATA_MIN_WAKE(4),
    .SHOW_REALIGN_COMMA("FALSE"),
    .SIM_CPLLREFCLK_SEL(3'b001),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("FALSE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("1"),
    .SIM_VERSION("3.0"),
    .TERM_RCAL_CFG(5'b10000),
    .TERM_RCAL_OVRD(1'b0),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV(32'h00000000),
    .TXBUF_EN("FALSE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h001F),
    .TXDLY_LCFG(9'h030),
    .TXDLY_TAP_CFG(16'h0000),
    .TXGEARBOX_EN("FALSE"),
    .TXOUT_DIV(2),
    .TXPCSRESET_TIME(5'b00001),
    .TXPHDLY_CFG(24'h084020),
    .TXPH_CFG(16'h0780),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPMARESET_TIME(5'b00011),
    .TX_CLK25_DIV(4),
    .TX_CLKMUX_PD(1'b1),
    .TX_DATA_WIDTH(20),
    .TX_DEEMPH0(5'b10100),
    .TX_DEEMPH1(5'b01011),
    .TX_DRIVE_MODE("PIPE"),
    .TX_EIDLE_ASSERT_DELAY(3'b010),
    .TX_EIDLE_DEASSERT_DELAY(3'b100),
    .TX_INT_DATAWIDTH(0),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1001111),
    .TX_MARGIN_FULL_1(7'b1001110),
    .TX_MARGIN_FULL_2(7'b1001101),
    .TX_MARGIN_FULL_3(7'b1001100),
    .TX_MARGIN_FULL_4(7'b1000011),
    .TX_MARGIN_LOW_0(7'b1000101),
    .TX_MARGIN_LOW_1(7'b1000110),
    .TX_MARGIN_LOW_2(7'b1000011),
    .TX_MARGIN_LOW_3(7'b1000010),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_PREDRIVER_MODE(1'b0),
    .TX_QPI_STATUS_EN(1'b0),
    .TX_RXDETECT_CFG(14'h0064),
    .TX_RXDETECT_REF(3'b011),
    .TX_XCLK_SEL("TXUSR"),
    .UCODEER_CLR(1'b0)) 
    \gtx_channel.gtxe2_channel_i 
       (.CFGRESET(1'b0),
        .CLKRSVD({1'b0,1'b0,1'b0,USER_OOBCLK}),
        .CPLLFBCLKLOST(\NLW_gtx_channel.gtxe2_channel_i_CPLLFBCLKLOST_UNCONNECTED ),
        .CPLLLOCK(RATE_CPLLLOCK),
        .CPLLLOCKDETCLK(1'b0),
        .CPLLLOCKEN(1'b1),
        .CPLLPD(CPLLPD0_3),
        .CPLLREFCLKLOST(\NLW_gtx_channel.gtxe2_channel_i_CPLLREFCLKLOST_UNCONNECTED ),
        .CPLLREFCLKSEL({1'b0,1'b0,1'b1}),
        .CPLLRESET(CPLLRESET0),
        .DMONITOROUT(pipe_dmonitorout),
        .DRPADDR(DRPADDR),
        .DRPCLK(pipe_dclk_in),
        .DRPDI(DRPDI),
        .DRPDO(ext_ch_gt_drpdo),
        .DRPEN(drp_mux_en_1),
        .DRPRDY(ext_ch_gt_drprdy),
        .DRPWE(drp_mux_we_1),
        .EYESCANDATAERROR(pipe_eyescandataerror),
        .EYESCANMODE(1'b0),
        .EYESCANRESET(1'b0),
        .EYESCANTRIGGER(1'b0),
        .GTGREFCLK(1'b0),
        .GTNORTHREFCLK0(1'b0),
        .GTNORTHREFCLK1(1'b0),
        .GTREFCLK0(sys_clk),
        .GTREFCLK1(1'b0),
        .GTREFCLKMONITOR(\NLW_gtx_channel.gtxe2_channel_i_GTREFCLKMONITOR_UNCONNECTED ),
        .GTRESETSEL(1'b0),
        .GTRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GTRXRESET(DRP_GTXRESET),
        .GTSOUTHREFCLK0(1'b0),
        .GTSOUTHREFCLK1(1'b0),
        .GTTXRESET(DRP_GTXRESET),
        .GTXRXN(pci_exp_rxn),
        .GTXRXP(pci_exp_rxp),
        .GTXTXN(pci_exp_txn),
        .GTXTXP(pci_exp_txp),
        .LOOPBACK(pipe_loopback),
        .PCSRSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDIN2({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDOUT(\NLW_gtx_channel.gtxe2_channel_i_PCSRSVDOUT_UNCONNECTED [15:0]),
        .PHYSTATUS(RATE_PHYSTATUS),
        .PMARSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PMARSVDIN2({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .QPLLCLK(QPLL_QPLLOUTCLK),
        .QPLLREFCLK(QPLL_QPLLOUTREFCLK),
        .RESETOVRD(1'b0),
        .RX8B10BEN(rxchbonden_1),
        .RXBUFRESET(1'b0),
        .RXBUFSTATUS(pipe_rxbufstatus),
        .RXBYTEISALIGNED(\gtx_channel.gtxe2_channel_i_n_9 ),
        .RXBYTEREALIGN(\gtx_channel.gtxe2_channel_i_n_10 ),
        .RXCDRFREQRESET(1'b0),
        .RXCDRHOLD(1'b0),
        .RXCDRLOCK(gt_rxcdrlock_1),
        .RXCDROVRDEN(1'b0),
        .RXCDRRESET(1'b0),
        .RXCDRRESETRSV(1'b0),
        .RXCHANBONDSEQ(\NLW_gtx_channel.gtxe2_channel_i_RXCHANBONDSEQ_UNCONNECTED ),
        .RXCHANISALIGNED(pipe_rx1_chanisaligned),
        .RXCHANREALIGN(\NLW_gtx_channel.gtxe2_channel_i_RXCHANREALIGN_UNCONNECTED ),
        .RXCHARISCOMMA({\NLW_gtx_channel.gtxe2_channel_i_RXCHARISCOMMA_UNCONNECTED [7:4],\gtx_channel.gtxe2_channel_i_n_189 ,\gtx_channel.gtxe2_channel_i_n_190 ,\gtx_channel.gtxe2_channel_i_n_191 ,\gtx_channel.gtxe2_channel_i_n_192 }),
        .RXCHARISK({\NLW_gtx_channel.gtxe2_channel_i_RXCHARISK_UNCONNECTED [7:4],\gtx_channel.gtxe2_channel_i_n_197 ,\gtx_channel.gtxe2_channel_i_n_198 ,pipe_dclk_in_2}),
        .RXCHBONDEN(rxchbonden_1),
        .RXCHBONDI(RXCHBONDO),
        .RXCHBONDLEVEL({1'b0,1'b0,1'b0}),
        .RXCHBONDMASTER(1'b0),
        .RXCHBONDO({\gtx_channel.gtxe2_channel_i_n_91 ,\gtx_channel.gtxe2_channel_i_n_92 ,\gtx_channel.gtxe2_channel_i_n_93 ,\gtx_channel.gtxe2_channel_i_n_94 ,\gtx_channel.gtxe2_channel_i_n_95 }),
        .RXCHBONDSLAVE(rxchbonden_1),
        .RXCLKCORCNT(\NLW_gtx_channel.gtxe2_channel_i_RXCLKCORCNT_UNCONNECTED [1:0]),
        .RXCOMINITDET(\NLW_gtx_channel.gtxe2_channel_i_RXCOMINITDET_UNCONNECTED ),
        .RXCOMMADET(pipe_rxcommadet),
        .RXCOMMADETEN(1'b1),
        .RXCOMSASDET(\NLW_gtx_channel.gtxe2_channel_i_RXCOMSASDET_UNCONNECTED ),
        .RXCOMWAKEDET(\NLW_gtx_channel.gtxe2_channel_i_RXCOMWAKEDET_UNCONNECTED ),
        .RXDATA({\NLW_gtx_channel.gtxe2_channel_i_RXDATA_UNCONNECTED [63:32],\gtx_channel.gtxe2_channel_i_n_138 ,\gtx_channel.gtxe2_channel_i_n_139 ,\gtx_channel.gtxe2_channel_i_n_140 ,\gtx_channel.gtxe2_channel_i_n_141 ,\gtx_channel.gtxe2_channel_i_n_142 ,\gtx_channel.gtxe2_channel_i_n_143 ,\gtx_channel.gtxe2_channel_i_n_144 ,\gtx_channel.gtxe2_channel_i_n_145 ,\gtx_channel.gtxe2_channel_i_n_146 ,\gtx_channel.gtxe2_channel_i_n_147 ,\gtx_channel.gtxe2_channel_i_n_148 ,\gtx_channel.gtxe2_channel_i_n_149 ,\gtx_channel.gtxe2_channel_i_n_150 ,\gtx_channel.gtxe2_channel_i_n_151 ,\gtx_channel.gtxe2_channel_i_n_152 ,\gtx_channel.gtxe2_channel_i_n_153 ,pipe_dclk_in_1}),
        .RXDATAVALID(\NLW_gtx_channel.gtxe2_channel_i_RXDATAVALID_UNCONNECTED ),
        .RXDDIEN(1'b0),
        .RXDFEAGCHOLD(\cplllock_reg1_reg[1] ),
        .RXDFEAGCOVRDEN(1'b0),
        .RXDFECM1EN(1'b0),
        .RXDFELFHOLD(1'b0),
        .RXDFELFOVRDEN(1'b1),
        .RXDFELPMRESET(1'b0),
        .RXDFETAP2HOLD(1'b0),
        .RXDFETAP2OVRDEN(1'b0),
        .RXDFETAP3HOLD(1'b0),
        .RXDFETAP3OVRDEN(1'b0),
        .RXDFETAP4HOLD(1'b0),
        .RXDFETAP4OVRDEN(1'b0),
        .RXDFETAP5HOLD(1'b0),
        .RXDFETAP5OVRDEN(1'b0),
        .RXDFEUTHOLD(1'b0),
        .RXDFEUTOVRDEN(1'b0),
        .RXDFEVPHOLD(1'b0),
        .RXDFEVPOVRDEN(1'b0),
        .RXDFEVSEN(1'b0),
        .RXDFEXYDEN(1'b0),
        .RXDFEXYDHOLD(1'b0),
        .RXDFEXYDOVRDEN(1'b0),
        .RXDISPERR(pipe_rxdisperr),
        .RXDLYBYPASS(1'b1),
        .RXDLYEN(1'b0),
        .RXDLYOVRDEN(1'b0),
        .RXDLYSRESET(1'b0),
        .RXDLYSRESETDONE(pipe_rxdlysresetdone),
        .RXELECIDLE(pipe_dclk_in_0),
        .RXELECIDLEMODE({1'b0,1'b0}),
        .RXGEARBOXSLIP(1'b0),
        .RXHEADER(\NLW_gtx_channel.gtxe2_channel_i_RXHEADER_UNCONNECTED [2:0]),
        .RXHEADERVALID(\NLW_gtx_channel.gtxe2_channel_i_RXHEADERVALID_UNCONNECTED ),
        .RXLPMEN(rxchbonden_1),
        .RXLPMHFHOLD(1'b0),
        .RXLPMHFOVRDEN(1'b0),
        .RXLPMLFHOLD(1'b0),
        .RXLPMLFKLOVRDEN(1'b0),
        .RXMCOMMAALIGNEN(rxchbonden_1),
        .RXMONITOROUT(\NLW_gtx_channel.gtxe2_channel_i_RXMONITOROUT_UNCONNECTED [6:0]),
        .RXMONITORSEL({1'b0,1'b0}),
        .RXNOTINTABLE(pipe_rxnotintable),
        .RXOOBRESET(1'b0),
        .RXOSHOLD(1'b0),
        .RXOSOVRDEN(1'b0),
        .RXOUTCLK(pipe_rxoutclk_out),
        .RXOUTCLKFABRIC(\NLW_gtx_channel.gtxe2_channel_i_RXOUTCLKFABRIC_UNCONNECTED ),
        .RXOUTCLKPCS(\NLW_gtx_channel.gtxe2_channel_i_RXOUTCLKPCS_UNCONNECTED ),
        .RXOUTCLKSEL({1'b0,1'b0,1'b0}),
        .RXPCOMMAALIGNEN(rxchbonden_1),
        .RXPCSRESET(1'b0),
        .RXPD(\cplllock_reg1_reg[1]_1 ),
        .RXPHALIGN(1'b0),
        .RXPHALIGNDONE(PIPE_RXPHALIGNDONE),
        .RXPHALIGNEN(1'b0),
        .RXPHDLYPD(1'b0),
        .RXPHDLYRESET(1'b0),
        .RXPHMONITOR(\NLW_gtx_channel.gtxe2_channel_i_RXPHMONITOR_UNCONNECTED [4:0]),
        .RXPHOVRDEN(1'b0),
        .RXPHSLIPMONITOR(\NLW_gtx_channel.gtxe2_channel_i_RXPHSLIPMONITOR_UNCONNECTED [4:0]),
        .RXPMARESET(rate_txpmareset_1),
        .RXPOLARITY(pipe_rx1_polarity),
        .RXPRBSCNTRESET(pipe_rxprbscntreset),
        .RXPRBSERR(pipe_rxprbserr),
        .RXPRBSSEL(pipe_rxprbssel),
        .RXQPIEN(1'b0),
        .RXQPISENN(\NLW_gtx_channel.gtxe2_channel_i_RXQPISENN_UNCONNECTED ),
        .RXQPISENP(\NLW_gtx_channel.gtxe2_channel_i_RXQPISENP_UNCONNECTED ),
        .RXRATE({1'b0,1'b0,RXRATE}),
        .RXRATEDONE(RATE_RXRATEDONE),
        .RXRESETDONE(USER_RXRESETDONE),
        .RXSLIDE(1'b0),
        .RXSTARTOFSEQ(\NLW_gtx_channel.gtxe2_channel_i_RXSTARTOFSEQ_UNCONNECTED ),
        .RXSTATUS(pipe_rxstatus),
        .RXSYSCLKSEL({1'b0,RXSYSCLKSEL}),
        .RXUSERRDY(rst_userrdy),
        .RXUSRCLK(pipe_rxusrclk_in),
        .RXUSRCLK2(pipe_rxusrclk_in),
        .RXVALID(gt_rxvalid_1),
        .SETERRSTATUS(1'b0),
        .TSTIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .TSTOUT(\NLW_gtx_channel.gtxe2_channel_i_TSTOUT_UNCONNECTED [9:0]),
        .TX8B10BBYPASS({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BEN(rxchbonden_1),
        .TXBUFDIFFCTRL({1'b1,1'b0,1'b0}),
        .TXBUFSTATUS(\NLW_gtx_channel.gtxe2_channel_i_TXBUFSTATUS_UNCONNECTED [1:0]),
        .TXCHARDISPMODE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\cplllock_reg1_reg[1]_4 }),
        .TXCHARDISPVAL({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCHARISK({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\cplllock_reg1_reg[1]_5 }),
        .TXCOMFINISH(\NLW_gtx_channel.gtxe2_channel_i_TXCOMFINISH_UNCONNECTED ),
        .TXCOMINIT(1'b0),
        .TXCOMSAS(1'b0),
        .TXCOMWAKE(1'b0),
        .TXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\cplllock_reg1_reg[1]_3 }),
        .TXDEEMPH(pipe_tx_deemph_gt),
        .TXDETECTRX(pipe_tx_rcvr_det_gt),
        .TXDIFFCTRL({1'b1,1'b1,1'b0,1'b0}),
        .TXDIFFPD(1'b0),
        .TXDLYBYPASS(1'b0),
        .TXDLYEN(1'b0),
        .TXDLYHOLD(1'b0),
        .TXDLYOVRDEN(1'b0),
        .TXDLYSRESET(SYNC_TXDLYSRESET),
        .TXDLYSRESETDONE(pipe_txdlysresetdone),
        .TXDLYUPDOWN(1'b0),
        .TXELECIDLE(\cplllock_reg1_reg[1]_0 ),
        .TXGEARBOXREADY(\NLW_gtx_channel.gtxe2_channel_i_TXGEARBOXREADY_UNCONNECTED ),
        .TXHEADER({1'b0,1'b0,1'b0}),
        .TXINHIBIT(pipe_txinhibit),
        .TXMAINCURSOR(TXMAINCURSOR),
        .TXMARGIN(\cplllock_reg1_reg[1]_2 ),
        .TXOUTCLK(\gtx_channel.gtxe2_channel_i_n_37 ),
        .TXOUTCLKFABRIC(\NLW_gtx_channel.gtxe2_channel_i_TXOUTCLKFABRIC_UNCONNECTED ),
        .TXOUTCLKPCS(\NLW_gtx_channel.gtxe2_channel_i_TXOUTCLKPCS_UNCONNECTED ),
        .TXOUTCLKSEL({1'b0,1'b0,1'b0}),
        .TXPCSRESET(1'b0),
        .TXPD(\cplllock_reg1_reg[1]_1 ),
        .TXPDELECIDLEMODE(1'b0),
        .TXPHALIGN(SYNC_TXPHALIGN),
        .TXPHALIGNDONE(pipe_txphaligndone),
        .TXPHALIGNEN(1'b1),
        .TXPHDLYPD(1'b0),
        .TXPHDLYRESET(1'b0),
        .TXPHDLYTSTCLK(1'b0),
        .TXPHINIT(SYNC_TXPHINIT),
        .TXPHINITDONE(pipe_txphinitdone),
        .TXPHOVRDEN(1'b0),
        .TXPISOPD(1'b0),
        .TXPMARESET(rate_txpmareset_1),
        .TXPOLARITY(1'b0),
        .TXPOSTCURSOR(TXPOSTCURSOR),
        .TXPOSTCURSORINV(1'b0),
        .TXPRBSFORCEERR(pipe_txprbsforceerr),
        .TXPRBSSEL(pipe_txprbssel),
        .TXPRECURSOR(TXPRECURSOR),
        .TXPRECURSORINV(1'b0),
        .TXQPIBIASEN(1'b0),
        .TXQPISENN(\NLW_gtx_channel.gtxe2_channel_i_TXQPISENN_UNCONNECTED ),
        .TXQPISENP(\NLW_gtx_channel.gtxe2_channel_i_TXQPISENP_UNCONNECTED ),
        .TXQPISTRONGPDOWN(1'b0),
        .TXQPIWEAKPUP(1'b0),
        .TXRATE({1'b0,1'b0,RXRATE}),
        .TXRATEDONE(RATE_TXRATEDONE),
        .TXRESETDONE(USER_TXRESETDONE),
        .TXSEQUENCE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXSTARTSEQ(1'b0),
        .TXSWING(1'b0),
        .TXSYSCLKSEL({1'b0,RXSYSCLKSEL}),
        .TXUSERRDY(rst_userrdy),
        .TXUSRCLK(pipe_pclk_in),
        .TXUSRCLK2(pipe_pclk_in));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_gt_wrapper" *) 
module pcie_7x_0_pcie_7x_0_gt_wrapper_27
   (cpllpd_1,
    RATE_CPLLLOCK,
    ext_ch_gt_drprdy,
    pipe_eyescandataerror,
    pci_exp_txn,
    pci_exp_txp,
    RATE_PHYSTATUS,
    gt_rxcdrlock_2,
    pipe_rx2_chanisaligned,
    pipe_rxcommadet,
    pipe_rxdlysresetdone,
    pipe_dclk_in_0,
    pipe_rxoutclk_out,
    PIPE_RXPHALIGNDONE,
    pipe_rxprbserr,
    RATE_RXRATEDONE,
    USER_RXRESETDONE,
    gt_rxvalid_2,
    pipe_txdlysresetdone,
    pipe_txphaligndone,
    pipe_txphinitdone,
    RATE_TXRATEDONE,
    USER_TXRESETDONE,
    ext_ch_gt_drpdo,
    pipe_rxbufstatus,
    pipe_rxstatus,
    pipe_dclk_in_1,
    pipe_dmonitorout,
    pipe_dclk_in_2,
    pipe_rxdisperr,
    pipe_rxnotintable,
    gt_rxvalid_q_reg,
    gt_cpllpdrefclk,
    CPLLPD0_4,
    pipe_dclk_in,
    drp_mux_en_2,
    drp_mux_we_2,
    sys_clk,
    DRP_GTXRESET,
    pci_exp_rxn,
    pci_exp_rxp,
    QPLL_QPLLOUTCLK,
    QPLL_QPLLOUTREFCLK,
    rxchbonden_2,
    \cplllock_reg1_reg[2] ,
    rate_txpmareset_2,
    pipe_rx2_polarity,
    pipe_rxprbscntreset,
    rst_userrdy,
    pipe_rxusrclk_in,
    pipe_tx_deemph_gt,
    pipe_tx_rcvr_det_gt,
    SYNC_TXDLYSRESET,
    \cplllock_reg1_reg[2]_0 ,
    pipe_txinhibit,
    SYNC_TXPHALIGN,
    SYNC_TXPHINIT,
    pipe_txprbsforceerr,
    pipe_pclk_in,
    DRPDI,
    \cplllock_reg1_reg[2]_1 ,
    RXSYSCLKSEL,
    pipe_loopback,
    pipe_rxprbssel,
    RXRATE,
    \cplllock_reg1_reg[2]_2 ,
    pipe_txprbssel,
    USER_OOBCLK,
    RXCHBONDO,
    TXPOSTCURSOR,
    TXPRECURSOR,
    \cplllock_reg1_reg[2]_3 ,
    TXMAINCURSOR,
    \cplllock_reg1_reg[2]_4 ,
    \cplllock_reg1_reg[2]_5 ,
    DRPADDR,
    \gt_rx_status_q_reg[2] ,
    \gt_rx_status_q_reg[0] ,
    rate_cpllreset_2,
    RST_CPLLRESET);
  output cpllpd_1;
  output RATE_CPLLLOCK;
  output [0:0]ext_ch_gt_drprdy;
  output [0:0]pipe_eyescandataerror;
  output [0:0]pci_exp_txn;
  output [0:0]pci_exp_txp;
  output RATE_PHYSTATUS;
  output gt_rxcdrlock_2;
  output pipe_rx2_chanisaligned;
  output [0:0]pipe_rxcommadet;
  output [0:0]pipe_rxdlysresetdone;
  output pipe_dclk_in_0;
  output [0:0]pipe_rxoutclk_out;
  output [0:0]PIPE_RXPHALIGNDONE;
  output [0:0]pipe_rxprbserr;
  output RATE_RXRATEDONE;
  output USER_RXRESETDONE;
  output gt_rxvalid_2;
  output [0:0]pipe_txdlysresetdone;
  output [0:0]pipe_txphaligndone;
  output [0:0]pipe_txphinitdone;
  output RATE_TXRATEDONE;
  output USER_TXRESETDONE;
  output [15:0]ext_ch_gt_drpdo;
  output [2:0]pipe_rxbufstatus;
  output [2:0]pipe_rxstatus;
  output [15:0]pipe_dclk_in_1;
  output [7:0]pipe_dmonitorout;
  output [1:0]pipe_dclk_in_2;
  output [7:0]pipe_rxdisperr;
  output [7:0]pipe_rxnotintable;
  output [2:0]gt_rxvalid_q_reg;
  input gt_cpllpdrefclk;
  input CPLLPD0_4;
  input pipe_dclk_in;
  input drp_mux_en_2;
  input drp_mux_we_2;
  input sys_clk;
  input DRP_GTXRESET;
  input [0:0]pci_exp_rxn;
  input [0:0]pci_exp_rxp;
  input QPLL_QPLLOUTCLK;
  input QPLL_QPLLOUTREFCLK;
  input rxchbonden_2;
  input \cplllock_reg1_reg[2] ;
  input rate_txpmareset_2;
  input pipe_rx2_polarity;
  input pipe_rxprbscntreset;
  input rst_userrdy;
  input pipe_rxusrclk_in;
  input pipe_tx_deemph_gt;
  input pipe_tx_rcvr_det_gt;
  input SYNC_TXDLYSRESET;
  input \cplllock_reg1_reg[2]_0 ;
  input [0:0]pipe_txinhibit;
  input SYNC_TXPHALIGN;
  input SYNC_TXPHINIT;
  input pipe_txprbsforceerr;
  input pipe_pclk_in;
  input [15:0]DRPDI;
  input [1:0]\cplllock_reg1_reg[2]_1 ;
  input [0:0]RXSYSCLKSEL;
  input [2:0]pipe_loopback;
  input [2:0]pipe_rxprbssel;
  input [0:0]RXRATE;
  input [2:0]\cplllock_reg1_reg[2]_2 ;
  input [2:0]pipe_txprbssel;
  input USER_OOBCLK;
  input [4:0]RXCHBONDO;
  input [4:0]TXPOSTCURSOR;
  input [4:0]TXPRECURSOR;
  input [15:0]\cplllock_reg1_reg[2]_3 ;
  input [6:0]TXMAINCURSOR;
  input \cplllock_reg1_reg[2]_4 ;
  input [1:0]\cplllock_reg1_reg[2]_5 ;
  input [8:0]DRPADDR;
  input \gt_rx_status_q_reg[2] ;
  input \gt_rx_status_q_reg[0] ;
  input rate_cpllreset_2;
  input RST_CPLLRESET;

  wire CPLLPD0_4;
  wire CPLLRESET0;
  wire [8:0]DRPADDR;
  wire [15:0]DRPDI;
  wire DRP_GTXRESET;
  wire [0:0]PIPE_RXPHALIGNDONE;
  wire QPLL_QPLLOUTCLK;
  wire QPLL_QPLLOUTREFCLK;
  wire RATE_CPLLLOCK;
  wire RATE_PHYSTATUS;
  wire RATE_RXRATEDONE;
  wire RATE_TXRATEDONE;
  wire RST_CPLLRESET;
  wire [4:0]RXCHBONDO;
  wire [0:0]RXRATE;
  wire [0:0]RXSYSCLKSEL;
  wire SYNC_TXDLYSRESET;
  wire SYNC_TXPHALIGN;
  wire SYNC_TXPHINIT;
  wire [6:0]TXMAINCURSOR;
  wire [4:0]TXPOSTCURSOR;
  wire [4:0]TXPRECURSOR;
  wire USER_OOBCLK;
  wire USER_RXRESETDONE;
  wire USER_TXRESETDONE;
  wire \cplllock_reg1_reg[2] ;
  wire \cplllock_reg1_reg[2]_0 ;
  wire [1:0]\cplllock_reg1_reg[2]_1 ;
  wire [2:0]\cplllock_reg1_reg[2]_2 ;
  wire [15:0]\cplllock_reg1_reg[2]_3 ;
  wire \cplllock_reg1_reg[2]_4 ;
  wire [1:0]\cplllock_reg1_reg[2]_5 ;
  wire cpllpd_1;
  wire drp_mux_en_2;
  wire drp_mux_we_2;
  wire [15:0]ext_ch_gt_drpdo;
  wire [0:0]ext_ch_gt_drprdy;
  wire gt_cpllpdrefclk;
  wire \gt_rx_status_q_reg[0] ;
  wire \gt_rx_status_q_reg[2] ;
  wire gt_rxcdrlock_2;
  wire gt_rxvalid_2;
  wire [2:0]gt_rxvalid_q_reg;
  wire \gtx_channel.gtxe2_channel_i_n_10 ;
  wire \gtx_channel.gtxe2_channel_i_n_138 ;
  wire \gtx_channel.gtxe2_channel_i_n_139 ;
  wire \gtx_channel.gtxe2_channel_i_n_140 ;
  wire \gtx_channel.gtxe2_channel_i_n_141 ;
  wire \gtx_channel.gtxe2_channel_i_n_142 ;
  wire \gtx_channel.gtxe2_channel_i_n_143 ;
  wire \gtx_channel.gtxe2_channel_i_n_144 ;
  wire \gtx_channel.gtxe2_channel_i_n_145 ;
  wire \gtx_channel.gtxe2_channel_i_n_146 ;
  wire \gtx_channel.gtxe2_channel_i_n_147 ;
  wire \gtx_channel.gtxe2_channel_i_n_148 ;
  wire \gtx_channel.gtxe2_channel_i_n_149 ;
  wire \gtx_channel.gtxe2_channel_i_n_150 ;
  wire \gtx_channel.gtxe2_channel_i_n_151 ;
  wire \gtx_channel.gtxe2_channel_i_n_152 ;
  wire \gtx_channel.gtxe2_channel_i_n_153 ;
  wire \gtx_channel.gtxe2_channel_i_n_189 ;
  wire \gtx_channel.gtxe2_channel_i_n_190 ;
  wire \gtx_channel.gtxe2_channel_i_n_191 ;
  wire \gtx_channel.gtxe2_channel_i_n_192 ;
  wire \gtx_channel.gtxe2_channel_i_n_197 ;
  wire \gtx_channel.gtxe2_channel_i_n_198 ;
  wire \gtx_channel.gtxe2_channel_i_n_37 ;
  wire \gtx_channel.gtxe2_channel_i_n_9 ;
  wire \gtx_channel.gtxe2_channel_i_n_91 ;
  wire \gtx_channel.gtxe2_channel_i_n_92 ;
  wire \gtx_channel.gtxe2_channel_i_n_93 ;
  wire \gtx_channel.gtxe2_channel_i_n_94 ;
  wire \gtx_channel.gtxe2_channel_i_n_95 ;
  wire [0:0]pci_exp_rxn;
  wire [0:0]pci_exp_rxp;
  wire [0:0]pci_exp_txn;
  wire [0:0]pci_exp_txp;
  wire pipe_dclk_in;
  wire pipe_dclk_in_0;
  wire [15:0]pipe_dclk_in_1;
  wire [1:0]pipe_dclk_in_2;
  wire [7:0]pipe_dmonitorout;
  wire [0:0]pipe_eyescandataerror;
  wire [2:0]pipe_loopback;
  wire pipe_pclk_in;
  wire pipe_rx2_chanisaligned;
  wire pipe_rx2_polarity;
  wire [2:0]pipe_rxbufstatus;
  wire [0:0]pipe_rxcommadet;
  wire [7:0]pipe_rxdisperr;
  wire [0:0]pipe_rxdlysresetdone;
  wire [7:0]pipe_rxnotintable;
  wire [0:0]pipe_rxoutclk_out;
  wire pipe_rxprbscntreset;
  wire [0:0]pipe_rxprbserr;
  wire [2:0]pipe_rxprbssel;
  wire [2:0]pipe_rxstatus;
  wire pipe_rxusrclk_in;
  wire pipe_tx_deemph_gt;
  wire pipe_tx_rcvr_det_gt;
  wire [0:0]pipe_txdlysresetdone;
  wire [0:0]pipe_txinhibit;
  wire [0:0]pipe_txphaligndone;
  wire [0:0]pipe_txphinitdone;
  wire pipe_txprbsforceerr;
  wire [2:0]pipe_txprbssel;
  wire rate_cpllreset_2;
  wire rate_txpmareset_2;
  wire rst_userrdy;
  wire rxchbonden_2;
  wire sys_clk;
  wire \NLW_gtx_channel.gtxe2_channel_i_CPLLFBCLKLOST_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_CPLLREFCLKLOST_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_GTREFCLKMONITOR_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXCHANBONDSEQ_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXCHANREALIGN_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXCOMINITDET_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXCOMSASDET_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXCOMWAKEDET_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXDATAVALID_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXHEADERVALID_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXOUTCLKFABRIC_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXOUTCLKPCS_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXQPISENN_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXQPISENP_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXSTARTOFSEQ_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_TXCOMFINISH_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_TXGEARBOXREADY_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_TXOUTCLKFABRIC_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_TXOUTCLKPCS_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_TXQPISENN_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_TXQPISENP_UNCONNECTED ;
  wire [15:0]\NLW_gtx_channel.gtxe2_channel_i_PCSRSVDOUT_UNCONNECTED ;
  wire [7:4]\NLW_gtx_channel.gtxe2_channel_i_RXCHARISCOMMA_UNCONNECTED ;
  wire [7:4]\NLW_gtx_channel.gtxe2_channel_i_RXCHARISK_UNCONNECTED ;
  wire [1:0]\NLW_gtx_channel.gtxe2_channel_i_RXCLKCORCNT_UNCONNECTED ;
  wire [63:32]\NLW_gtx_channel.gtxe2_channel_i_RXDATA_UNCONNECTED ;
  wire [2:0]\NLW_gtx_channel.gtxe2_channel_i_RXHEADER_UNCONNECTED ;
  wire [6:0]\NLW_gtx_channel.gtxe2_channel_i_RXMONITOROUT_UNCONNECTED ;
  wire [4:0]\NLW_gtx_channel.gtxe2_channel_i_RXPHMONITOR_UNCONNECTED ;
  wire [4:0]\NLW_gtx_channel.gtxe2_channel_i_RXPHSLIPMONITOR_UNCONNECTED ;
  wire [9:0]\NLW_gtx_channel.gtxe2_channel_i_TSTOUT_UNCONNECTED ;
  wire [1:0]\NLW_gtx_channel.gtxe2_channel_i_TXBUFSTATUS_UNCONNECTED ;

  pcie_7x_0_pcie_7x_0_gtx_cpllpd_ovrd_40 cpllPDInst
       (.CPLLRESET0(CPLLRESET0),
        .RST_CPLLRESET(RST_CPLLRESET),
        .cpllpd_1(cpllpd_1),
        .gt_cpllpdrefclk(gt_cpllpdrefclk),
        .rate_cpllreset_2(rate_cpllreset_2));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \gt_rx_status_q[0]_i_1__0 
       (.I0(pipe_rxstatus[0]),
        .I1(\gt_rx_status_q_reg[2] ),
        .I2(\gt_rx_status_q_reg[0] ),
        .O(gt_rxvalid_q_reg[0]));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \gt_rx_status_q[1]_i_1__0 
       (.I0(pipe_rxstatus[1]),
        .I1(\gt_rx_status_q_reg[2] ),
        .I2(\gt_rx_status_q_reg[0] ),
        .O(gt_rxvalid_q_reg[1]));
  LUT3 #(
    .INIT(8'hA8)) 
    \gt_rx_status_q[2]_i_1__0 
       (.I0(pipe_rxstatus[2]),
        .I1(\gt_rx_status_q_reg[2] ),
        .I2(\gt_rx_status_q_reg[0] ),
        .O(gt_rxvalid_q_reg[2]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  GTXE2_CHANNEL #(
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b1111111111),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("TRUE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("TRUE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .CBCC_DATA_SOURCE_SEL("DECODED"),
    .CHAN_BOND_KEEP_ALIGN("TRUE"),
    .CHAN_BOND_MAX_SKEW(7),
    .CHAN_BOND_SEQ_1_1(10'b0001001010),
    .CHAN_BOND_SEQ_1_2(10'b0001001010),
    .CHAN_BOND_SEQ_1_3(10'b0001001010),
    .CHAN_BOND_SEQ_1_4(10'b0110111100),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0001000101),
    .CHAN_BOND_SEQ_2_2(10'b0001000101),
    .CHAN_BOND_SEQ_2_3(10'b0001000101),
    .CHAN_BOND_SEQ_2_4(10'b0110111100),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("TRUE"),
    .CHAN_BOND_SEQ_LEN(4),
    .CLK_CORRECT_USE("TRUE"),
    .CLK_COR_KEEP_IDLE("TRUE"),
    .CLK_COR_MAX_LAT(20),
    .CLK_COR_MIN_LAT(18),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0100011100),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b0000),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG(24'hA407CC),
    .CPLL_FBDIV(5),
    .CPLL_FBDIV_45(5),
    .CPLL_INIT_CFG(24'h00001E),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .DEC_MCOMMA_DETECT("TRUE"),
    .DEC_PCOMMA_DETECT("TRUE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DMONITOR_CFG(24'h000B01),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PMA_CFG(10'b0000000000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER(80'h00000000000000000000),
    .ES_QUAL_MASK(80'h00000000000000000000),
    .ES_SDATA_MASK(80'h00000000000000000000),
    .ES_VERT_OFFSET(9'b000000000),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("TRUE"),
    .GEARBOX_MODE(3'b000),
    .IS_CPLLLOCKDETCLK_INVERTED(1'b0),
    .IS_DRPCLK_INVERTED(1'b0),
    .IS_GTGREFCLK_INVERTED(1'b0),
    .IS_RXUSRCLK2_INVERTED(1'b0),
    .IS_RXUSRCLK_INVERTED(1'b0),
    .IS_TXPHDLYTSTCLK_INVERTED(1'b0),
    .IS_TXUSRCLK2_INVERTED(1'b0),
    .IS_TXUSRCLK_INVERTED(1'b0),
    .OUTREFCLK_SEL_INV(2'b11),
    .PCS_PCIE_EN("TRUE"),
    .PCS_RSVD_ATTR(48'h0000000001CF),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h09),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PMA_RSV(32'h00018480),
    .PMA_RSV2(16'h2050),
    .PMA_RSV3(2'b00),
    .PMA_RSV4(32'h00000000),
    .RXBUFRESET_TIME(5'b00001),
    .RXBUF_ADDR_MODE("FULL"),
    .RXBUF_EIDLE_HI_CNT(4'b0100),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("TRUE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(61),
    .RXBUF_THRESH_OVRD("FALSE"),
    .RXBUF_THRESH_UNDFLW(4),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG(72'h03000023FF10200020),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b1),
    .RXCDR_LOCK_CFG(6'b010101),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDLY_CFG(16'h001F),
    .RXDLY_LCFG(9'h030),
    .RXDLY_TAP_CFG(16'h0000),
    .RXGEARBOX_EN("FALSE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_HF_CFG(14'b00000011110000),
    .RXLPM_LF_CFG(14'b00000011110000),
    .RXOOB_CFG(7'b0000110),
    .RXOUT_DIV(2),
    .RXPCSRESET_TIME(5'b00001),
    .RXPHDLY_CFG(24'h004020),
    .RXPH_CFG(24'h000000),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("PMA"),
    .RX_BIAS_CFG(12'b000000000100),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CLK25_DIV(4),
    .RX_CLKMUX_PD(1'b1),
    .RX_CM_SEL(2'b11),
    .RX_CM_TRIM(3'b010),
    .RX_DATA_WIDTH(20),
    .RX_DDI_SEL(6'b000000),
    .RX_DEBUG_CFG(12'b000000000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DFE_GAIN_CFG(23'h020FEA),
    .RX_DFE_H2_CFG(12'b000000000000),
    .RX_DFE_H3_CFG(12'b000001000000),
    .RX_DFE_H4_CFG(11'b00011110000),
    .RX_DFE_H5_CFG(11'b00011100000),
    .RX_DFE_KL_CFG(13'b0000011111110),
    .RX_DFE_KL_CFG2(32'h3290D86C),
    .RX_DFE_LPM_CFG(16'h0954),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b1),
    .RX_DFE_UT_CFG(17'b10001111000000000),
    .RX_DFE_VP_CFG(17'b00011111100000011),
    .RX_DFE_XYD_CFG(13'b0000000000000),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_INT_DATAWIDTH(0),
    .RX_OS_CFG(13'b0000010000000),
    .RX_SIG_VALID_DLY(4),
    .RX_XCLK_SEL("RXREC"),
    .SAS_MAX_COM(64),
    .SAS_MIN_COM(36),
    .SATA_BURST_SEQ_LEN(4'b1111),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SATA_MAX_BURST(8),
    .SATA_MAX_INIT(21),
    .SATA_MAX_WAKE(7),
    .SATA_MIN_BURST(4),
    .SATA_MIN_INIT(12),
    .SATA_MIN_WAKE(4),
    .SHOW_REALIGN_COMMA("FALSE"),
    .SIM_CPLLREFCLK_SEL(3'b001),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("FALSE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("1"),
    .SIM_VERSION("3.0"),
    .TERM_RCAL_CFG(5'b10000),
    .TERM_RCAL_OVRD(1'b0),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV(32'h00000000),
    .TXBUF_EN("FALSE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h001F),
    .TXDLY_LCFG(9'h030),
    .TXDLY_TAP_CFG(16'h0000),
    .TXGEARBOX_EN("FALSE"),
    .TXOUT_DIV(2),
    .TXPCSRESET_TIME(5'b00001),
    .TXPHDLY_CFG(24'h084020),
    .TXPH_CFG(16'h0780),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPMARESET_TIME(5'b00011),
    .TX_CLK25_DIV(4),
    .TX_CLKMUX_PD(1'b1),
    .TX_DATA_WIDTH(20),
    .TX_DEEMPH0(5'b10100),
    .TX_DEEMPH1(5'b01011),
    .TX_DRIVE_MODE("PIPE"),
    .TX_EIDLE_ASSERT_DELAY(3'b010),
    .TX_EIDLE_DEASSERT_DELAY(3'b100),
    .TX_INT_DATAWIDTH(0),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1001111),
    .TX_MARGIN_FULL_1(7'b1001110),
    .TX_MARGIN_FULL_2(7'b1001101),
    .TX_MARGIN_FULL_3(7'b1001100),
    .TX_MARGIN_FULL_4(7'b1000011),
    .TX_MARGIN_LOW_0(7'b1000101),
    .TX_MARGIN_LOW_1(7'b1000110),
    .TX_MARGIN_LOW_2(7'b1000011),
    .TX_MARGIN_LOW_3(7'b1000010),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_PREDRIVER_MODE(1'b0),
    .TX_QPI_STATUS_EN(1'b0),
    .TX_RXDETECT_CFG(14'h0064),
    .TX_RXDETECT_REF(3'b011),
    .TX_XCLK_SEL("TXUSR"),
    .UCODEER_CLR(1'b0)) 
    \gtx_channel.gtxe2_channel_i 
       (.CFGRESET(1'b0),
        .CLKRSVD({1'b0,1'b0,1'b0,USER_OOBCLK}),
        .CPLLFBCLKLOST(\NLW_gtx_channel.gtxe2_channel_i_CPLLFBCLKLOST_UNCONNECTED ),
        .CPLLLOCK(RATE_CPLLLOCK),
        .CPLLLOCKDETCLK(1'b0),
        .CPLLLOCKEN(1'b1),
        .CPLLPD(CPLLPD0_4),
        .CPLLREFCLKLOST(\NLW_gtx_channel.gtxe2_channel_i_CPLLREFCLKLOST_UNCONNECTED ),
        .CPLLREFCLKSEL({1'b0,1'b0,1'b1}),
        .CPLLRESET(CPLLRESET0),
        .DMONITOROUT(pipe_dmonitorout),
        .DRPADDR(DRPADDR),
        .DRPCLK(pipe_dclk_in),
        .DRPDI(DRPDI),
        .DRPDO(ext_ch_gt_drpdo),
        .DRPEN(drp_mux_en_2),
        .DRPRDY(ext_ch_gt_drprdy),
        .DRPWE(drp_mux_we_2),
        .EYESCANDATAERROR(pipe_eyescandataerror),
        .EYESCANMODE(1'b0),
        .EYESCANRESET(1'b0),
        .EYESCANTRIGGER(1'b0),
        .GTGREFCLK(1'b0),
        .GTNORTHREFCLK0(1'b0),
        .GTNORTHREFCLK1(1'b0),
        .GTREFCLK0(sys_clk),
        .GTREFCLK1(1'b0),
        .GTREFCLKMONITOR(\NLW_gtx_channel.gtxe2_channel_i_GTREFCLKMONITOR_UNCONNECTED ),
        .GTRESETSEL(1'b0),
        .GTRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GTRXRESET(DRP_GTXRESET),
        .GTSOUTHREFCLK0(1'b0),
        .GTSOUTHREFCLK1(1'b0),
        .GTTXRESET(DRP_GTXRESET),
        .GTXRXN(pci_exp_rxn),
        .GTXRXP(pci_exp_rxp),
        .GTXTXN(pci_exp_txn),
        .GTXTXP(pci_exp_txp),
        .LOOPBACK(pipe_loopback),
        .PCSRSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDIN2({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDOUT(\NLW_gtx_channel.gtxe2_channel_i_PCSRSVDOUT_UNCONNECTED [15:0]),
        .PHYSTATUS(RATE_PHYSTATUS),
        .PMARSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PMARSVDIN2({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .QPLLCLK(QPLL_QPLLOUTCLK),
        .QPLLREFCLK(QPLL_QPLLOUTREFCLK),
        .RESETOVRD(1'b0),
        .RX8B10BEN(rxchbonden_2),
        .RXBUFRESET(1'b0),
        .RXBUFSTATUS(pipe_rxbufstatus),
        .RXBYTEISALIGNED(\gtx_channel.gtxe2_channel_i_n_9 ),
        .RXBYTEREALIGN(\gtx_channel.gtxe2_channel_i_n_10 ),
        .RXCDRFREQRESET(1'b0),
        .RXCDRHOLD(1'b0),
        .RXCDRLOCK(gt_rxcdrlock_2),
        .RXCDROVRDEN(1'b0),
        .RXCDRRESET(1'b0),
        .RXCDRRESETRSV(1'b0),
        .RXCHANBONDSEQ(\NLW_gtx_channel.gtxe2_channel_i_RXCHANBONDSEQ_UNCONNECTED ),
        .RXCHANISALIGNED(pipe_rx2_chanisaligned),
        .RXCHANREALIGN(\NLW_gtx_channel.gtxe2_channel_i_RXCHANREALIGN_UNCONNECTED ),
        .RXCHARISCOMMA({\NLW_gtx_channel.gtxe2_channel_i_RXCHARISCOMMA_UNCONNECTED [7:4],\gtx_channel.gtxe2_channel_i_n_189 ,\gtx_channel.gtxe2_channel_i_n_190 ,\gtx_channel.gtxe2_channel_i_n_191 ,\gtx_channel.gtxe2_channel_i_n_192 }),
        .RXCHARISK({\NLW_gtx_channel.gtxe2_channel_i_RXCHARISK_UNCONNECTED [7:4],\gtx_channel.gtxe2_channel_i_n_197 ,\gtx_channel.gtxe2_channel_i_n_198 ,pipe_dclk_in_2}),
        .RXCHBONDEN(rxchbonden_2),
        .RXCHBONDI(RXCHBONDO),
        .RXCHBONDLEVEL({1'b0,1'b0,1'b0}),
        .RXCHBONDMASTER(1'b0),
        .RXCHBONDO({\gtx_channel.gtxe2_channel_i_n_91 ,\gtx_channel.gtxe2_channel_i_n_92 ,\gtx_channel.gtxe2_channel_i_n_93 ,\gtx_channel.gtxe2_channel_i_n_94 ,\gtx_channel.gtxe2_channel_i_n_95 }),
        .RXCHBONDSLAVE(rxchbonden_2),
        .RXCLKCORCNT(\NLW_gtx_channel.gtxe2_channel_i_RXCLKCORCNT_UNCONNECTED [1:0]),
        .RXCOMINITDET(\NLW_gtx_channel.gtxe2_channel_i_RXCOMINITDET_UNCONNECTED ),
        .RXCOMMADET(pipe_rxcommadet),
        .RXCOMMADETEN(1'b1),
        .RXCOMSASDET(\NLW_gtx_channel.gtxe2_channel_i_RXCOMSASDET_UNCONNECTED ),
        .RXCOMWAKEDET(\NLW_gtx_channel.gtxe2_channel_i_RXCOMWAKEDET_UNCONNECTED ),
        .RXDATA({\NLW_gtx_channel.gtxe2_channel_i_RXDATA_UNCONNECTED [63:32],\gtx_channel.gtxe2_channel_i_n_138 ,\gtx_channel.gtxe2_channel_i_n_139 ,\gtx_channel.gtxe2_channel_i_n_140 ,\gtx_channel.gtxe2_channel_i_n_141 ,\gtx_channel.gtxe2_channel_i_n_142 ,\gtx_channel.gtxe2_channel_i_n_143 ,\gtx_channel.gtxe2_channel_i_n_144 ,\gtx_channel.gtxe2_channel_i_n_145 ,\gtx_channel.gtxe2_channel_i_n_146 ,\gtx_channel.gtxe2_channel_i_n_147 ,\gtx_channel.gtxe2_channel_i_n_148 ,\gtx_channel.gtxe2_channel_i_n_149 ,\gtx_channel.gtxe2_channel_i_n_150 ,\gtx_channel.gtxe2_channel_i_n_151 ,\gtx_channel.gtxe2_channel_i_n_152 ,\gtx_channel.gtxe2_channel_i_n_153 ,pipe_dclk_in_1}),
        .RXDATAVALID(\NLW_gtx_channel.gtxe2_channel_i_RXDATAVALID_UNCONNECTED ),
        .RXDDIEN(1'b0),
        .RXDFEAGCHOLD(\cplllock_reg1_reg[2] ),
        .RXDFEAGCOVRDEN(1'b0),
        .RXDFECM1EN(1'b0),
        .RXDFELFHOLD(1'b0),
        .RXDFELFOVRDEN(1'b1),
        .RXDFELPMRESET(1'b0),
        .RXDFETAP2HOLD(1'b0),
        .RXDFETAP2OVRDEN(1'b0),
        .RXDFETAP3HOLD(1'b0),
        .RXDFETAP3OVRDEN(1'b0),
        .RXDFETAP4HOLD(1'b0),
        .RXDFETAP4OVRDEN(1'b0),
        .RXDFETAP5HOLD(1'b0),
        .RXDFETAP5OVRDEN(1'b0),
        .RXDFEUTHOLD(1'b0),
        .RXDFEUTOVRDEN(1'b0),
        .RXDFEVPHOLD(1'b0),
        .RXDFEVPOVRDEN(1'b0),
        .RXDFEVSEN(1'b0),
        .RXDFEXYDEN(1'b0),
        .RXDFEXYDHOLD(1'b0),
        .RXDFEXYDOVRDEN(1'b0),
        .RXDISPERR(pipe_rxdisperr),
        .RXDLYBYPASS(1'b1),
        .RXDLYEN(1'b0),
        .RXDLYOVRDEN(1'b0),
        .RXDLYSRESET(1'b0),
        .RXDLYSRESETDONE(pipe_rxdlysresetdone),
        .RXELECIDLE(pipe_dclk_in_0),
        .RXELECIDLEMODE({1'b0,1'b0}),
        .RXGEARBOXSLIP(1'b0),
        .RXHEADER(\NLW_gtx_channel.gtxe2_channel_i_RXHEADER_UNCONNECTED [2:0]),
        .RXHEADERVALID(\NLW_gtx_channel.gtxe2_channel_i_RXHEADERVALID_UNCONNECTED ),
        .RXLPMEN(rxchbonden_2),
        .RXLPMHFHOLD(1'b0),
        .RXLPMHFOVRDEN(1'b0),
        .RXLPMLFHOLD(1'b0),
        .RXLPMLFKLOVRDEN(1'b0),
        .RXMCOMMAALIGNEN(rxchbonden_2),
        .RXMONITOROUT(\NLW_gtx_channel.gtxe2_channel_i_RXMONITOROUT_UNCONNECTED [6:0]),
        .RXMONITORSEL({1'b0,1'b0}),
        .RXNOTINTABLE(pipe_rxnotintable),
        .RXOOBRESET(1'b0),
        .RXOSHOLD(1'b0),
        .RXOSOVRDEN(1'b0),
        .RXOUTCLK(pipe_rxoutclk_out),
        .RXOUTCLKFABRIC(\NLW_gtx_channel.gtxe2_channel_i_RXOUTCLKFABRIC_UNCONNECTED ),
        .RXOUTCLKPCS(\NLW_gtx_channel.gtxe2_channel_i_RXOUTCLKPCS_UNCONNECTED ),
        .RXOUTCLKSEL({1'b0,1'b0,1'b0}),
        .RXPCOMMAALIGNEN(rxchbonden_2),
        .RXPCSRESET(1'b0),
        .RXPD(\cplllock_reg1_reg[2]_1 ),
        .RXPHALIGN(1'b0),
        .RXPHALIGNDONE(PIPE_RXPHALIGNDONE),
        .RXPHALIGNEN(1'b0),
        .RXPHDLYPD(1'b0),
        .RXPHDLYRESET(1'b0),
        .RXPHMONITOR(\NLW_gtx_channel.gtxe2_channel_i_RXPHMONITOR_UNCONNECTED [4:0]),
        .RXPHOVRDEN(1'b0),
        .RXPHSLIPMONITOR(\NLW_gtx_channel.gtxe2_channel_i_RXPHSLIPMONITOR_UNCONNECTED [4:0]),
        .RXPMARESET(rate_txpmareset_2),
        .RXPOLARITY(pipe_rx2_polarity),
        .RXPRBSCNTRESET(pipe_rxprbscntreset),
        .RXPRBSERR(pipe_rxprbserr),
        .RXPRBSSEL(pipe_rxprbssel),
        .RXQPIEN(1'b0),
        .RXQPISENN(\NLW_gtx_channel.gtxe2_channel_i_RXQPISENN_UNCONNECTED ),
        .RXQPISENP(\NLW_gtx_channel.gtxe2_channel_i_RXQPISENP_UNCONNECTED ),
        .RXRATE({1'b0,1'b0,RXRATE}),
        .RXRATEDONE(RATE_RXRATEDONE),
        .RXRESETDONE(USER_RXRESETDONE),
        .RXSLIDE(1'b0),
        .RXSTARTOFSEQ(\NLW_gtx_channel.gtxe2_channel_i_RXSTARTOFSEQ_UNCONNECTED ),
        .RXSTATUS(pipe_rxstatus),
        .RXSYSCLKSEL({1'b0,RXSYSCLKSEL}),
        .RXUSERRDY(rst_userrdy),
        .RXUSRCLK(pipe_rxusrclk_in),
        .RXUSRCLK2(pipe_rxusrclk_in),
        .RXVALID(gt_rxvalid_2),
        .SETERRSTATUS(1'b0),
        .TSTIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .TSTOUT(\NLW_gtx_channel.gtxe2_channel_i_TSTOUT_UNCONNECTED [9:0]),
        .TX8B10BBYPASS({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BEN(rxchbonden_2),
        .TXBUFDIFFCTRL({1'b1,1'b0,1'b0}),
        .TXBUFSTATUS(\NLW_gtx_channel.gtxe2_channel_i_TXBUFSTATUS_UNCONNECTED [1:0]),
        .TXCHARDISPMODE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\cplllock_reg1_reg[2]_4 }),
        .TXCHARDISPVAL({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCHARISK({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\cplllock_reg1_reg[2]_5 }),
        .TXCOMFINISH(\NLW_gtx_channel.gtxe2_channel_i_TXCOMFINISH_UNCONNECTED ),
        .TXCOMINIT(1'b0),
        .TXCOMSAS(1'b0),
        .TXCOMWAKE(1'b0),
        .TXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\cplllock_reg1_reg[2]_3 }),
        .TXDEEMPH(pipe_tx_deemph_gt),
        .TXDETECTRX(pipe_tx_rcvr_det_gt),
        .TXDIFFCTRL({1'b1,1'b1,1'b0,1'b0}),
        .TXDIFFPD(1'b0),
        .TXDLYBYPASS(1'b0),
        .TXDLYEN(1'b0),
        .TXDLYHOLD(1'b0),
        .TXDLYOVRDEN(1'b0),
        .TXDLYSRESET(SYNC_TXDLYSRESET),
        .TXDLYSRESETDONE(pipe_txdlysresetdone),
        .TXDLYUPDOWN(1'b0),
        .TXELECIDLE(\cplllock_reg1_reg[2]_0 ),
        .TXGEARBOXREADY(\NLW_gtx_channel.gtxe2_channel_i_TXGEARBOXREADY_UNCONNECTED ),
        .TXHEADER({1'b0,1'b0,1'b0}),
        .TXINHIBIT(pipe_txinhibit),
        .TXMAINCURSOR(TXMAINCURSOR),
        .TXMARGIN(\cplllock_reg1_reg[2]_2 ),
        .TXOUTCLK(\gtx_channel.gtxe2_channel_i_n_37 ),
        .TXOUTCLKFABRIC(\NLW_gtx_channel.gtxe2_channel_i_TXOUTCLKFABRIC_UNCONNECTED ),
        .TXOUTCLKPCS(\NLW_gtx_channel.gtxe2_channel_i_TXOUTCLKPCS_UNCONNECTED ),
        .TXOUTCLKSEL({1'b0,1'b0,1'b0}),
        .TXPCSRESET(1'b0),
        .TXPD(\cplllock_reg1_reg[2]_1 ),
        .TXPDELECIDLEMODE(1'b0),
        .TXPHALIGN(SYNC_TXPHALIGN),
        .TXPHALIGNDONE(pipe_txphaligndone),
        .TXPHALIGNEN(1'b1),
        .TXPHDLYPD(1'b0),
        .TXPHDLYRESET(1'b0),
        .TXPHDLYTSTCLK(1'b0),
        .TXPHINIT(SYNC_TXPHINIT),
        .TXPHINITDONE(pipe_txphinitdone),
        .TXPHOVRDEN(1'b0),
        .TXPISOPD(1'b0),
        .TXPMARESET(rate_txpmareset_2),
        .TXPOLARITY(1'b0),
        .TXPOSTCURSOR(TXPOSTCURSOR),
        .TXPOSTCURSORINV(1'b0),
        .TXPRBSFORCEERR(pipe_txprbsforceerr),
        .TXPRBSSEL(pipe_txprbssel),
        .TXPRECURSOR(TXPRECURSOR),
        .TXPRECURSORINV(1'b0),
        .TXQPIBIASEN(1'b0),
        .TXQPISENN(\NLW_gtx_channel.gtxe2_channel_i_TXQPISENN_UNCONNECTED ),
        .TXQPISENP(\NLW_gtx_channel.gtxe2_channel_i_TXQPISENP_UNCONNECTED ),
        .TXQPISTRONGPDOWN(1'b0),
        .TXQPIWEAKPUP(1'b0),
        .TXRATE({1'b0,1'b0,RXRATE}),
        .TXRATEDONE(RATE_TXRATEDONE),
        .TXRESETDONE(USER_TXRESETDONE),
        .TXSEQUENCE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXSTARTSEQ(1'b0),
        .TXSWING(1'b0),
        .TXSYSCLKSEL({1'b0,RXSYSCLKSEL}),
        .TXUSERRDY(rst_userrdy),
        .TXUSRCLK(pipe_pclk_in),
        .TXUSRCLK2(pipe_pclk_in));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_gt_wrapper" *) 
module pcie_7x_0_pcie_7x_0_gt_wrapper_33
   (cpllpd_2,
    RATE_CPLLLOCK,
    ext_ch_gt_drprdy,
    pipe_eyescandataerror,
    pci_exp_txn,
    pci_exp_txp,
    RATE_PHYSTATUS,
    gt_rxcdrlock_3,
    pipe_rx3_chanisaligned,
    pipe_rxcommadet,
    pipe_rxdlysresetdone,
    pipe_dclk_in_0,
    pipe_rxoutclk_out,
    PIPE_RXPHALIGNDONE,
    pipe_rxprbserr,
    RATE_RXRATEDONE,
    USER_RXRESETDONE,
    gt_rxvalid_3,
    pipe_txdlysresetdone,
    pipe_txphaligndone,
    pipe_txphinitdone,
    RATE_TXRATEDONE,
    USER_TXRESETDONE,
    ext_ch_gt_drpdo,
    pipe_rxbufstatus,
    pipe_rxstatus,
    pipe_dclk_in_1,
    pipe_dmonitorout,
    pipe_dclk_in_2,
    pipe_rxdisperr,
    pipe_rxnotintable,
    D,
    gt_cpllpdrefclk,
    CPLLPD0_5,
    pipe_dclk_in,
    drp_mux_en_3,
    drp_mux_we_3,
    sys_clk,
    DRP_GTXRESET,
    pci_exp_rxn,
    pci_exp_rxp,
    QPLL_QPLLOUTCLK,
    QPLL_QPLLOUTREFCLK,
    rxchbonden_3,
    \cplllock_reg1_reg[3] ,
    rate_txpmareset_3,
    pipe_rx3_polarity,
    pipe_rxprbscntreset,
    rst_userrdy,
    pipe_rxusrclk_in,
    pipe_tx_deemph_gt,
    pipe_tx_rcvr_det_gt,
    SYNC_TXDLYSRESET,
    \cplllock_reg1_reg[3]_0 ,
    pipe_txinhibit,
    SYNC_TXPHALIGN,
    SYNC_TXPHINIT,
    pipe_txprbsforceerr,
    pipe_pclk_in,
    DRPDI,
    \cplllock_reg1_reg[3]_1 ,
    RXSYSCLKSEL,
    pipe_loopback,
    pipe_rxprbssel,
    RXRATE,
    \cplllock_reg1_reg[3]_2 ,
    pipe_txprbssel,
    USER_OOBCLK,
    RXCHBONDO,
    TXPOSTCURSOR,
    TXPRECURSOR,
    \cplllock_reg1_reg[3]_3 ,
    TXMAINCURSOR,
    \cplllock_reg1_reg[3]_4 ,
    \cplllock_reg1_reg[3]_5 ,
    DRPADDR,
    \gt_rx_status_q_reg[2] ,
    \gt_rx_status_q_reg[0] ,
    rate_cpllreset_3,
    RST_CPLLRESET);
  output cpllpd_2;
  output RATE_CPLLLOCK;
  output [0:0]ext_ch_gt_drprdy;
  output [0:0]pipe_eyescandataerror;
  output [0:0]pci_exp_txn;
  output [0:0]pci_exp_txp;
  output RATE_PHYSTATUS;
  output gt_rxcdrlock_3;
  output pipe_rx3_chanisaligned;
  output [0:0]pipe_rxcommadet;
  output [0:0]pipe_rxdlysresetdone;
  output pipe_dclk_in_0;
  output [0:0]pipe_rxoutclk_out;
  output [0:0]PIPE_RXPHALIGNDONE;
  output [0:0]pipe_rxprbserr;
  output RATE_RXRATEDONE;
  output USER_RXRESETDONE;
  output gt_rxvalid_3;
  output [0:0]pipe_txdlysresetdone;
  output [0:0]pipe_txphaligndone;
  output [0:0]pipe_txphinitdone;
  output RATE_TXRATEDONE;
  output USER_TXRESETDONE;
  output [15:0]ext_ch_gt_drpdo;
  output [2:0]pipe_rxbufstatus;
  output [2:0]pipe_rxstatus;
  output [15:0]pipe_dclk_in_1;
  output [7:0]pipe_dmonitorout;
  output [1:0]pipe_dclk_in_2;
  output [7:0]pipe_rxdisperr;
  output [7:0]pipe_rxnotintable;
  output [2:0]D;
  input gt_cpllpdrefclk;
  input CPLLPD0_5;
  input pipe_dclk_in;
  input drp_mux_en_3;
  input drp_mux_we_3;
  input sys_clk;
  input DRP_GTXRESET;
  input [0:0]pci_exp_rxn;
  input [0:0]pci_exp_rxp;
  input QPLL_QPLLOUTCLK;
  input QPLL_QPLLOUTREFCLK;
  input rxchbonden_3;
  input \cplllock_reg1_reg[3] ;
  input rate_txpmareset_3;
  input pipe_rx3_polarity;
  input pipe_rxprbscntreset;
  input rst_userrdy;
  input pipe_rxusrclk_in;
  input pipe_tx_deemph_gt;
  input pipe_tx_rcvr_det_gt;
  input SYNC_TXDLYSRESET;
  input \cplllock_reg1_reg[3]_0 ;
  input [0:0]pipe_txinhibit;
  input SYNC_TXPHALIGN;
  input SYNC_TXPHINIT;
  input pipe_txprbsforceerr;
  input pipe_pclk_in;
  input [15:0]DRPDI;
  input [1:0]\cplllock_reg1_reg[3]_1 ;
  input [0:0]RXSYSCLKSEL;
  input [2:0]pipe_loopback;
  input [2:0]pipe_rxprbssel;
  input [0:0]RXRATE;
  input [2:0]\cplllock_reg1_reg[3]_2 ;
  input [2:0]pipe_txprbssel;
  input USER_OOBCLK;
  input [4:0]RXCHBONDO;
  input [4:0]TXPOSTCURSOR;
  input [4:0]TXPRECURSOR;
  input [15:0]\cplllock_reg1_reg[3]_3 ;
  input [6:0]TXMAINCURSOR;
  input \cplllock_reg1_reg[3]_4 ;
  input [1:0]\cplllock_reg1_reg[3]_5 ;
  input [8:0]DRPADDR;
  input \gt_rx_status_q_reg[2] ;
  input \gt_rx_status_q_reg[0] ;
  input rate_cpllreset_3;
  input RST_CPLLRESET;

  wire CPLLPD0_5;
  wire CPLLRESET0;
  wire [2:0]D;
  wire [8:0]DRPADDR;
  wire [15:0]DRPDI;
  wire DRP_GTXRESET;
  wire [0:0]PIPE_RXPHALIGNDONE;
  wire QPLL_QPLLOUTCLK;
  wire QPLL_QPLLOUTREFCLK;
  wire RATE_CPLLLOCK;
  wire RATE_PHYSTATUS;
  wire RATE_RXRATEDONE;
  wire RATE_TXRATEDONE;
  wire RST_CPLLRESET;
  wire [4:0]RXCHBONDO;
  wire [0:0]RXRATE;
  wire [0:0]RXSYSCLKSEL;
  wire SYNC_TXDLYSRESET;
  wire SYNC_TXPHALIGN;
  wire SYNC_TXPHINIT;
  wire [6:0]TXMAINCURSOR;
  wire [4:0]TXPOSTCURSOR;
  wire [4:0]TXPRECURSOR;
  wire USER_OOBCLK;
  wire USER_RXRESETDONE;
  wire USER_TXRESETDONE;
  wire \cplllock_reg1_reg[3] ;
  wire \cplllock_reg1_reg[3]_0 ;
  wire [1:0]\cplllock_reg1_reg[3]_1 ;
  wire [2:0]\cplllock_reg1_reg[3]_2 ;
  wire [15:0]\cplllock_reg1_reg[3]_3 ;
  wire \cplllock_reg1_reg[3]_4 ;
  wire [1:0]\cplllock_reg1_reg[3]_5 ;
  wire cpllpd_2;
  wire drp_mux_en_3;
  wire drp_mux_we_3;
  wire [15:0]ext_ch_gt_drpdo;
  wire [0:0]ext_ch_gt_drprdy;
  wire gt_cpllpdrefclk;
  wire \gt_rx_status_q_reg[0] ;
  wire \gt_rx_status_q_reg[2] ;
  wire gt_rxcdrlock_3;
  wire gt_rxvalid_3;
  wire \gtx_channel.gtxe2_channel_i_n_10 ;
  wire \gtx_channel.gtxe2_channel_i_n_138 ;
  wire \gtx_channel.gtxe2_channel_i_n_139 ;
  wire \gtx_channel.gtxe2_channel_i_n_140 ;
  wire \gtx_channel.gtxe2_channel_i_n_141 ;
  wire \gtx_channel.gtxe2_channel_i_n_142 ;
  wire \gtx_channel.gtxe2_channel_i_n_143 ;
  wire \gtx_channel.gtxe2_channel_i_n_144 ;
  wire \gtx_channel.gtxe2_channel_i_n_145 ;
  wire \gtx_channel.gtxe2_channel_i_n_146 ;
  wire \gtx_channel.gtxe2_channel_i_n_147 ;
  wire \gtx_channel.gtxe2_channel_i_n_148 ;
  wire \gtx_channel.gtxe2_channel_i_n_149 ;
  wire \gtx_channel.gtxe2_channel_i_n_150 ;
  wire \gtx_channel.gtxe2_channel_i_n_151 ;
  wire \gtx_channel.gtxe2_channel_i_n_152 ;
  wire \gtx_channel.gtxe2_channel_i_n_153 ;
  wire \gtx_channel.gtxe2_channel_i_n_189 ;
  wire \gtx_channel.gtxe2_channel_i_n_190 ;
  wire \gtx_channel.gtxe2_channel_i_n_191 ;
  wire \gtx_channel.gtxe2_channel_i_n_192 ;
  wire \gtx_channel.gtxe2_channel_i_n_197 ;
  wire \gtx_channel.gtxe2_channel_i_n_198 ;
  wire \gtx_channel.gtxe2_channel_i_n_37 ;
  wire \gtx_channel.gtxe2_channel_i_n_9 ;
  wire \gtx_channel.gtxe2_channel_i_n_91 ;
  wire \gtx_channel.gtxe2_channel_i_n_92 ;
  wire \gtx_channel.gtxe2_channel_i_n_93 ;
  wire \gtx_channel.gtxe2_channel_i_n_94 ;
  wire \gtx_channel.gtxe2_channel_i_n_95 ;
  wire [0:0]pci_exp_rxn;
  wire [0:0]pci_exp_rxp;
  wire [0:0]pci_exp_txn;
  wire [0:0]pci_exp_txp;
  wire pipe_dclk_in;
  wire pipe_dclk_in_0;
  wire [15:0]pipe_dclk_in_1;
  wire [1:0]pipe_dclk_in_2;
  wire [7:0]pipe_dmonitorout;
  wire [0:0]pipe_eyescandataerror;
  wire [2:0]pipe_loopback;
  wire pipe_pclk_in;
  wire pipe_rx3_chanisaligned;
  wire pipe_rx3_polarity;
  wire [2:0]pipe_rxbufstatus;
  wire [0:0]pipe_rxcommadet;
  wire [7:0]pipe_rxdisperr;
  wire [0:0]pipe_rxdlysresetdone;
  wire [7:0]pipe_rxnotintable;
  wire [0:0]pipe_rxoutclk_out;
  wire pipe_rxprbscntreset;
  wire [0:0]pipe_rxprbserr;
  wire [2:0]pipe_rxprbssel;
  wire [2:0]pipe_rxstatus;
  wire pipe_rxusrclk_in;
  wire pipe_tx_deemph_gt;
  wire pipe_tx_rcvr_det_gt;
  wire [0:0]pipe_txdlysresetdone;
  wire [0:0]pipe_txinhibit;
  wire [0:0]pipe_txphaligndone;
  wire [0:0]pipe_txphinitdone;
  wire pipe_txprbsforceerr;
  wire [2:0]pipe_txprbssel;
  wire rate_cpllreset_3;
  wire rate_txpmareset_3;
  wire rst_userrdy;
  wire rxchbonden_3;
  wire sys_clk;
  wire \NLW_gtx_channel.gtxe2_channel_i_CPLLFBCLKLOST_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_CPLLREFCLKLOST_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_GTREFCLKMONITOR_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXCHANBONDSEQ_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXCHANREALIGN_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXCOMINITDET_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXCOMSASDET_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXCOMWAKEDET_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXDATAVALID_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXHEADERVALID_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXOUTCLKFABRIC_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXOUTCLKPCS_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXQPISENN_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXQPISENP_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_RXSTARTOFSEQ_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_TXCOMFINISH_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_TXGEARBOXREADY_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_TXOUTCLKFABRIC_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_TXOUTCLKPCS_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_TXQPISENN_UNCONNECTED ;
  wire \NLW_gtx_channel.gtxe2_channel_i_TXQPISENP_UNCONNECTED ;
  wire [15:0]\NLW_gtx_channel.gtxe2_channel_i_PCSRSVDOUT_UNCONNECTED ;
  wire [7:4]\NLW_gtx_channel.gtxe2_channel_i_RXCHARISCOMMA_UNCONNECTED ;
  wire [7:4]\NLW_gtx_channel.gtxe2_channel_i_RXCHARISK_UNCONNECTED ;
  wire [1:0]\NLW_gtx_channel.gtxe2_channel_i_RXCLKCORCNT_UNCONNECTED ;
  wire [63:32]\NLW_gtx_channel.gtxe2_channel_i_RXDATA_UNCONNECTED ;
  wire [2:0]\NLW_gtx_channel.gtxe2_channel_i_RXHEADER_UNCONNECTED ;
  wire [6:0]\NLW_gtx_channel.gtxe2_channel_i_RXMONITOROUT_UNCONNECTED ;
  wire [4:0]\NLW_gtx_channel.gtxe2_channel_i_RXPHMONITOR_UNCONNECTED ;
  wire [4:0]\NLW_gtx_channel.gtxe2_channel_i_RXPHSLIPMONITOR_UNCONNECTED ;
  wire [9:0]\NLW_gtx_channel.gtxe2_channel_i_TSTOUT_UNCONNECTED ;
  wire [1:0]\NLW_gtx_channel.gtxe2_channel_i_TXBUFSTATUS_UNCONNECTED ;

  pcie_7x_0_pcie_7x_0_gtx_cpllpd_ovrd cpllPDInst
       (.CPLLRESET0(CPLLRESET0),
        .RST_CPLLRESET(RST_CPLLRESET),
        .cpllpd_2(cpllpd_2),
        .gt_cpllpdrefclk(gt_cpllpdrefclk),
        .rate_cpllreset_3(rate_cpllreset_3));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \gt_rx_status_q[0]_i_1 
       (.I0(pipe_rxstatus[0]),
        .I1(\gt_rx_status_q_reg[2] ),
        .I2(\gt_rx_status_q_reg[0] ),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \gt_rx_status_q[1]_i_1 
       (.I0(pipe_rxstatus[1]),
        .I1(\gt_rx_status_q_reg[2] ),
        .I2(\gt_rx_status_q_reg[0] ),
        .O(D[1]));
  LUT3 #(
    .INIT(8'hA8)) 
    \gt_rx_status_q[2]_i_1 
       (.I0(pipe_rxstatus[2]),
        .I1(\gt_rx_status_q_reg[2] ),
        .I2(\gt_rx_status_q_reg[0] ),
        .O(D[2]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  GTXE2_CHANNEL #(
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b1111111111),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("TRUE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("TRUE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .CBCC_DATA_SOURCE_SEL("DECODED"),
    .CHAN_BOND_KEEP_ALIGN("TRUE"),
    .CHAN_BOND_MAX_SKEW(7),
    .CHAN_BOND_SEQ_1_1(10'b0001001010),
    .CHAN_BOND_SEQ_1_2(10'b0001001010),
    .CHAN_BOND_SEQ_1_3(10'b0001001010),
    .CHAN_BOND_SEQ_1_4(10'b0110111100),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0001000101),
    .CHAN_BOND_SEQ_2_2(10'b0001000101),
    .CHAN_BOND_SEQ_2_3(10'b0001000101),
    .CHAN_BOND_SEQ_2_4(10'b0110111100),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("TRUE"),
    .CHAN_BOND_SEQ_LEN(4),
    .CLK_CORRECT_USE("TRUE"),
    .CLK_COR_KEEP_IDLE("TRUE"),
    .CLK_COR_MAX_LAT(20),
    .CLK_COR_MIN_LAT(18),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0100011100),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b0000),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG(24'hA407CC),
    .CPLL_FBDIV(5),
    .CPLL_FBDIV_45(5),
    .CPLL_INIT_CFG(24'h00001E),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .DEC_MCOMMA_DETECT("TRUE"),
    .DEC_PCOMMA_DETECT("TRUE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DMONITOR_CFG(24'h000B01),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PMA_CFG(10'b0000000000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER(80'h00000000000000000000),
    .ES_QUAL_MASK(80'h00000000000000000000),
    .ES_SDATA_MASK(80'h00000000000000000000),
    .ES_VERT_OFFSET(9'b000000000),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("TRUE"),
    .GEARBOX_MODE(3'b000),
    .IS_CPLLLOCKDETCLK_INVERTED(1'b0),
    .IS_DRPCLK_INVERTED(1'b0),
    .IS_GTGREFCLK_INVERTED(1'b0),
    .IS_RXUSRCLK2_INVERTED(1'b0),
    .IS_RXUSRCLK_INVERTED(1'b0),
    .IS_TXPHDLYTSTCLK_INVERTED(1'b0),
    .IS_TXUSRCLK2_INVERTED(1'b0),
    .IS_TXUSRCLK_INVERTED(1'b0),
    .OUTREFCLK_SEL_INV(2'b11),
    .PCS_PCIE_EN("TRUE"),
    .PCS_RSVD_ATTR(48'h0000000001CF),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h09),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PMA_RSV(32'h00018480),
    .PMA_RSV2(16'h2050),
    .PMA_RSV3(2'b00),
    .PMA_RSV4(32'h00000000),
    .RXBUFRESET_TIME(5'b00001),
    .RXBUF_ADDR_MODE("FULL"),
    .RXBUF_EIDLE_HI_CNT(4'b0100),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("TRUE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(61),
    .RXBUF_THRESH_OVRD("FALSE"),
    .RXBUF_THRESH_UNDFLW(4),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG(72'h03000023FF10200020),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b1),
    .RXCDR_LOCK_CFG(6'b010101),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDLY_CFG(16'h001F),
    .RXDLY_LCFG(9'h030),
    .RXDLY_TAP_CFG(16'h0000),
    .RXGEARBOX_EN("FALSE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_HF_CFG(14'b00000011110000),
    .RXLPM_LF_CFG(14'b00000011110000),
    .RXOOB_CFG(7'b0000110),
    .RXOUT_DIV(2),
    .RXPCSRESET_TIME(5'b00001),
    .RXPHDLY_CFG(24'h004020),
    .RXPH_CFG(24'h000000),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("PMA"),
    .RX_BIAS_CFG(12'b000000000100),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CLK25_DIV(4),
    .RX_CLKMUX_PD(1'b1),
    .RX_CM_SEL(2'b11),
    .RX_CM_TRIM(3'b010),
    .RX_DATA_WIDTH(20),
    .RX_DDI_SEL(6'b000000),
    .RX_DEBUG_CFG(12'b000000000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DFE_GAIN_CFG(23'h020FEA),
    .RX_DFE_H2_CFG(12'b000000000000),
    .RX_DFE_H3_CFG(12'b000001000000),
    .RX_DFE_H4_CFG(11'b00011110000),
    .RX_DFE_H5_CFG(11'b00011100000),
    .RX_DFE_KL_CFG(13'b0000011111110),
    .RX_DFE_KL_CFG2(32'h3290D86C),
    .RX_DFE_LPM_CFG(16'h0954),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b1),
    .RX_DFE_UT_CFG(17'b10001111000000000),
    .RX_DFE_VP_CFG(17'b00011111100000011),
    .RX_DFE_XYD_CFG(13'b0000000000000),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_INT_DATAWIDTH(0),
    .RX_OS_CFG(13'b0000010000000),
    .RX_SIG_VALID_DLY(4),
    .RX_XCLK_SEL("RXREC"),
    .SAS_MAX_COM(64),
    .SAS_MIN_COM(36),
    .SATA_BURST_SEQ_LEN(4'b1111),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SATA_MAX_BURST(8),
    .SATA_MAX_INIT(21),
    .SATA_MAX_WAKE(7),
    .SATA_MIN_BURST(4),
    .SATA_MIN_INIT(12),
    .SATA_MIN_WAKE(4),
    .SHOW_REALIGN_COMMA("FALSE"),
    .SIM_CPLLREFCLK_SEL(3'b001),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("FALSE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("1"),
    .SIM_VERSION("3.0"),
    .TERM_RCAL_CFG(5'b10000),
    .TERM_RCAL_OVRD(1'b0),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV(32'h00000000),
    .TXBUF_EN("FALSE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h001F),
    .TXDLY_LCFG(9'h030),
    .TXDLY_TAP_CFG(16'h0000),
    .TXGEARBOX_EN("FALSE"),
    .TXOUT_DIV(2),
    .TXPCSRESET_TIME(5'b00001),
    .TXPHDLY_CFG(24'h084020),
    .TXPH_CFG(16'h0780),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPMARESET_TIME(5'b00011),
    .TX_CLK25_DIV(4),
    .TX_CLKMUX_PD(1'b1),
    .TX_DATA_WIDTH(20),
    .TX_DEEMPH0(5'b10100),
    .TX_DEEMPH1(5'b01011),
    .TX_DRIVE_MODE("PIPE"),
    .TX_EIDLE_ASSERT_DELAY(3'b010),
    .TX_EIDLE_DEASSERT_DELAY(3'b100),
    .TX_INT_DATAWIDTH(0),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1001111),
    .TX_MARGIN_FULL_1(7'b1001110),
    .TX_MARGIN_FULL_2(7'b1001101),
    .TX_MARGIN_FULL_3(7'b1001100),
    .TX_MARGIN_FULL_4(7'b1000011),
    .TX_MARGIN_LOW_0(7'b1000101),
    .TX_MARGIN_LOW_1(7'b1000110),
    .TX_MARGIN_LOW_2(7'b1000011),
    .TX_MARGIN_LOW_3(7'b1000010),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_PREDRIVER_MODE(1'b0),
    .TX_QPI_STATUS_EN(1'b0),
    .TX_RXDETECT_CFG(14'h0064),
    .TX_RXDETECT_REF(3'b011),
    .TX_XCLK_SEL("TXUSR"),
    .UCODEER_CLR(1'b0)) 
    \gtx_channel.gtxe2_channel_i 
       (.CFGRESET(1'b0),
        .CLKRSVD({1'b0,1'b0,1'b0,USER_OOBCLK}),
        .CPLLFBCLKLOST(\NLW_gtx_channel.gtxe2_channel_i_CPLLFBCLKLOST_UNCONNECTED ),
        .CPLLLOCK(RATE_CPLLLOCK),
        .CPLLLOCKDETCLK(1'b0),
        .CPLLLOCKEN(1'b1),
        .CPLLPD(CPLLPD0_5),
        .CPLLREFCLKLOST(\NLW_gtx_channel.gtxe2_channel_i_CPLLREFCLKLOST_UNCONNECTED ),
        .CPLLREFCLKSEL({1'b0,1'b0,1'b1}),
        .CPLLRESET(CPLLRESET0),
        .DMONITOROUT(pipe_dmonitorout),
        .DRPADDR(DRPADDR),
        .DRPCLK(pipe_dclk_in),
        .DRPDI(DRPDI),
        .DRPDO(ext_ch_gt_drpdo),
        .DRPEN(drp_mux_en_3),
        .DRPRDY(ext_ch_gt_drprdy),
        .DRPWE(drp_mux_we_3),
        .EYESCANDATAERROR(pipe_eyescandataerror),
        .EYESCANMODE(1'b0),
        .EYESCANRESET(1'b0),
        .EYESCANTRIGGER(1'b0),
        .GTGREFCLK(1'b0),
        .GTNORTHREFCLK0(1'b0),
        .GTNORTHREFCLK1(1'b0),
        .GTREFCLK0(sys_clk),
        .GTREFCLK1(1'b0),
        .GTREFCLKMONITOR(\NLW_gtx_channel.gtxe2_channel_i_GTREFCLKMONITOR_UNCONNECTED ),
        .GTRESETSEL(1'b0),
        .GTRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GTRXRESET(DRP_GTXRESET),
        .GTSOUTHREFCLK0(1'b0),
        .GTSOUTHREFCLK1(1'b0),
        .GTTXRESET(DRP_GTXRESET),
        .GTXRXN(pci_exp_rxn),
        .GTXRXP(pci_exp_rxp),
        .GTXTXN(pci_exp_txn),
        .GTXTXP(pci_exp_txp),
        .LOOPBACK(pipe_loopback),
        .PCSRSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDIN2({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDOUT(\NLW_gtx_channel.gtxe2_channel_i_PCSRSVDOUT_UNCONNECTED [15:0]),
        .PHYSTATUS(RATE_PHYSTATUS),
        .PMARSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PMARSVDIN2({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .QPLLCLK(QPLL_QPLLOUTCLK),
        .QPLLREFCLK(QPLL_QPLLOUTREFCLK),
        .RESETOVRD(1'b0),
        .RX8B10BEN(rxchbonden_3),
        .RXBUFRESET(1'b0),
        .RXBUFSTATUS(pipe_rxbufstatus),
        .RXBYTEISALIGNED(\gtx_channel.gtxe2_channel_i_n_9 ),
        .RXBYTEREALIGN(\gtx_channel.gtxe2_channel_i_n_10 ),
        .RXCDRFREQRESET(1'b0),
        .RXCDRHOLD(1'b0),
        .RXCDRLOCK(gt_rxcdrlock_3),
        .RXCDROVRDEN(1'b0),
        .RXCDRRESET(1'b0),
        .RXCDRRESETRSV(1'b0),
        .RXCHANBONDSEQ(\NLW_gtx_channel.gtxe2_channel_i_RXCHANBONDSEQ_UNCONNECTED ),
        .RXCHANISALIGNED(pipe_rx3_chanisaligned),
        .RXCHANREALIGN(\NLW_gtx_channel.gtxe2_channel_i_RXCHANREALIGN_UNCONNECTED ),
        .RXCHARISCOMMA({\NLW_gtx_channel.gtxe2_channel_i_RXCHARISCOMMA_UNCONNECTED [7:4],\gtx_channel.gtxe2_channel_i_n_189 ,\gtx_channel.gtxe2_channel_i_n_190 ,\gtx_channel.gtxe2_channel_i_n_191 ,\gtx_channel.gtxe2_channel_i_n_192 }),
        .RXCHARISK({\NLW_gtx_channel.gtxe2_channel_i_RXCHARISK_UNCONNECTED [7:4],\gtx_channel.gtxe2_channel_i_n_197 ,\gtx_channel.gtxe2_channel_i_n_198 ,pipe_dclk_in_2}),
        .RXCHBONDEN(rxchbonden_3),
        .RXCHBONDI(RXCHBONDO),
        .RXCHBONDLEVEL({1'b0,1'b0,1'b0}),
        .RXCHBONDMASTER(1'b0),
        .RXCHBONDO({\gtx_channel.gtxe2_channel_i_n_91 ,\gtx_channel.gtxe2_channel_i_n_92 ,\gtx_channel.gtxe2_channel_i_n_93 ,\gtx_channel.gtxe2_channel_i_n_94 ,\gtx_channel.gtxe2_channel_i_n_95 }),
        .RXCHBONDSLAVE(rxchbonden_3),
        .RXCLKCORCNT(\NLW_gtx_channel.gtxe2_channel_i_RXCLKCORCNT_UNCONNECTED [1:0]),
        .RXCOMINITDET(\NLW_gtx_channel.gtxe2_channel_i_RXCOMINITDET_UNCONNECTED ),
        .RXCOMMADET(pipe_rxcommadet),
        .RXCOMMADETEN(1'b1),
        .RXCOMSASDET(\NLW_gtx_channel.gtxe2_channel_i_RXCOMSASDET_UNCONNECTED ),
        .RXCOMWAKEDET(\NLW_gtx_channel.gtxe2_channel_i_RXCOMWAKEDET_UNCONNECTED ),
        .RXDATA({\NLW_gtx_channel.gtxe2_channel_i_RXDATA_UNCONNECTED [63:32],\gtx_channel.gtxe2_channel_i_n_138 ,\gtx_channel.gtxe2_channel_i_n_139 ,\gtx_channel.gtxe2_channel_i_n_140 ,\gtx_channel.gtxe2_channel_i_n_141 ,\gtx_channel.gtxe2_channel_i_n_142 ,\gtx_channel.gtxe2_channel_i_n_143 ,\gtx_channel.gtxe2_channel_i_n_144 ,\gtx_channel.gtxe2_channel_i_n_145 ,\gtx_channel.gtxe2_channel_i_n_146 ,\gtx_channel.gtxe2_channel_i_n_147 ,\gtx_channel.gtxe2_channel_i_n_148 ,\gtx_channel.gtxe2_channel_i_n_149 ,\gtx_channel.gtxe2_channel_i_n_150 ,\gtx_channel.gtxe2_channel_i_n_151 ,\gtx_channel.gtxe2_channel_i_n_152 ,\gtx_channel.gtxe2_channel_i_n_153 ,pipe_dclk_in_1}),
        .RXDATAVALID(\NLW_gtx_channel.gtxe2_channel_i_RXDATAVALID_UNCONNECTED ),
        .RXDDIEN(1'b0),
        .RXDFEAGCHOLD(\cplllock_reg1_reg[3] ),
        .RXDFEAGCOVRDEN(1'b0),
        .RXDFECM1EN(1'b0),
        .RXDFELFHOLD(1'b0),
        .RXDFELFOVRDEN(1'b1),
        .RXDFELPMRESET(1'b0),
        .RXDFETAP2HOLD(1'b0),
        .RXDFETAP2OVRDEN(1'b0),
        .RXDFETAP3HOLD(1'b0),
        .RXDFETAP3OVRDEN(1'b0),
        .RXDFETAP4HOLD(1'b0),
        .RXDFETAP4OVRDEN(1'b0),
        .RXDFETAP5HOLD(1'b0),
        .RXDFETAP5OVRDEN(1'b0),
        .RXDFEUTHOLD(1'b0),
        .RXDFEUTOVRDEN(1'b0),
        .RXDFEVPHOLD(1'b0),
        .RXDFEVPOVRDEN(1'b0),
        .RXDFEVSEN(1'b0),
        .RXDFEXYDEN(1'b0),
        .RXDFEXYDHOLD(1'b0),
        .RXDFEXYDOVRDEN(1'b0),
        .RXDISPERR(pipe_rxdisperr),
        .RXDLYBYPASS(1'b1),
        .RXDLYEN(1'b0),
        .RXDLYOVRDEN(1'b0),
        .RXDLYSRESET(1'b0),
        .RXDLYSRESETDONE(pipe_rxdlysresetdone),
        .RXELECIDLE(pipe_dclk_in_0),
        .RXELECIDLEMODE({1'b0,1'b0}),
        .RXGEARBOXSLIP(1'b0),
        .RXHEADER(\NLW_gtx_channel.gtxe2_channel_i_RXHEADER_UNCONNECTED [2:0]),
        .RXHEADERVALID(\NLW_gtx_channel.gtxe2_channel_i_RXHEADERVALID_UNCONNECTED ),
        .RXLPMEN(rxchbonden_3),
        .RXLPMHFHOLD(1'b0),
        .RXLPMHFOVRDEN(1'b0),
        .RXLPMLFHOLD(1'b0),
        .RXLPMLFKLOVRDEN(1'b0),
        .RXMCOMMAALIGNEN(rxchbonden_3),
        .RXMONITOROUT(\NLW_gtx_channel.gtxe2_channel_i_RXMONITOROUT_UNCONNECTED [6:0]),
        .RXMONITORSEL({1'b0,1'b0}),
        .RXNOTINTABLE(pipe_rxnotintable),
        .RXOOBRESET(1'b0),
        .RXOSHOLD(1'b0),
        .RXOSOVRDEN(1'b0),
        .RXOUTCLK(pipe_rxoutclk_out),
        .RXOUTCLKFABRIC(\NLW_gtx_channel.gtxe2_channel_i_RXOUTCLKFABRIC_UNCONNECTED ),
        .RXOUTCLKPCS(\NLW_gtx_channel.gtxe2_channel_i_RXOUTCLKPCS_UNCONNECTED ),
        .RXOUTCLKSEL({1'b0,1'b0,1'b0}),
        .RXPCOMMAALIGNEN(rxchbonden_3),
        .RXPCSRESET(1'b0),
        .RXPD(\cplllock_reg1_reg[3]_1 ),
        .RXPHALIGN(1'b0),
        .RXPHALIGNDONE(PIPE_RXPHALIGNDONE),
        .RXPHALIGNEN(1'b0),
        .RXPHDLYPD(1'b0),
        .RXPHDLYRESET(1'b0),
        .RXPHMONITOR(\NLW_gtx_channel.gtxe2_channel_i_RXPHMONITOR_UNCONNECTED [4:0]),
        .RXPHOVRDEN(1'b0),
        .RXPHSLIPMONITOR(\NLW_gtx_channel.gtxe2_channel_i_RXPHSLIPMONITOR_UNCONNECTED [4:0]),
        .RXPMARESET(rate_txpmareset_3),
        .RXPOLARITY(pipe_rx3_polarity),
        .RXPRBSCNTRESET(pipe_rxprbscntreset),
        .RXPRBSERR(pipe_rxprbserr),
        .RXPRBSSEL(pipe_rxprbssel),
        .RXQPIEN(1'b0),
        .RXQPISENN(\NLW_gtx_channel.gtxe2_channel_i_RXQPISENN_UNCONNECTED ),
        .RXQPISENP(\NLW_gtx_channel.gtxe2_channel_i_RXQPISENP_UNCONNECTED ),
        .RXRATE({1'b0,1'b0,RXRATE}),
        .RXRATEDONE(RATE_RXRATEDONE),
        .RXRESETDONE(USER_RXRESETDONE),
        .RXSLIDE(1'b0),
        .RXSTARTOFSEQ(\NLW_gtx_channel.gtxe2_channel_i_RXSTARTOFSEQ_UNCONNECTED ),
        .RXSTATUS(pipe_rxstatus),
        .RXSYSCLKSEL({1'b0,RXSYSCLKSEL}),
        .RXUSERRDY(rst_userrdy),
        .RXUSRCLK(pipe_rxusrclk_in),
        .RXUSRCLK2(pipe_rxusrclk_in),
        .RXVALID(gt_rxvalid_3),
        .SETERRSTATUS(1'b0),
        .TSTIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .TSTOUT(\NLW_gtx_channel.gtxe2_channel_i_TSTOUT_UNCONNECTED [9:0]),
        .TX8B10BBYPASS({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BEN(rxchbonden_3),
        .TXBUFDIFFCTRL({1'b1,1'b0,1'b0}),
        .TXBUFSTATUS(\NLW_gtx_channel.gtxe2_channel_i_TXBUFSTATUS_UNCONNECTED [1:0]),
        .TXCHARDISPMODE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\cplllock_reg1_reg[3]_4 }),
        .TXCHARDISPVAL({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCHARISK({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\cplllock_reg1_reg[3]_5 }),
        .TXCOMFINISH(\NLW_gtx_channel.gtxe2_channel_i_TXCOMFINISH_UNCONNECTED ),
        .TXCOMINIT(1'b0),
        .TXCOMSAS(1'b0),
        .TXCOMWAKE(1'b0),
        .TXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\cplllock_reg1_reg[3]_3 }),
        .TXDEEMPH(pipe_tx_deemph_gt),
        .TXDETECTRX(pipe_tx_rcvr_det_gt),
        .TXDIFFCTRL({1'b1,1'b1,1'b0,1'b0}),
        .TXDIFFPD(1'b0),
        .TXDLYBYPASS(1'b0),
        .TXDLYEN(1'b0),
        .TXDLYHOLD(1'b0),
        .TXDLYOVRDEN(1'b0),
        .TXDLYSRESET(SYNC_TXDLYSRESET),
        .TXDLYSRESETDONE(pipe_txdlysresetdone),
        .TXDLYUPDOWN(1'b0),
        .TXELECIDLE(\cplllock_reg1_reg[3]_0 ),
        .TXGEARBOXREADY(\NLW_gtx_channel.gtxe2_channel_i_TXGEARBOXREADY_UNCONNECTED ),
        .TXHEADER({1'b0,1'b0,1'b0}),
        .TXINHIBIT(pipe_txinhibit),
        .TXMAINCURSOR(TXMAINCURSOR),
        .TXMARGIN(\cplllock_reg1_reg[3]_2 ),
        .TXOUTCLK(\gtx_channel.gtxe2_channel_i_n_37 ),
        .TXOUTCLKFABRIC(\NLW_gtx_channel.gtxe2_channel_i_TXOUTCLKFABRIC_UNCONNECTED ),
        .TXOUTCLKPCS(\NLW_gtx_channel.gtxe2_channel_i_TXOUTCLKPCS_UNCONNECTED ),
        .TXOUTCLKSEL({1'b0,1'b0,1'b0}),
        .TXPCSRESET(1'b0),
        .TXPD(\cplllock_reg1_reg[3]_1 ),
        .TXPDELECIDLEMODE(1'b0),
        .TXPHALIGN(SYNC_TXPHALIGN),
        .TXPHALIGNDONE(pipe_txphaligndone),
        .TXPHALIGNEN(1'b1),
        .TXPHDLYPD(1'b0),
        .TXPHDLYRESET(1'b0),
        .TXPHDLYTSTCLK(1'b0),
        .TXPHINIT(SYNC_TXPHINIT),
        .TXPHINITDONE(pipe_txphinitdone),
        .TXPHOVRDEN(1'b0),
        .TXPISOPD(1'b0),
        .TXPMARESET(rate_txpmareset_3),
        .TXPOLARITY(1'b0),
        .TXPOSTCURSOR(TXPOSTCURSOR),
        .TXPOSTCURSORINV(1'b0),
        .TXPRBSFORCEERR(pipe_txprbsforceerr),
        .TXPRBSSEL(pipe_txprbssel),
        .TXPRECURSOR(TXPRECURSOR),
        .TXPRECURSORINV(1'b0),
        .TXQPIBIASEN(1'b0),
        .TXQPISENN(\NLW_gtx_channel.gtxe2_channel_i_TXQPISENN_UNCONNECTED ),
        .TXQPISENP(\NLW_gtx_channel.gtxe2_channel_i_TXQPISENP_UNCONNECTED ),
        .TXQPISTRONGPDOWN(1'b0),
        .TXQPIWEAKPUP(1'b0),
        .TXRATE({1'b0,1'b0,RXRATE}),
        .TXRATEDONE(RATE_TXRATEDONE),
        .TXRESETDONE(USER_TXRESETDONE),
        .TXSEQUENCE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXSTARTSEQ(1'b0),
        .TXSWING(1'b0),
        .TXSYSCLKSEL({1'b0,RXSYSCLKSEL}),
        .TXUSERRDY(rst_userrdy),
        .TXUSRCLK(pipe_pclk_in),
        .TXUSRCLK2(pipe_pclk_in));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_gtx_cpllpd_ovrd" *) 
module pcie_7x_0_pcie_7x_0_gtx_cpllpd_ovrd
   (cpllpd_2,
    CPLLRESET0,
    gt_cpllpdrefclk,
    rate_cpllreset_3,
    RST_CPLLRESET);
  output cpllpd_2;
  output CPLLRESET0;
  input gt_cpllpdrefclk;
  input rate_cpllreset_3;
  input RST_CPLLRESET;

  wire CPLLRESET0;
  wire RST_CPLLRESET;
  wire cpllpd_2;
  wire \cpllpd_wait_reg[31]_srl32_n_1 ;
  wire \cpllpd_wait_reg[63]_srl32_n_1 ;
  wire \cpllpd_wait_reg[94]_srl31_n_0 ;
  wire \cpllreset_wait_reg[126]_srl31_n_0 ;
  wire \cpllreset_wait_reg[31]_srl32_n_1 ;
  wire \cpllreset_wait_reg[63]_srl32_n_1 ;
  wire \cpllreset_wait_reg[95]_srl32_n_1 ;
  wire cpllrst;
  wire gt_cpllpdrefclk;
  wire rate_cpllreset_3;
  wire \NLW_cpllpd_wait_reg[31]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllpd_wait_reg[63]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllpd_wait_reg[94]_srl31_Q31_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[126]_srl31_Q31_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[31]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[63]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[95]_srl32_Q_UNCONNECTED ;

  (* srl_bus_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[3].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[3].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg[31]_srl32 " *) 
  SRLC32E #(
    .INIT(32'hFFFFFFFF)) 
    \cpllpd_wait_reg[31]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(1'b0),
        .Q(\NLW_cpllpd_wait_reg[31]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllpd_wait_reg[31]_srl32_n_1 ));
  (* srl_bus_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[3].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[3].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg[63]_srl32 " *) 
  SRLC32E #(
    .INIT(32'hFFFFFFFF)) 
    \cpllpd_wait_reg[63]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllpd_wait_reg[31]_srl32_n_1 ),
        .Q(\NLW_cpllpd_wait_reg[63]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllpd_wait_reg[63]_srl32_n_1 ));
  (* srl_bus_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[3].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[3].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg[94]_srl31 " *) 
  SRLC32E #(
    .INIT(32'h7FFFFFFF)) 
    \cpllpd_wait_reg[94]_srl31 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllpd_wait_reg[63]_srl32_n_1 ),
        .Q(\cpllpd_wait_reg[94]_srl31_n_0 ),
        .Q31(\NLW_cpllpd_wait_reg[94]_srl31_Q31_UNCONNECTED ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b1)) 
    \cpllpd_wait_reg[95] 
       (.C(gt_cpllpdrefclk),
        .CE(1'b1),
        .D(\cpllpd_wait_reg[94]_srl31_n_0 ),
        .Q(cpllpd_2),
        .R(1'b0));
  (* srl_bus_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[3].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[3].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[126]_srl31 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[126]_srl31 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllreset_wait_reg[95]_srl32_n_1 ),
        .Q(\cpllreset_wait_reg[126]_srl31_n_0 ),
        .Q31(\NLW_cpllreset_wait_reg[126]_srl31_Q31_UNCONNECTED ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \cpllreset_wait_reg[127] 
       (.C(gt_cpllpdrefclk),
        .CE(1'b1),
        .D(\cpllreset_wait_reg[126]_srl31_n_0 ),
        .Q(cpllrst),
        .R(1'b0));
  (* srl_bus_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[3].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[3].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[31]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h000000FF)) 
    \cpllreset_wait_reg[31]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(1'b0),
        .Q(\NLW_cpllreset_wait_reg[31]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[31]_srl32_n_1 ));
  (* srl_bus_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[3].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[3].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[63]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[63]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllreset_wait_reg[31]_srl32_n_1 ),
        .Q(\NLW_cpllreset_wait_reg[63]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[63]_srl32_n_1 ));
  (* srl_bus_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[3].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[3].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[95]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[95]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllreset_wait_reg[63]_srl32_n_1 ),
        .Q(\NLW_cpllreset_wait_reg[95]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[95]_srl32_n_1 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \gtx_channel.gtxe2_channel_i_i_2__2 
       (.I0(cpllrst),
        .I1(rate_cpllreset_3),
        .I2(RST_CPLLRESET),
        .O(CPLLRESET0));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_gtx_cpllpd_ovrd" *) 
module pcie_7x_0_pcie_7x_0_gtx_cpllpd_ovrd_40
   (cpllpd_1,
    CPLLRESET0,
    gt_cpllpdrefclk,
    rate_cpllreset_2,
    RST_CPLLRESET);
  output cpllpd_1;
  output CPLLRESET0;
  input gt_cpllpdrefclk;
  input rate_cpllreset_2;
  input RST_CPLLRESET;

  wire CPLLRESET0;
  wire RST_CPLLRESET;
  wire cpllpd_1;
  wire \cpllpd_wait_reg[31]_srl32_n_1 ;
  wire \cpllpd_wait_reg[63]_srl32_n_1 ;
  wire \cpllpd_wait_reg[94]_srl31_n_0 ;
  wire \cpllreset_wait_reg[126]_srl31_n_0 ;
  wire \cpllreset_wait_reg[31]_srl32_n_1 ;
  wire \cpllreset_wait_reg[63]_srl32_n_1 ;
  wire \cpllreset_wait_reg[95]_srl32_n_1 ;
  wire cpllrst;
  wire gt_cpllpdrefclk;
  wire rate_cpllreset_2;
  wire \NLW_cpllpd_wait_reg[31]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllpd_wait_reg[63]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllpd_wait_reg[94]_srl31_Q31_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[126]_srl31_Q31_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[31]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[63]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[95]_srl32_Q_UNCONNECTED ;

  (* srl_bus_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[2].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[2].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg[31]_srl32 " *) 
  SRLC32E #(
    .INIT(32'hFFFFFFFF)) 
    \cpllpd_wait_reg[31]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(1'b0),
        .Q(\NLW_cpllpd_wait_reg[31]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllpd_wait_reg[31]_srl32_n_1 ));
  (* srl_bus_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[2].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[2].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg[63]_srl32 " *) 
  SRLC32E #(
    .INIT(32'hFFFFFFFF)) 
    \cpllpd_wait_reg[63]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllpd_wait_reg[31]_srl32_n_1 ),
        .Q(\NLW_cpllpd_wait_reg[63]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllpd_wait_reg[63]_srl32_n_1 ));
  (* srl_bus_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[2].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[2].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg[94]_srl31 " *) 
  SRLC32E #(
    .INIT(32'h7FFFFFFF)) 
    \cpllpd_wait_reg[94]_srl31 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllpd_wait_reg[63]_srl32_n_1 ),
        .Q(\cpllpd_wait_reg[94]_srl31_n_0 ),
        .Q31(\NLW_cpllpd_wait_reg[94]_srl31_Q31_UNCONNECTED ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b1)) 
    \cpllpd_wait_reg[95] 
       (.C(gt_cpllpdrefclk),
        .CE(1'b1),
        .D(\cpllpd_wait_reg[94]_srl31_n_0 ),
        .Q(cpllpd_1),
        .R(1'b0));
  (* srl_bus_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[2].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[2].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[126]_srl31 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[126]_srl31 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllreset_wait_reg[95]_srl32_n_1 ),
        .Q(\cpllreset_wait_reg[126]_srl31_n_0 ),
        .Q31(\NLW_cpllreset_wait_reg[126]_srl31_Q31_UNCONNECTED ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \cpllreset_wait_reg[127] 
       (.C(gt_cpllpdrefclk),
        .CE(1'b1),
        .D(\cpllreset_wait_reg[126]_srl31_n_0 ),
        .Q(cpllrst),
        .R(1'b0));
  (* srl_bus_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[2].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[2].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[31]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h000000FF)) 
    \cpllreset_wait_reg[31]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(1'b0),
        .Q(\NLW_cpllreset_wait_reg[31]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[31]_srl32_n_1 ));
  (* srl_bus_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[2].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[2].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[63]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[63]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllreset_wait_reg[31]_srl32_n_1 ),
        .Q(\NLW_cpllreset_wait_reg[63]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[63]_srl32_n_1 ));
  (* srl_bus_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[2].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[2].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[95]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[95]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllreset_wait_reg[63]_srl32_n_1 ),
        .Q(\NLW_cpllreset_wait_reg[95]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[95]_srl32_n_1 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \gtx_channel.gtxe2_channel_i_i_2__1 
       (.I0(cpllrst),
        .I1(rate_cpllreset_2),
        .I2(RST_CPLLRESET),
        .O(CPLLRESET0));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_gtx_cpllpd_ovrd" *) 
module pcie_7x_0_pcie_7x_0_gtx_cpllpd_ovrd_42
   (cpllpd_0,
    CPLLRESET0,
    gt_cpllpdrefclk,
    rate_cpllreset_1,
    RST_CPLLRESET);
  output cpllpd_0;
  output CPLLRESET0;
  input gt_cpllpdrefclk;
  input rate_cpllreset_1;
  input RST_CPLLRESET;

  wire CPLLRESET0;
  wire RST_CPLLRESET;
  wire cpllpd_0;
  wire \cpllpd_wait_reg[31]_srl32_n_1 ;
  wire \cpllpd_wait_reg[63]_srl32_n_1 ;
  wire \cpllpd_wait_reg[94]_srl31_n_0 ;
  wire \cpllreset_wait_reg[126]_srl31_n_0 ;
  wire \cpllreset_wait_reg[31]_srl32_n_1 ;
  wire \cpllreset_wait_reg[63]_srl32_n_1 ;
  wire \cpllreset_wait_reg[95]_srl32_n_1 ;
  wire cpllrst;
  wire gt_cpllpdrefclk;
  wire rate_cpllreset_1;
  wire \NLW_cpllpd_wait_reg[31]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllpd_wait_reg[63]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllpd_wait_reg[94]_srl31_Q31_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[126]_srl31_Q31_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[31]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[63]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[95]_srl32_Q_UNCONNECTED ;

  (* srl_bus_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[1].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[1].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg[31]_srl32 " *) 
  SRLC32E #(
    .INIT(32'hFFFFFFFF)) 
    \cpllpd_wait_reg[31]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(1'b0),
        .Q(\NLW_cpllpd_wait_reg[31]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllpd_wait_reg[31]_srl32_n_1 ));
  (* srl_bus_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[1].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[1].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg[63]_srl32 " *) 
  SRLC32E #(
    .INIT(32'hFFFFFFFF)) 
    \cpllpd_wait_reg[63]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllpd_wait_reg[31]_srl32_n_1 ),
        .Q(\NLW_cpllpd_wait_reg[63]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllpd_wait_reg[63]_srl32_n_1 ));
  (* srl_bus_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[1].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[1].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg[94]_srl31 " *) 
  SRLC32E #(
    .INIT(32'h7FFFFFFF)) 
    \cpllpd_wait_reg[94]_srl31 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllpd_wait_reg[63]_srl32_n_1 ),
        .Q(\cpllpd_wait_reg[94]_srl31_n_0 ),
        .Q31(\NLW_cpllpd_wait_reg[94]_srl31_Q31_UNCONNECTED ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b1)) 
    \cpllpd_wait_reg[95] 
       (.C(gt_cpllpdrefclk),
        .CE(1'b1),
        .D(\cpllpd_wait_reg[94]_srl31_n_0 ),
        .Q(cpllpd_0),
        .R(1'b0));
  (* srl_bus_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[1].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[1].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[126]_srl31 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[126]_srl31 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllreset_wait_reg[95]_srl32_n_1 ),
        .Q(\cpllreset_wait_reg[126]_srl31_n_0 ),
        .Q31(\NLW_cpllreset_wait_reg[126]_srl31_Q31_UNCONNECTED ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \cpllreset_wait_reg[127] 
       (.C(gt_cpllpdrefclk),
        .CE(1'b1),
        .D(\cpllreset_wait_reg[126]_srl31_n_0 ),
        .Q(cpllrst),
        .R(1'b0));
  (* srl_bus_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[1].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[1].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[31]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h000000FF)) 
    \cpllreset_wait_reg[31]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(1'b0),
        .Q(\NLW_cpllreset_wait_reg[31]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[31]_srl32_n_1 ));
  (* srl_bus_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[1].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[1].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[63]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[63]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllreset_wait_reg[31]_srl32_n_1 ),
        .Q(\NLW_cpllreset_wait_reg[63]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[63]_srl32_n_1 ));
  (* srl_bus_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[1].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[1].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[95]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[95]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllreset_wait_reg[63]_srl32_n_1 ),
        .Q(\NLW_cpllreset_wait_reg[95]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[95]_srl32_n_1 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \gtx_channel.gtxe2_channel_i_i_2__0 
       (.I0(cpllrst),
        .I1(rate_cpllreset_1),
        .I2(RST_CPLLRESET),
        .O(CPLLRESET0));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_gtx_cpllpd_ovrd" *) 
module pcie_7x_0_pcie_7x_0_gtx_cpllpd_ovrd_44
   (cpllpd,
    CPLLRESET0,
    gt_cpllpdrefclk,
    rate_cpllreset_0,
    RST_CPLLRESET);
  output cpllpd;
  output CPLLRESET0;
  input gt_cpllpdrefclk;
  input rate_cpllreset_0;
  input RST_CPLLRESET;

  wire CPLLRESET0;
  wire RST_CPLLRESET;
  wire cpllpd;
  wire \cpllpd_wait_reg[31]_srl32_n_1 ;
  wire \cpllpd_wait_reg[63]_srl32_n_1 ;
  wire \cpllpd_wait_reg[94]_srl31_n_0 ;
  wire \cpllreset_wait_reg[126]_srl31_n_0 ;
  wire \cpllreset_wait_reg[31]_srl32_n_1 ;
  wire \cpllreset_wait_reg[63]_srl32_n_1 ;
  wire \cpllreset_wait_reg[95]_srl32_n_1 ;
  wire cpllrst;
  wire gt_cpllpdrefclk;
  wire rate_cpllreset_0;
  wire \NLW_cpllpd_wait_reg[31]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllpd_wait_reg[63]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllpd_wait_reg[94]_srl31_Q31_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[126]_srl31_Q31_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[31]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[63]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[95]_srl32_Q_UNCONNECTED ;

  (* srl_bus_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[0].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[0].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg[31]_srl32 " *) 
  SRLC32E #(
    .INIT(32'hFFFFFFFF)) 
    \cpllpd_wait_reg[31]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(1'b0),
        .Q(\NLW_cpllpd_wait_reg[31]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllpd_wait_reg[31]_srl32_n_1 ));
  (* srl_bus_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[0].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[0].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg[63]_srl32 " *) 
  SRLC32E #(
    .INIT(32'hFFFFFFFF)) 
    \cpllpd_wait_reg[63]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllpd_wait_reg[31]_srl32_n_1 ),
        .Q(\NLW_cpllpd_wait_reg[63]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllpd_wait_reg[63]_srl32_n_1 ));
  (* srl_bus_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[0].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[0].gt_wrapper_i/cpllPDInst/cpllpd_wait_reg[94]_srl31 " *) 
  SRLC32E #(
    .INIT(32'h7FFFFFFF)) 
    \cpllpd_wait_reg[94]_srl31 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllpd_wait_reg[63]_srl32_n_1 ),
        .Q(\cpllpd_wait_reg[94]_srl31_n_0 ),
        .Q31(\NLW_cpllpd_wait_reg[94]_srl31_Q31_UNCONNECTED ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b1)) 
    \cpllpd_wait_reg[95] 
       (.C(gt_cpllpdrefclk),
        .CE(1'b1),
        .D(\cpllpd_wait_reg[94]_srl31_n_0 ),
        .Q(cpllpd),
        .R(1'b0));
  (* srl_bus_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[0].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[0].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[126]_srl31 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[126]_srl31 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllreset_wait_reg[95]_srl32_n_1 ),
        .Q(\cpllreset_wait_reg[126]_srl31_n_0 ),
        .Q31(\NLW_cpllreset_wait_reg[126]_srl31_Q31_UNCONNECTED ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \cpllreset_wait_reg[127] 
       (.C(gt_cpllpdrefclk),
        .CE(1'b1),
        .D(\cpllreset_wait_reg[126]_srl31_n_0 ),
        .Q(cpllrst),
        .R(1'b0));
  (* srl_bus_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[0].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[0].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[31]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h000000FF)) 
    \cpllreset_wait_reg[31]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(1'b0),
        .Q(\NLW_cpllreset_wait_reg[31]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[31]_srl32_n_1 ));
  (* srl_bus_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[0].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[0].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[63]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[63]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllreset_wait_reg[31]_srl32_n_1 ),
        .Q(\NLW_cpllreset_wait_reg[63]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[63]_srl32_n_1 ));
  (* srl_bus_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[0].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\inst/gt_top_i/pipe_wrapper_i/pipe_lane[0].gt_wrapper_i/cpllPDInst/cpllreset_wait_reg[95]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[95]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllreset_wait_reg[63]_srl32_n_1 ),
        .Q(\NLW_cpllreset_wait_reg[95]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[95]_srl32_n_1 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \gtx_channel.gtxe2_channel_i_i_2 
       (.I0(cpllrst),
        .I1(rate_cpllreset_0),
        .I2(RST_CPLLRESET),
        .O(CPLLRESET0));
endmodule

(* CFG_CTL_IF = "TRUE" *) (* CFG_FC_IF = "TRUE" *) (* CFG_MGMT_IF = "TRUE" *) 
(* CFG_STATUS_IF = "TRUE" *) (* C_DATA_WIDTH = "128" *) (* DowngradeIPIdentifiedWarnings = "yes" *) 
(* ENABLE_JTAG_DBG = "FALSE" *) (* ERR_REPORTING_IF = "TRUE" *) (* EXT_CH_GT_DRP = "FALSE" *) 
(* EXT_PIPE_INTERFACE = "FALSE" *) (* EXT_STARTUP_PRIMITIVE = "FALSE" *) (* KEEP_WIDTH = "16" *) 
(* LINK_CAP_MAX_LINK_WIDTH = "4" *) (* ORIG_REF_NAME = "pcie_7x_0_pcie2_top" *) (* PCIE_ASYNC_EN = "FALSE" *) 
(* PCIE_EXT_CLK = "TRUE" *) (* PCIE_EXT_GT_COMMON = "FALSE" *) (* PIPE_SIM = "FALSE" *) 
(* PL_INTERFACE = "TRUE" *) (* RCV_MSG_IF = "TRUE" *) (* SHARED_LOGIC_IN_CORE = "FALSE" *) 
(* TRANSCEIVER_CTRL_STATUS_PORTS = "FALSE" *) (* bar_0 = "FFFFC000" *) (* bar_1 = "00000000" *) 
(* bar_2 = "00000000" *) (* bar_3 = "00000000" *) (* bar_4 = "00000000" *) 
(* bar_5 = "00000000" *) (* bram_lat = "0" *) (* c_aer_base_ptr = "000" *) 
(* c_aer_cap_ecrc_check_capable = "FALSE" *) (* c_aer_cap_ecrc_gen_capable = "FALSE" *) (* c_aer_cap_multiheader = "FALSE" *) 
(* c_aer_cap_nextptr = "000" *) (* c_aer_cap_on = "FALSE" *) (* c_aer_cap_optional_err_support = "000000" *) 
(* c_aer_cap_permit_rooterr_update = "FALSE" *) (* c_buf_opt_bma = "TRUE" *) (* c_component_name = "pcie_7x_0" *) 
(* c_cpl_inf = "TRUE" *) (* c_cpl_infinite = "TRUE" *) (* c_cpl_timeout_disable_sup = "FALSE" *) 
(* c_cpl_timeout_range = "0010" *) (* c_cpl_timeout_ranges_sup = "2" *) (* c_d1_support = "FALSE" *) 
(* c_d2_support = "FALSE" *) (* c_de_emph = "FALSE" *) (* c_dev_cap2_ari_forwarding_supported = "FALSE" *) 
(* c_dev_cap2_atomicop32_completer_supported = "FALSE" *) (* c_dev_cap2_atomicop64_completer_supported = "FALSE" *) (* c_dev_cap2_atomicop_routing_supported = "FALSE" *) 
(* c_dev_cap2_cas128_completer_supported = "FALSE" *) (* c_dev_cap2_tph_completer_supported = "00" *) (* c_dev_control_ext_tag_default = "FALSE" *) 
(* c_dev_port_type = "0" *) (* c_dis_lane_reverse = "TRUE" *) (* c_disable_rx_poisoned_resp = "FALSE" *) 
(* c_disable_scrambling = "FALSE" *) (* c_disable_tx_aspm_l0s = "FALSE" *) (* c_dll_lnk_actv_cap = "FALSE" *) 
(* c_dsi_bool = "FALSE" *) (* c_dsn_base_ptr = "100" *) (* c_dsn_cap_enabled = "TRUE" *) 
(* c_dsn_next_ptr = "000" *) (* c_enable_msg_route = "00000000000" *) (* c_ep_l0s_accpt_lat = "0" *) 
(* c_ep_l1_accpt_lat = "7" *) (* c_ext_pci_cfg_space_addr = "3FF" *) (* c_external_clocking = "TRUE" *) 
(* c_fc_cpld = "461" *) (* c_fc_cplh = "36" *) (* c_fc_npd = "24" *) 
(* c_fc_nph = "12" *) (* c_fc_pd = "437" *) (* c_fc_ph = "32" *) 
(* c_gen1 = "1'b1" *) (* c_header_type = "00" *) (* c_hw_auton_spd_disable = "FALSE" *) 
(* c_int_width = "64" *) (* c_last_cfg_dw = "10C" *) (* c_link_cap_aspm_optionality = "FALSE" *) 
(* c_ll_ack_timeout = "0000" *) (* c_ll_ack_timeout_enable = "FALSE" *) (* c_ll_ack_timeout_function = "0" *) 
(* c_ll_replay_timeout = "0000" *) (* c_ll_replay_timeout_enable = "FALSE" *) (* c_ll_replay_timeout_func = "1" *) 
(* c_lnk_bndwdt_notif = "FALSE" *) (* c_msi = "0" *) (* c_msi_64b_addr = "TRUE" *) 
(* c_msi_cap_on = "FALSE" *) (* c_msi_mult_msg_extn = "0" *) (* c_msi_per_vctr_mask_cap = "FALSE" *) 
(* c_msix_cap_on = "TRUE" *) (* c_msix_next_ptr = "00" *) (* c_msix_pba_bir = "0" *) 
(* c_msix_pba_offset = "1C00" *) (* c_msix_table_bir = "0" *) (* c_msix_table_offset = "1800" *) 
(* c_msix_table_size = "003" *) (* c_pci_cfg_space_addr = "2A" *) (* c_pcie_blk_locn = "0" *) 
(* c_pcie_cap_next_ptr = "9C" *) (* c_pcie_cap_slot_implemented = "FALSE" *) (* c_pcie_dbg_ports = "TRUE" *) 
(* c_pcie_fast_config = "1" *) (* c_perf_level_high = "TRUE" *) (* c_phantom_functions = "0" *) 
(* c_pm_cap_next_ptr = "60" *) (* c_pme_support = "0F" *) (* c_rbar_base_ptr = "000" *) 
(* c_rbar_cap_control_encodedbar0 = "00" *) (* c_rbar_cap_control_encodedbar1 = "00" *) (* c_rbar_cap_control_encodedbar2 = "00" *) 
(* c_rbar_cap_control_encodedbar3 = "00" *) (* c_rbar_cap_control_encodedbar4 = "00" *) (* c_rbar_cap_control_encodedbar5 = "00" *) 
(* c_rbar_cap_index0 = "0" *) (* c_rbar_cap_index1 = "0" *) (* c_rbar_cap_index2 = "0" *) 
(* c_rbar_cap_index3 = "0" *) (* c_rbar_cap_index4 = "0" *) (* c_rbar_cap_index5 = "0" *) 
(* c_rbar_cap_nextptr = "000" *) (* c_rbar_cap_on = "FALSE" *) (* c_rbar_cap_sup0 = "00001" *) 
(* c_rbar_cap_sup1 = "00001" *) (* c_rbar_cap_sup2 = "00001" *) (* c_rbar_cap_sup3 = "00001" *) 
(* c_rbar_cap_sup4 = "00001" *) (* c_rbar_cap_sup5 = "00001" *) (* c_rbar_num = "0" *) 
(* c_rcb = "0" *) (* c_recrc_check = "0" *) (* c_recrc_check_trim = "FALSE" *) 
(* c_rev_gt_order = "FALSE" *) (* c_root_cap_crs = "FALSE" *) (* c_rx_raddr_lat = "0" *) 
(* c_rx_ram_limit = "7FF" *) (* c_rx_rdata_lat = "2" *) (* c_rx_write_lat = "0" *) 
(* c_silicon_rev = "2" *) (* c_slot_cap_attn_butn = "FALSE" *) (* c_slot_cap_attn_ind = "FALSE" *) 
(* c_slot_cap_elec_interlock = "FALSE" *) (* c_slot_cap_hotplug_cap = "FALSE" *) (* c_slot_cap_hotplug_surprise = "FALSE" *) 
(* c_slot_cap_mrl = "FALSE" *) (* c_slot_cap_no_cmd_comp_sup = "FALSE" *) (* c_slot_cap_physical_slot_num = "0" *) 
(* c_slot_cap_pwr_ctrl = "FALSE" *) (* c_slot_cap_pwr_ind = "FALSE" *) (* c_slot_cap_pwr_limit_scale = "0" *) 
(* c_slot_cap_pwr_limit_value = "0" *) (* c_surprise_dn_err_cap = "FALSE" *) (* c_trgt_lnk_spd = "2" *) 
(* c_trn_np_fc = "TRUE" *) (* c_tx_last_tlp = "29" *) (* c_tx_raddr_lat = "0" *) 
(* c_tx_rdata_lat = "2" *) (* c_tx_write_lat = "0" *) (* c_upconfig_capable = "TRUE" *) 
(* c_upstream_facing = "TRUE" *) (* c_ur_atomic = "FALSE" *) (* c_ur_inv_req = "TRUE" *) 
(* c_ur_prs_response = "TRUE" *) (* c_vc_base_ptr = "000" *) (* c_vc_cap_enabled = "FALSE" *) 
(* c_vc_cap_reject_snoop = "FALSE" *) (* c_vc_next_ptr = "000" *) (* c_vsec_base_ptr = "000" *) 
(* c_vsec_cap_enabled = "FALSE" *) (* c_vsec_next_ptr = "000" *) (* c_xlnx_ref_board = "NONE" *) 
(* cap_ver = "2" *) (* cardbus_cis_ptr = "00000000" *) (* class_code = "020000" *) 
(* cmps = "2" *) (* con_scl_fctr_d0_state = "0" *) (* con_scl_fctr_d1_state = "0" *) 
(* con_scl_fctr_d2_state = "0" *) (* con_scl_fctr_d3_state = "0" *) (* cost_table = "1" *) 
(* d1_sup = "0" *) (* d2_sup = "0" *) (* dev_id = "1041" *) 
(* dev_port_type = "0000" *) (* dis_scl_fctr_d0_state = "0" *) (* dis_scl_fctr_d1_state = "0" *) 
(* dis_scl_fctr_d2_state = "0" *) (* dis_scl_fctr_d3_state = "0" *) (* dsi = "0" *) 
(* ep_l0s_accpt_lat = "000" *) (* ep_l1_accpt_lat = "111" *) (* ext_tag_fld_sup = "FALSE" *) 
(* int_pin = "0" *) (* intx = "FALSE" *) (* max_lnk_spd = "2" *) 
(* max_lnk_wdt = "000100" *) (* mps = "010" *) (* no_soft_rst = "TRUE" *) 
(* pci_exp_int_freq = "2" *) (* pci_exp_ref_freq = "0" *) (* phantm_func_sup = "00" *) 
(* pme_sup = "0F" *) (* pwr_con_d0_state = "00" *) (* pwr_con_d1_state = "00" *) 
(* pwr_con_d2_state = "00" *) (* pwr_con_d3_state = "00" *) (* pwr_dis_d0_state = "00" *) 
(* pwr_dis_d1_state = "00" *) (* pwr_dis_d2_state = "00" *) (* pwr_dis_d3_state = "00" *) 
(* rev_id = "00" *) (* slot_clk = "TRUE" *) (* subsys_id = "0007" *) 
(* subsys_ven_id = "10EE" *) (* ven_id = "1AF4" *) (* xrom_bar = "00000000" *) 
module pcie_7x_0_pcie_7x_0_pcie2_top
   (pci_exp_txn,
    pci_exp_txp,
    pci_exp_rxn,
    pci_exp_rxp,
    int_pclk_out_slave,
    int_pipe_rxusrclk_out,
    int_rxoutclk_out,
    int_dclk_out,
    int_userclk1_out,
    int_userclk2_out,
    int_oobclk_out,
    int_mmcm_lock_out,
    int_qplllock_out,
    int_qplloutclk_out,
    int_qplloutrefclk_out,
    int_pclk_sel_slave,
    pipe_pclk_in,
    pipe_rxusrclk_in,
    pipe_rxoutclk_in,
    pipe_dclk_in,
    pipe_userclk1_in,
    pipe_userclk2_in,
    pipe_oobclk_in,
    pipe_mmcm_lock_in,
    pipe_txoutclk_out,
    pipe_rxoutclk_out,
    pipe_pclk_sel_out,
    pipe_gen3_out,
    qpll_drp_crscode,
    qpll_drp_fsm,
    qpll_drp_done,
    qpll_drp_reset,
    qpll_qplllock,
    qpll_qplloutclk,
    qpll_qplloutrefclk,
    qpll_qplld,
    qpll_qpllreset,
    qpll_drp_clk,
    qpll_drp_rst_n,
    qpll_drp_ovrd,
    qpll_drp_gen3,
    qpll_drp_start,
    user_clk_out,
    user_reset_out,
    user_lnk_up,
    user_app_rdy,
    tx_buf_av,
    tx_err_drop,
    tx_cfg_req,
    s_axis_tx_tdata,
    s_axis_tx_tvalid,
    s_axis_tx_tready,
    s_axis_tx_tkeep,
    s_axis_tx_tlast,
    s_axis_tx_tuser,
    tx_cfg_gnt,
    m_axis_rx_tdata,
    m_axis_rx_tvalid,
    m_axis_rx_tready,
    m_axis_rx_tkeep,
    m_axis_rx_tlast,
    m_axis_rx_tuser,
    rx_np_ok,
    rx_np_req,
    fc_cpld,
    fc_cplh,
    fc_npd,
    fc_nph,
    fc_pd,
    fc_ph,
    fc_sel,
    cfg_mgmt_do,
    cfg_mgmt_rd_wr_done,
    cfg_status,
    cfg_command,
    cfg_dstatus,
    cfg_dcommand,
    cfg_lstatus,
    cfg_lcommand,
    cfg_dcommand2,
    cfg_pcie_link_state,
    cfg_pmcsr_pme_en,
    cfg_pmcsr_powerstate,
    cfg_pmcsr_pme_status,
    cfg_received_func_lvl_rst,
    cfg_mgmt_di,
    cfg_mgmt_byte_en,
    cfg_mgmt_dwaddr,
    cfg_mgmt_wr_en,
    cfg_mgmt_rd_en,
    cfg_mgmt_wr_readonly,
    cfg_err_ecrc,
    cfg_err_ur,
    cfg_err_cpl_timeout,
    cfg_err_cpl_unexpect,
    cfg_err_cpl_abort,
    cfg_err_posted,
    cfg_err_cor,
    cfg_err_atomic_egress_blocked,
    cfg_err_internal_cor,
    cfg_err_malformed,
    cfg_err_mc_blocked,
    cfg_err_poisoned,
    cfg_err_norecovery,
    cfg_err_tlp_cpl_header,
    cfg_err_cpl_rdy,
    cfg_err_locked,
    cfg_err_acs,
    cfg_err_internal_uncor,
    cfg_trn_pending,
    cfg_pm_halt_aspm_l0s,
    cfg_pm_halt_aspm_l1,
    cfg_pm_force_state_en,
    cfg_pm_force_state,
    cfg_dsn,
    cfg_msg_received,
    cfg_msg_data,
    cfg_interrupt,
    cfg_interrupt_rdy,
    cfg_interrupt_assert,
    cfg_interrupt_di,
    cfg_interrupt_do,
    cfg_interrupt_mmenable,
    cfg_interrupt_msienable,
    cfg_interrupt_msixenable,
    cfg_interrupt_msixfm,
    cfg_interrupt_stat,
    cfg_pciecap_interrupt_msgnum,
    cfg_to_turnoff,
    cfg_turnoff_ok,
    cfg_bus_number,
    cfg_device_number,
    cfg_function_number,
    cfg_pm_wake,
    cfg_msg_received_pm_as_nak,
    cfg_msg_received_setslotpowerlimit,
    cfg_pm_send_pme_to,
    cfg_ds_bus_number,
    cfg_ds_device_number,
    cfg_ds_function_number,
    cfg_mgmt_wr_rw1c_as_rw,
    cfg_bridge_serr_en,
    cfg_slot_control_electromech_il_ctl_pulse,
    cfg_root_control_syserr_corr_err_en,
    cfg_root_control_syserr_non_fatal_err_en,
    cfg_root_control_syserr_fatal_err_en,
    cfg_root_control_pme_int_en,
    cfg_aer_rooterr_corr_err_reporting_en,
    cfg_aer_rooterr_non_fatal_err_reporting_en,
    cfg_aer_rooterr_fatal_err_reporting_en,
    cfg_aer_rooterr_corr_err_received,
    cfg_aer_rooterr_non_fatal_err_received,
    cfg_aer_rooterr_fatal_err_received,
    cfg_msg_received_err_cor,
    cfg_msg_received_err_non_fatal,
    cfg_msg_received_err_fatal,
    cfg_msg_received_pm_pme,
    cfg_msg_received_pme_to_ack,
    cfg_msg_received_assert_int_a,
    cfg_msg_received_assert_int_b,
    cfg_msg_received_assert_int_c,
    cfg_msg_received_assert_int_d,
    cfg_msg_received_deassert_int_a,
    cfg_msg_received_deassert_int_b,
    cfg_msg_received_deassert_int_c,
    cfg_msg_received_deassert_int_d,
    pl_directed_link_change,
    pl_directed_link_width,
    pl_directed_link_speed,
    pl_directed_link_auton,
    pl_upstream_prefer_deemph,
    pl_sel_lnk_rate,
    pl_sel_lnk_width,
    pl_ltssm_state,
    pl_lane_reversal_mode,
    pl_phy_lnk_up,
    pl_tx_pm_state,
    pl_rx_pm_state,
    pl_link_upcfg_cap,
    pl_link_gen2_cap,
    pl_link_partner_gen2_supported,
    pl_initial_link_width,
    pl_directed_change_done,
    pl_received_hot_rst,
    pl_transmit_hot_rst,
    pl_downstream_deemph_source,
    cfg_err_aer_headerlog,
    cfg_aer_interrupt_msgnum,
    cfg_err_aer_headerlog_set,
    cfg_aer_ecrc_check_en,
    cfg_aer_ecrc_gen_en,
    cfg_vc_tcvc_map,
    pcie_drp_clk,
    pcie_drp_en,
    pcie_drp_we,
    pcie_drp_addr,
    pcie_drp_di,
    pcie_drp_rdy,
    pcie_drp_do,
    startup_eos_in,
    startup_cfgclk,
    startup_cfgmclk,
    startup_eos,
    startup_preq,
    startup_clk,
    startup_gsr,
    startup_gts,
    startup_keyclearb,
    startup_pack,
    startup_usrcclko,
    startup_usrcclkts,
    startup_usrdoneo,
    startup_usrdonets,
    icap_clk,
    icap_csib,
    icap_rdwrb,
    icap_i,
    icap_o,
    pipe_txprbssel,
    pipe_rxprbssel,
    pipe_txprbsforceerr,
    pipe_rxprbscntreset,
    pipe_loopback,
    pipe_rxprbserr,
    pipe_txinhibit,
    pipe_rst_fsm,
    pipe_qrst_fsm,
    pipe_rate_fsm,
    pipe_sync_fsm_tx,
    pipe_sync_fsm_rx,
    pipe_drp_fsm,
    pipe_rst_idle,
    pipe_qrst_idle,
    pipe_rate_idle,
    pipe_eyescandataerror,
    pipe_rxstatus,
    pipe_dmonitorout,
    pipe_cpll_lock,
    pipe_qpll_lock,
    pipe_rxpmaresetdone,
    pipe_rxbufstatus,
    pipe_txphaligndone,
    pipe_txphinitdone,
    pipe_txdlysresetdone,
    pipe_rxphaligndone,
    pipe_rxdlysresetdone,
    pipe_rxsyncdone,
    pipe_rxdisperr,
    pipe_rxnotintable,
    pipe_rxcommadet,
    gt_ch_drp_rdy,
    pipe_debug_0,
    pipe_debug_1,
    pipe_debug_2,
    pipe_debug_3,
    pipe_debug_4,
    pipe_debug_5,
    pipe_debug_6,
    pipe_debug_7,
    pipe_debug_8,
    pipe_debug_9,
    pipe_debug,
    ext_ch_gt_drpclk,
    ext_ch_gt_drpaddr,
    ext_ch_gt_drpen,
    ext_ch_gt_drpdi,
    ext_ch_gt_drpwe,
    ext_ch_gt_drpdo,
    ext_ch_gt_drprdy,
    common_commands_in,
    pipe_rx_0_sigs,
    pipe_rx_1_sigs,
    pipe_rx_2_sigs,
    pipe_rx_3_sigs,
    pipe_rx_4_sigs,
    pipe_rx_5_sigs,
    pipe_rx_6_sigs,
    pipe_rx_7_sigs,
    common_commands_out,
    pipe_tx_0_sigs,
    pipe_tx_1_sigs,
    pipe_tx_2_sigs,
    pipe_tx_3_sigs,
    pipe_tx_4_sigs,
    pipe_tx_5_sigs,
    pipe_tx_6_sigs,
    pipe_tx_7_sigs,
    pipe_mmcm_rst_n,
    sys_clk,
    sys_rst_n);
  output [3:0]pci_exp_txn;
  output [3:0]pci_exp_txp;
  input [3:0]pci_exp_rxn;
  input [3:0]pci_exp_rxp;
  output int_pclk_out_slave;
  output int_pipe_rxusrclk_out;
  output [3:0]int_rxoutclk_out;
  output int_dclk_out;
  output int_userclk1_out;
  output int_userclk2_out;
  output int_oobclk_out;
  output int_mmcm_lock_out;
  output [1:0]int_qplllock_out;
  output [1:0]int_qplloutclk_out;
  output [1:0]int_qplloutrefclk_out;
  input [3:0]int_pclk_sel_slave;
  input pipe_pclk_in;
  input pipe_rxusrclk_in;
  input [3:0]pipe_rxoutclk_in;
  input pipe_dclk_in;
  input pipe_userclk1_in;
  input pipe_userclk2_in;
  input pipe_oobclk_in;
  input pipe_mmcm_lock_in;
  output pipe_txoutclk_out;
  output [3:0]pipe_rxoutclk_out;
  output [3:0]pipe_pclk_sel_out;
  output pipe_gen3_out;
  input [11:0]qpll_drp_crscode;
  input [17:0]qpll_drp_fsm;
  input [1:0]qpll_drp_done;
  input [1:0]qpll_drp_reset;
  input [1:0]qpll_qplllock;
  input [1:0]qpll_qplloutclk;
  input [1:0]qpll_qplloutrefclk;
  output qpll_qplld;
  output [1:0]qpll_qpllreset;
  output qpll_drp_clk;
  output qpll_drp_rst_n;
  output qpll_drp_ovrd;
  output qpll_drp_gen3;
  output qpll_drp_start;
  output user_clk_out;
  output user_reset_out;
  output user_lnk_up;
  output user_app_rdy;
  output [5:0]tx_buf_av;
  output tx_err_drop;
  output tx_cfg_req;
  input [127:0]s_axis_tx_tdata;
  input s_axis_tx_tvalid;
  output s_axis_tx_tready;
  input [15:0]s_axis_tx_tkeep;
  input s_axis_tx_tlast;
  input [3:0]s_axis_tx_tuser;
  input tx_cfg_gnt;
  output [127:0]m_axis_rx_tdata;
  output m_axis_rx_tvalid;
  input m_axis_rx_tready;
  output [15:0]m_axis_rx_tkeep;
  output m_axis_rx_tlast;
  output [21:0]m_axis_rx_tuser;
  input rx_np_ok;
  input rx_np_req;
  output [11:0]fc_cpld;
  output [7:0]fc_cplh;
  output [11:0]fc_npd;
  output [7:0]fc_nph;
  output [11:0]fc_pd;
  output [7:0]fc_ph;
  input [2:0]fc_sel;
  output [31:0]cfg_mgmt_do;
  output cfg_mgmt_rd_wr_done;
  output [15:0]cfg_status;
  output [15:0]cfg_command;
  output [15:0]cfg_dstatus;
  output [15:0]cfg_dcommand;
  output [15:0]cfg_lstatus;
  output [15:0]cfg_lcommand;
  output [15:0]cfg_dcommand2;
  output [2:0]cfg_pcie_link_state;
  output cfg_pmcsr_pme_en;
  output [1:0]cfg_pmcsr_powerstate;
  output cfg_pmcsr_pme_status;
  output cfg_received_func_lvl_rst;
  input [31:0]cfg_mgmt_di;
  input [3:0]cfg_mgmt_byte_en;
  input [9:0]cfg_mgmt_dwaddr;
  input cfg_mgmt_wr_en;
  input cfg_mgmt_rd_en;
  input cfg_mgmt_wr_readonly;
  input cfg_err_ecrc;
  input cfg_err_ur;
  input cfg_err_cpl_timeout;
  input cfg_err_cpl_unexpect;
  input cfg_err_cpl_abort;
  input cfg_err_posted;
  input cfg_err_cor;
  input cfg_err_atomic_egress_blocked;
  input cfg_err_internal_cor;
  input cfg_err_malformed;
  input cfg_err_mc_blocked;
  input cfg_err_poisoned;
  input cfg_err_norecovery;
  input [47:0]cfg_err_tlp_cpl_header;
  output cfg_err_cpl_rdy;
  input cfg_err_locked;
  input cfg_err_acs;
  input cfg_err_internal_uncor;
  input cfg_trn_pending;
  input cfg_pm_halt_aspm_l0s;
  input cfg_pm_halt_aspm_l1;
  input cfg_pm_force_state_en;
  input [1:0]cfg_pm_force_state;
  input [63:0]cfg_dsn;
  output cfg_msg_received;
  output [15:0]cfg_msg_data;
  input cfg_interrupt;
  output cfg_interrupt_rdy;
  input cfg_interrupt_assert;
  input [7:0]cfg_interrupt_di;
  output [7:0]cfg_interrupt_do;
  output [2:0]cfg_interrupt_mmenable;
  output cfg_interrupt_msienable;
  output cfg_interrupt_msixenable;
  output cfg_interrupt_msixfm;
  input cfg_interrupt_stat;
  input [4:0]cfg_pciecap_interrupt_msgnum;
  output cfg_to_turnoff;
  input cfg_turnoff_ok;
  output [7:0]cfg_bus_number;
  output [4:0]cfg_device_number;
  output [2:0]cfg_function_number;
  input cfg_pm_wake;
  output cfg_msg_received_pm_as_nak;
  output cfg_msg_received_setslotpowerlimit;
  input cfg_pm_send_pme_to;
  input [7:0]cfg_ds_bus_number;
  input [4:0]cfg_ds_device_number;
  input [2:0]cfg_ds_function_number;
  input cfg_mgmt_wr_rw1c_as_rw;
  output cfg_bridge_serr_en;
  output cfg_slot_control_electromech_il_ctl_pulse;
  output cfg_root_control_syserr_corr_err_en;
  output cfg_root_control_syserr_non_fatal_err_en;
  output cfg_root_control_syserr_fatal_err_en;
  output cfg_root_control_pme_int_en;
  output cfg_aer_rooterr_corr_err_reporting_en;
  output cfg_aer_rooterr_non_fatal_err_reporting_en;
  output cfg_aer_rooterr_fatal_err_reporting_en;
  output cfg_aer_rooterr_corr_err_received;
  output cfg_aer_rooterr_non_fatal_err_received;
  output cfg_aer_rooterr_fatal_err_received;
  output cfg_msg_received_err_cor;
  output cfg_msg_received_err_non_fatal;
  output cfg_msg_received_err_fatal;
  output cfg_msg_received_pm_pme;
  output cfg_msg_received_pme_to_ack;
  output cfg_msg_received_assert_int_a;
  output cfg_msg_received_assert_int_b;
  output cfg_msg_received_assert_int_c;
  output cfg_msg_received_assert_int_d;
  output cfg_msg_received_deassert_int_a;
  output cfg_msg_received_deassert_int_b;
  output cfg_msg_received_deassert_int_c;
  output cfg_msg_received_deassert_int_d;
  input [1:0]pl_directed_link_change;
  input [1:0]pl_directed_link_width;
  input pl_directed_link_speed;
  input pl_directed_link_auton;
  input pl_upstream_prefer_deemph;
  output pl_sel_lnk_rate;
  output [1:0]pl_sel_lnk_width;
  output [5:0]pl_ltssm_state;
  output [1:0]pl_lane_reversal_mode;
  output pl_phy_lnk_up;
  output [2:0]pl_tx_pm_state;
  output [1:0]pl_rx_pm_state;
  output pl_link_upcfg_cap;
  output pl_link_gen2_cap;
  output pl_link_partner_gen2_supported;
  output [2:0]pl_initial_link_width;
  output pl_directed_change_done;
  output pl_received_hot_rst;
  input pl_transmit_hot_rst;
  input pl_downstream_deemph_source;
  input [127:0]cfg_err_aer_headerlog;
  input [4:0]cfg_aer_interrupt_msgnum;
  output cfg_err_aer_headerlog_set;
  output cfg_aer_ecrc_check_en;
  output cfg_aer_ecrc_gen_en;
  output [6:0]cfg_vc_tcvc_map;
  input pcie_drp_clk;
  input pcie_drp_en;
  input pcie_drp_we;
  input [8:0]pcie_drp_addr;
  input [15:0]pcie_drp_di;
  output pcie_drp_rdy;
  output [15:0]pcie_drp_do;
  input startup_eos_in;
  output startup_cfgclk;
  output startup_cfgmclk;
  output startup_eos;
  output startup_preq;
  input startup_clk;
  input startup_gsr;
  input startup_gts;
  input startup_keyclearb;
  input startup_pack;
  input startup_usrcclko;
  input startup_usrcclkts;
  input startup_usrdoneo;
  input startup_usrdonets;
  input icap_clk;
  input icap_csib;
  input icap_rdwrb;
  input [31:0]icap_i;
  output [31:0]icap_o;
  input [2:0]pipe_txprbssel;
  input [2:0]pipe_rxprbssel;
  input pipe_txprbsforceerr;
  input pipe_rxprbscntreset;
  input [2:0]pipe_loopback;
  output [3:0]pipe_rxprbserr;
  input [3:0]pipe_txinhibit;
  output [4:0]pipe_rst_fsm;
  output [11:0]pipe_qrst_fsm;
  output [19:0]pipe_rate_fsm;
  output [23:0]pipe_sync_fsm_tx;
  output [27:0]pipe_sync_fsm_rx;
  output [27:0]pipe_drp_fsm;
  output pipe_rst_idle;
  output pipe_qrst_idle;
  output pipe_rate_idle;
  output [3:0]pipe_eyescandataerror;
  output [11:0]pipe_rxstatus;
  output [59:0]pipe_dmonitorout;
  output [3:0]pipe_cpll_lock;
  output [0:0]pipe_qpll_lock;
  output [3:0]pipe_rxpmaresetdone;
  output [11:0]pipe_rxbufstatus;
  output [3:0]pipe_txphaligndone;
  output [3:0]pipe_txphinitdone;
  output [3:0]pipe_txdlysresetdone;
  output [3:0]pipe_rxphaligndone;
  output [3:0]pipe_rxdlysresetdone;
  output [3:0]pipe_rxsyncdone;
  output [31:0]pipe_rxdisperr;
  output [31:0]pipe_rxnotintable;
  output [3:0]pipe_rxcommadet;
  output [3:0]gt_ch_drp_rdy;
  output [3:0]pipe_debug_0;
  output [3:0]pipe_debug_1;
  output [3:0]pipe_debug_2;
  output [3:0]pipe_debug_3;
  output [3:0]pipe_debug_4;
  output [3:0]pipe_debug_5;
  output [3:0]pipe_debug_6;
  output [3:0]pipe_debug_7;
  output [3:0]pipe_debug_8;
  output [3:0]pipe_debug_9;
  output [31:0]pipe_debug;
  output ext_ch_gt_drpclk;
  input [35:0]ext_ch_gt_drpaddr;
  input [3:0]ext_ch_gt_drpen;
  input [63:0]ext_ch_gt_drpdi;
  input [3:0]ext_ch_gt_drpwe;
  output [63:0]ext_ch_gt_drpdo;
  output [3:0]ext_ch_gt_drprdy;
  input [11:0]common_commands_in;
  input [24:0]pipe_rx_0_sigs;
  input [24:0]pipe_rx_1_sigs;
  input [24:0]pipe_rx_2_sigs;
  input [24:0]pipe_rx_3_sigs;
  input [24:0]pipe_rx_4_sigs;
  input [24:0]pipe_rx_5_sigs;
  input [24:0]pipe_rx_6_sigs;
  input [24:0]pipe_rx_7_sigs;
  output [11:0]common_commands_out;
  output [24:0]pipe_tx_0_sigs;
  output [24:0]pipe_tx_1_sigs;
  output [24:0]pipe_tx_2_sigs;
  output [24:0]pipe_tx_3_sigs;
  output [24:0]pipe_tx_4_sigs;
  output [24:0]pipe_tx_5_sigs;
  output [24:0]pipe_tx_6_sigs;
  output [24:0]pipe_tx_7_sigs;
  input pipe_mmcm_rst_n;
  input sys_clk;
  input sys_rst_n;

  wire \<const0> ;
  wire \<const1> ;
  wire cfg_aer_ecrc_check_en;
  wire cfg_aer_ecrc_gen_en;
  wire [4:0]cfg_aer_interrupt_msgnum;
  wire cfg_aer_rooterr_corr_err_received;
  wire cfg_aer_rooterr_corr_err_reporting_en;
  wire cfg_aer_rooterr_fatal_err_received;
  wire cfg_aer_rooterr_fatal_err_reporting_en;
  wire cfg_aer_rooterr_non_fatal_err_received;
  wire cfg_aer_rooterr_non_fatal_err_reporting_en;
  wire cfg_bridge_serr_en;
  wire [7:0]cfg_bus_number;
  wire [10:0]\^cfg_command ;
  wire [14:0]\^cfg_dcommand ;
  wire [11:0]\^cfg_dcommand2 ;
  wire [4:0]cfg_device_number;
  wire [7:0]cfg_ds_bus_number;
  wire [4:0]cfg_ds_device_number;
  wire [2:0]cfg_ds_function_number;
  wire [63:0]cfg_dsn;
  wire [5:0]\^cfg_dstatus ;
  wire [127:0]cfg_err_aer_headerlog;
  wire cfg_err_aer_headerlog_set;
  wire cfg_err_atomic_egress_blocked;
  wire cfg_err_cor;
  wire cfg_err_cpl_abort;
  wire cfg_err_cpl_rdy;
  wire cfg_err_cpl_timeout;
  wire cfg_err_cpl_unexpect;
  wire cfg_err_ecrc;
  wire cfg_err_internal_cor;
  wire cfg_err_internal_uncor;
  wire cfg_err_locked;
  wire cfg_err_malformed;
  wire cfg_err_mc_blocked;
  wire cfg_err_norecovery;
  wire cfg_err_poisoned;
  wire cfg_err_posted;
  wire [47:0]cfg_err_tlp_cpl_header;
  wire cfg_err_ur;
  wire [2:0]cfg_function_number;
  wire cfg_interrupt;
  wire cfg_interrupt_assert;
  wire [7:0]cfg_interrupt_di;
  wire [7:0]cfg_interrupt_do;
  wire [2:0]cfg_interrupt_mmenable;
  wire cfg_interrupt_msienable;
  wire cfg_interrupt_msixenable;
  wire cfg_interrupt_msixfm;
  wire cfg_interrupt_rdy;
  wire cfg_interrupt_stat;
  wire [11:0]\^cfg_lcommand ;
  wire [15:0]\^cfg_lstatus ;
  wire [3:0]cfg_mgmt_byte_en;
  wire [31:0]cfg_mgmt_di;
  wire [31:0]cfg_mgmt_do;
  wire [9:0]cfg_mgmt_dwaddr;
  wire cfg_mgmt_rd_en;
  wire cfg_mgmt_rd_wr_done;
  wire cfg_mgmt_wr_en;
  wire cfg_mgmt_wr_readonly;
  wire cfg_mgmt_wr_rw1c_as_rw;
  wire [15:0]cfg_msg_data;
  wire cfg_msg_received;
  wire cfg_msg_received_assert_int_a;
  wire cfg_msg_received_assert_int_b;
  wire cfg_msg_received_assert_int_c;
  wire cfg_msg_received_assert_int_d;
  wire cfg_msg_received_deassert_int_a;
  wire cfg_msg_received_deassert_int_b;
  wire cfg_msg_received_deassert_int_c;
  wire cfg_msg_received_deassert_int_d;
  wire cfg_msg_received_err_cor;
  wire cfg_msg_received_err_fatal;
  wire cfg_msg_received_err_non_fatal;
  wire cfg_msg_received_pm_as_nak;
  wire cfg_msg_received_pm_pme;
  wire cfg_msg_received_pme_to_ack;
  wire cfg_msg_received_setslotpowerlimit;
  wire [2:0]cfg_pcie_link_state;
  wire [4:0]cfg_pciecap_interrupt_msgnum;
  wire [1:0]cfg_pm_force_state;
  wire cfg_pm_force_state_en;
  wire cfg_pm_halt_aspm_l0s;
  wire cfg_pm_halt_aspm_l1;
  wire cfg_pm_wake;
  wire cfg_pmcsr_pme_en;
  wire cfg_pmcsr_pme_status;
  wire [1:0]cfg_pmcsr_powerstate;
  wire cfg_received_func_lvl_rst;
  wire cfg_root_control_pme_int_en;
  wire cfg_root_control_syserr_corr_err_en;
  wire cfg_root_control_syserr_fatal_err_en;
  wire cfg_root_control_syserr_non_fatal_err_en;
  wire cfg_slot_control_electromech_il_ctl_pulse;
  wire cfg_to_turnoff;
  wire cfg_trn_pending;
  wire cfg_turnoff_ok;
  wire [6:0]cfg_vc_tcvc_map;
  wire [35:0]ext_ch_gt_drpaddr;
  wire [63:0]ext_ch_gt_drpdi;
  wire [63:0]ext_ch_gt_drpdo;
  wire [3:0]ext_ch_gt_drpen;
  wire [3:0]ext_ch_gt_drprdy;
  wire [3:0]ext_ch_gt_drpwe;
  wire [11:0]fc_cpld;
  wire [7:0]fc_cplh;
  wire [11:0]fc_npd;
  wire [7:0]fc_nph;
  wire [11:0]fc_pd;
  wire [7:0]fc_ph;
  wire [2:0]fc_sel;
  wire [3:0]gt_ch_drp_rdy;
  wire [0:0]\^int_qplllock_out ;
  wire [0:0]\^int_qplloutclk_out ;
  wire [0:0]\^int_qplloutrefclk_out ;
  wire [127:0]m_axis_rx_tdata;
  wire m_axis_rx_tready;
  wire [21:0]\^m_axis_rx_tuser ;
  wire m_axis_rx_tvalid;
  wire [3:0]pci_exp_rxn;
  wire [3:0]pci_exp_rxp;
  wire [3:0]pci_exp_txn;
  wire [3:0]pci_exp_txp;
  wire [8:0]pcie_drp_addr;
  wire pcie_drp_clk;
  wire [15:0]pcie_drp_di;
  wire [15:0]pcie_drp_do;
  wire pcie_drp_en;
  wire pcie_drp_rdy;
  wire pcie_drp_we;
  wire [3:0]pipe_cpll_lock;
  wire pipe_dclk_in;
  wire [52:0]\^pipe_dmonitorout ;
  wire [11:0]\^pipe_drp_fsm ;
  wire [3:0]pipe_eyescandataerror;
  wire pipe_gen3_out;
  wire [2:0]pipe_loopback;
  wire pipe_mmcm_lock_in;
  wire pipe_oobclk_in;
  wire pipe_pclk_in;
  wire [3:0]pipe_pclk_sel_out;
  wire [3:0]\^pipe_qrst_fsm ;
  wire pipe_qrst_idle;
  wire [19:0]pipe_rate_fsm;
  wire pipe_rate_idle;
  wire [4:0]pipe_rst_fsm;
  wire pipe_rst_idle;
  wire [11:0]pipe_rxbufstatus;
  wire [3:0]pipe_rxcommadet;
  wire [31:0]pipe_rxdisperr;
  wire [3:0]pipe_rxdlysresetdone;
  wire [31:0]pipe_rxnotintable;
  wire [3:0]pipe_rxoutclk_out;
  wire [3:0]pipe_rxphaligndone;
  wire pipe_rxprbscntreset;
  wire [3:0]pipe_rxprbserr;
  wire [2:0]pipe_rxprbssel;
  wire [11:0]pipe_rxstatus;
  wire pipe_rxusrclk_in;
  wire [21:0]\^pipe_sync_fsm_rx ;
  wire [23:0]pipe_sync_fsm_tx;
  wire [3:0]pipe_txdlysresetdone;
  wire [3:0]pipe_txinhibit;
  wire pipe_txoutclk_out;
  wire [3:0]pipe_txphaligndone;
  wire [3:0]pipe_txphinitdone;
  wire pipe_txprbsforceerr;
  wire [2:0]pipe_txprbssel;
  wire pipe_userclk1_in;
  wire pipe_userclk2_in;
  wire pl_directed_change_done;
  wire pl_directed_link_auton;
  wire [1:0]pl_directed_link_change;
  wire pl_directed_link_speed;
  wire [1:0]pl_directed_link_width;
  wire pl_downstream_deemph_source;
  wire [2:0]pl_initial_link_width;
  wire [1:0]pl_lane_reversal_mode;
  wire pl_link_gen2_cap;
  wire pl_link_partner_gen2_supported;
  wire pl_link_upcfg_cap;
  wire [5:0]pl_ltssm_state;
  wire pl_phy_lnk_up;
  wire pl_received_hot_rst;
  wire [1:0]pl_rx_pm_state;
  wire pl_sel_lnk_rate;
  wire [1:0]pl_sel_lnk_width;
  wire pl_transmit_hot_rst;
  wire [2:0]pl_tx_pm_state;
  wire pl_upstream_prefer_deemph;
  wire rx_np_ok;
  wire rx_np_req;
  wire [127:0]s_axis_tx_tdata;
  wire [15:0]s_axis_tx_tkeep;
  wire s_axis_tx_tlast;
  wire s_axis_tx_tready;
  wire [3:0]s_axis_tx_tuser;
  wire s_axis_tx_tvalid;
  wire startup_cfgclk;
  wire startup_cfgmclk;
  wire startup_clk;
  wire startup_eos;
  wire startup_gsr;
  wire startup_gts;
  wire startup_keyclearb;
  wire startup_pack;
  wire startup_preq;
  wire startup_usrcclko;
  wire startup_usrcclkts;
  wire startup_usrdoneo;
  wire startup_usrdonets;
  wire sys_clk;
  wire sys_rst_n;
  wire [5:0]tx_buf_av;
  wire tx_cfg_gnt;
  wire tx_cfg_req;
  wire tx_err_drop;
  wire user_app_rdy;
  wire user_lnk_up;
  wire user_reset_out;

  assign cfg_command[15] = \<const0> ;
  assign cfg_command[14] = \<const0> ;
  assign cfg_command[13] = \<const0> ;
  assign cfg_command[12] = \<const0> ;
  assign cfg_command[11] = \<const0> ;
  assign cfg_command[10] = \^cfg_command [10];
  assign cfg_command[9] = \<const0> ;
  assign cfg_command[8] = \^cfg_command [8];
  assign cfg_command[7] = \<const0> ;
  assign cfg_command[6] = \<const0> ;
  assign cfg_command[5] = \<const0> ;
  assign cfg_command[4] = \<const0> ;
  assign cfg_command[3] = \<const0> ;
  assign cfg_command[2:0] = \^cfg_command [2:0];
  assign cfg_dcommand[15] = \<const0> ;
  assign cfg_dcommand[14:0] = \^cfg_dcommand [14:0];
  assign cfg_dcommand2[15] = \<const0> ;
  assign cfg_dcommand2[14] = \<const0> ;
  assign cfg_dcommand2[13] = \<const0> ;
  assign cfg_dcommand2[12] = \<const0> ;
  assign cfg_dcommand2[11:0] = \^cfg_dcommand2 [11:0];
  assign cfg_dstatus[15] = \<const0> ;
  assign cfg_dstatus[14] = \<const0> ;
  assign cfg_dstatus[13] = \<const0> ;
  assign cfg_dstatus[12] = \<const0> ;
  assign cfg_dstatus[11] = \<const0> ;
  assign cfg_dstatus[10] = \<const0> ;
  assign cfg_dstatus[9] = \<const0> ;
  assign cfg_dstatus[8] = \<const0> ;
  assign cfg_dstatus[7] = \<const0> ;
  assign cfg_dstatus[6] = \<const0> ;
  assign cfg_dstatus[5] = \^cfg_dstatus [5];
  assign cfg_dstatus[4] = \<const0> ;
  assign cfg_dstatus[3:0] = \^cfg_dstatus [3:0];
  assign cfg_lcommand[15] = \<const0> ;
  assign cfg_lcommand[14] = \<const0> ;
  assign cfg_lcommand[13] = \<const0> ;
  assign cfg_lcommand[12] = \<const0> ;
  assign cfg_lcommand[11:3] = \^cfg_lcommand [11:3];
  assign cfg_lcommand[2] = \<const0> ;
  assign cfg_lcommand[1:0] = \^cfg_lcommand [1:0];
  assign cfg_lstatus[15:13] = \^cfg_lstatus [15:13];
  assign cfg_lstatus[12] = \<const1> ;
  assign cfg_lstatus[11] = \^cfg_lstatus [11];
  assign cfg_lstatus[10] = \<const0> ;
  assign cfg_lstatus[9] = \<const0> ;
  assign cfg_lstatus[8] = \<const0> ;
  assign cfg_lstatus[7:4] = \^cfg_lstatus [7:4];
  assign cfg_lstatus[3] = \<const0> ;
  assign cfg_lstatus[2] = \<const0> ;
  assign cfg_lstatus[1:0] = \^cfg_lstatus [1:0];
  assign cfg_status[15] = \<const0> ;
  assign cfg_status[14] = \<const0> ;
  assign cfg_status[13] = \<const0> ;
  assign cfg_status[12] = \<const0> ;
  assign cfg_status[11] = \<const0> ;
  assign cfg_status[10] = \<const0> ;
  assign cfg_status[9] = \<const0> ;
  assign cfg_status[8] = \<const0> ;
  assign cfg_status[7] = \<const0> ;
  assign cfg_status[6] = \<const0> ;
  assign cfg_status[5] = \<const0> ;
  assign cfg_status[4] = \<const0> ;
  assign cfg_status[3] = \<const0> ;
  assign cfg_status[2] = \<const0> ;
  assign cfg_status[1] = \<const0> ;
  assign cfg_status[0] = \<const0> ;
  assign common_commands_out[11] = \<const0> ;
  assign common_commands_out[10] = \<const0> ;
  assign common_commands_out[9] = \<const0> ;
  assign common_commands_out[8] = \<const0> ;
  assign common_commands_out[7] = \<const0> ;
  assign common_commands_out[6] = \<const0> ;
  assign common_commands_out[5] = \<const0> ;
  assign common_commands_out[4] = \<const0> ;
  assign common_commands_out[3] = \<const0> ;
  assign common_commands_out[2] = \<const0> ;
  assign common_commands_out[1] = \<const0> ;
  assign common_commands_out[0] = \<const0> ;
  assign ext_ch_gt_drpclk = pipe_dclk_in;
  assign icap_o[31] = \<const0> ;
  assign icap_o[30] = \<const0> ;
  assign icap_o[29] = \<const0> ;
  assign icap_o[28] = \<const0> ;
  assign icap_o[27] = \<const0> ;
  assign icap_o[26] = \<const0> ;
  assign icap_o[25] = \<const0> ;
  assign icap_o[24] = \<const0> ;
  assign icap_o[23] = \<const0> ;
  assign icap_o[22] = \<const0> ;
  assign icap_o[21] = \<const0> ;
  assign icap_o[20] = \<const0> ;
  assign icap_o[19] = \<const0> ;
  assign icap_o[18] = \<const0> ;
  assign icap_o[17] = \<const0> ;
  assign icap_o[16] = \<const0> ;
  assign icap_o[15] = \<const0> ;
  assign icap_o[14] = \<const0> ;
  assign icap_o[13] = \<const0> ;
  assign icap_o[12] = \<const0> ;
  assign icap_o[11] = \<const0> ;
  assign icap_o[10] = \<const0> ;
  assign icap_o[9] = \<const0> ;
  assign icap_o[8] = \<const0> ;
  assign icap_o[7] = \<const0> ;
  assign icap_o[6] = \<const0> ;
  assign icap_o[5] = \<const0> ;
  assign icap_o[4] = \<const0> ;
  assign icap_o[3] = \<const0> ;
  assign icap_o[2] = \<const0> ;
  assign icap_o[1] = \<const0> ;
  assign icap_o[0] = \<const0> ;
  assign int_dclk_out = \<const0> ;
  assign int_mmcm_lock_out = \<const0> ;
  assign int_oobclk_out = \<const0> ;
  assign int_pclk_out_slave = \<const0> ;
  assign int_pipe_rxusrclk_out = \<const0> ;
  assign int_qplllock_out[1] = \<const0> ;
  assign int_qplllock_out[0] = \^int_qplllock_out [0];
  assign int_qplloutclk_out[1] = \<const0> ;
  assign int_qplloutclk_out[0] = \^int_qplloutclk_out [0];
  assign int_qplloutrefclk_out[1] = \<const0> ;
  assign int_qplloutrefclk_out[0] = \^int_qplloutrefclk_out [0];
  assign int_rxoutclk_out[3] = \<const0> ;
  assign int_rxoutclk_out[2] = \<const0> ;
  assign int_rxoutclk_out[1] = \<const0> ;
  assign int_rxoutclk_out[0] = \<const0> ;
  assign int_userclk1_out = \<const0> ;
  assign int_userclk2_out = \<const0> ;
  assign m_axis_rx_tkeep[15] = user_app_rdy;
  assign m_axis_rx_tkeep[14] = user_app_rdy;
  assign m_axis_rx_tkeep[13] = user_app_rdy;
  assign m_axis_rx_tkeep[12] = user_app_rdy;
  assign m_axis_rx_tkeep[11] = user_app_rdy;
  assign m_axis_rx_tkeep[10] = user_app_rdy;
  assign m_axis_rx_tkeep[9] = user_app_rdy;
  assign m_axis_rx_tkeep[8] = user_app_rdy;
  assign m_axis_rx_tkeep[7] = user_app_rdy;
  assign m_axis_rx_tkeep[6] = user_app_rdy;
  assign m_axis_rx_tkeep[5] = user_app_rdy;
  assign m_axis_rx_tkeep[4] = user_app_rdy;
  assign m_axis_rx_tkeep[3] = user_app_rdy;
  assign m_axis_rx_tkeep[2] = user_app_rdy;
  assign m_axis_rx_tkeep[1] = user_app_rdy;
  assign m_axis_rx_tkeep[0] = user_app_rdy;
  assign m_axis_rx_tlast = \<const0> ;
  assign m_axis_rx_tuser[21:18] = \^m_axis_rx_tuser [21:18];
  assign m_axis_rx_tuser[17] = \^m_axis_rx_tuser [18];
  assign m_axis_rx_tuser[16] = \<const0> ;
  assign m_axis_rx_tuser[15] = \<const0> ;
  assign m_axis_rx_tuser[14:13] = \^m_axis_rx_tuser [14:13];
  assign m_axis_rx_tuser[12] = \<const0> ;
  assign m_axis_rx_tuser[11] = \<const0> ;
  assign m_axis_rx_tuser[10] = \<const0> ;
  assign m_axis_rx_tuser[9] = \<const0> ;
  assign m_axis_rx_tuser[8:0] = \^m_axis_rx_tuser [8:0];
  assign pipe_debug[31] = \<const0> ;
  assign pipe_debug[30] = \<const0> ;
  assign pipe_debug[29] = \<const0> ;
  assign pipe_debug[28] = \<const0> ;
  assign pipe_debug[27] = \<const0> ;
  assign pipe_debug[26] = \<const0> ;
  assign pipe_debug[25] = \<const0> ;
  assign pipe_debug[24] = \<const0> ;
  assign pipe_debug[23] = \<const0> ;
  assign pipe_debug[22] = \<const0> ;
  assign pipe_debug[21] = \<const0> ;
  assign pipe_debug[20] = \<const0> ;
  assign pipe_debug[19] = \<const0> ;
  assign pipe_debug[18] = \<const0> ;
  assign pipe_debug[17] = \<const0> ;
  assign pipe_debug[16] = \<const0> ;
  assign pipe_debug[15] = \<const0> ;
  assign pipe_debug[14] = \<const0> ;
  assign pipe_debug[13] = \<const0> ;
  assign pipe_debug[12] = \<const0> ;
  assign pipe_debug[11] = \<const0> ;
  assign pipe_debug[10] = \<const0> ;
  assign pipe_debug[9] = \<const0> ;
  assign pipe_debug[8] = \<const0> ;
  assign pipe_debug[7] = \<const0> ;
  assign pipe_debug[6] = \<const0> ;
  assign pipe_debug[5] = \<const0> ;
  assign pipe_debug[4] = \<const0> ;
  assign pipe_debug[3] = \<const0> ;
  assign pipe_debug[2] = \<const0> ;
  assign pipe_debug[1] = \<const0> ;
  assign pipe_debug[0] = \<const0> ;
  assign pipe_debug_0[3] = \<const0> ;
  assign pipe_debug_0[2] = \<const0> ;
  assign pipe_debug_0[1] = \<const0> ;
  assign pipe_debug_0[0] = \<const0> ;
  assign pipe_debug_1[3] = \<const0> ;
  assign pipe_debug_1[2] = \<const0> ;
  assign pipe_debug_1[1] = \<const0> ;
  assign pipe_debug_1[0] = \<const0> ;
  assign pipe_debug_2[3] = \<const0> ;
  assign pipe_debug_2[2] = \<const0> ;
  assign pipe_debug_2[1] = \<const0> ;
  assign pipe_debug_2[0] = \<const0> ;
  assign pipe_debug_3[3] = \<const0> ;
  assign pipe_debug_3[2] = \<const0> ;
  assign pipe_debug_3[1] = \<const0> ;
  assign pipe_debug_3[0] = \<const0> ;
  assign pipe_debug_4[3] = \<const0> ;
  assign pipe_debug_4[2] = \<const0> ;
  assign pipe_debug_4[1] = \<const0> ;
  assign pipe_debug_4[0] = \<const0> ;
  assign pipe_debug_5[3] = \<const0> ;
  assign pipe_debug_5[2] = \<const0> ;
  assign pipe_debug_5[1] = \<const0> ;
  assign pipe_debug_5[0] = \<const0> ;
  assign pipe_debug_6[3] = \<const0> ;
  assign pipe_debug_6[2] = \<const0> ;
  assign pipe_debug_6[1] = \<const0> ;
  assign pipe_debug_6[0] = \<const0> ;
  assign pipe_debug_7[3] = \<const0> ;
  assign pipe_debug_7[2] = \<const0> ;
  assign pipe_debug_7[1] = \<const0> ;
  assign pipe_debug_7[0] = \<const0> ;
  assign pipe_debug_8[3] = \<const0> ;
  assign pipe_debug_8[2] = \<const0> ;
  assign pipe_debug_8[1] = \<const0> ;
  assign pipe_debug_8[0] = \<const0> ;
  assign pipe_debug_9[3] = \<const0> ;
  assign pipe_debug_9[2] = \<const0> ;
  assign pipe_debug_9[1] = \<const0> ;
  assign pipe_debug_9[0] = \<const0> ;
  assign pipe_dmonitorout[59] = \<const0> ;
  assign pipe_dmonitorout[58] = \<const0> ;
  assign pipe_dmonitorout[57] = \<const0> ;
  assign pipe_dmonitorout[56] = \<const0> ;
  assign pipe_dmonitorout[55] = \<const0> ;
  assign pipe_dmonitorout[54] = \<const0> ;
  assign pipe_dmonitorout[53] = \<const0> ;
  assign pipe_dmonitorout[52:45] = \^pipe_dmonitorout [52:45];
  assign pipe_dmonitorout[44] = \<const0> ;
  assign pipe_dmonitorout[43] = \<const0> ;
  assign pipe_dmonitorout[42] = \<const0> ;
  assign pipe_dmonitorout[41] = \<const0> ;
  assign pipe_dmonitorout[40] = \<const0> ;
  assign pipe_dmonitorout[39] = \<const0> ;
  assign pipe_dmonitorout[38] = \<const0> ;
  assign pipe_dmonitorout[37:30] = \^pipe_dmonitorout [37:30];
  assign pipe_dmonitorout[29] = \<const0> ;
  assign pipe_dmonitorout[28] = \<const0> ;
  assign pipe_dmonitorout[27] = \<const0> ;
  assign pipe_dmonitorout[26] = \<const0> ;
  assign pipe_dmonitorout[25] = \<const0> ;
  assign pipe_dmonitorout[24] = \<const0> ;
  assign pipe_dmonitorout[23] = \<const0> ;
  assign pipe_dmonitorout[22:15] = \^pipe_dmonitorout [22:15];
  assign pipe_dmonitorout[14] = \<const0> ;
  assign pipe_dmonitorout[13] = \<const0> ;
  assign pipe_dmonitorout[12] = \<const0> ;
  assign pipe_dmonitorout[11] = \<const0> ;
  assign pipe_dmonitorout[10] = \<const0> ;
  assign pipe_dmonitorout[9] = \<const0> ;
  assign pipe_dmonitorout[8] = \<const0> ;
  assign pipe_dmonitorout[7:0] = \^pipe_dmonitorout [7:0];
  assign pipe_drp_fsm[27] = \<const0> ;
  assign pipe_drp_fsm[26] = \<const0> ;
  assign pipe_drp_fsm[25] = \<const0> ;
  assign pipe_drp_fsm[24] = \<const0> ;
  assign pipe_drp_fsm[23] = \<const0> ;
  assign pipe_drp_fsm[22] = \<const0> ;
  assign pipe_drp_fsm[21] = \<const0> ;
  assign pipe_drp_fsm[20] = \<const0> ;
  assign pipe_drp_fsm[19] = \<const0> ;
  assign pipe_drp_fsm[18] = \<const0> ;
  assign pipe_drp_fsm[17] = \<const0> ;
  assign pipe_drp_fsm[16] = \<const0> ;
  assign pipe_drp_fsm[15] = \<const0> ;
  assign pipe_drp_fsm[14] = \<const0> ;
  assign pipe_drp_fsm[13] = \<const0> ;
  assign pipe_drp_fsm[12] = \<const0> ;
  assign pipe_drp_fsm[11:0] = \^pipe_drp_fsm [11:0];
  assign pipe_qpll_lock[0] = \^int_qplllock_out [0];
  assign pipe_qrst_fsm[11] = \<const0> ;
  assign pipe_qrst_fsm[10] = \<const0> ;
  assign pipe_qrst_fsm[9] = \<const0> ;
  assign pipe_qrst_fsm[8] = \<const0> ;
  assign pipe_qrst_fsm[7] = \<const0> ;
  assign pipe_qrst_fsm[6] = \<const0> ;
  assign pipe_qrst_fsm[5] = \<const0> ;
  assign pipe_qrst_fsm[4] = \<const0> ;
  assign pipe_qrst_fsm[3:0] = \^pipe_qrst_fsm [3:0];
  assign pipe_rxpmaresetdone[3] = \<const0> ;
  assign pipe_rxpmaresetdone[2] = \<const0> ;
  assign pipe_rxpmaresetdone[1] = \<const0> ;
  assign pipe_rxpmaresetdone[0] = \<const0> ;
  assign pipe_rxsyncdone[3] = \<const0> ;
  assign pipe_rxsyncdone[2] = \<const0> ;
  assign pipe_rxsyncdone[1] = \<const0> ;
  assign pipe_rxsyncdone[0] = \<const0> ;
  assign pipe_sync_fsm_rx[27] = \<const0> ;
  assign pipe_sync_fsm_rx[26] = \<const0> ;
  assign pipe_sync_fsm_rx[25] = \<const0> ;
  assign pipe_sync_fsm_rx[24] = \<const0> ;
  assign pipe_sync_fsm_rx[23] = \<const0> ;
  assign pipe_sync_fsm_rx[22] = \<const0> ;
  assign pipe_sync_fsm_rx[21] = \^pipe_sync_fsm_rx [21];
  assign pipe_sync_fsm_rx[20] = \<const0> ;
  assign pipe_sync_fsm_rx[19] = \<const0> ;
  assign pipe_sync_fsm_rx[18] = \<const0> ;
  assign pipe_sync_fsm_rx[17] = \<const0> ;
  assign pipe_sync_fsm_rx[16] = \<const0> ;
  assign pipe_sync_fsm_rx[15] = \<const0> ;
  assign pipe_sync_fsm_rx[14] = \^pipe_sync_fsm_rx [14];
  assign pipe_sync_fsm_rx[13] = \<const0> ;
  assign pipe_sync_fsm_rx[12] = \<const0> ;
  assign pipe_sync_fsm_rx[11] = \<const0> ;
  assign pipe_sync_fsm_rx[10] = \<const0> ;
  assign pipe_sync_fsm_rx[9] = \<const0> ;
  assign pipe_sync_fsm_rx[8] = \<const0> ;
  assign pipe_sync_fsm_rx[7] = \^pipe_sync_fsm_rx [7];
  assign pipe_sync_fsm_rx[6] = \<const0> ;
  assign pipe_sync_fsm_rx[5] = \<const0> ;
  assign pipe_sync_fsm_rx[4] = \<const0> ;
  assign pipe_sync_fsm_rx[3] = \<const0> ;
  assign pipe_sync_fsm_rx[2] = \<const0> ;
  assign pipe_sync_fsm_rx[1] = \<const0> ;
  assign pipe_sync_fsm_rx[0] = \^pipe_sync_fsm_rx [0];
  assign pipe_tx_0_sigs[24] = \<const0> ;
  assign pipe_tx_0_sigs[23] = \<const0> ;
  assign pipe_tx_0_sigs[22] = \<const0> ;
  assign pipe_tx_0_sigs[21] = \<const0> ;
  assign pipe_tx_0_sigs[20] = \<const0> ;
  assign pipe_tx_0_sigs[19] = \<const0> ;
  assign pipe_tx_0_sigs[18] = \<const0> ;
  assign pipe_tx_0_sigs[17] = \<const0> ;
  assign pipe_tx_0_sigs[16] = \<const0> ;
  assign pipe_tx_0_sigs[15] = \<const0> ;
  assign pipe_tx_0_sigs[14] = \<const0> ;
  assign pipe_tx_0_sigs[13] = \<const0> ;
  assign pipe_tx_0_sigs[12] = \<const0> ;
  assign pipe_tx_0_sigs[11] = \<const0> ;
  assign pipe_tx_0_sigs[10] = \<const0> ;
  assign pipe_tx_0_sigs[9] = \<const0> ;
  assign pipe_tx_0_sigs[8] = \<const0> ;
  assign pipe_tx_0_sigs[7] = \<const0> ;
  assign pipe_tx_0_sigs[6] = \<const0> ;
  assign pipe_tx_0_sigs[5] = \<const0> ;
  assign pipe_tx_0_sigs[4] = \<const0> ;
  assign pipe_tx_0_sigs[3] = \<const0> ;
  assign pipe_tx_0_sigs[2] = \<const0> ;
  assign pipe_tx_0_sigs[1] = \<const0> ;
  assign pipe_tx_0_sigs[0] = \<const0> ;
  assign pipe_tx_1_sigs[24] = \<const0> ;
  assign pipe_tx_1_sigs[23] = \<const0> ;
  assign pipe_tx_1_sigs[22] = \<const0> ;
  assign pipe_tx_1_sigs[21] = \<const0> ;
  assign pipe_tx_1_sigs[20] = \<const0> ;
  assign pipe_tx_1_sigs[19] = \<const0> ;
  assign pipe_tx_1_sigs[18] = \<const0> ;
  assign pipe_tx_1_sigs[17] = \<const0> ;
  assign pipe_tx_1_sigs[16] = \<const0> ;
  assign pipe_tx_1_sigs[15] = \<const0> ;
  assign pipe_tx_1_sigs[14] = \<const0> ;
  assign pipe_tx_1_sigs[13] = \<const0> ;
  assign pipe_tx_1_sigs[12] = \<const0> ;
  assign pipe_tx_1_sigs[11] = \<const0> ;
  assign pipe_tx_1_sigs[10] = \<const0> ;
  assign pipe_tx_1_sigs[9] = \<const0> ;
  assign pipe_tx_1_sigs[8] = \<const0> ;
  assign pipe_tx_1_sigs[7] = \<const0> ;
  assign pipe_tx_1_sigs[6] = \<const0> ;
  assign pipe_tx_1_sigs[5] = \<const0> ;
  assign pipe_tx_1_sigs[4] = \<const0> ;
  assign pipe_tx_1_sigs[3] = \<const0> ;
  assign pipe_tx_1_sigs[2] = \<const0> ;
  assign pipe_tx_1_sigs[1] = \<const0> ;
  assign pipe_tx_1_sigs[0] = \<const0> ;
  assign pipe_tx_2_sigs[24] = \<const0> ;
  assign pipe_tx_2_sigs[23] = \<const0> ;
  assign pipe_tx_2_sigs[22] = \<const0> ;
  assign pipe_tx_2_sigs[21] = \<const0> ;
  assign pipe_tx_2_sigs[20] = \<const0> ;
  assign pipe_tx_2_sigs[19] = \<const0> ;
  assign pipe_tx_2_sigs[18] = \<const0> ;
  assign pipe_tx_2_sigs[17] = \<const0> ;
  assign pipe_tx_2_sigs[16] = \<const0> ;
  assign pipe_tx_2_sigs[15] = \<const0> ;
  assign pipe_tx_2_sigs[14] = \<const0> ;
  assign pipe_tx_2_sigs[13] = \<const0> ;
  assign pipe_tx_2_sigs[12] = \<const0> ;
  assign pipe_tx_2_sigs[11] = \<const0> ;
  assign pipe_tx_2_sigs[10] = \<const0> ;
  assign pipe_tx_2_sigs[9] = \<const0> ;
  assign pipe_tx_2_sigs[8] = \<const0> ;
  assign pipe_tx_2_sigs[7] = \<const0> ;
  assign pipe_tx_2_sigs[6] = \<const0> ;
  assign pipe_tx_2_sigs[5] = \<const0> ;
  assign pipe_tx_2_sigs[4] = \<const0> ;
  assign pipe_tx_2_sigs[3] = \<const0> ;
  assign pipe_tx_2_sigs[2] = \<const0> ;
  assign pipe_tx_2_sigs[1] = \<const0> ;
  assign pipe_tx_2_sigs[0] = \<const0> ;
  assign pipe_tx_3_sigs[24] = \<const0> ;
  assign pipe_tx_3_sigs[23] = \<const0> ;
  assign pipe_tx_3_sigs[22] = \<const0> ;
  assign pipe_tx_3_sigs[21] = \<const0> ;
  assign pipe_tx_3_sigs[20] = \<const0> ;
  assign pipe_tx_3_sigs[19] = \<const0> ;
  assign pipe_tx_3_sigs[18] = \<const0> ;
  assign pipe_tx_3_sigs[17] = \<const0> ;
  assign pipe_tx_3_sigs[16] = \<const0> ;
  assign pipe_tx_3_sigs[15] = \<const0> ;
  assign pipe_tx_3_sigs[14] = \<const0> ;
  assign pipe_tx_3_sigs[13] = \<const0> ;
  assign pipe_tx_3_sigs[12] = \<const0> ;
  assign pipe_tx_3_sigs[11] = \<const0> ;
  assign pipe_tx_3_sigs[10] = \<const0> ;
  assign pipe_tx_3_sigs[9] = \<const0> ;
  assign pipe_tx_3_sigs[8] = \<const0> ;
  assign pipe_tx_3_sigs[7] = \<const0> ;
  assign pipe_tx_3_sigs[6] = \<const0> ;
  assign pipe_tx_3_sigs[5] = \<const0> ;
  assign pipe_tx_3_sigs[4] = \<const0> ;
  assign pipe_tx_3_sigs[3] = \<const0> ;
  assign pipe_tx_3_sigs[2] = \<const0> ;
  assign pipe_tx_3_sigs[1] = \<const0> ;
  assign pipe_tx_3_sigs[0] = \<const0> ;
  assign pipe_tx_4_sigs[24] = \<const0> ;
  assign pipe_tx_4_sigs[23] = \<const0> ;
  assign pipe_tx_4_sigs[22] = \<const0> ;
  assign pipe_tx_4_sigs[21] = \<const0> ;
  assign pipe_tx_4_sigs[20] = \<const0> ;
  assign pipe_tx_4_sigs[19] = \<const0> ;
  assign pipe_tx_4_sigs[18] = \<const0> ;
  assign pipe_tx_4_sigs[17] = \<const0> ;
  assign pipe_tx_4_sigs[16] = \<const0> ;
  assign pipe_tx_4_sigs[15] = \<const0> ;
  assign pipe_tx_4_sigs[14] = \<const0> ;
  assign pipe_tx_4_sigs[13] = \<const0> ;
  assign pipe_tx_4_sigs[12] = \<const0> ;
  assign pipe_tx_4_sigs[11] = \<const0> ;
  assign pipe_tx_4_sigs[10] = \<const0> ;
  assign pipe_tx_4_sigs[9] = \<const0> ;
  assign pipe_tx_4_sigs[8] = \<const0> ;
  assign pipe_tx_4_sigs[7] = \<const0> ;
  assign pipe_tx_4_sigs[6] = \<const0> ;
  assign pipe_tx_4_sigs[5] = \<const0> ;
  assign pipe_tx_4_sigs[4] = \<const0> ;
  assign pipe_tx_4_sigs[3] = \<const0> ;
  assign pipe_tx_4_sigs[2] = \<const0> ;
  assign pipe_tx_4_sigs[1] = \<const0> ;
  assign pipe_tx_4_sigs[0] = \<const0> ;
  assign pipe_tx_5_sigs[24] = \<const0> ;
  assign pipe_tx_5_sigs[23] = \<const0> ;
  assign pipe_tx_5_sigs[22] = \<const0> ;
  assign pipe_tx_5_sigs[21] = \<const0> ;
  assign pipe_tx_5_sigs[20] = \<const0> ;
  assign pipe_tx_5_sigs[19] = \<const0> ;
  assign pipe_tx_5_sigs[18] = \<const0> ;
  assign pipe_tx_5_sigs[17] = \<const0> ;
  assign pipe_tx_5_sigs[16] = \<const0> ;
  assign pipe_tx_5_sigs[15] = \<const0> ;
  assign pipe_tx_5_sigs[14] = \<const0> ;
  assign pipe_tx_5_sigs[13] = \<const0> ;
  assign pipe_tx_5_sigs[12] = \<const0> ;
  assign pipe_tx_5_sigs[11] = \<const0> ;
  assign pipe_tx_5_sigs[10] = \<const0> ;
  assign pipe_tx_5_sigs[9] = \<const0> ;
  assign pipe_tx_5_sigs[8] = \<const0> ;
  assign pipe_tx_5_sigs[7] = \<const0> ;
  assign pipe_tx_5_sigs[6] = \<const0> ;
  assign pipe_tx_5_sigs[5] = \<const0> ;
  assign pipe_tx_5_sigs[4] = \<const0> ;
  assign pipe_tx_5_sigs[3] = \<const0> ;
  assign pipe_tx_5_sigs[2] = \<const0> ;
  assign pipe_tx_5_sigs[1] = \<const0> ;
  assign pipe_tx_5_sigs[0] = \<const0> ;
  assign pipe_tx_6_sigs[24] = \<const0> ;
  assign pipe_tx_6_sigs[23] = \<const0> ;
  assign pipe_tx_6_sigs[22] = \<const0> ;
  assign pipe_tx_6_sigs[21] = \<const0> ;
  assign pipe_tx_6_sigs[20] = \<const0> ;
  assign pipe_tx_6_sigs[19] = \<const0> ;
  assign pipe_tx_6_sigs[18] = \<const0> ;
  assign pipe_tx_6_sigs[17] = \<const0> ;
  assign pipe_tx_6_sigs[16] = \<const0> ;
  assign pipe_tx_6_sigs[15] = \<const0> ;
  assign pipe_tx_6_sigs[14] = \<const0> ;
  assign pipe_tx_6_sigs[13] = \<const0> ;
  assign pipe_tx_6_sigs[12] = \<const0> ;
  assign pipe_tx_6_sigs[11] = \<const0> ;
  assign pipe_tx_6_sigs[10] = \<const0> ;
  assign pipe_tx_6_sigs[9] = \<const0> ;
  assign pipe_tx_6_sigs[8] = \<const0> ;
  assign pipe_tx_6_sigs[7] = \<const0> ;
  assign pipe_tx_6_sigs[6] = \<const0> ;
  assign pipe_tx_6_sigs[5] = \<const0> ;
  assign pipe_tx_6_sigs[4] = \<const0> ;
  assign pipe_tx_6_sigs[3] = \<const0> ;
  assign pipe_tx_6_sigs[2] = \<const0> ;
  assign pipe_tx_6_sigs[1] = \<const0> ;
  assign pipe_tx_6_sigs[0] = \<const0> ;
  assign pipe_tx_7_sigs[24] = \<const0> ;
  assign pipe_tx_7_sigs[23] = \<const0> ;
  assign pipe_tx_7_sigs[22] = \<const0> ;
  assign pipe_tx_7_sigs[21] = \<const0> ;
  assign pipe_tx_7_sigs[20] = \<const0> ;
  assign pipe_tx_7_sigs[19] = \<const0> ;
  assign pipe_tx_7_sigs[18] = \<const0> ;
  assign pipe_tx_7_sigs[17] = \<const0> ;
  assign pipe_tx_7_sigs[16] = \<const0> ;
  assign pipe_tx_7_sigs[15] = \<const0> ;
  assign pipe_tx_7_sigs[14] = \<const0> ;
  assign pipe_tx_7_sigs[13] = \<const0> ;
  assign pipe_tx_7_sigs[12] = \<const0> ;
  assign pipe_tx_7_sigs[11] = \<const0> ;
  assign pipe_tx_7_sigs[10] = \<const0> ;
  assign pipe_tx_7_sigs[9] = \<const0> ;
  assign pipe_tx_7_sigs[8] = \<const0> ;
  assign pipe_tx_7_sigs[7] = \<const0> ;
  assign pipe_tx_7_sigs[6] = \<const0> ;
  assign pipe_tx_7_sigs[5] = \<const0> ;
  assign pipe_tx_7_sigs[4] = \<const0> ;
  assign pipe_tx_7_sigs[3] = \<const0> ;
  assign pipe_tx_7_sigs[2] = \<const0> ;
  assign pipe_tx_7_sigs[1] = \<const0> ;
  assign pipe_tx_7_sigs[0] = \<const0> ;
  assign qpll_drp_clk = \<const0> ;
  assign qpll_drp_gen3 = \<const0> ;
  assign qpll_drp_ovrd = \<const0> ;
  assign qpll_drp_rst_n = \<const0> ;
  assign qpll_drp_start = \<const0> ;
  assign qpll_qplld = \<const0> ;
  assign qpll_qpllreset[1] = \<const0> ;
  assign qpll_qpllreset[0] = \<const0> ;
  assign user_clk_out = pipe_userclk2_in;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  pcie_7x_0_pcie_7x_0_core_top inst
       (.PIPE_DRP_FSM(\^pipe_drp_fsm ),
        .PIPE_QRST_IDLE(pipe_qrst_idle),
        .PIPE_RST_FSM(pipe_rst_fsm[4]),
        .PIPE_RST_IDLE(pipe_rst_idle),
        .PIPE_SYNC_FSM_TX(pipe_sync_fsm_tx),
        .cfg_aer_ecrc_check_en(cfg_aer_ecrc_check_en),
        .cfg_aer_ecrc_gen_en(cfg_aer_ecrc_gen_en),
        .cfg_aer_interrupt_msgnum(cfg_aer_interrupt_msgnum),
        .cfg_aer_rooterr_corr_err_received(cfg_aer_rooterr_corr_err_received),
        .cfg_aer_rooterr_corr_err_reporting_en(cfg_aer_rooterr_corr_err_reporting_en),
        .cfg_aer_rooterr_fatal_err_received(cfg_aer_rooterr_fatal_err_received),
        .cfg_aer_rooterr_fatal_err_reporting_en(cfg_aer_rooterr_fatal_err_reporting_en),
        .cfg_aer_rooterr_non_fatal_err_received(cfg_aer_rooterr_non_fatal_err_received),
        .cfg_aer_rooterr_non_fatal_err_reporting_en(cfg_aer_rooterr_non_fatal_err_reporting_en),
        .cfg_bridge_serr_en(cfg_bridge_serr_en),
        .cfg_bus_number(cfg_bus_number),
        .cfg_command({\^cfg_command [10],\^cfg_command [8],\^cfg_command [2:0]}),
        .cfg_dcommand(\^cfg_dcommand ),
        .cfg_dcommand2(\^cfg_dcommand2 ),
        .cfg_device_number(cfg_device_number),
        .cfg_ds_bus_number(cfg_ds_bus_number),
        .cfg_ds_device_number(cfg_ds_device_number),
        .cfg_ds_function_number(cfg_ds_function_number),
        .cfg_dsn(cfg_dsn),
        .cfg_dstatus({\^cfg_dstatus [5],\^cfg_dstatus [3:0]}),
        .cfg_err_aer_headerlog(cfg_err_aer_headerlog),
        .cfg_err_aer_headerlog_set(cfg_err_aer_headerlog_set),
        .cfg_err_atomic_egress_blocked(cfg_err_atomic_egress_blocked),
        .cfg_err_cor(cfg_err_cor),
        .cfg_err_cpl_abort(cfg_err_cpl_abort),
        .cfg_err_cpl_rdy(cfg_err_cpl_rdy),
        .cfg_err_cpl_timeout(cfg_err_cpl_timeout),
        .cfg_err_cpl_unexpect(cfg_err_cpl_unexpect),
        .cfg_err_ecrc(cfg_err_ecrc),
        .cfg_err_internal_cor(cfg_err_internal_cor),
        .cfg_err_internal_uncor(cfg_err_internal_uncor),
        .cfg_err_locked(cfg_err_locked),
        .cfg_err_malformed(cfg_err_malformed),
        .cfg_err_mc_blocked(cfg_err_mc_blocked),
        .cfg_err_norecovery(cfg_err_norecovery),
        .cfg_err_poisoned(cfg_err_poisoned),
        .cfg_err_posted(cfg_err_posted),
        .cfg_err_tlp_cpl_header(cfg_err_tlp_cpl_header),
        .cfg_err_ur(cfg_err_ur),
        .cfg_function_number(cfg_function_number),
        .cfg_interrupt(cfg_interrupt),
        .cfg_interrupt_assert(cfg_interrupt_assert),
        .cfg_interrupt_di(cfg_interrupt_di),
        .cfg_interrupt_do(cfg_interrupt_do),
        .cfg_interrupt_mmenable(cfg_interrupt_mmenable),
        .cfg_interrupt_msienable(cfg_interrupt_msienable),
        .cfg_interrupt_msixenable(cfg_interrupt_msixenable),
        .cfg_interrupt_msixfm(cfg_interrupt_msixfm),
        .cfg_interrupt_rdy(cfg_interrupt_rdy),
        .cfg_interrupt_stat(cfg_interrupt_stat),
        .cfg_lcommand({\^cfg_lcommand [11:3],\^cfg_lcommand [1:0]}),
        .cfg_lstatus({\^cfg_lstatus [15:13],\^cfg_lstatus [11],\^cfg_lstatus [7:4],\^cfg_lstatus [1:0]}),
        .cfg_mgmt_byte_en(cfg_mgmt_byte_en),
        .cfg_mgmt_di(cfg_mgmt_di),
        .cfg_mgmt_do(cfg_mgmt_do),
        .cfg_mgmt_dwaddr(cfg_mgmt_dwaddr),
        .cfg_mgmt_rd_en(cfg_mgmt_rd_en),
        .cfg_mgmt_rd_wr_done(cfg_mgmt_rd_wr_done),
        .cfg_mgmt_wr_en(cfg_mgmt_wr_en),
        .cfg_mgmt_wr_readonly(cfg_mgmt_wr_readonly),
        .cfg_mgmt_wr_rw1c_as_rw(cfg_mgmt_wr_rw1c_as_rw),
        .cfg_msg_data(cfg_msg_data),
        .cfg_msg_received(cfg_msg_received),
        .cfg_msg_received_assert_int_a(cfg_msg_received_assert_int_a),
        .cfg_msg_received_assert_int_b(cfg_msg_received_assert_int_b),
        .cfg_msg_received_assert_int_c(cfg_msg_received_assert_int_c),
        .cfg_msg_received_assert_int_d(cfg_msg_received_assert_int_d),
        .cfg_msg_received_deassert_int_a(cfg_msg_received_deassert_int_a),
        .cfg_msg_received_deassert_int_b(cfg_msg_received_deassert_int_b),
        .cfg_msg_received_deassert_int_c(cfg_msg_received_deassert_int_c),
        .cfg_msg_received_deassert_int_d(cfg_msg_received_deassert_int_d),
        .cfg_msg_received_err_cor(cfg_msg_received_err_cor),
        .cfg_msg_received_err_fatal(cfg_msg_received_err_fatal),
        .cfg_msg_received_err_non_fatal(cfg_msg_received_err_non_fatal),
        .cfg_msg_received_pm_as_nak(cfg_msg_received_pm_as_nak),
        .cfg_msg_received_pm_pme(cfg_msg_received_pm_pme),
        .cfg_msg_received_pme_to_ack(cfg_msg_received_pme_to_ack),
        .cfg_msg_received_setslotpowerlimit(cfg_msg_received_setslotpowerlimit),
        .cfg_pcie_link_state(cfg_pcie_link_state),
        .cfg_pciecap_interrupt_msgnum(cfg_pciecap_interrupt_msgnum),
        .cfg_pm_force_state(cfg_pm_force_state),
        .cfg_pm_force_state_en(cfg_pm_force_state_en),
        .cfg_pm_halt_aspm_l0s(cfg_pm_halt_aspm_l0s),
        .cfg_pm_halt_aspm_l1(cfg_pm_halt_aspm_l1),
        .cfg_pm_wake(cfg_pm_wake),
        .cfg_pmcsr_pme_en(cfg_pmcsr_pme_en),
        .cfg_pmcsr_pme_status(cfg_pmcsr_pme_status),
        .cfg_pmcsr_powerstate(cfg_pmcsr_powerstate),
        .cfg_received_func_lvl_rst(cfg_received_func_lvl_rst),
        .cfg_root_control_pme_int_en(cfg_root_control_pme_int_en),
        .cfg_root_control_syserr_corr_err_en(cfg_root_control_syserr_corr_err_en),
        .cfg_root_control_syserr_fatal_err_en(cfg_root_control_syserr_fatal_err_en),
        .cfg_root_control_syserr_non_fatal_err_en(cfg_root_control_syserr_non_fatal_err_en),
        .cfg_slot_control_electromech_il_ctl_pulse(cfg_slot_control_electromech_il_ctl_pulse),
        .cfg_to_turnoff(cfg_to_turnoff),
        .cfg_trn_pending(cfg_trn_pending),
        .cfg_turnoff_ok(cfg_turnoff_ok),
        .cfg_vc_tcvc_map(cfg_vc_tcvc_map),
        .ext_ch_gt_drpaddr(ext_ch_gt_drpaddr),
        .ext_ch_gt_drpdi(ext_ch_gt_drpdi),
        .ext_ch_gt_drpdo(ext_ch_gt_drpdo),
        .ext_ch_gt_drpen(ext_ch_gt_drpen),
        .ext_ch_gt_drprdy(ext_ch_gt_drprdy),
        .ext_ch_gt_drpwe(ext_ch_gt_drpwe),
        .fc_cpld(fc_cpld),
        .fc_cplh(fc_cplh),
        .fc_npd(fc_npd),
        .fc_nph(fc_nph),
        .fc_pd(fc_pd),
        .fc_ph(fc_ph),
        .fc_sel(fc_sel),
        .gen3_reg(pipe_gen3_out),
        .gt_ch_drp_rdy(gt_ch_drp_rdy),
        .int_qplllock_out(\^int_qplllock_out ),
        .int_qplloutclk_out(\^int_qplloutclk_out ),
        .int_qplloutrefclk_out(\^int_qplloutrefclk_out ),
        .m_axis_rx_tdata(m_axis_rx_tdata),
        .m_axis_rx_tready(m_axis_rx_tready),
        .m_axis_rx_tuser({\^m_axis_rx_tuser [21:18],\^m_axis_rx_tuser [14:13],\^m_axis_rx_tuser [8:0]}),
        .m_axis_rx_tvalid(m_axis_rx_tvalid),
        .pci_exp_rxn(pci_exp_rxn),
        .pci_exp_rxp(pci_exp_rxp),
        .pci_exp_txn(pci_exp_txn),
        .pci_exp_txp(pci_exp_txp),
        .pcie_drp_addr(pcie_drp_addr),
        .pcie_drp_clk(pcie_drp_clk),
        .pcie_drp_di(pcie_drp_di),
        .pcie_drp_do(pcie_drp_do),
        .pcie_drp_en(pcie_drp_en),
        .pcie_drp_rdy(pcie_drp_rdy),
        .pcie_drp_we(pcie_drp_we),
        .pipe_cpll_lock(pipe_cpll_lock),
        .pipe_dclk_in(pipe_dclk_in),
        .pipe_dmonitorout({\^pipe_dmonitorout [52:45],\^pipe_dmonitorout [37:30],\^pipe_dmonitorout [22:15],\^pipe_dmonitorout [7:0]}),
        .pipe_eyescandataerror(pipe_eyescandataerror),
        .pipe_loopback(pipe_loopback),
        .pipe_mmcm_lock_in(pipe_mmcm_lock_in),
        .pipe_oobclk_in(pipe_oobclk_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_pclk_sel_out(pipe_pclk_sel_out),
        .pipe_qrst_fsm(\^pipe_qrst_fsm ),
        .pipe_rate_fsm(pipe_rate_fsm),
        .pipe_rate_idle(pipe_rate_idle),
        .pipe_rst_fsm(pipe_rst_fsm[3:0]),
        .pipe_rxbufstatus(pipe_rxbufstatus),
        .pipe_rxcommadet(pipe_rxcommadet),
        .pipe_rxdisperr(pipe_rxdisperr),
        .pipe_rxdlysresetdone(pipe_rxdlysresetdone),
        .pipe_rxnotintable(pipe_rxnotintable),
        .pipe_rxoutclk_out(pipe_rxoutclk_out),
        .pipe_rxphaligndone(pipe_rxphaligndone),
        .pipe_rxprbscntreset(pipe_rxprbscntreset),
        .pipe_rxprbserr(pipe_rxprbserr),
        .pipe_rxprbssel(pipe_rxprbssel),
        .pipe_rxstatus(pipe_rxstatus),
        .pipe_rxusrclk_in(pipe_rxusrclk_in),
        .pipe_sync_fsm_rx({\^pipe_sync_fsm_rx [21],\^pipe_sync_fsm_rx [14],\^pipe_sync_fsm_rx [7],\^pipe_sync_fsm_rx [0]}),
        .pipe_txdlysresetdone(pipe_txdlysresetdone),
        .pipe_txinhibit(pipe_txinhibit),
        .pipe_txoutclk_out(pipe_txoutclk_out),
        .pipe_txphaligndone(pipe_txphaligndone),
        .pipe_txphinitdone(pipe_txphinitdone),
        .pipe_txprbsforceerr(pipe_txprbsforceerr),
        .pipe_txprbssel(pipe_txprbssel),
        .pipe_userclk1_in(pipe_userclk1_in),
        .pipe_userclk2_in(pipe_userclk2_in),
        .pl_directed_change_done(pl_directed_change_done),
        .pl_directed_link_auton(pl_directed_link_auton),
        .pl_directed_link_change(pl_directed_link_change),
        .pl_directed_link_speed(pl_directed_link_speed),
        .pl_directed_link_width(pl_directed_link_width),
        .pl_downstream_deemph_source(pl_downstream_deemph_source),
        .pl_initial_link_width(pl_initial_link_width),
        .pl_lane_reversal_mode(pl_lane_reversal_mode),
        .pl_link_gen2_cap(pl_link_gen2_cap),
        .pl_link_partner_gen2_supported(pl_link_partner_gen2_supported),
        .pl_link_upcfg_cap(pl_link_upcfg_cap),
        .pl_ltssm_state(pl_ltssm_state),
        .pl_phy_lnk_up(pl_phy_lnk_up),
        .pl_received_hot_rst(pl_received_hot_rst),
        .pl_rx_pm_state(pl_rx_pm_state),
        .pl_sel_lnk_rate(pl_sel_lnk_rate),
        .pl_sel_lnk_width(pl_sel_lnk_width),
        .pl_transmit_hot_rst(pl_transmit_hot_rst),
        .pl_tx_pm_state(pl_tx_pm_state),
        .pl_upstream_prefer_deemph(pl_upstream_prefer_deemph),
        .rx_np_ok(rx_np_ok),
        .rx_np_req(rx_np_req),
        .s_axis_tx_tdata(s_axis_tx_tdata),
        .s_axis_tx_tkeep({s_axis_tx_tkeep[15],s_axis_tx_tkeep[11],s_axis_tx_tkeep[7]}),
        .s_axis_tx_tlast(s_axis_tx_tlast),
        .s_axis_tx_tready(s_axis_tx_tready),
        .s_axis_tx_tuser(s_axis_tx_tuser),
        .s_axis_tx_tvalid(s_axis_tx_tvalid),
        .startup_cfgclk(startup_cfgclk),
        .startup_cfgmclk(startup_cfgmclk),
        .startup_clk(startup_clk),
        .startup_eos(startup_eos),
        .startup_gsr(startup_gsr),
        .startup_gts(startup_gts),
        .startup_keyclearb(startup_keyclearb),
        .startup_pack(startup_pack),
        .startup_preq(startup_preq),
        .startup_usrcclko(startup_usrcclko),
        .startup_usrcclkts(startup_usrcclkts),
        .startup_usrdoneo(startup_usrdoneo),
        .startup_usrdonets(startup_usrdonets),
        .sys_clk(sys_clk),
        .sys_rst_n(sys_rst_n),
        .tx_buf_av(tx_buf_av),
        .tx_cfg_gnt(tx_cfg_gnt),
        .tx_cfg_req(tx_cfg_req),
        .tx_err_drop(tx_err_drop),
        .user_app_rdy_gnt_reg(user_app_rdy),
        .user_lnk_up(user_lnk_up),
        .user_reset_out(user_reset_out));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pcie_7x" *) 
module pcie_7x_0_pcie_7x_0_pcie_7x
   (user_reset_int_reg,
    dsc_detect,
    trn_reof,
    trn_rsof,
    trn_rsrc_dsc,
    rsrc_rdy_filtered,
    trn_rsrc_dsc_prev0,
    tcfg_req_trig,
    trn_tcfg_req,
    \tbuf_av_d_reg[3] ,
    trn_tbuf_av,
    tbuf_av_min_trig,
    pcie_drp_clk_0,
    E,
    cfg_msg_received,
    lnk_up_thrtl_reg,
    trn_tdst_rdy,
    in0,
    pcie_drp_clk_1,
    src_in,
    cfg_mgmt_rd_wr_done,
    cfg_err_aer_headerlog_set,
    cfg_err_cpl_rdy,
    cfg_interrupt_rdy,
    cfg_received_func_lvl_rst,
    trn_in_packet_reg,
    ppm_L1_thrtl_reg,
    cfg_pcie_link_state,
    \L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg ,
    cfg_msg_received_pme_to,
    cfg_aer_ecrc_check_en,
    cfg_aer_ecrc_gen_en,
    cfg_aer_rooterr_corr_err_received,
    cfg_aer_rooterr_corr_err_reporting_en,
    cfg_aer_rooterr_fatal_err_received,
    cfg_aer_rooterr_fatal_err_reporting_en,
    cfg_aer_rooterr_non_fatal_err_received,
    cfg_aer_rooterr_non_fatal_err_reporting_en,
    cfg_bridge_serr_en,
    cfg_command,
    cfg_dcommand2,
    cfg_dcommand,
    cfg_dstatus,
    cfg_interrupt_msienable,
    cfg_interrupt_msixenable,
    cfg_interrupt_msixfm,
    cfg_lcommand,
    cfg_lstatus,
    cfg_msg_received_assert_int_a,
    cfg_msg_received_assert_int_b,
    cfg_msg_received_assert_int_c,
    cfg_msg_received_assert_int_d,
    cfg_msg_received_deassert_int_a,
    cfg_msg_received_deassert_int_b,
    cfg_msg_received_deassert_int_c,
    cfg_msg_received_deassert_int_d,
    cfg_msg_received_err_cor,
    cfg_msg_received_err_fatal,
    cfg_msg_received_err_non_fatal,
    cfg_msg_received_pm_as_nak,
    cfg_msg_received_pme_to_ack,
    cfg_msg_received_pm_pme,
    cfg_msg_received_setslotpowerlimit,
    cfg_pmcsr_pme_en,
    cfg_pmcsr_pme_status,
    cfg_root_control_pme_int_en,
    cfg_root_control_syserr_corr_err_en,
    cfg_root_control_syserr_fatal_err_en,
    cfg_root_control_syserr_non_fatal_err_en,
    cfg_slot_control_electromech_il_ctl_pulse,
    drp_rdy,
    pipe_rx0_polarity,
    pipe_rx1_polarity,
    pipe_rx2_polarity,
    pipe_rx3_polarity,
    pipe_tx0_compliance,
    pipe_tx0_elec_idle,
    pipe_tx1_compliance,
    pipe_tx1_elec_idle,
    pipe_tx2_compliance,
    pipe_tx2_elec_idle,
    pipe_tx3_compliance,
    pipe_tx3_elec_idle,
    pipe_tx_deemph,
    pipe_tx_rate,
    pipe_tx_rcvr_det,
    pl_directed_change_done,
    pl_link_gen2_cap,
    pl_link_partner_gen2_supported,
    pl_link_upcfg_cap,
    pl_received_hot_rst,
    pl_sel_lnk_rate,
    trn_lnk_up,
    trn_recrc_err,
    trn_rerrfwd,
    trn_terr_drop,
    fc_cpld,
    fc_npd,
    fc_pd,
    trn_rd,
    cfg_msg_data,
    drp_do,
    pipe_tx0_data,
    pipe_tx1_data,
    pipe_tx2_data,
    pipe_tx3_data,
    cfg_pmcsr_powerstate,
    pipe_tx0_char_is_k,
    pipe_tx0_powerdown,
    pipe_tx1_char_is_k,
    pipe_tx1_powerdown,
    pipe_tx2_char_is_k,
    pipe_tx2_powerdown,
    pipe_tx3_char_is_k,
    pipe_tx3_powerdown,
    pl_lane_reversal_mode,
    pl_rx_pm_state,
    pl_sel_lnk_width,
    trn_rrem,
    cfg_interrupt_mmenable,
    pipe_tx_margin,
    pl_initial_link_width,
    pl_tx_pm_state,
    cfg_mgmt_do,
    cfg_vc_tcvc_map,
    cfg_interrupt_do,
    fc_cplh,
    fc_nph,
    fc_ph,
    trn_rbar_hit,
    bridge_reset_int,
    pl_phy_lnk_up_q,
    trn_rdst_rdy,
    trn_in_packet,
    trn_rsrc_dsc_d,
    reg_dsc_detect,
    reg_tcfg_gnt,
    tbuf_av_gap_thrtl_i_3,
    lnk_up_thrtl,
    out,
    ltssm_reg2,
    pl_ltssm_state,
    store_ltssm_inferred_i_1_0,
    ppm_L1_trig,
    ppm_L1_thrtl,
    cfg_mgmt_wr_rw1c_as_rw,
    cfg_mgmt_wr_readonly,
    cfg_err_posted,
    cfg_err_locked,
    cfg_err_norecovery,
    cfg_interrupt_assert,
    cfg_interrupt_stat,
    \L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff ,
    pipe_userclk1_in,
    cfg_err_atomic_egress_blocked_n,
    cfg_err_cor_n,
    cfg_err_cpl_abort_n,
    cfg_err_cpl_timeout_n,
    cfg_err_cpl_unexpect_n,
    cfg_err_ecrc_n,
    cfg_err_internal_cor_n,
    cfg_err_internal_uncor_n,
    cfg_err_malformed_n,
    cfg_err_mc_blocked_n,
    cfg_err_poisoned_n,
    cfg_err_ur_n,
    cfg_interrupt_n,
    cfg_mgmt_rd_en_n,
    cfg_mgmt_wr_en_n,
    cfg_pm_force_state_en_n,
    cfg_pm_halt_aspm_l0s_n,
    cfg_pm_halt_aspm_l1_n,
    cfg_pm_turnoff_ok_n,
    cfg_pm_wake_n,
    cfg_trn_pending_n,
    pcie_drp_clk,
    drp_en,
    drp_we,
    pipe_pclk_in,
    pipe_rx0_chanisaligned,
    pipe_rx0_elec_idle,
    pipe_rx0_phy_status,
    pipe_rx0_valid,
    pipe_rx1_chanisaligned,
    pipe_rx1_elec_idle,
    pipe_rx1_phy_status,
    pipe_rx1_valid,
    pipe_rx2_chanisaligned,
    pipe_rx2_elec_idle,
    pipe_rx2_phy_status,
    pipe_rx2_valid,
    pipe_rx3_chanisaligned,
    pipe_rx3_elec_idle,
    pipe_rx3_phy_status,
    pipe_rx3_valid,
    pl_directed_link_auton,
    pl_directed_link_speed,
    pl_downstream_deemph_source,
    pl_transmit_hot_rst,
    pl_upstream_prefer_deemph,
    sys_rst_n,
    trn_rnp_ok,
    trn_rnp_req,
    trn_tcfg_gnt,
    cfg_aer_ecrc_check_en_0,
    trn_teof,
    trn_tsof,
    trn_tsrc_rdy,
    pipe_userclk2_in,
    cfg_err_aer_headerlog,
    trn_td,
    drp_di,
    Q,
    cfg_aer_ecrc_check_en_1,
    cfg_aer_ecrc_check_en_2,
    cfg_aer_ecrc_check_en_3,
    cfg_pm_force_state,
    cfg_aer_ecrc_check_en_4,
    cfg_aer_ecrc_check_en_5,
    cfg_aer_ecrc_check_en_6,
    cfg_aer_ecrc_check_en_7,
    pl_directed_link_change,
    pl_directed_link_width,
    trn_trem,
    cfg_ds_function_number,
    cfg_aer_ecrc_check_en_8,
    cfg_aer_ecrc_check_en_9,
    cfg_aer_ecrc_check_en_10,
    cfg_aer_ecrc_check_en_11,
    trn_fc_sel,
    cfg_mgmt_di,
    cfg_mgmt_byte_en_n,
    cfg_err_tlp_cpl_header,
    cfg_aer_interrupt_msgnum,
    cfg_ds_device_number,
    cfg_pciecap_interrupt_msgnum,
    cfg_dsn,
    cfg_ds_bus_number,
    cfg_interrupt_di,
    drp_addr,
    cfg_mgmt_dwaddr);
  output user_reset_int_reg;
  output dsc_detect;
  output trn_reof;
  output trn_rsof;
  output trn_rsrc_dsc;
  output rsrc_rdy_filtered;
  output trn_rsrc_dsc_prev0;
  output tcfg_req_trig;
  output trn_tcfg_req;
  output \tbuf_av_d_reg[3] ;
  output [5:0]trn_tbuf_av;
  output tbuf_av_min_trig;
  output pcie_drp_clk_0;
  output [0:0]E;
  output cfg_msg_received;
  output lnk_up_thrtl_reg;
  output trn_tdst_rdy;
  output in0;
  output [5:0]pcie_drp_clk_1;
  output src_in;
  output cfg_mgmt_rd_wr_done;
  output cfg_err_aer_headerlog_set;
  output cfg_err_cpl_rdy;
  output cfg_interrupt_rdy;
  output cfg_received_func_lvl_rst;
  output trn_in_packet_reg;
  output ppm_L1_thrtl_reg;
  output [2:0]cfg_pcie_link_state;
  output \L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg ;
  output cfg_msg_received_pme_to;
  output cfg_aer_ecrc_check_en;
  output cfg_aer_ecrc_gen_en;
  output cfg_aer_rooterr_corr_err_received;
  output cfg_aer_rooterr_corr_err_reporting_en;
  output cfg_aer_rooterr_fatal_err_received;
  output cfg_aer_rooterr_fatal_err_reporting_en;
  output cfg_aer_rooterr_non_fatal_err_received;
  output cfg_aer_rooterr_non_fatal_err_reporting_en;
  output cfg_bridge_serr_en;
  output [4:0]cfg_command;
  output [11:0]cfg_dcommand2;
  output [14:0]cfg_dcommand;
  output [3:0]cfg_dstatus;
  output cfg_interrupt_msienable;
  output cfg_interrupt_msixenable;
  output cfg_interrupt_msixfm;
  output [10:0]cfg_lcommand;
  output [9:0]cfg_lstatus;
  output cfg_msg_received_assert_int_a;
  output cfg_msg_received_assert_int_b;
  output cfg_msg_received_assert_int_c;
  output cfg_msg_received_assert_int_d;
  output cfg_msg_received_deassert_int_a;
  output cfg_msg_received_deassert_int_b;
  output cfg_msg_received_deassert_int_c;
  output cfg_msg_received_deassert_int_d;
  output cfg_msg_received_err_cor;
  output cfg_msg_received_err_fatal;
  output cfg_msg_received_err_non_fatal;
  output cfg_msg_received_pm_as_nak;
  output cfg_msg_received_pme_to_ack;
  output cfg_msg_received_pm_pme;
  output cfg_msg_received_setslotpowerlimit;
  output cfg_pmcsr_pme_en;
  output cfg_pmcsr_pme_status;
  output cfg_root_control_pme_int_en;
  output cfg_root_control_syserr_corr_err_en;
  output cfg_root_control_syserr_fatal_err_en;
  output cfg_root_control_syserr_non_fatal_err_en;
  output cfg_slot_control_electromech_il_ctl_pulse;
  output drp_rdy;
  output pipe_rx0_polarity;
  output pipe_rx1_polarity;
  output pipe_rx2_polarity;
  output pipe_rx3_polarity;
  output pipe_tx0_compliance;
  output pipe_tx0_elec_idle;
  output pipe_tx1_compliance;
  output pipe_tx1_elec_idle;
  output pipe_tx2_compliance;
  output pipe_tx2_elec_idle;
  output pipe_tx3_compliance;
  output pipe_tx3_elec_idle;
  output pipe_tx_deemph;
  output pipe_tx_rate;
  output pipe_tx_rcvr_det;
  output pl_directed_change_done;
  output pl_link_gen2_cap;
  output pl_link_partner_gen2_supported;
  output pl_link_upcfg_cap;
  output pl_received_hot_rst;
  output pl_sel_lnk_rate;
  output trn_lnk_up;
  output trn_recrc_err;
  output trn_rerrfwd;
  output trn_terr_drop;
  output [11:0]fc_cpld;
  output [11:0]fc_npd;
  output [11:0]fc_pd;
  output [127:0]trn_rd;
  output [15:0]cfg_msg_data;
  output [15:0]drp_do;
  output [15:0]pipe_tx0_data;
  output [15:0]pipe_tx1_data;
  output [15:0]pipe_tx2_data;
  output [15:0]pipe_tx3_data;
  output [1:0]cfg_pmcsr_powerstate;
  output [1:0]pipe_tx0_char_is_k;
  output [1:0]pipe_tx0_powerdown;
  output [1:0]pipe_tx1_char_is_k;
  output [1:0]pipe_tx1_powerdown;
  output [1:0]pipe_tx2_char_is_k;
  output [1:0]pipe_tx2_powerdown;
  output [1:0]pipe_tx3_char_is_k;
  output [1:0]pipe_tx3_powerdown;
  output [1:0]pl_lane_reversal_mode;
  output [1:0]pl_rx_pm_state;
  output [1:0]pl_sel_lnk_width;
  output [1:0]trn_rrem;
  output [2:0]cfg_interrupt_mmenable;
  output [2:0]pipe_tx_margin;
  output [2:0]pl_initial_link_width;
  output [2:0]pl_tx_pm_state;
  output [31:0]cfg_mgmt_do;
  output [6:0]cfg_vc_tcvc_map;
  output [7:0]cfg_interrupt_do;
  output [7:0]fc_cplh;
  output [7:0]fc_nph;
  output [7:0]fc_ph;
  output [6:0]trn_rbar_hit;
  input bridge_reset_int;
  input pl_phy_lnk_up_q;
  input trn_rdst_rdy;
  input trn_in_packet;
  input trn_rsrc_dsc_d;
  input reg_dsc_detect;
  input reg_tcfg_gnt;
  input [1:0]tbuf_av_gap_thrtl_i_3;
  input lnk_up_thrtl;
  input out;
  input [5:0]ltssm_reg2;
  input [1:0]pl_ltssm_state;
  input store_ltssm_inferred_i_1_0;
  input ppm_L1_trig;
  input ppm_L1_thrtl;
  input cfg_mgmt_wr_rw1c_as_rw;
  input cfg_mgmt_wr_readonly;
  input cfg_err_posted;
  input cfg_err_locked;
  input cfg_err_norecovery;
  input cfg_interrupt_assert;
  input cfg_interrupt_stat;
  input \L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff ;
  input pipe_userclk1_in;
  input cfg_err_atomic_egress_blocked_n;
  input cfg_err_cor_n;
  input cfg_err_cpl_abort_n;
  input cfg_err_cpl_timeout_n;
  input cfg_err_cpl_unexpect_n;
  input cfg_err_ecrc_n;
  input cfg_err_internal_cor_n;
  input cfg_err_internal_uncor_n;
  input cfg_err_malformed_n;
  input cfg_err_mc_blocked_n;
  input cfg_err_poisoned_n;
  input cfg_err_ur_n;
  input cfg_interrupt_n;
  input cfg_mgmt_rd_en_n;
  input cfg_mgmt_wr_en_n;
  input cfg_pm_force_state_en_n;
  input cfg_pm_halt_aspm_l0s_n;
  input cfg_pm_halt_aspm_l1_n;
  input cfg_pm_turnoff_ok_n;
  input cfg_pm_wake_n;
  input cfg_trn_pending_n;
  input pcie_drp_clk;
  input drp_en;
  input drp_we;
  input pipe_pclk_in;
  input pipe_rx0_chanisaligned;
  input pipe_rx0_elec_idle;
  input pipe_rx0_phy_status;
  input pipe_rx0_valid;
  input pipe_rx1_chanisaligned;
  input pipe_rx1_elec_idle;
  input pipe_rx1_phy_status;
  input pipe_rx1_valid;
  input pipe_rx2_chanisaligned;
  input pipe_rx2_elec_idle;
  input pipe_rx2_phy_status;
  input pipe_rx2_valid;
  input pipe_rx3_chanisaligned;
  input pipe_rx3_elec_idle;
  input pipe_rx3_phy_status;
  input pipe_rx3_valid;
  input pl_directed_link_auton;
  input pl_directed_link_speed;
  input pl_downstream_deemph_source;
  input pl_transmit_hot_rst;
  input pl_upstream_prefer_deemph;
  input sys_rst_n;
  input trn_rnp_ok;
  input trn_rnp_req;
  input trn_tcfg_gnt;
  input [3:0]cfg_aer_ecrc_check_en_0;
  input trn_teof;
  input trn_tsof;
  input trn_tsrc_rdy;
  input pipe_userclk2_in;
  input [127:0]cfg_err_aer_headerlog;
  input [127:0]trn_td;
  input [15:0]drp_di;
  input [15:0]Q;
  input [15:0]cfg_aer_ecrc_check_en_1;
  input [15:0]cfg_aer_ecrc_check_en_2;
  input [15:0]cfg_aer_ecrc_check_en_3;
  input [1:0]cfg_pm_force_state;
  input [1:0]cfg_aer_ecrc_check_en_4;
  input [1:0]cfg_aer_ecrc_check_en_5;
  input [1:0]cfg_aer_ecrc_check_en_6;
  input [1:0]cfg_aer_ecrc_check_en_7;
  input [1:0]pl_directed_link_change;
  input [1:0]pl_directed_link_width;
  input [1:0]trn_trem;
  input [2:0]cfg_ds_function_number;
  input [2:0]cfg_aer_ecrc_check_en_8;
  input [2:0]cfg_aer_ecrc_check_en_9;
  input [2:0]cfg_aer_ecrc_check_en_10;
  input [2:0]cfg_aer_ecrc_check_en_11;
  input [2:0]trn_fc_sel;
  input [31:0]cfg_mgmt_di;
  input [3:0]cfg_mgmt_byte_en_n;
  input [47:0]cfg_err_tlp_cpl_header;
  input [4:0]cfg_aer_interrupt_msgnum;
  input [4:0]cfg_ds_device_number;
  input [4:0]cfg_pciecap_interrupt_msgnum;
  input [63:0]cfg_dsn;
  input [7:0]cfg_ds_bus_number;
  input [7:0]cfg_interrupt_di;
  input [8:0]drp_addr;
  input [9:0]cfg_mgmt_dwaddr;

  wire [0:0]E;
  wire \L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff ;
  wire \L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg ;
  wire [15:0]Q;
  wire bridge_reset_int;
  wire cfg_aer_ecrc_check_en;
  wire [3:0]cfg_aer_ecrc_check_en_0;
  wire [15:0]cfg_aer_ecrc_check_en_1;
  wire [2:0]cfg_aer_ecrc_check_en_10;
  wire [2:0]cfg_aer_ecrc_check_en_11;
  wire [15:0]cfg_aer_ecrc_check_en_2;
  wire [15:0]cfg_aer_ecrc_check_en_3;
  wire [1:0]cfg_aer_ecrc_check_en_4;
  wire [1:0]cfg_aer_ecrc_check_en_5;
  wire [1:0]cfg_aer_ecrc_check_en_6;
  wire [1:0]cfg_aer_ecrc_check_en_7;
  wire [2:0]cfg_aer_ecrc_check_en_8;
  wire [2:0]cfg_aer_ecrc_check_en_9;
  wire cfg_aer_ecrc_gen_en;
  wire [4:0]cfg_aer_interrupt_msgnum;
  wire cfg_aer_rooterr_corr_err_received;
  wire cfg_aer_rooterr_corr_err_reporting_en;
  wire cfg_aer_rooterr_fatal_err_received;
  wire cfg_aer_rooterr_fatal_err_reporting_en;
  wire cfg_aer_rooterr_non_fatal_err_received;
  wire cfg_aer_rooterr_non_fatal_err_reporting_en;
  wire cfg_bridge_serr_en;
  wire [4:0]cfg_command;
  wire [14:0]cfg_dcommand;
  wire [11:0]cfg_dcommand2;
  wire [7:0]cfg_ds_bus_number;
  wire [4:0]cfg_ds_device_number;
  wire [2:0]cfg_ds_function_number;
  wire [63:0]cfg_dsn;
  wire [3:0]cfg_dstatus;
  wire [127:0]cfg_err_aer_headerlog;
  wire cfg_err_aer_headerlog_set;
  wire cfg_err_aer_headerlog_set_n;
  wire cfg_err_atomic_egress_blocked_n;
  wire cfg_err_cor_n;
  wire cfg_err_cpl_abort_n;
  wire cfg_err_cpl_rdy;
  wire cfg_err_cpl_rdy_n;
  wire cfg_err_cpl_timeout_n;
  wire cfg_err_cpl_unexpect_n;
  wire cfg_err_ecrc_n;
  wire cfg_err_internal_cor_n;
  wire cfg_err_internal_uncor_n;
  wire cfg_err_locked;
  wire cfg_err_malformed_n;
  wire cfg_err_mc_blocked_n;
  wire cfg_err_norecovery;
  wire cfg_err_poisoned_n;
  wire cfg_err_posted;
  wire [47:0]cfg_err_tlp_cpl_header;
  wire cfg_err_ur_n;
  wire cfg_interrupt_assert;
  wire [7:0]cfg_interrupt_di;
  wire [7:0]cfg_interrupt_do;
  wire [2:0]cfg_interrupt_mmenable;
  wire cfg_interrupt_msienable;
  wire cfg_interrupt_msixenable;
  wire cfg_interrupt_msixfm;
  wire cfg_interrupt_n;
  wire cfg_interrupt_rdy;
  wire cfg_interrupt_rdy_n;
  wire cfg_interrupt_stat;
  wire [10:0]cfg_lcommand;
  wire [9:0]cfg_lstatus;
  wire [3:0]cfg_mgmt_byte_en_n;
  wire [31:0]cfg_mgmt_di;
  wire [31:0]cfg_mgmt_do;
  wire [9:0]cfg_mgmt_dwaddr;
  wire cfg_mgmt_rd_en_n;
  wire cfg_mgmt_rd_wr_done;
  wire cfg_mgmt_rd_wr_done_n;
  wire cfg_mgmt_wr_en_n;
  wire cfg_mgmt_wr_readonly;
  wire cfg_mgmt_wr_rw1c_as_rw;
  wire [15:0]cfg_msg_data;
  wire cfg_msg_received;
  wire cfg_msg_received_assert_int_a;
  wire cfg_msg_received_assert_int_b;
  wire cfg_msg_received_assert_int_c;
  wire cfg_msg_received_assert_int_d;
  wire cfg_msg_received_deassert_int_a;
  wire cfg_msg_received_deassert_int_b;
  wire cfg_msg_received_deassert_int_c;
  wire cfg_msg_received_deassert_int_d;
  wire cfg_msg_received_err_cor;
  wire cfg_msg_received_err_fatal;
  wire cfg_msg_received_err_non_fatal;
  wire cfg_msg_received_pm_as_nak;
  wire cfg_msg_received_pm_pme;
  wire cfg_msg_received_pme_to;
  wire cfg_msg_received_pme_to_ack;
  wire cfg_msg_received_setslotpowerlimit;
  wire [2:0]cfg_pcie_link_state;
  wire [4:0]cfg_pciecap_interrupt_msgnum;
  wire [1:0]cfg_pm_force_state;
  wire cfg_pm_force_state_en_n;
  wire cfg_pm_halt_aspm_l0s_n;
  wire cfg_pm_halt_aspm_l1_n;
  wire cfg_pm_turnoff_ok_n;
  wire cfg_pm_wake_n;
  wire cfg_pmcsr_pme_en;
  wire cfg_pmcsr_pme_status;
  wire [1:0]cfg_pmcsr_powerstate;
  wire cfg_received_func_lvl_rst;
  wire cfg_received_func_lvl_rst_n;
  wire cfg_root_control_pme_int_en;
  wire cfg_root_control_syserr_corr_err_en;
  wire cfg_root_control_syserr_fatal_err_en;
  wire cfg_root_control_syserr_non_fatal_err_en;
  wire cfg_slot_control_electromech_il_ctl_pulse;
  wire cfg_trn_pending_n;
  wire [6:0]cfg_vc_tcvc_map;
  wire [8:0]drp_addr;
  wire [15:0]drp_di;
  wire [15:0]drp_do;
  wire drp_en;
  wire drp_rdy;
  wire drp_we;
  wire dsc_detect;
  wire [11:0]fc_cpld;
  wire [7:0]fc_cplh;
  wire [11:0]fc_npd;
  wire [7:0]fc_nph;
  wire [11:0]fc_pd;
  wire [7:0]fc_ph;
  wire in0;
  wire lnk_up_thrtl;
  wire lnk_up_thrtl_reg;
  wire [5:0]ltssm_reg2;
  wire [12:0]mim_rx_raddr;
  wire [67:0]mim_rx_rdata;
  wire mim_rx_ren;
  wire [12:0]mim_rx_waddr;
  wire [67:0]mim_rx_wdata;
  wire mim_rx_wen;
  wire [12:0]mim_tx_raddr;
  wire [68:0]mim_tx_rdata;
  wire mim_tx_ren;
  wire [12:0]mim_tx_waddr;
  wire [68:0]mim_tx_wdata;
  wire mim_tx_wen;
  wire out;
  wire pcie_block_i_i_12_n_0;
  wire pcie_block_i_i_14_n_0;
  wire pcie_block_i_i_16_n_0;
  wire pcie_block_i_i_18_n_0;
  wire pcie_block_i_i_21_n_0;
  wire pcie_block_i_i_22_n_0;
  wire pcie_block_i_i_9_n_0;
  wire pcie_block_i_n_100;
  wire pcie_block_i_n_101;
  wire pcie_block_i_n_102;
  wire pcie_block_i_n_103;
  wire pcie_block_i_n_104;
  wire pcie_block_i_n_105;
  wire pcie_block_i_n_106;
  wire pcie_block_i_n_107;
  wire pcie_block_i_n_108;
  wire pcie_block_i_n_1097;
  wire pcie_block_i_n_1098;
  wire pcie_block_i_n_1099;
  wire pcie_block_i_n_1100;
  wire pcie_block_i_n_1101;
  wire pcie_block_i_n_1102;
  wire pcie_block_i_n_1103;
  wire pcie_block_i_n_1143;
  wire pcie_block_i_n_140;
  wire pcie_block_i_n_141;
  wire pcie_block_i_n_142;
  wire pcie_block_i_n_143;
  wire pcie_block_i_n_144;
  wire pcie_block_i_n_145;
  wire pcie_block_i_n_146;
  wire pcie_block_i_n_155;
  wire pcie_block_i_n_156;
  wire pcie_block_i_n_157;
  wire pcie_block_i_n_158;
  wire pcie_block_i_n_159;
  wire pcie_block_i_n_160;
  wire pcie_block_i_n_169;
  wire pcie_block_i_n_172;
  wire pcie_block_i_n_173;
  wire pcie_block_i_n_174;
  wire pcie_block_i_n_175;
  wire pcie_block_i_n_176;
  wire pcie_block_i_n_177;
  wire pcie_block_i_n_178;
  wire pcie_block_i_n_179;
  wire pcie_block_i_n_180;
  wire pcie_block_i_n_181;
  wire pcie_block_i_n_182;
  wire pcie_block_i_n_183;
  wire pcie_block_i_n_184;
  wire pcie_block_i_n_185;
  wire pcie_block_i_n_186;
  wire pcie_block_i_n_187;
  wire pcie_block_i_n_188;
  wire pcie_block_i_n_189;
  wire pcie_block_i_n_190;
  wire pcie_block_i_n_191;
  wire pcie_block_i_n_192;
  wire pcie_block_i_n_193;
  wire pcie_block_i_n_194;
  wire pcie_block_i_n_195;
  wire pcie_block_i_n_610;
  wire pcie_block_i_n_611;
  wire pcie_block_i_n_618;
  wire pcie_block_i_n_619;
  wire pcie_block_i_n_687;
  wire pcie_block_i_n_688;
  wire pcie_block_i_n_689;
  wire pcie_block_i_n_690;
  wire pcie_block_i_n_691;
  wire pcie_block_i_n_704;
  wire pcie_block_i_n_705;
  wire pcie_block_i_n_706;
  wire pcie_block_i_n_707;
  wire pcie_block_i_n_708;
  wire pcie_block_i_n_709;
  wire pcie_block_i_n_710;
  wire pcie_block_i_n_711;
  wire pcie_block_i_n_712;
  wire pcie_block_i_n_713;
  wire pcie_block_i_n_714;
  wire pcie_block_i_n_715;
  wire pcie_block_i_n_716;
  wire pcie_block_i_n_717;
  wire pcie_block_i_n_718;
  wire pcie_block_i_n_719;
  wire pcie_block_i_n_72;
  wire pcie_block_i_n_720;
  wire pcie_block_i_n_721;
  wire pcie_block_i_n_722;
  wire pcie_block_i_n_723;
  wire pcie_block_i_n_724;
  wire pcie_block_i_n_725;
  wire pcie_block_i_n_726;
  wire pcie_block_i_n_727;
  wire pcie_block_i_n_728;
  wire pcie_block_i_n_729;
  wire pcie_block_i_n_730;
  wire pcie_block_i_n_731;
  wire pcie_block_i_n_732;
  wire pcie_block_i_n_733;
  wire pcie_block_i_n_734;
  wire pcie_block_i_n_735;
  wire pcie_block_i_n_736;
  wire pcie_block_i_n_737;
  wire pcie_block_i_n_738;
  wire pcie_block_i_n_739;
  wire pcie_block_i_n_740;
  wire pcie_block_i_n_741;
  wire pcie_block_i_n_742;
  wire pcie_block_i_n_743;
  wire pcie_block_i_n_744;
  wire pcie_block_i_n_745;
  wire pcie_block_i_n_746;
  wire pcie_block_i_n_747;
  wire pcie_block_i_n_748;
  wire pcie_block_i_n_749;
  wire pcie_block_i_n_75;
  wire pcie_block_i_n_750;
  wire pcie_block_i_n_751;
  wire pcie_block_i_n_752;
  wire pcie_block_i_n_753;
  wire pcie_block_i_n_754;
  wire pcie_block_i_n_755;
  wire pcie_block_i_n_756;
  wire pcie_block_i_n_757;
  wire pcie_block_i_n_758;
  wire pcie_block_i_n_759;
  wire pcie_block_i_n_76;
  wire pcie_block_i_n_760;
  wire pcie_block_i_n_761;
  wire pcie_block_i_n_762;
  wire pcie_block_i_n_763;
  wire pcie_block_i_n_764;
  wire pcie_block_i_n_765;
  wire pcie_block_i_n_766;
  wire pcie_block_i_n_767;
  wire pcie_block_i_n_768;
  wire pcie_block_i_n_769;
  wire pcie_block_i_n_77;
  wire pcie_block_i_n_770;
  wire pcie_block_i_n_771;
  wire pcie_block_i_n_772;
  wire pcie_block_i_n_773;
  wire pcie_block_i_n_774;
  wire pcie_block_i_n_775;
  wire pcie_block_i_n_776;
  wire pcie_block_i_n_777;
  wire pcie_block_i_n_778;
  wire pcie_block_i_n_779;
  wire pcie_block_i_n_78;
  wire pcie_block_i_n_780;
  wire pcie_block_i_n_781;
  wire pcie_block_i_n_782;
  wire pcie_block_i_n_783;
  wire pcie_block_i_n_784;
  wire pcie_block_i_n_785;
  wire pcie_block_i_n_786;
  wire pcie_block_i_n_787;
  wire pcie_block_i_n_788;
  wire pcie_block_i_n_789;
  wire pcie_block_i_n_790;
  wire pcie_block_i_n_791;
  wire pcie_block_i_n_792;
  wire pcie_block_i_n_793;
  wire pcie_block_i_n_794;
  wire pcie_block_i_n_795;
  wire pcie_block_i_n_796;
  wire pcie_block_i_n_797;
  wire pcie_block_i_n_798;
  wire pcie_block_i_n_799;
  wire pcie_block_i_n_800;
  wire pcie_block_i_n_801;
  wire pcie_block_i_n_802;
  wire pcie_block_i_n_803;
  wire pcie_block_i_n_804;
  wire pcie_block_i_n_805;
  wire pcie_block_i_n_806;
  wire pcie_block_i_n_807;
  wire pcie_block_i_n_808;
  wire pcie_block_i_n_809;
  wire pcie_block_i_n_810;
  wire pcie_block_i_n_811;
  wire pcie_block_i_n_812;
  wire pcie_block_i_n_813;
  wire pcie_block_i_n_814;
  wire pcie_block_i_n_815;
  wire pcie_block_i_n_816;
  wire pcie_block_i_n_817;
  wire pcie_block_i_n_818;
  wire pcie_block_i_n_819;
  wire pcie_block_i_n_820;
  wire pcie_block_i_n_821;
  wire pcie_block_i_n_822;
  wire pcie_block_i_n_823;
  wire pcie_block_i_n_824;
  wire pcie_block_i_n_825;
  wire pcie_block_i_n_826;
  wire pcie_block_i_n_827;
  wire pcie_block_i_n_828;
  wire pcie_block_i_n_829;
  wire pcie_block_i_n_830;
  wire pcie_block_i_n_831;
  wire pcie_block_i_n_832;
  wire pcie_block_i_n_833;
  wire pcie_block_i_n_834;
  wire pcie_block_i_n_835;
  wire pcie_block_i_n_836;
  wire pcie_block_i_n_837;
  wire pcie_block_i_n_838;
  wire pcie_block_i_n_839;
  wire pcie_block_i_n_84;
  wire pcie_block_i_n_840;
  wire pcie_block_i_n_841;
  wire pcie_block_i_n_842;
  wire pcie_block_i_n_843;
  wire pcie_block_i_n_844;
  wire pcie_block_i_n_845;
  wire pcie_block_i_n_846;
  wire pcie_block_i_n_847;
  wire pcie_block_i_n_848;
  wire pcie_block_i_n_849;
  wire pcie_block_i_n_85;
  wire pcie_block_i_n_850;
  wire pcie_block_i_n_851;
  wire pcie_block_i_n_852;
  wire pcie_block_i_n_853;
  wire pcie_block_i_n_854;
  wire pcie_block_i_n_855;
  wire pcie_block_i_n_856;
  wire pcie_block_i_n_857;
  wire pcie_block_i_n_858;
  wire pcie_block_i_n_859;
  wire pcie_block_i_n_86;
  wire pcie_block_i_n_860;
  wire pcie_block_i_n_861;
  wire pcie_block_i_n_862;
  wire pcie_block_i_n_863;
  wire pcie_block_i_n_864;
  wire pcie_block_i_n_865;
  wire pcie_block_i_n_866;
  wire pcie_block_i_n_867;
  wire pcie_block_i_n_868;
  wire pcie_block_i_n_869;
  wire pcie_block_i_n_87;
  wire pcie_block_i_n_870;
  wire pcie_block_i_n_871;
  wire pcie_block_i_n_872;
  wire pcie_block_i_n_873;
  wire pcie_block_i_n_874;
  wire pcie_block_i_n_875;
  wire pcie_block_i_n_876;
  wire pcie_block_i_n_877;
  wire pcie_block_i_n_878;
  wire pcie_block_i_n_879;
  wire pcie_block_i_n_88;
  wire pcie_block_i_n_880;
  wire pcie_block_i_n_881;
  wire pcie_block_i_n_882;
  wire pcie_block_i_n_883;
  wire pcie_block_i_n_884;
  wire pcie_block_i_n_885;
  wire pcie_block_i_n_886;
  wire pcie_block_i_n_887;
  wire pcie_block_i_n_888;
  wire pcie_block_i_n_889;
  wire pcie_block_i_n_89;
  wire pcie_block_i_n_890;
  wire pcie_block_i_n_891;
  wire pcie_block_i_n_892;
  wire pcie_block_i_n_893;
  wire pcie_block_i_n_894;
  wire pcie_block_i_n_895;
  wire pcie_block_i_n_896;
  wire pcie_block_i_n_897;
  wire pcie_block_i_n_898;
  wire pcie_block_i_n_899;
  wire pcie_block_i_n_90;
  wire pcie_block_i_n_900;
  wire pcie_block_i_n_901;
  wire pcie_block_i_n_902;
  wire pcie_block_i_n_903;
  wire pcie_block_i_n_904;
  wire pcie_block_i_n_905;
  wire pcie_block_i_n_906;
  wire pcie_block_i_n_907;
  wire pcie_block_i_n_908;
  wire pcie_block_i_n_909;
  wire pcie_block_i_n_91;
  wire pcie_block_i_n_910;
  wire pcie_block_i_n_911;
  wire pcie_block_i_n_912;
  wire pcie_block_i_n_913;
  wire pcie_block_i_n_914;
  wire pcie_block_i_n_915;
  wire pcie_block_i_n_916;
  wire pcie_block_i_n_917;
  wire pcie_block_i_n_918;
  wire pcie_block_i_n_919;
  wire pcie_block_i_n_92;
  wire pcie_block_i_n_920;
  wire pcie_block_i_n_921;
  wire pcie_block_i_n_922;
  wire pcie_block_i_n_923;
  wire pcie_block_i_n_924;
  wire pcie_block_i_n_925;
  wire pcie_block_i_n_926;
  wire pcie_block_i_n_927;
  wire pcie_block_i_n_928;
  wire pcie_block_i_n_929;
  wire pcie_block_i_n_93;
  wire pcie_block_i_n_930;
  wire pcie_block_i_n_931;
  wire pcie_block_i_n_932;
  wire pcie_block_i_n_933;
  wire pcie_block_i_n_934;
  wire pcie_block_i_n_935;
  wire pcie_block_i_n_936;
  wire pcie_block_i_n_937;
  wire pcie_block_i_n_938;
  wire pcie_block_i_n_939;
  wire pcie_block_i_n_94;
  wire pcie_block_i_n_940;
  wire pcie_block_i_n_941;
  wire pcie_block_i_n_942;
  wire pcie_block_i_n_943;
  wire pcie_block_i_n_944;
  wire pcie_block_i_n_945;
  wire pcie_block_i_n_946;
  wire pcie_block_i_n_947;
  wire pcie_block_i_n_948;
  wire pcie_block_i_n_949;
  wire pcie_block_i_n_95;
  wire pcie_block_i_n_950;
  wire pcie_block_i_n_951;
  wire pcie_block_i_n_952;
  wire pcie_block_i_n_953;
  wire pcie_block_i_n_954;
  wire pcie_block_i_n_955;
  wire pcie_block_i_n_956;
  wire pcie_block_i_n_957;
  wire pcie_block_i_n_958;
  wire pcie_block_i_n_959;
  wire pcie_block_i_n_96;
  wire pcie_block_i_n_98;
  wire pcie_block_i_n_99;
  wire pcie_drp_clk;
  wire pcie_drp_clk_0;
  wire [5:0]pcie_drp_clk_1;
  wire pipe_pclk_in;
  wire pipe_rx0_chanisaligned;
  wire pipe_rx0_elec_idle;
  wire pipe_rx0_phy_status;
  wire pipe_rx0_polarity;
  wire pipe_rx0_valid;
  wire pipe_rx1_chanisaligned;
  wire pipe_rx1_elec_idle;
  wire pipe_rx1_phy_status;
  wire pipe_rx1_polarity;
  wire pipe_rx1_valid;
  wire pipe_rx2_chanisaligned;
  wire pipe_rx2_elec_idle;
  wire pipe_rx2_phy_status;
  wire pipe_rx2_polarity;
  wire pipe_rx2_valid;
  wire pipe_rx3_chanisaligned;
  wire pipe_rx3_elec_idle;
  wire pipe_rx3_phy_status;
  wire pipe_rx3_polarity;
  wire pipe_rx3_valid;
  wire pipe_rx4_polarity;
  wire pipe_rx5_polarity;
  wire pipe_rx6_polarity;
  wire pipe_rx7_polarity;
  wire [1:0]pipe_tx0_char_is_k;
  wire pipe_tx0_compliance;
  wire [15:0]pipe_tx0_data;
  wire pipe_tx0_elec_idle;
  wire [1:0]pipe_tx0_powerdown;
  wire [1:0]pipe_tx1_char_is_k;
  wire pipe_tx1_compliance;
  wire [15:0]pipe_tx1_data;
  wire pipe_tx1_elec_idle;
  wire [1:0]pipe_tx1_powerdown;
  wire [1:0]pipe_tx2_char_is_k;
  wire pipe_tx2_compliance;
  wire [15:0]pipe_tx2_data;
  wire pipe_tx2_elec_idle;
  wire [1:0]pipe_tx2_powerdown;
  wire [1:0]pipe_tx3_char_is_k;
  wire pipe_tx3_compliance;
  wire [15:0]pipe_tx3_data;
  wire pipe_tx3_elec_idle;
  wire [1:0]pipe_tx3_powerdown;
  wire [1:0]pipe_tx4_char_is_k;
  wire pipe_tx4_compliance;
  wire [15:0]pipe_tx4_data;
  wire pipe_tx4_elec_idle;
  wire [1:0]pipe_tx4_powerdown;
  wire [1:0]pipe_tx5_char_is_k;
  wire pipe_tx5_compliance;
  wire [15:0]pipe_tx5_data;
  wire pipe_tx5_elec_idle;
  wire [1:0]pipe_tx5_powerdown;
  wire [1:0]pipe_tx6_char_is_k;
  wire pipe_tx6_compliance;
  wire [15:0]pipe_tx6_data;
  wire pipe_tx6_elec_idle;
  wire [1:0]pipe_tx6_powerdown;
  wire [1:0]pipe_tx7_char_is_k;
  wire pipe_tx7_compliance;
  wire [15:0]pipe_tx7_data;
  wire pipe_tx7_elec_idle;
  wire [1:0]pipe_tx7_powerdown;
  wire pipe_tx_deemph;
  wire [2:0]pipe_tx_margin;
  wire pipe_tx_rate;
  wire pipe_tx_rcvr_det;
  wire pipe_userclk1_in;
  wire pipe_userclk2_in;
  wire pl_directed_change_done;
  wire pl_directed_link_auton;
  wire [1:0]pl_directed_link_change;
  wire pl_directed_link_speed;
  wire [1:0]pl_directed_link_width;
  wire pl_downstream_deemph_source;
  wire [2:0]pl_initial_link_width;
  wire [1:0]pl_lane_reversal_mode;
  wire pl_link_gen2_cap;
  wire pl_link_partner_gen2_supported;
  wire pl_link_upcfg_cap;
  wire [1:0]pl_ltssm_state;
  wire pl_phy_lnk_up_n;
  wire pl_phy_lnk_up_q;
  wire pl_received_hot_rst;
  wire [1:0]pl_rx_pm_state;
  wire pl_sel_lnk_rate;
  wire [1:0]pl_sel_lnk_width;
  wire pl_transmit_hot_rst;
  wire [2:0]pl_tx_pm_state;
  wire pl_upstream_prefer_deemph;
  wire ppm_L1_thrtl;
  wire ppm_L1_thrtl_reg;
  wire ppm_L1_trig;
  wire reg_dsc_detect;
  wire reg_tcfg_gnt;
  wire rsrc_rdy_filtered;
  wire src_in;
  wire store_ltssm_inferred_i_1_0;
  wire store_ltssm_inferred_i_2_n_0;
  wire store_ltssm_inferred_i_3_n_0;
  wire sys_rst_n;
  wire \tbuf_av_d_reg[3] ;
  wire [1:0]tbuf_av_gap_thrtl_i_3;
  wire tbuf_av_min_trig;
  wire tcfg_req_trig;
  wire [2:0]trn_fc_sel;
  wire trn_in_packet;
  wire trn_in_packet_reg;
  wire trn_lnk_up;
  wire [6:0]trn_rbar_hit;
  wire [127:0]trn_rd;
  wire trn_rdst_rdy;
  wire trn_recrc_err;
  wire trn_reof;
  wire trn_rerrfwd;
  wire trn_rnp_ok;
  wire trn_rnp_req;
  wire [1:0]trn_rrem;
  wire trn_rsof;
  wire trn_rsrc_dsc;
  wire trn_rsrc_dsc_d;
  wire trn_rsrc_dsc_prev0;
  wire trn_rsrc_rdy;
  wire [5:0]trn_tbuf_av;
  wire trn_tcfg_gnt;
  wire trn_tcfg_req;
  wire [127:0]trn_td;
  wire trn_tdst_rdy;
  wire trn_teof;
  wire trn_terr_drop;
  wire [1:0]trn_trem;
  wire trn_tsof;
  wire trn_tsrc_rdy;
  wire user_reset_int_reg;
  wire user_rst_n;
  wire [3:1]NLW_pcie_block_i_TRNTDSTRDY_UNCONNECTED;

  LUT2 #(
    .INIT(4'hE)) 
    \L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_i_1 
       (.I0(cfg_msg_received_pme_to),
        .I1(\L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff ),
        .O(\L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg ));
  LUT1 #(
    .INIT(2'h1)) 
    \cfg_bus_number_d[7]_i_2 
       (.I0(cfg_msg_received),
        .O(E));
  LUT1 #(
    .INIT(2'h1)) 
    cfg_err_aer_headerlog_set_INST_0
       (.I0(cfg_err_aer_headerlog_set_n),
        .O(cfg_err_aer_headerlog_set));
  LUT1 #(
    .INIT(2'h1)) 
    cfg_err_cpl_rdy_INST_0
       (.I0(cfg_err_cpl_rdy_n),
        .O(cfg_err_cpl_rdy));
  LUT1 #(
    .INIT(2'h1)) 
    cfg_interrupt_rdy_INST_0
       (.I0(cfg_interrupt_rdy_n),
        .O(cfg_interrupt_rdy));
  LUT1 #(
    .INIT(2'h1)) 
    cfg_mgmt_rd_wr_done_INST_0
       (.I0(cfg_mgmt_rd_wr_done_n),
        .O(cfg_mgmt_rd_wr_done));
  LUT1 #(
    .INIT(2'h1)) 
    cfg_received_func_lvl_rst_INST_0
       (.I0(cfg_received_func_lvl_rst_n),
        .O(cfg_received_func_lvl_rst));
  LUT3 #(
    .INIT(8'h4F)) 
    lnk_up_thrtl_i_1
       (.I0(trn_tdst_rdy),
        .I1(lnk_up_thrtl),
        .I2(out),
        .O(lnk_up_thrtl_reg));
  LUT6 #(
    .INIT(64'h0000000027000000)) 
    m_axis_rx_tvalid_i_3
       (.I0(trn_reof),
        .I1(trn_rdst_rdy),
        .I2(trn_rsof),
        .I3(trn_rsrc_dsc),
        .I4(trn_in_packet),
        .I5(trn_rsrc_dsc_d),
        .O(dsc_detect));
  (* BOX_TYPE = "PRIMITIVE" *) 
  PCIE_2_1 #(
    .AER_BASE_PTR(12'h000),
    .AER_CAP_ECRC_CHECK_CAPABLE("FALSE"),
    .AER_CAP_ECRC_GEN_CAPABLE("FALSE"),
    .AER_CAP_ID(16'h0001),
    .AER_CAP_MULTIHEADER("FALSE"),
    .AER_CAP_NEXTPTR(12'h000),
    .AER_CAP_ON("FALSE"),
    .AER_CAP_OPTIONAL_ERR_SUPPORT(24'h000000),
    .AER_CAP_PERMIT_ROOTERR_UPDATE("FALSE"),
    .AER_CAP_VERSION(4'h1),
    .ALLOW_X8_GEN2("FALSE"),
    .BAR0(32'hFFFFC000),
    .BAR1(32'h00000000),
    .BAR2(32'h00000000),
    .BAR3(32'h00000000),
    .BAR4(32'h00000000),
    .BAR5(32'h00000000),
    .CAPABILITIES_PTR(8'h40),
    .CARDBUS_CIS_POINTER(32'h00000000),
    .CFG_ECRC_ERR_CPLSTAT(0),
    .CLASS_CODE(24'h020000),
    .CMD_INTX_IMPLEMENTED("FALSE"),
    .CPL_TIMEOUT_DISABLE_SUPPORTED("FALSE"),
    .CPL_TIMEOUT_RANGES_SUPPORTED(4'h2),
    .CRM_MODULE_RSTS(7'h00),
    .DEV_CAP2_ARI_FORWARDING_SUPPORTED("FALSE"),
    .DEV_CAP2_ATOMICOP32_COMPLETER_SUPPORTED("FALSE"),
    .DEV_CAP2_ATOMICOP64_COMPLETER_SUPPORTED("FALSE"),
    .DEV_CAP2_ATOMICOP_ROUTING_SUPPORTED("FALSE"),
    .DEV_CAP2_CAS128_COMPLETER_SUPPORTED("FALSE"),
    .DEV_CAP2_ENDEND_TLP_PREFIX_SUPPORTED("FALSE"),
    .DEV_CAP2_EXTENDED_FMT_FIELD_SUPPORTED("FALSE"),
    .DEV_CAP2_LTR_MECHANISM_SUPPORTED("FALSE"),
    .DEV_CAP2_MAX_ENDEND_TLP_PREFIXES(2'h0),
    .DEV_CAP2_NO_RO_ENABLED_PRPR_PASSING("FALSE"),
    .DEV_CAP2_TPH_COMPLETER_SUPPORTED(2'h0),
    .DEV_CAP_ENABLE_SLOT_PWR_LIMIT_SCALE("TRUE"),
    .DEV_CAP_ENABLE_SLOT_PWR_LIMIT_VALUE("TRUE"),
    .DEV_CAP_ENDPOINT_L0S_LATENCY(0),
    .DEV_CAP_ENDPOINT_L1_LATENCY(7),
    .DEV_CAP_EXT_TAG_SUPPORTED("FALSE"),
    .DEV_CAP_FUNCTION_LEVEL_RESET_CAPABLE("FALSE"),
    .DEV_CAP_MAX_PAYLOAD_SUPPORTED(2),
    .DEV_CAP_PHANTOM_FUNCTIONS_SUPPORT(0),
    .DEV_CAP_ROLE_BASED_ERROR("TRUE"),
    .DEV_CAP_RSVD_14_12(0),
    .DEV_CAP_RSVD_17_16(0),
    .DEV_CAP_RSVD_31_29(0),
    .DEV_CONTROL_AUX_POWER_SUPPORTED("FALSE"),
    .DEV_CONTROL_EXT_TAG_DEFAULT("FALSE"),
    .DISABLE_ASPM_L1_TIMER("FALSE"),
    .DISABLE_BAR_FILTERING("FALSE"),
    .DISABLE_ERR_MSG("FALSE"),
    .DISABLE_ID_CHECK("FALSE"),
    .DISABLE_LANE_REVERSAL("TRUE"),
    .DISABLE_LOCKED_FILTER("FALSE"),
    .DISABLE_PPM_FILTER("FALSE"),
    .DISABLE_RX_POISONED_RESP("FALSE"),
    .DISABLE_RX_TC_FILTER("FALSE"),
    .DISABLE_SCRAMBLING("FALSE"),
    .DNSTREAM_LINK_NUM(8'h00),
    .DSN_BASE_PTR(12'h100),
    .DSN_CAP_ID(16'h0003),
    .DSN_CAP_NEXTPTR(12'h000),
    .DSN_CAP_ON("TRUE"),
    .DSN_CAP_VERSION(4'h1),
    .ENABLE_MSG_ROUTE(11'h000),
    .ENABLE_RX_TD_ECRC_TRIM("FALSE"),
    .ENDEND_TLP_PREFIX_FORWARDING_SUPPORTED("FALSE"),
    .ENTER_RVRY_EI_L0("TRUE"),
    .EXIT_LOOPBACK_ON_EI("TRUE"),
    .EXPANSION_ROM(32'h00000000),
    .EXT_CFG_CAP_PTR(6'h2A),
    .EXT_CFG_XP_CAP_PTR(10'h3FF),
    .HEADER_TYPE(8'h00),
    .INFER_EI(5'h00),
    .INTERRUPT_PIN(8'h00),
    .INTERRUPT_STAT_AUTO("TRUE"),
    .IS_SWITCH("FALSE"),
    .LAST_CONFIG_DWORD(10'h3FF),
    .LINK_CAP_ASPM_OPTIONALITY("FALSE"),
    .LINK_CAP_ASPM_SUPPORT(1),
    .LINK_CAP_CLOCK_POWER_MANAGEMENT("FALSE"),
    .LINK_CAP_DLL_LINK_ACTIVE_REPORTING_CAP("FALSE"),
    .LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN1(7),
    .LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN2(7),
    .LINK_CAP_L0S_EXIT_LATENCY_GEN1(7),
    .LINK_CAP_L0S_EXIT_LATENCY_GEN2(7),
    .LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN1(7),
    .LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN2(7),
    .LINK_CAP_L1_EXIT_LATENCY_GEN1(7),
    .LINK_CAP_L1_EXIT_LATENCY_GEN2(7),
    .LINK_CAP_LINK_BANDWIDTH_NOTIFICATION_CAP("FALSE"),
    .LINK_CAP_MAX_LINK_SPEED(4'h2),
    .LINK_CAP_MAX_LINK_WIDTH(6'h04),
    .LINK_CAP_RSVD_23(0),
    .LINK_CAP_SURPRISE_DOWN_ERROR_CAPABLE("FALSE"),
    .LINK_CONTROL_RCB(0),
    .LINK_CTRL2_DEEMPHASIS("FALSE"),
    .LINK_CTRL2_HW_AUTONOMOUS_SPEED_DISABLE("FALSE"),
    .LINK_CTRL2_TARGET_LINK_SPEED(4'h2),
    .LINK_STATUS_SLOT_CLOCK_CONFIG("TRUE"),
    .LL_ACK_TIMEOUT(15'h0000),
    .LL_ACK_TIMEOUT_EN("FALSE"),
    .LL_ACK_TIMEOUT_FUNC(0),
    .LL_REPLAY_TIMEOUT(15'h0000),
    .LL_REPLAY_TIMEOUT_EN("FALSE"),
    .LL_REPLAY_TIMEOUT_FUNC(1),
    .LTSSM_MAX_LINK_WIDTH(6'h04),
    .MPS_FORCE("FALSE"),
    .MSIX_BASE_PTR(8'h9C),
    .MSIX_CAP_ID(8'h11),
    .MSIX_CAP_NEXTPTR(8'h00),
    .MSIX_CAP_ON("TRUE"),
    .MSIX_CAP_PBA_BIR(0),
    .MSIX_CAP_PBA_OFFSET(29'h00000380),
    .MSIX_CAP_TABLE_BIR(0),
    .MSIX_CAP_TABLE_OFFSET(29'h00000300),
    .MSIX_CAP_TABLE_SIZE(11'h003),
    .MSI_BASE_PTR(8'h48),
    .MSI_CAP_64_BIT_ADDR_CAPABLE("TRUE"),
    .MSI_CAP_ID(8'h05),
    .MSI_CAP_MULTIMSGCAP(0),
    .MSI_CAP_MULTIMSG_EXTENSION(0),
    .MSI_CAP_NEXTPTR(8'h60),
    .MSI_CAP_ON("FALSE"),
    .MSI_CAP_PER_VECTOR_MASKING_CAPABLE("FALSE"),
    .N_FTS_COMCLK_GEN1(255),
    .N_FTS_COMCLK_GEN2(255),
    .N_FTS_GEN1(255),
    .N_FTS_GEN2(255),
    .PCIE_BASE_PTR(8'h60),
    .PCIE_CAP_CAPABILITY_ID(8'h10),
    .PCIE_CAP_CAPABILITY_VERSION(4'h2),
    .PCIE_CAP_DEVICE_PORT_TYPE(4'h0),
    .PCIE_CAP_NEXTPTR(8'h9C),
    .PCIE_CAP_ON("TRUE"),
    .PCIE_CAP_RSVD_15_14(0),
    .PCIE_CAP_SLOT_IMPLEMENTED("FALSE"),
    .PCIE_REVISION(2),
    .PL_AUTO_CONFIG(0),
    .PL_FAST_TRAIN("TRUE"),
    .PM_ASPML0S_TIMEOUT(15'h0000),
    .PM_ASPML0S_TIMEOUT_EN("FALSE"),
    .PM_ASPML0S_TIMEOUT_FUNC(0),
    .PM_ASPM_FASTEXIT("FALSE"),
    .PM_BASE_PTR(8'h40),
    .PM_CAP_AUXCURRENT(0),
    .PM_CAP_D1SUPPORT("FALSE"),
    .PM_CAP_D2SUPPORT("FALSE"),
    .PM_CAP_DSI("FALSE"),
    .PM_CAP_ID(8'h01),
    .PM_CAP_NEXTPTR(8'h60),
    .PM_CAP_ON("TRUE"),
    .PM_CAP_PMESUPPORT(5'h0F),
    .PM_CAP_PME_CLOCK("FALSE"),
    .PM_CAP_RSVD_04(0),
    .PM_CAP_VERSION(3),
    .PM_CSR_B2B3("FALSE"),
    .PM_CSR_BPCCEN("FALSE"),
    .PM_CSR_NOSOFTRST("TRUE"),
    .PM_DATA0(8'h00),
    .PM_DATA1(8'h00),
    .PM_DATA2(8'h00),
    .PM_DATA3(8'h00),
    .PM_DATA4(8'h00),
    .PM_DATA5(8'h00),
    .PM_DATA6(8'h00),
    .PM_DATA7(8'h00),
    .PM_DATA_SCALE0(2'h0),
    .PM_DATA_SCALE1(2'h0),
    .PM_DATA_SCALE2(2'h0),
    .PM_DATA_SCALE3(2'h0),
    .PM_DATA_SCALE4(2'h0),
    .PM_DATA_SCALE5(2'h0),
    .PM_DATA_SCALE6(2'h0),
    .PM_DATA_SCALE7(2'h0),
    .PM_MF("FALSE"),
    .RBAR_BASE_PTR(12'h000),
    .RBAR_CAP_CONTROL_ENCODEDBAR0(5'h00),
    .RBAR_CAP_CONTROL_ENCODEDBAR1(5'h00),
    .RBAR_CAP_CONTROL_ENCODEDBAR2(5'h00),
    .RBAR_CAP_CONTROL_ENCODEDBAR3(5'h00),
    .RBAR_CAP_CONTROL_ENCODEDBAR4(5'h00),
    .RBAR_CAP_CONTROL_ENCODEDBAR5(5'h00),
    .RBAR_CAP_ID(16'h0015),
    .RBAR_CAP_INDEX0(3'h0),
    .RBAR_CAP_INDEX1(3'h0),
    .RBAR_CAP_INDEX2(3'h0),
    .RBAR_CAP_INDEX3(3'h0),
    .RBAR_CAP_INDEX4(3'h0),
    .RBAR_CAP_INDEX5(3'h0),
    .RBAR_CAP_NEXTPTR(12'h000),
    .RBAR_CAP_ON("FALSE"),
    .RBAR_CAP_SUP0(32'h00000001),
    .RBAR_CAP_SUP1(32'h00000001),
    .RBAR_CAP_SUP2(32'h00000001),
    .RBAR_CAP_SUP3(32'h00000001),
    .RBAR_CAP_SUP4(32'h00000001),
    .RBAR_CAP_SUP5(32'h00000001),
    .RBAR_CAP_VERSION(4'h1),
    .RBAR_NUM(3'h0),
    .RECRC_CHK(0),
    .RECRC_CHK_TRIM("FALSE"),
    .ROOT_CAP_CRS_SW_VISIBILITY("FALSE"),
    .RP_AUTO_SPD(2'h1),
    .RP_AUTO_SPD_LOOPCNT(5'h1F),
    .SELECT_DLL_IF("FALSE"),
    .SIM_VERSION("1.0"),
    .SLOT_CAP_ATT_BUTTON_PRESENT("FALSE"),
    .SLOT_CAP_ATT_INDICATOR_PRESENT("FALSE"),
    .SLOT_CAP_ELEC_INTERLOCK_PRESENT("FALSE"),
    .SLOT_CAP_HOTPLUG_CAPABLE("FALSE"),
    .SLOT_CAP_HOTPLUG_SURPRISE("FALSE"),
    .SLOT_CAP_MRL_SENSOR_PRESENT("FALSE"),
    .SLOT_CAP_NO_CMD_COMPLETED_SUPPORT("FALSE"),
    .SLOT_CAP_PHYSICAL_SLOT_NUM(13'h0000),
    .SLOT_CAP_POWER_CONTROLLER_PRESENT("FALSE"),
    .SLOT_CAP_POWER_INDICATOR_PRESENT("FALSE"),
    .SLOT_CAP_SLOT_POWER_LIMIT_SCALE(0),
    .SLOT_CAP_SLOT_POWER_LIMIT_VALUE(8'h00),
    .SPARE_BIT0(0),
    .SPARE_BIT1(0),
    .SPARE_BIT2(0),
    .SPARE_BIT3(0),
    .SPARE_BIT4(0),
    .SPARE_BIT5(0),
    .SPARE_BIT6(0),
    .SPARE_BIT7(0),
    .SPARE_BIT8(0),
    .SPARE_BYTE0(8'h00),
    .SPARE_BYTE1(8'h00),
    .SPARE_BYTE2(8'h00),
    .SPARE_BYTE3(8'h00),
    .SPARE_WORD0(32'h00000000),
    .SPARE_WORD1(32'h00000000),
    .SPARE_WORD2(32'h00000000),
    .SPARE_WORD3(32'h00000000),
    .SSL_MESSAGE_AUTO("FALSE"),
    .TECRC_EP_INV("FALSE"),
    .TL_RBYPASS("FALSE"),
    .TL_RX_RAM_RADDR_LATENCY(0),
    .TL_RX_RAM_RDATA_LATENCY(2),
    .TL_RX_RAM_WRITE_LATENCY(0),
    .TL_TFC_DISABLE("FALSE"),
    .TL_TX_CHECKS_DISABLE("FALSE"),
    .TL_TX_RAM_RADDR_LATENCY(0),
    .TL_TX_RAM_RDATA_LATENCY(2),
    .TL_TX_RAM_WRITE_LATENCY(0),
    .TRN_DW("TRUE"),
    .TRN_NP_FC("TRUE"),
    .UPCONFIG_CAPABLE("TRUE"),
    .UPSTREAM_FACING("TRUE"),
    .UR_ATOMIC("FALSE"),
    .UR_CFG1("TRUE"),
    .UR_INV_REQ("TRUE"),
    .UR_PRS_RESPONSE("TRUE"),
    .USER_CLK2_DIV2("TRUE"),
    .USER_CLK_FREQ(3),
    .USE_RID_PINS("FALSE"),
    .VC0_CPL_INFINITE("TRUE"),
    .VC0_RX_RAM_LIMIT(13'h07FF),
    .VC0_TOTAL_CREDITS_CD(461),
    .VC0_TOTAL_CREDITS_CH(36),
    .VC0_TOTAL_CREDITS_NPD(24),
    .VC0_TOTAL_CREDITS_NPH(12),
    .VC0_TOTAL_CREDITS_PD(437),
    .VC0_TOTAL_CREDITS_PH(32),
    .VC0_TX_LASTPACKET(29),
    .VC_BASE_PTR(12'h000),
    .VC_CAP_ID(16'h0002),
    .VC_CAP_NEXTPTR(12'h000),
    .VC_CAP_ON("FALSE"),
    .VC_CAP_REJECT_SNOOP_TRANSACTIONS("FALSE"),
    .VC_CAP_VERSION(4'h1),
    .VSEC_BASE_PTR(12'h000),
    .VSEC_CAP_HDR_ID(16'h1234),
    .VSEC_CAP_HDR_LENGTH(12'h018),
    .VSEC_CAP_HDR_REVISION(4'h1),
    .VSEC_CAP_ID(16'h000B),
    .VSEC_CAP_IS_LINK_VISIBLE("TRUE"),
    .VSEC_CAP_NEXTPTR(12'h000),
    .VSEC_CAP_ON("FALSE"),
    .VSEC_CAP_VERSION(4'h1)) 
    pcie_block_i
       (.CFGAERECRCCHECKEN(cfg_aer_ecrc_check_en),
        .CFGAERECRCGENEN(cfg_aer_ecrc_gen_en),
        .CFGAERINTERRUPTMSGNUM(cfg_aer_interrupt_msgnum),
        .CFGAERROOTERRCORRERRRECEIVED(cfg_aer_rooterr_corr_err_received),
        .CFGAERROOTERRCORRERRREPORTINGEN(cfg_aer_rooterr_corr_err_reporting_en),
        .CFGAERROOTERRFATALERRRECEIVED(cfg_aer_rooterr_fatal_err_received),
        .CFGAERROOTERRFATALERRREPORTINGEN(cfg_aer_rooterr_fatal_err_reporting_en),
        .CFGAERROOTERRNONFATALERRRECEIVED(cfg_aer_rooterr_non_fatal_err_received),
        .CFGAERROOTERRNONFATALERRREPORTINGEN(cfg_aer_rooterr_non_fatal_err_reporting_en),
        .CFGBRIDGESERREN(cfg_bridge_serr_en),
        .CFGCOMMANDBUSMASTERENABLE(cfg_command[2]),
        .CFGCOMMANDINTERRUPTDISABLE(cfg_command[4]),
        .CFGCOMMANDIOENABLE(cfg_command[0]),
        .CFGCOMMANDMEMENABLE(cfg_command[1]),
        .CFGCOMMANDSERREN(cfg_command[3]),
        .CFGDEVCONTROL2ARIFORWARDEN(cfg_dcommand2[5]),
        .CFGDEVCONTROL2ATOMICEGRESSBLOCK(cfg_dcommand2[7]),
        .CFGDEVCONTROL2ATOMICREQUESTEREN(cfg_dcommand2[6]),
        .CFGDEVCONTROL2CPLTIMEOUTDIS(cfg_dcommand2[4]),
        .CFGDEVCONTROL2CPLTIMEOUTVAL(cfg_dcommand2[3:0]),
        .CFGDEVCONTROL2IDOCPLEN(cfg_dcommand2[9]),
        .CFGDEVCONTROL2IDOREQEN(cfg_dcommand2[8]),
        .CFGDEVCONTROL2LTREN(cfg_dcommand2[10]),
        .CFGDEVCONTROL2TLPPREFIXBLOCK(cfg_dcommand2[11]),
        .CFGDEVCONTROLAUXPOWEREN(cfg_dcommand[10]),
        .CFGDEVCONTROLCORRERRREPORTINGEN(cfg_dcommand[0]),
        .CFGDEVCONTROLENABLERO(cfg_dcommand[4]),
        .CFGDEVCONTROLEXTTAGEN(cfg_dcommand[8]),
        .CFGDEVCONTROLFATALERRREPORTINGEN(cfg_dcommand[2]),
        .CFGDEVCONTROLMAXPAYLOAD(cfg_dcommand[7:5]),
        .CFGDEVCONTROLMAXREADREQ(cfg_dcommand[14:12]),
        .CFGDEVCONTROLNONFATALREPORTINGEN(cfg_dcommand[1]),
        .CFGDEVCONTROLNOSNOOPEN(cfg_dcommand[11]),
        .CFGDEVCONTROLPHANTOMEN(cfg_dcommand[9]),
        .CFGDEVCONTROLURERRREPORTINGEN(cfg_dcommand[3]),
        .CFGDEVID({1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .CFGDEVSTATUSCORRERRDETECTED(cfg_dstatus[0]),
        .CFGDEVSTATUSFATALERRDETECTED(cfg_dstatus[2]),
        .CFGDEVSTATUSNONFATALERRDETECTED(cfg_dstatus[1]),
        .CFGDEVSTATUSURDETECTED(cfg_dstatus[3]),
        .CFGDSBUSNUMBER(cfg_ds_bus_number),
        .CFGDSDEVICENUMBER(cfg_ds_device_number),
        .CFGDSFUNCTIONNUMBER(cfg_ds_function_number),
        .CFGDSN(cfg_dsn),
        .CFGERRACSN(1'b1),
        .CFGERRAERHEADERLOG(cfg_err_aer_headerlog),
        .CFGERRAERHEADERLOGSETN(cfg_err_aer_headerlog_set_n),
        .CFGERRATOMICEGRESSBLOCKEDN(cfg_err_atomic_egress_blocked_n),
        .CFGERRCORN(cfg_err_cor_n),
        .CFGERRCPLABORTN(cfg_err_cpl_abort_n),
        .CFGERRCPLRDYN(cfg_err_cpl_rdy_n),
        .CFGERRCPLTIMEOUTN(cfg_err_cpl_timeout_n),
        .CFGERRCPLUNEXPECTN(cfg_err_cpl_unexpect_n),
        .CFGERRECRCN(cfg_err_ecrc_n),
        .CFGERRINTERNALCORN(cfg_err_internal_cor_n),
        .CFGERRINTERNALUNCORN(cfg_err_internal_uncor_n),
        .CFGERRLOCKEDN(pcie_block_i_i_9_n_0),
        .CFGERRMALFORMEDN(cfg_err_malformed_n),
        .CFGERRMCBLOCKEDN(cfg_err_mc_blocked_n),
        .CFGERRNORECOVERYN(pcie_block_i_i_12_n_0),
        .CFGERRPOISONEDN(cfg_err_poisoned_n),
        .CFGERRPOSTEDN(pcie_block_i_i_14_n_0),
        .CFGERRTLPCPLHEADER(cfg_err_tlp_cpl_header),
        .CFGERRURN(cfg_err_ur_n),
        .CFGFORCECOMMONCLOCKOFF(1'b0),
        .CFGFORCEEXTENDEDSYNCON(1'b0),
        .CFGFORCEMPS({1'b0,1'b0,1'b0}),
        .CFGINTERRUPTASSERTN(pcie_block_i_i_16_n_0),
        .CFGINTERRUPTDI(cfg_interrupt_di),
        .CFGINTERRUPTDO(cfg_interrupt_do),
        .CFGINTERRUPTMMENABLE(cfg_interrupt_mmenable),
        .CFGINTERRUPTMSIENABLE(cfg_interrupt_msienable),
        .CFGINTERRUPTMSIXENABLE(cfg_interrupt_msixenable),
        .CFGINTERRUPTMSIXFM(cfg_interrupt_msixfm),
        .CFGINTERRUPTN(cfg_interrupt_n),
        .CFGINTERRUPTRDYN(cfg_interrupt_rdy_n),
        .CFGINTERRUPTSTATN(pcie_block_i_i_18_n_0),
        .CFGLINKCONTROLASPMCONTROL(cfg_lcommand[1:0]),
        .CFGLINKCONTROLAUTOBANDWIDTHINTEN(cfg_lcommand[10]),
        .CFGLINKCONTROLBANDWIDTHINTEN(cfg_lcommand[9]),
        .CFGLINKCONTROLCLOCKPMEN(cfg_lcommand[7]),
        .CFGLINKCONTROLCOMMONCLOCK(cfg_lcommand[5]),
        .CFGLINKCONTROLEXTENDEDSYNC(cfg_lcommand[6]),
        .CFGLINKCONTROLHWAUTOWIDTHDIS(cfg_lcommand[8]),
        .CFGLINKCONTROLLINKDISABLE(cfg_lcommand[3]),
        .CFGLINKCONTROLRCB(cfg_lcommand[2]),
        .CFGLINKCONTROLRETRAINLINK(cfg_lcommand[4]),
        .CFGLINKSTATUSAUTOBANDWIDTHSTATUS(cfg_lstatus[9]),
        .CFGLINKSTATUSBANDWIDTHSTATUS(cfg_lstatus[8]),
        .CFGLINKSTATUSCURRENTSPEED(cfg_lstatus[1:0]),
        .CFGLINKSTATUSDLLACTIVE(cfg_lstatus[7]),
        .CFGLINKSTATUSLINKTRAINING(cfg_lstatus[6]),
        .CFGLINKSTATUSNEGOTIATEDWIDTH(cfg_lstatus[5:2]),
        .CFGMGMTBYTEENN(cfg_mgmt_byte_en_n),
        .CFGMGMTDI(cfg_mgmt_di),
        .CFGMGMTDO(cfg_mgmt_do),
        .CFGMGMTDWADDR(cfg_mgmt_dwaddr),
        .CFGMGMTRDENN(cfg_mgmt_rd_en_n),
        .CFGMGMTRDWRDONEN(cfg_mgmt_rd_wr_done_n),
        .CFGMGMTWRENN(cfg_mgmt_wr_en_n),
        .CFGMGMTWRREADONLYN(pcie_block_i_i_21_n_0),
        .CFGMGMTWRRW1CASRWN(pcie_block_i_i_22_n_0),
        .CFGMSGDATA(cfg_msg_data),
        .CFGMSGRECEIVED(cfg_msg_received),
        .CFGMSGRECEIVEDASSERTINTA(cfg_msg_received_assert_int_a),
        .CFGMSGRECEIVEDASSERTINTB(cfg_msg_received_assert_int_b),
        .CFGMSGRECEIVEDASSERTINTC(cfg_msg_received_assert_int_c),
        .CFGMSGRECEIVEDASSERTINTD(cfg_msg_received_assert_int_d),
        .CFGMSGRECEIVEDDEASSERTINTA(cfg_msg_received_deassert_int_a),
        .CFGMSGRECEIVEDDEASSERTINTB(cfg_msg_received_deassert_int_b),
        .CFGMSGRECEIVEDDEASSERTINTC(cfg_msg_received_deassert_int_c),
        .CFGMSGRECEIVEDDEASSERTINTD(cfg_msg_received_deassert_int_d),
        .CFGMSGRECEIVEDERRCOR(cfg_msg_received_err_cor),
        .CFGMSGRECEIVEDERRFATAL(cfg_msg_received_err_fatal),
        .CFGMSGRECEIVEDERRNONFATAL(cfg_msg_received_err_non_fatal),
        .CFGMSGRECEIVEDPMASNAK(cfg_msg_received_pm_as_nak),
        .CFGMSGRECEIVEDPMETO(cfg_msg_received_pme_to),
        .CFGMSGRECEIVEDPMETOACK(cfg_msg_received_pme_to_ack),
        .CFGMSGRECEIVEDPMPME(cfg_msg_received_pm_pme),
        .CFGMSGRECEIVEDSETSLOTPOWERLIMIT(cfg_msg_received_setslotpowerlimit),
        .CFGMSGRECEIVEDUNLOCK(pcie_block_i_n_72),
        .CFGPCIECAPINTERRUPTMSGNUM(cfg_pciecap_interrupt_msgnum),
        .CFGPCIELINKSTATE(cfg_pcie_link_state),
        .CFGPMCSRPMEEN(cfg_pmcsr_pme_en),
        .CFGPMCSRPMESTATUS(cfg_pmcsr_pme_status),
        .CFGPMCSRPOWERSTATE(cfg_pmcsr_powerstate),
        .CFGPMFORCESTATE(cfg_pm_force_state),
        .CFGPMFORCESTATEENN(cfg_pm_force_state_en_n),
        .CFGPMHALTASPML0SN(cfg_pm_halt_aspm_l0s_n),
        .CFGPMHALTASPML1N(cfg_pm_halt_aspm_l1_n),
        .CFGPMRCVASREQL1N(pcie_block_i_n_75),
        .CFGPMRCVENTERL1N(pcie_block_i_n_76),
        .CFGPMRCVENTERL23N(pcie_block_i_n_77),
        .CFGPMRCVREQACKN(pcie_block_i_n_78),
        .CFGPMSENDPMETON(1'b1),
        .CFGPMTURNOFFOKN(cfg_pm_turnoff_ok_n),
        .CFGPMWAKEN(cfg_pm_wake_n),
        .CFGPORTNUMBER({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CFGREVID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CFGROOTCONTROLPMEINTEN(cfg_root_control_pme_int_en),
        .CFGROOTCONTROLSYSERRCORRERREN(cfg_root_control_syserr_corr_err_en),
        .CFGROOTCONTROLSYSERRFATALERREN(cfg_root_control_syserr_fatal_err_en),
        .CFGROOTCONTROLSYSERRNONFATALERREN(cfg_root_control_syserr_non_fatal_err_en),
        .CFGSLOTCONTROLELECTROMECHILCTLPULSE(cfg_slot_control_electromech_il_ctl_pulse),
        .CFGSUBSYSID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1}),
        .CFGSUBSYSVENDID({1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b1,1'b1,1'b1,1'b0}),
        .CFGTRANSACTION(pcie_block_i_n_84),
        .CFGTRANSACTIONADDR({pcie_block_i_n_1097,pcie_block_i_n_1098,pcie_block_i_n_1099,pcie_block_i_n_1100,pcie_block_i_n_1101,pcie_block_i_n_1102,pcie_block_i_n_1103}),
        .CFGTRANSACTIONTYPE(pcie_block_i_n_85),
        .CFGTRNPENDINGN(cfg_trn_pending_n),
        .CFGVCTCVCMAP(cfg_vc_tcvc_map),
        .CFGVENDID({1'b0,1'b0,1'b0,1'b1,1'b1,1'b0,1'b1,1'b0,1'b1,1'b1,1'b1,1'b1,1'b0,1'b1,1'b0,1'b0}),
        .CMRSTN(1'b1),
        .CMSTICKYRSTN(1'b1),
        .DBGMODE({1'b0,1'b0}),
        .DBGSCLRA(pcie_block_i_n_86),
        .DBGSCLRB(pcie_block_i_n_87),
        .DBGSCLRC(pcie_block_i_n_88),
        .DBGSCLRD(pcie_block_i_n_89),
        .DBGSCLRE(pcie_block_i_n_90),
        .DBGSCLRF(pcie_block_i_n_91),
        .DBGSCLRG(pcie_block_i_n_92),
        .DBGSCLRH(pcie_block_i_n_93),
        .DBGSCLRI(pcie_block_i_n_94),
        .DBGSCLRJ(pcie_block_i_n_95),
        .DBGSCLRK(pcie_block_i_n_96),
        .DBGSUBMODE(1'b0),
        .DBGVECA({pcie_block_i_n_704,pcie_block_i_n_705,pcie_block_i_n_706,pcie_block_i_n_707,pcie_block_i_n_708,pcie_block_i_n_709,pcie_block_i_n_710,pcie_block_i_n_711,pcie_block_i_n_712,pcie_block_i_n_713,pcie_block_i_n_714,pcie_block_i_n_715,pcie_block_i_n_716,pcie_block_i_n_717,pcie_block_i_n_718,pcie_block_i_n_719,pcie_block_i_n_720,pcie_block_i_n_721,pcie_block_i_n_722,pcie_block_i_n_723,pcie_block_i_n_724,pcie_block_i_n_725,pcie_block_i_n_726,pcie_block_i_n_727,pcie_block_i_n_728,pcie_block_i_n_729,pcie_block_i_n_730,pcie_block_i_n_731,pcie_block_i_n_732,pcie_block_i_n_733,pcie_block_i_n_734,pcie_block_i_n_735,pcie_block_i_n_736,pcie_block_i_n_737,pcie_block_i_n_738,pcie_block_i_n_739,pcie_block_i_n_740,pcie_block_i_n_741,pcie_block_i_n_742,pcie_block_i_n_743,pcie_block_i_n_744,pcie_block_i_n_745,pcie_block_i_n_746,pcie_block_i_n_747,pcie_block_i_n_748,pcie_block_i_n_749,pcie_block_i_n_750,pcie_block_i_n_751,pcie_block_i_n_752,pcie_block_i_n_753,pcie_block_i_n_754,pcie_block_i_n_755,pcie_block_i_n_756,pcie_block_i_n_757,pcie_block_i_n_758,pcie_block_i_n_759,pcie_block_i_n_760,pcie_block_i_n_761,pcie_block_i_n_762,pcie_block_i_n_763,pcie_block_i_n_764,pcie_block_i_n_765,pcie_block_i_n_766,pcie_block_i_n_767}),
        .DBGVECB({pcie_block_i_n_768,pcie_block_i_n_769,pcie_block_i_n_770,pcie_block_i_n_771,pcie_block_i_n_772,pcie_block_i_n_773,pcie_block_i_n_774,pcie_block_i_n_775,pcie_block_i_n_776,pcie_block_i_n_777,pcie_block_i_n_778,pcie_block_i_n_779,pcie_block_i_n_780,pcie_block_i_n_781,pcie_block_i_n_782,pcie_block_i_n_783,pcie_block_i_n_784,pcie_block_i_n_785,pcie_block_i_n_786,pcie_block_i_n_787,pcie_block_i_n_788,pcie_block_i_n_789,pcie_block_i_n_790,pcie_block_i_n_791,pcie_block_i_n_792,pcie_block_i_n_793,pcie_block_i_n_794,pcie_block_i_n_795,pcie_block_i_n_796,pcie_block_i_n_797,pcie_block_i_n_798,pcie_block_i_n_799,pcie_block_i_n_800,pcie_block_i_n_801,pcie_block_i_n_802,pcie_block_i_n_803,pcie_block_i_n_804,pcie_block_i_n_805,pcie_block_i_n_806,pcie_block_i_n_807,pcie_block_i_n_808,pcie_block_i_n_809,pcie_block_i_n_810,pcie_block_i_n_811,pcie_block_i_n_812,pcie_block_i_n_813,pcie_block_i_n_814,pcie_block_i_n_815,pcie_block_i_n_816,pcie_block_i_n_817,pcie_block_i_n_818,pcie_block_i_n_819,pcie_block_i_n_820,pcie_block_i_n_821,pcie_block_i_n_822,pcie_block_i_n_823,pcie_block_i_n_824,pcie_block_i_n_825,pcie_block_i_n_826,pcie_block_i_n_827,pcie_block_i_n_828,pcie_block_i_n_829,pcie_block_i_n_830,pcie_block_i_n_831}),
        .DBGVECC({pcie_block_i_n_172,pcie_block_i_n_173,pcie_block_i_n_174,pcie_block_i_n_175,pcie_block_i_n_176,pcie_block_i_n_177,pcie_block_i_n_178,pcie_block_i_n_179,pcie_block_i_n_180,pcie_block_i_n_181,pcie_block_i_n_182,pcie_block_i_n_183}),
        .DLRSTN(1'b1),
        .DRPADDR(drp_addr),
        .DRPCLK(pcie_drp_clk),
        .DRPDI(drp_di),
        .DRPDO(drp_do),
        .DRPEN(drp_en),
        .DRPRDY(drp_rdy),
        .DRPWE(drp_we),
        .FUNCLVLRSTN(1'b1),
        .LL2BADDLLPERR(pcie_block_i_n_98),
        .LL2BADTLPERR(pcie_block_i_n_99),
        .LL2LINKSTATUS({pcie_block_i_n_687,pcie_block_i_n_688,pcie_block_i_n_689,pcie_block_i_n_690,pcie_block_i_n_691}),
        .LL2PROTOCOLERR(pcie_block_i_n_100),
        .LL2RECEIVERERR(pcie_block_i_n_101),
        .LL2REPLAYROERR(pcie_block_i_n_102),
        .LL2REPLAYTOERR(pcie_block_i_n_103),
        .LL2SENDASREQL1(1'b0),
        .LL2SENDENTERL1(1'b0),
        .LL2SENDENTERL23(1'b0),
        .LL2SENDPMACK(1'b0),
        .LL2SUSPENDNOW(1'b0),
        .LL2SUSPENDOK(pcie_block_i_n_104),
        .LL2TFCINIT1SEQ(pcie_block_i_n_105),
        .LL2TFCINIT2SEQ(pcie_block_i_n_106),
        .LL2TLPRCV(1'b0),
        .LL2TXIDLE(pcie_block_i_n_107),
        .LNKCLKEN(pcie_block_i_n_108),
        .MIMRXRADDR(mim_rx_raddr),
        .MIMRXRDATA(mim_rx_rdata),
        .MIMRXREN(mim_rx_ren),
        .MIMRXWADDR(mim_rx_waddr),
        .MIMRXWDATA(mim_rx_wdata),
        .MIMRXWEN(mim_rx_wen),
        .MIMTXRADDR(mim_tx_raddr),
        .MIMTXRDATA(mim_tx_rdata),
        .MIMTXREN(mim_tx_ren),
        .MIMTXWADDR(mim_tx_waddr),
        .MIMTXWDATA(mim_tx_wdata),
        .MIMTXWEN(mim_tx_wen),
        .PIPECLK(pipe_pclk_in),
        .PIPERX0CHANISALIGNED(pipe_rx0_chanisaligned),
        .PIPERX0CHARISK(cfg_aer_ecrc_check_en_4),
        .PIPERX0DATA(Q),
        .PIPERX0ELECIDLE(pipe_rx0_elec_idle),
        .PIPERX0PHYSTATUS(pipe_rx0_phy_status),
        .PIPERX0POLARITY(pipe_rx0_polarity),
        .PIPERX0STATUS(cfg_aer_ecrc_check_en_8),
        .PIPERX0VALID(pipe_rx0_valid),
        .PIPERX1CHANISALIGNED(pipe_rx1_chanisaligned),
        .PIPERX1CHARISK(cfg_aer_ecrc_check_en_5),
        .PIPERX1DATA(cfg_aer_ecrc_check_en_1),
        .PIPERX1ELECIDLE(pipe_rx1_elec_idle),
        .PIPERX1PHYSTATUS(pipe_rx1_phy_status),
        .PIPERX1POLARITY(pipe_rx1_polarity),
        .PIPERX1STATUS(cfg_aer_ecrc_check_en_9),
        .PIPERX1VALID(pipe_rx1_valid),
        .PIPERX2CHANISALIGNED(pipe_rx2_chanisaligned),
        .PIPERX2CHARISK(cfg_aer_ecrc_check_en_6),
        .PIPERX2DATA(cfg_aer_ecrc_check_en_2),
        .PIPERX2ELECIDLE(pipe_rx2_elec_idle),
        .PIPERX2PHYSTATUS(pipe_rx2_phy_status),
        .PIPERX2POLARITY(pipe_rx2_polarity),
        .PIPERX2STATUS(cfg_aer_ecrc_check_en_10),
        .PIPERX2VALID(pipe_rx2_valid),
        .PIPERX3CHANISALIGNED(pipe_rx3_chanisaligned),
        .PIPERX3CHARISK(cfg_aer_ecrc_check_en_7),
        .PIPERX3DATA(cfg_aer_ecrc_check_en_3),
        .PIPERX3ELECIDLE(pipe_rx3_elec_idle),
        .PIPERX3PHYSTATUS(pipe_rx3_phy_status),
        .PIPERX3POLARITY(pipe_rx3_polarity),
        .PIPERX3STATUS(cfg_aer_ecrc_check_en_11),
        .PIPERX3VALID(pipe_rx3_valid),
        .PIPERX4CHANISALIGNED(1'b0),
        .PIPERX4CHARISK({1'b0,1'b0}),
        .PIPERX4DATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PIPERX4ELECIDLE(1'b1),
        .PIPERX4PHYSTATUS(1'b0),
        .PIPERX4POLARITY(pipe_rx4_polarity),
        .PIPERX4STATUS({1'b0,1'b0,1'b0}),
        .PIPERX4VALID(1'b0),
        .PIPERX5CHANISALIGNED(1'b0),
        .PIPERX5CHARISK({1'b0,1'b0}),
        .PIPERX5DATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PIPERX5ELECIDLE(1'b1),
        .PIPERX5PHYSTATUS(1'b0),
        .PIPERX5POLARITY(pipe_rx5_polarity),
        .PIPERX5STATUS({1'b0,1'b0,1'b0}),
        .PIPERX5VALID(1'b0),
        .PIPERX6CHANISALIGNED(1'b0),
        .PIPERX6CHARISK({1'b0,1'b0}),
        .PIPERX6DATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PIPERX6ELECIDLE(1'b1),
        .PIPERX6PHYSTATUS(1'b0),
        .PIPERX6POLARITY(pipe_rx6_polarity),
        .PIPERX6STATUS({1'b0,1'b0,1'b0}),
        .PIPERX6VALID(1'b0),
        .PIPERX7CHANISALIGNED(1'b0),
        .PIPERX7CHARISK({1'b0,1'b0}),
        .PIPERX7DATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PIPERX7ELECIDLE(1'b1),
        .PIPERX7PHYSTATUS(1'b0),
        .PIPERX7POLARITY(pipe_rx7_polarity),
        .PIPERX7STATUS({1'b0,1'b0,1'b0}),
        .PIPERX7VALID(1'b0),
        .PIPETX0CHARISK(pipe_tx0_char_is_k),
        .PIPETX0COMPLIANCE(pipe_tx0_compliance),
        .PIPETX0DATA(pipe_tx0_data),
        .PIPETX0ELECIDLE(pipe_tx0_elec_idle),
        .PIPETX0POWERDOWN(pipe_tx0_powerdown),
        .PIPETX1CHARISK(pipe_tx1_char_is_k),
        .PIPETX1COMPLIANCE(pipe_tx1_compliance),
        .PIPETX1DATA(pipe_tx1_data),
        .PIPETX1ELECIDLE(pipe_tx1_elec_idle),
        .PIPETX1POWERDOWN(pipe_tx1_powerdown),
        .PIPETX2CHARISK(pipe_tx2_char_is_k),
        .PIPETX2COMPLIANCE(pipe_tx2_compliance),
        .PIPETX2DATA(pipe_tx2_data),
        .PIPETX2ELECIDLE(pipe_tx2_elec_idle),
        .PIPETX2POWERDOWN(pipe_tx2_powerdown),
        .PIPETX3CHARISK(pipe_tx3_char_is_k),
        .PIPETX3COMPLIANCE(pipe_tx3_compliance),
        .PIPETX3DATA(pipe_tx3_data),
        .PIPETX3ELECIDLE(pipe_tx3_elec_idle),
        .PIPETX3POWERDOWN(pipe_tx3_powerdown),
        .PIPETX4CHARISK(pipe_tx4_char_is_k),
        .PIPETX4COMPLIANCE(pipe_tx4_compliance),
        .PIPETX4DATA(pipe_tx4_data),
        .PIPETX4ELECIDLE(pipe_tx4_elec_idle),
        .PIPETX4POWERDOWN(pipe_tx4_powerdown),
        .PIPETX5CHARISK(pipe_tx5_char_is_k),
        .PIPETX5COMPLIANCE(pipe_tx5_compliance),
        .PIPETX5DATA(pipe_tx5_data),
        .PIPETX5ELECIDLE(pipe_tx5_elec_idle),
        .PIPETX5POWERDOWN(pipe_tx5_powerdown),
        .PIPETX6CHARISK(pipe_tx6_char_is_k),
        .PIPETX6COMPLIANCE(pipe_tx6_compliance),
        .PIPETX6DATA(pipe_tx6_data),
        .PIPETX6ELECIDLE(pipe_tx6_elec_idle),
        .PIPETX6POWERDOWN(pipe_tx6_powerdown),
        .PIPETX7CHARISK(pipe_tx7_char_is_k),
        .PIPETX7COMPLIANCE(pipe_tx7_compliance),
        .PIPETX7DATA(pipe_tx7_data),
        .PIPETX7ELECIDLE(pipe_tx7_elec_idle),
        .PIPETX7POWERDOWN(pipe_tx7_powerdown),
        .PIPETXDEEMPH(pipe_tx_deemph),
        .PIPETXMARGIN(pipe_tx_margin),
        .PIPETXRATE(pipe_tx_rate),
        .PIPETXRCVRDET(pipe_tx_rcvr_det),
        .PIPETXRESET(pcie_block_i_n_140),
        .PL2DIRECTEDLSTATE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PL2L0REQ(pcie_block_i_n_141),
        .PL2LINKUP(pcie_block_i_n_142),
        .PL2RECEIVERERR(pcie_block_i_n_143),
        .PL2RECOVERY(pcie_block_i_n_144),
        .PL2RXELECIDLE(pcie_block_i_n_145),
        .PL2RXPMSTATE({pcie_block_i_n_610,pcie_block_i_n_611}),
        .PL2SUSPENDOK(pcie_block_i_n_146),
        .PLDBGMODE({1'b0,1'b0,1'b0}),
        .PLDBGVEC({pcie_block_i_n_184,pcie_block_i_n_185,pcie_block_i_n_186,pcie_block_i_n_187,pcie_block_i_n_188,pcie_block_i_n_189,pcie_block_i_n_190,pcie_block_i_n_191,pcie_block_i_n_192,pcie_block_i_n_193,pcie_block_i_n_194,pcie_block_i_n_195}),
        .PLDIRECTEDCHANGEDONE(pl_directed_change_done),
        .PLDIRECTEDLINKAUTON(pl_directed_link_auton),
        .PLDIRECTEDLINKCHANGE(pl_directed_link_change),
        .PLDIRECTEDLINKSPEED(pl_directed_link_speed),
        .PLDIRECTEDLINKWIDTH(pl_directed_link_width),
        .PLDIRECTEDLTSSMNEW({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PLDIRECTEDLTSSMNEWVLD(1'b0),
        .PLDIRECTEDLTSSMSTALL(1'b0),
        .PLDOWNSTREAMDEEMPHSOURCE(pl_downstream_deemph_source),
        .PLINITIALLINKWIDTH(pl_initial_link_width),
        .PLLANEREVERSALMODE(pl_lane_reversal_mode),
        .PLLINKGEN2CAP(pl_link_gen2_cap),
        .PLLINKPARTNERGEN2SUPPORTED(pl_link_partner_gen2_supported),
        .PLLINKUPCFGCAP(pl_link_upcfg_cap),
        .PLLTSSMSTATE(pcie_drp_clk_1),
        .PLPHYLNKUPN(pl_phy_lnk_up_n),
        .PLRECEIVEDHOTRST(pl_received_hot_rst),
        .PLRSTN(1'b1),
        .PLRXPMSTATE(pl_rx_pm_state),
        .PLSELLNKRATE(pl_sel_lnk_rate),
        .PLSELLNKWIDTH(pl_sel_lnk_width),
        .PLTRANSMITHOTRST(pl_transmit_hot_rst),
        .PLTXPMSTATE(pl_tx_pm_state),
        .PLUPSTREAMPREFERDEEMPH(pl_upstream_prefer_deemph),
        .RECEIVEDFUNCLVLRSTN(cfg_received_func_lvl_rst_n),
        .SYSRSTN(sys_rst_n),
        .TL2ASPMSUSPENDCREDITCHECK(1'b0),
        .TL2ASPMSUSPENDCREDITCHECKOK(pcie_block_i_n_155),
        .TL2ASPMSUSPENDREQ(pcie_block_i_n_156),
        .TL2ERRFCPE(pcie_block_i_n_157),
        .TL2ERRHDR({pcie_block_i_n_832,pcie_block_i_n_833,pcie_block_i_n_834,pcie_block_i_n_835,pcie_block_i_n_836,pcie_block_i_n_837,pcie_block_i_n_838,pcie_block_i_n_839,pcie_block_i_n_840,pcie_block_i_n_841,pcie_block_i_n_842,pcie_block_i_n_843,pcie_block_i_n_844,pcie_block_i_n_845,pcie_block_i_n_846,pcie_block_i_n_847,pcie_block_i_n_848,pcie_block_i_n_849,pcie_block_i_n_850,pcie_block_i_n_851,pcie_block_i_n_852,pcie_block_i_n_853,pcie_block_i_n_854,pcie_block_i_n_855,pcie_block_i_n_856,pcie_block_i_n_857,pcie_block_i_n_858,pcie_block_i_n_859,pcie_block_i_n_860,pcie_block_i_n_861,pcie_block_i_n_862,pcie_block_i_n_863,pcie_block_i_n_864,pcie_block_i_n_865,pcie_block_i_n_866,pcie_block_i_n_867,pcie_block_i_n_868,pcie_block_i_n_869,pcie_block_i_n_870,pcie_block_i_n_871,pcie_block_i_n_872,pcie_block_i_n_873,pcie_block_i_n_874,pcie_block_i_n_875,pcie_block_i_n_876,pcie_block_i_n_877,pcie_block_i_n_878,pcie_block_i_n_879,pcie_block_i_n_880,pcie_block_i_n_881,pcie_block_i_n_882,pcie_block_i_n_883,pcie_block_i_n_884,pcie_block_i_n_885,pcie_block_i_n_886,pcie_block_i_n_887,pcie_block_i_n_888,pcie_block_i_n_889,pcie_block_i_n_890,pcie_block_i_n_891,pcie_block_i_n_892,pcie_block_i_n_893,pcie_block_i_n_894,pcie_block_i_n_895}),
        .TL2ERRMALFORMED(pcie_block_i_n_158),
        .TL2ERRRXOVERFLOW(pcie_block_i_n_159),
        .TL2PPMSUSPENDOK(pcie_block_i_n_160),
        .TL2PPMSUSPENDREQ(1'b0),
        .TLRSTN(1'b1),
        .TRNFCCPLD(fc_cpld),
        .TRNFCCPLH(fc_cplh),
        .TRNFCNPD(fc_npd),
        .TRNFCNPH(fc_nph),
        .TRNFCPD(fc_pd),
        .TRNFCPH(fc_ph),
        .TRNFCSEL(trn_fc_sel),
        .TRNLNKUP(trn_lnk_up),
        .TRNRBARHIT({pcie_block_i_n_1143,trn_rbar_hit}),
        .TRNRD(trn_rd),
        .TRNRDLLPDATA({pcie_block_i_n_896,pcie_block_i_n_897,pcie_block_i_n_898,pcie_block_i_n_899,pcie_block_i_n_900,pcie_block_i_n_901,pcie_block_i_n_902,pcie_block_i_n_903,pcie_block_i_n_904,pcie_block_i_n_905,pcie_block_i_n_906,pcie_block_i_n_907,pcie_block_i_n_908,pcie_block_i_n_909,pcie_block_i_n_910,pcie_block_i_n_911,pcie_block_i_n_912,pcie_block_i_n_913,pcie_block_i_n_914,pcie_block_i_n_915,pcie_block_i_n_916,pcie_block_i_n_917,pcie_block_i_n_918,pcie_block_i_n_919,pcie_block_i_n_920,pcie_block_i_n_921,pcie_block_i_n_922,pcie_block_i_n_923,pcie_block_i_n_924,pcie_block_i_n_925,pcie_block_i_n_926,pcie_block_i_n_927,pcie_block_i_n_928,pcie_block_i_n_929,pcie_block_i_n_930,pcie_block_i_n_931,pcie_block_i_n_932,pcie_block_i_n_933,pcie_block_i_n_934,pcie_block_i_n_935,pcie_block_i_n_936,pcie_block_i_n_937,pcie_block_i_n_938,pcie_block_i_n_939,pcie_block_i_n_940,pcie_block_i_n_941,pcie_block_i_n_942,pcie_block_i_n_943,pcie_block_i_n_944,pcie_block_i_n_945,pcie_block_i_n_946,pcie_block_i_n_947,pcie_block_i_n_948,pcie_block_i_n_949,pcie_block_i_n_950,pcie_block_i_n_951,pcie_block_i_n_952,pcie_block_i_n_953,pcie_block_i_n_954,pcie_block_i_n_955,pcie_block_i_n_956,pcie_block_i_n_957,pcie_block_i_n_958,pcie_block_i_n_959}),
        .TRNRDLLPSRCRDY({pcie_block_i_n_618,pcie_block_i_n_619}),
        .TRNRDSTRDY(trn_rdst_rdy),
        .TRNRECRCERR(trn_recrc_err),
        .TRNREOF(trn_reof),
        .TRNRERRFWD(trn_rerrfwd),
        .TRNRFCPRET(1'b1),
        .TRNRNPOK(trn_rnp_ok),
        .TRNRNPREQ(trn_rnp_req),
        .TRNRREM(trn_rrem),
        .TRNRSOF(trn_rsof),
        .TRNRSRCDSC(trn_rsrc_dsc),
        .TRNRSRCRDY(trn_rsrc_rdy),
        .TRNTBUFAV(trn_tbuf_av),
        .TRNTCFGGNT(trn_tcfg_gnt),
        .TRNTCFGREQ(trn_tcfg_req),
        .TRNTD(trn_td),
        .TRNTDLLPDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TRNTDLLPDSTRDY(pcie_block_i_n_169),
        .TRNTDLLPSRCRDY(1'b0),
        .TRNTDSTRDY({NLW_pcie_block_i_TRNTDSTRDY_UNCONNECTED[3:1],trn_tdst_rdy}),
        .TRNTECRCGEN(cfg_aer_ecrc_check_en_0[0]),
        .TRNTEOF(trn_teof),
        .TRNTERRDROP(trn_terr_drop),
        .TRNTERRFWD(cfg_aer_ecrc_check_en_0[1]),
        .TRNTREM(trn_trem),
        .TRNTSOF(trn_tsof),
        .TRNTSRCDSC(cfg_aer_ecrc_check_en_0[3]),
        .TRNTSRCRDY(trn_tsrc_rdy),
        .TRNTSTR(cfg_aer_ecrc_check_en_0[2]),
        .USERCLK(pipe_userclk1_in),
        .USERCLK2(pipe_userclk2_in),
        .USERRSTN(user_rst_n));
  LUT1 #(
    .INIT(2'h1)) 
    pcie_block_i_i_12
       (.I0(cfg_err_norecovery),
        .O(pcie_block_i_i_12_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    pcie_block_i_i_14
       (.I0(cfg_err_posted),
        .O(pcie_block_i_i_14_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    pcie_block_i_i_16
       (.I0(cfg_interrupt_assert),
        .O(pcie_block_i_i_16_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    pcie_block_i_i_18
       (.I0(cfg_interrupt_stat),
        .O(pcie_block_i_i_18_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    pcie_block_i_i_21
       (.I0(cfg_mgmt_wr_readonly),
        .O(pcie_block_i_i_21_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    pcie_block_i_i_22
       (.I0(cfg_mgmt_wr_rw1c_as_rw),
        .O(pcie_block_i_i_22_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    pcie_block_i_i_9
       (.I0(cfg_err_locked),
        .O(pcie_block_i_i_9_n_0));
  pcie_7x_0_pcie_7x_0_pcie_bram_top_7x pcie_bram_top
       (.MIMRXRADDR(mim_rx_raddr[10:0]),
        .MIMRXWADDR(mim_rx_waddr[10:0]),
        .MIMTXRADDR(mim_tx_raddr[10:0]),
        .MIMTXWADDR(mim_tx_waddr[10:0]),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl (mim_rx_rdata),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 (mim_rx_wdata),
        .mim_rx_ren(mim_rx_ren),
        .mim_rx_wen(mim_rx_wen),
        .mim_tx_ren(mim_tx_ren),
        .mim_tx_wen(mim_tx_wen),
        .pipe_userclk1_in(pipe_userclk1_in),
        .rdata(mim_tx_rdata),
        .wdata(mim_tx_wdata));
  LUT1 #(
    .INIT(2'h1)) 
    phy_lnk_up_cdc_i_1
       (.I0(pl_phy_lnk_up_n),
        .O(src_in));
  LUT5 #(
    .INIT(32'hFFFEAAAA)) 
    ppm_L1_thrtl_i_1
       (.I0(ppm_L1_trig),
        .I1(cfg_pcie_link_state[0]),
        .I2(cfg_pcie_link_state[2]),
        .I3(cfg_pcie_link_state[1]),
        .I4(ppm_L1_thrtl),
        .O(ppm_L1_thrtl_reg));
  LUT6 #(
    .INIT(64'hFFBEFFFFFFFFFFBE)) 
    store_ltssm_inferred_i_1
       (.I0(store_ltssm_inferred_i_2_n_0),
        .I1(ltssm_reg2[3]),
        .I2(pl_ltssm_state[1]),
        .I3(store_ltssm_inferred_i_3_n_0),
        .I4(ltssm_reg2[0]),
        .I5(pl_ltssm_state[0]),
        .O(in0));
  LUT5 #(
    .INIT(32'h6FFFFC6C)) 
    store_ltssm_inferred_i_2
       (.I0(pcie_drp_clk_1[5]),
        .I1(ltssm_reg2[5]),
        .I2(store_ltssm_inferred_i_1_0),
        .I3(pcie_drp_clk_1[4]),
        .I4(ltssm_reg2[4]),
        .O(store_ltssm_inferred_i_2_n_0));
  LUT5 #(
    .INIT(32'h6FFFFC6C)) 
    store_ltssm_inferred_i_3
       (.I0(pcie_drp_clk_1[1]),
        .I1(ltssm_reg2[1]),
        .I2(store_ltssm_inferred_i_1_0),
        .I3(pcie_drp_clk_1[2]),
        .I4(ltssm_reg2[2]),
        .O(store_ltssm_inferred_i_3_n_0));
  LUT6 #(
    .INIT(64'h0001010101010101)) 
    tbuf_av_gap_thrtl_i_4
       (.I0(trn_tbuf_av[5]),
        .I1(trn_tbuf_av[4]),
        .I2(trn_tbuf_av[3]),
        .I3(trn_tbuf_av[1]),
        .I4(trn_tbuf_av[2]),
        .I5(trn_tbuf_av[0]),
        .O(pcie_drp_clk_0));
  LUT4 #(
    .INIT(16'hFFF7)) 
    tbuf_av_gap_thrtl_i_5
       (.I0(trn_tbuf_av[2]),
        .I1(trn_tbuf_av[1]),
        .I2(tbuf_av_gap_thrtl_i_3[0]),
        .I3(tbuf_av_gap_thrtl_i_3[1]),
        .O(\tbuf_av_d_reg[3] ));
  LUT5 #(
    .INIT(32'h00000007)) 
    tbuf_av_min_thrtl_i_1
       (.I0(trn_tbuf_av[2]),
        .I1(trn_tbuf_av[1]),
        .I2(trn_tbuf_av[5]),
        .I3(trn_tbuf_av[4]),
        .I4(trn_tbuf_av[3]),
        .O(tbuf_av_min_trig));
  LUT2 #(
    .INIT(4'h8)) 
    tready_thrtl_i_6
       (.I0(trn_tcfg_req),
        .I1(reg_tcfg_gnt),
        .O(tcfg_req_trig));
  LUT6 #(
    .INIT(64'h08000000AEAA2AAA)) 
    trn_in_packet_i_1
       (.I0(trn_in_packet),
        .I1(trn_rdst_rdy),
        .I2(trn_reof),
        .I3(trn_rsrc_rdy),
        .I4(trn_rsof),
        .I5(trn_rsrc_dsc),
        .O(trn_in_packet_reg));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT2 #(
    .INIT(4'hE)) 
    trn_rsrc_dsc_prev_i_1
       (.I0(trn_rsrc_dsc),
        .I1(reg_dsc_detect),
        .O(trn_rsrc_dsc_prev0));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT4 #(
    .INIT(16'hAA08)) 
    trn_rsrc_rdy_prev_i_1
       (.I0(trn_rsrc_rdy),
        .I1(trn_rsof),
        .I2(trn_rsrc_dsc),
        .I3(trn_in_packet),
        .O(rsrc_rdy_filtered));
  LUT3 #(
    .INIT(8'h2A)) 
    user_reset_int_i_1
       (.I0(bridge_reset_int),
        .I1(user_rst_n),
        .I2(pl_phy_lnk_up_q),
        .O(user_reset_int_reg));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pcie_bram_7x" *) 
module pcie_7x_0_pcie_7x_0_pcie_bram_7x
   (rdata,
    pipe_userclk1_in,
    mim_tx_wen,
    mim_tx_ren,
    MIMTXWADDR,
    MIMTXRADDR,
    wdata);
  output [17:0]rdata;
  input pipe_userclk1_in;
  input mim_tx_wen;
  input mim_tx_ren;
  input [10:0]MIMTXWADDR;
  input [10:0]MIMTXRADDR;
  input [17:0]wdata;

  wire [10:0]MIMTXRADDR;
  wire [10:0]MIMTXWADDR;
  wire mim_tx_ren;
  wire mim_tx_wen;
  wire pipe_userclk1_in;
  wire [17:0]rdata;
  wire [17:0]wdata;

  pcie_7x_0_BRAM_TDP_MACRO_9 \use_tdp.ramb36 
       (.MIMTXRADDR(MIMTXRADDR),
        .MIMTXWADDR(MIMTXWADDR),
        .mim_tx_ren(mim_tx_ren),
        .mim_tx_wen(mim_tx_wen),
        .pipe_userclk1_in(pipe_userclk1_in),
        .rdata(rdata),
        .wdata(wdata));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pcie_bram_7x" *) 
module pcie_7x_0_pcie_7x_0_pcie_bram_7x_10
   (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ,
    pipe_userclk1_in,
    mim_rx_wen,
    mim_rx_ren,
    MIMRXWADDR,
    MIMRXRADDR,
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 );
  output [17:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ;
  input pipe_userclk1_in;
  input mim_rx_wen;
  input mim_rx_ren;
  input [10:0]MIMRXWADDR;
  input [10:0]MIMRXRADDR;
  input [17:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ;

  wire [10:0]MIMRXRADDR;
  wire [10:0]MIMRXWADDR;
  wire [17:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ;
  wire [17:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ;
  wire mim_rx_ren;
  wire mim_rx_wen;
  wire pipe_userclk1_in;

  pcie_7x_0_BRAM_TDP_MACRO_17 \use_tdp.ramb36 
       (.MIMRXRADDR(MIMRXRADDR),
        .MIMRXWADDR(MIMRXWADDR),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ),
        .mim_rx_ren(mim_rx_ren),
        .mim_rx_wen(mim_rx_wen),
        .pipe_userclk1_in(pipe_userclk1_in));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pcie_bram_7x" *) 
module pcie_7x_0_pcie_7x_0_pcie_bram_7x_11
   (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ,
    pipe_userclk1_in,
    mim_rx_wen,
    mim_rx_ren,
    MIMRXWADDR,
    MIMRXRADDR,
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 );
  output [17:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ;
  input pipe_userclk1_in;
  input mim_rx_wen;
  input mim_rx_ren;
  input [10:0]MIMRXWADDR;
  input [10:0]MIMRXRADDR;
  input [17:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ;

  wire [10:0]MIMRXRADDR;
  wire [10:0]MIMRXWADDR;
  wire [17:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ;
  wire [17:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ;
  wire mim_rx_ren;
  wire mim_rx_wen;
  wire pipe_userclk1_in;

  pcie_7x_0_BRAM_TDP_MACRO_16 \use_tdp.ramb36 
       (.MIMRXRADDR(MIMRXRADDR),
        .MIMRXWADDR(MIMRXWADDR),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ),
        .mim_rx_ren(mim_rx_ren),
        .mim_rx_wen(mim_rx_wen),
        .pipe_userclk1_in(pipe_userclk1_in));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pcie_bram_7x" *) 
module pcie_7x_0_pcie_7x_0_pcie_bram_7x_12
   (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ,
    pipe_userclk1_in,
    mim_rx_wen,
    mim_rx_ren,
    MIMRXWADDR,
    MIMRXRADDR,
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 );
  output [17:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ;
  input pipe_userclk1_in;
  input mim_rx_wen;
  input mim_rx_ren;
  input [10:0]MIMRXWADDR;
  input [10:0]MIMRXRADDR;
  input [17:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ;

  wire [10:0]MIMRXRADDR;
  wire [10:0]MIMRXWADDR;
  wire [17:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ;
  wire [17:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ;
  wire mim_rx_ren;
  wire mim_rx_wen;
  wire pipe_userclk1_in;

  pcie_7x_0_BRAM_TDP_MACRO_15 \use_tdp.ramb36 
       (.MIMRXRADDR(MIMRXRADDR),
        .MIMRXWADDR(MIMRXWADDR),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ),
        .mim_rx_ren(mim_rx_ren),
        .mim_rx_wen(mim_rx_wen),
        .pipe_userclk1_in(pipe_userclk1_in));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pcie_bram_7x" *) 
module pcie_7x_0_pcie_7x_0_pcie_bram_7x_13
   (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ,
    pipe_userclk1_in,
    mim_rx_wen,
    mim_rx_ren,
    MIMRXWADDR,
    MIMRXRADDR,
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 );
  output [13:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ;
  input pipe_userclk1_in;
  input mim_rx_wen;
  input mim_rx_ren;
  input [10:0]MIMRXWADDR;
  input [10:0]MIMRXRADDR;
  input [13:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ;

  wire [10:0]MIMRXRADDR;
  wire [10:0]MIMRXWADDR;
  wire [13:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ;
  wire [13:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ;
  wire mim_rx_ren;
  wire mim_rx_wen;
  wire pipe_userclk1_in;

  pcie_7x_0_BRAM_TDP_MACRO_14 \use_tdp.ramb36 
       (.MIMRXRADDR(MIMRXRADDR),
        .MIMRXWADDR(MIMRXWADDR),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ),
        .mim_rx_ren(mim_rx_ren),
        .mim_rx_wen(mim_rx_wen),
        .pipe_userclk1_in(pipe_userclk1_in));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pcie_bram_7x" *) 
module pcie_7x_0_pcie_7x_0_pcie_bram_7x_4
   (rdata,
    pipe_userclk1_in,
    mim_tx_wen,
    mim_tx_ren,
    MIMTXWADDR,
    MIMTXRADDR,
    wdata);
  output [17:0]rdata;
  input pipe_userclk1_in;
  input mim_tx_wen;
  input mim_tx_ren;
  input [10:0]MIMTXWADDR;
  input [10:0]MIMTXRADDR;
  input [17:0]wdata;

  wire [10:0]MIMTXRADDR;
  wire [10:0]MIMTXWADDR;
  wire mim_tx_ren;
  wire mim_tx_wen;
  wire pipe_userclk1_in;
  wire [17:0]rdata;
  wire [17:0]wdata;

  pcie_7x_0_BRAM_TDP_MACRO_8 \use_tdp.ramb36 
       (.MIMTXRADDR(MIMTXRADDR),
        .MIMTXWADDR(MIMTXWADDR),
        .mim_tx_ren(mim_tx_ren),
        .mim_tx_wen(mim_tx_wen),
        .pipe_userclk1_in(pipe_userclk1_in),
        .rdata(rdata),
        .wdata(wdata));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pcie_bram_7x" *) 
module pcie_7x_0_pcie_7x_0_pcie_bram_7x_5
   (rdata,
    pipe_userclk1_in,
    mim_tx_wen,
    mim_tx_ren,
    MIMTXWADDR,
    MIMTXRADDR,
    wdata);
  output [17:0]rdata;
  input pipe_userclk1_in;
  input mim_tx_wen;
  input mim_tx_ren;
  input [10:0]MIMTXWADDR;
  input [10:0]MIMTXRADDR;
  input [17:0]wdata;

  wire [10:0]MIMTXRADDR;
  wire [10:0]MIMTXWADDR;
  wire mim_tx_ren;
  wire mim_tx_wen;
  wire pipe_userclk1_in;
  wire [17:0]rdata;
  wire [17:0]wdata;

  pcie_7x_0_BRAM_TDP_MACRO_7 \use_tdp.ramb36 
       (.MIMTXRADDR(MIMTXRADDR),
        .MIMTXWADDR(MIMTXWADDR),
        .mim_tx_ren(mim_tx_ren),
        .mim_tx_wen(mim_tx_wen),
        .pipe_userclk1_in(pipe_userclk1_in),
        .rdata(rdata),
        .wdata(wdata));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pcie_bram_7x" *) 
module pcie_7x_0_pcie_7x_0_pcie_bram_7x_6
   (rdata,
    pipe_userclk1_in,
    mim_tx_wen,
    mim_tx_ren,
    MIMTXWADDR,
    MIMTXRADDR,
    wdata);
  output [14:0]rdata;
  input pipe_userclk1_in;
  input mim_tx_wen;
  input mim_tx_ren;
  input [10:0]MIMTXWADDR;
  input [10:0]MIMTXRADDR;
  input [14:0]wdata;

  wire [10:0]MIMTXRADDR;
  wire [10:0]MIMTXWADDR;
  wire mim_tx_ren;
  wire mim_tx_wen;
  wire pipe_userclk1_in;
  wire [14:0]rdata;
  wire [14:0]wdata;

  pcie_7x_0_BRAM_TDP_MACRO \use_tdp.ramb36 
       (.MIMTXRADDR(MIMTXRADDR),
        .MIMTXWADDR(MIMTXWADDR),
        .mim_tx_ren(mim_tx_ren),
        .mim_tx_wen(mim_tx_wen),
        .pipe_userclk1_in(pipe_userclk1_in),
        .rdata(rdata),
        .wdata(wdata));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pcie_bram_top_7x" *) 
module pcie_7x_0_pcie_7x_0_pcie_bram_top_7x
   (rdata,
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl ,
    pipe_userclk1_in,
    mim_tx_wen,
    mim_tx_ren,
    MIMTXWADDR,
    MIMTXRADDR,
    wdata,
    mim_rx_wen,
    mim_rx_ren,
    MIMRXWADDR,
    MIMRXRADDR,
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 );
  output [68:0]rdata;
  output [67:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ;
  input pipe_userclk1_in;
  input mim_tx_wen;
  input mim_tx_ren;
  input [10:0]MIMTXWADDR;
  input [10:0]MIMTXRADDR;
  input [68:0]wdata;
  input mim_rx_wen;
  input mim_rx_ren;
  input [10:0]MIMRXWADDR;
  input [10:0]MIMRXRADDR;
  input [67:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ;

  wire [10:0]MIMRXRADDR;
  wire [10:0]MIMRXWADDR;
  wire [10:0]MIMTXRADDR;
  wire [10:0]MIMTXWADDR;
  wire [67:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ;
  wire [67:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ;
  wire mim_rx_ren;
  wire mim_rx_wen;
  wire mim_tx_ren;
  wire mim_tx_wen;
  wire pipe_userclk1_in;
  wire [68:0]rdata;
  wire [68:0]wdata;

  pcie_7x_0_pcie_7x_0_pcie_brams_7x pcie_brams_rx
       (.MIMRXRADDR(MIMRXRADDR),
        .MIMRXWADDR(MIMRXWADDR),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ),
        .mim_rx_ren(mim_rx_ren),
        .mim_rx_wen(mim_rx_wen),
        .pipe_userclk1_in(pipe_userclk1_in));
  pcie_7x_0_pcie_7x_0_pcie_brams_7x_3 pcie_brams_tx
       (.MIMTXRADDR(MIMTXRADDR),
        .MIMTXWADDR(MIMTXWADDR),
        .mim_tx_ren(mim_tx_ren),
        .mim_tx_wen(mim_tx_wen),
        .pipe_userclk1_in(pipe_userclk1_in),
        .rdata(rdata),
        .wdata(wdata));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pcie_brams_7x" *) 
module pcie_7x_0_pcie_7x_0_pcie_brams_7x
   (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ,
    pipe_userclk1_in,
    mim_rx_wen,
    mim_rx_ren,
    MIMRXWADDR,
    MIMRXRADDR,
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 );
  output [67:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ;
  input pipe_userclk1_in;
  input mim_rx_wen;
  input mim_rx_ren;
  input [10:0]MIMRXWADDR;
  input [10:0]MIMRXRADDR;
  input [67:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ;

  wire [10:0]MIMRXRADDR;
  wire [10:0]MIMRXWADDR;
  wire [67:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ;
  wire [67:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ;
  wire mim_rx_ren;
  wire mim_rx_wen;
  wire pipe_userclk1_in;

  pcie_7x_0_pcie_7x_0_pcie_bram_7x_10 \brams[0].ram 
       (.MIMRXRADDR(MIMRXRADDR),
        .MIMRXWADDR(MIMRXWADDR),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [17:0]),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 [17:0]),
        .mim_rx_ren(mim_rx_ren),
        .mim_rx_wen(mim_rx_wen),
        .pipe_userclk1_in(pipe_userclk1_in));
  pcie_7x_0_pcie_7x_0_pcie_bram_7x_11 \brams[1].ram 
       (.MIMRXRADDR(MIMRXRADDR),
        .MIMRXWADDR(MIMRXWADDR),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [35:18]),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 [35:18]),
        .mim_rx_ren(mim_rx_ren),
        .mim_rx_wen(mim_rx_wen),
        .pipe_userclk1_in(pipe_userclk1_in));
  pcie_7x_0_pcie_7x_0_pcie_bram_7x_12 \brams[2].ram 
       (.MIMRXRADDR(MIMRXRADDR),
        .MIMRXWADDR(MIMRXWADDR),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [53:36]),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 [53:36]),
        .mim_rx_ren(mim_rx_ren),
        .mim_rx_wen(mim_rx_wen),
        .pipe_userclk1_in(pipe_userclk1_in));
  pcie_7x_0_pcie_7x_0_pcie_bram_7x_13 \brams[3].ram 
       (.MIMRXRADDR(MIMRXRADDR),
        .MIMRXWADDR(MIMRXWADDR),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [67:54]),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 [67:54]),
        .mim_rx_ren(mim_rx_ren),
        .mim_rx_wen(mim_rx_wen),
        .pipe_userclk1_in(pipe_userclk1_in));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pcie_brams_7x" *) 
module pcie_7x_0_pcie_7x_0_pcie_brams_7x_3
   (rdata,
    pipe_userclk1_in,
    mim_tx_wen,
    mim_tx_ren,
    MIMTXWADDR,
    MIMTXRADDR,
    wdata);
  output [68:0]rdata;
  input pipe_userclk1_in;
  input mim_tx_wen;
  input mim_tx_ren;
  input [10:0]MIMTXWADDR;
  input [10:0]MIMTXRADDR;
  input [68:0]wdata;

  wire [10:0]MIMTXRADDR;
  wire [10:0]MIMTXWADDR;
  wire mim_tx_ren;
  wire mim_tx_wen;
  wire pipe_userclk1_in;
  wire [68:0]rdata;
  wire [68:0]wdata;

  pcie_7x_0_pcie_7x_0_pcie_bram_7x \brams[0].ram 
       (.MIMTXRADDR(MIMTXRADDR),
        .MIMTXWADDR(MIMTXWADDR),
        .mim_tx_ren(mim_tx_ren),
        .mim_tx_wen(mim_tx_wen),
        .pipe_userclk1_in(pipe_userclk1_in),
        .rdata(rdata[17:0]),
        .wdata(wdata[17:0]));
  pcie_7x_0_pcie_7x_0_pcie_bram_7x_4 \brams[1].ram 
       (.MIMTXRADDR(MIMTXRADDR),
        .MIMTXWADDR(MIMTXWADDR),
        .mim_tx_ren(mim_tx_ren),
        .mim_tx_wen(mim_tx_wen),
        .pipe_userclk1_in(pipe_userclk1_in),
        .rdata(rdata[35:18]),
        .wdata(wdata[35:18]));
  pcie_7x_0_pcie_7x_0_pcie_bram_7x_5 \brams[2].ram 
       (.MIMTXRADDR(MIMTXRADDR),
        .MIMTXWADDR(MIMTXWADDR),
        .mim_tx_ren(mim_tx_ren),
        .mim_tx_wen(mim_tx_wen),
        .pipe_userclk1_in(pipe_userclk1_in),
        .rdata(rdata[53:36]),
        .wdata(wdata[53:36]));
  pcie_7x_0_pcie_7x_0_pcie_bram_7x_6 \brams[3].ram 
       (.MIMTXRADDR(MIMTXRADDR),
        .MIMTXWADDR(MIMTXWADDR),
        .mim_tx_ren(mim_tx_ren),
        .mim_tx_wen(mim_tx_wen),
        .pipe_userclk1_in(pipe_userclk1_in),
        .rdata(rdata[68:54]),
        .wdata(wdata[68:54]));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pcie_pipe_lane" *) 
module pcie_7x_0_pcie_7x_0_pcie_pipe_lane
   (pipe_rx1_valid,
    pipe_rx1_chanisaligned,
    pipe_rx1_phy_status,
    pipe_rx1_elec_idle,
    pipe_rx1_polarity,
    \pipe_stages_1.pipe_tx_compliance_q_reg_0 ,
    \pipe_stages_1.pipe_tx_elec_idle_q_reg_0 ,
    Q,
    \pipe_stages_1.pipe_rx_data_q_reg[15]_0 ,
    \pipe_stages_1.pipe_rx_status_q_reg[2]_0 ,
    \pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 ,
    \pipe_stages_1.pipe_tx_data_q_reg[15]_0 ,
    \pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 ,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ,
    \pipe_stages_1.pipe_rx_valid_q_reg_0 ,
    pipe_pclk_in,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ,
    \pipe_stages_1.pipe_rx_phy_status_q_reg_0 ,
    \pipe_stages_1.pipe_rx_elec_idle_q_reg_0 ,
    \pipe_stages_1.pipe_rx_polarity_q_reg_0 ,
    pipe_tx1_compliance,
    pipe_tx1_elec_idle,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ,
    \pipe_stages_1.pipe_rx_data_q_reg[15]_1 ,
    \pipe_stages_1.pipe_rx_status_q_reg[2]_1 ,
    \pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 ,
    \pipe_stages_1.pipe_tx_data_q_reg[15]_1 ,
    \pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 );
  output pipe_rx1_valid;
  output pipe_rx1_chanisaligned;
  output pipe_rx1_phy_status;
  output pipe_rx1_elec_idle;
  output pipe_rx1_polarity;
  output \pipe_stages_1.pipe_tx_compliance_q_reg_0 ;
  output \pipe_stages_1.pipe_tx_elec_idle_q_reg_0 ;
  output [1:0]Q;
  output [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_0 ;
  output [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_0 ;
  output [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 ;
  output [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_0 ;
  output [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 ;
  input [0:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ;
  input \pipe_stages_1.pipe_rx_valid_q_reg_0 ;
  input pipe_pclk_in;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  input \pipe_stages_1.pipe_rx_phy_status_q_reg_0 ;
  input \pipe_stages_1.pipe_rx_elec_idle_q_reg_0 ;
  input \pipe_stages_1.pipe_rx_polarity_q_reg_0 ;
  input pipe_tx1_compliance;
  input pipe_tx1_elec_idle;
  input [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ;
  input [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_1 ;
  input [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_1 ;
  input [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 ;
  input [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_1 ;
  input [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 ;

  wire [1:0]Q;
  wire pipe_pclk_in;
  wire pipe_rx1_chanisaligned;
  wire pipe_rx1_elec_idle;
  wire pipe_rx1_phy_status;
  wire pipe_rx1_polarity;
  wire pipe_rx1_valid;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  wire [0:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ;
  wire [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ;
  wire [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_0 ;
  wire [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_1 ;
  wire \pipe_stages_1.pipe_rx_elec_idle_q_reg_0 ;
  wire \pipe_stages_1.pipe_rx_phy_status_q_reg_0 ;
  wire \pipe_stages_1.pipe_rx_polarity_q_reg_0 ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_0 ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_1 ;
  wire \pipe_stages_1.pipe_rx_valid_q_reg_0 ;
  wire [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 ;
  wire [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 ;
  wire \pipe_stages_1.pipe_tx_compliance_q_reg_0 ;
  wire [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_0 ;
  wire [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_1 ;
  wire \pipe_stages_1.pipe_tx_elec_idle_q_reg_0 ;
  wire [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 ;
  wire [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 ;
  wire pipe_tx1_compliance;
  wire pipe_tx1_elec_idle;

  FDRE \pipe_stages_1.pipe_rx_chanisaligned_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ),
        .Q(pipe_rx1_chanisaligned),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_rx_char_is_k_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 [0]),
        .Q(Q[0]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_rx_char_is_k_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 [1]),
        .Q(Q[1]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [0]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [0]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [10]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [10]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [11]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [11]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [12]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [12]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [13]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [13]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [14]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [14]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [15]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [15]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [1]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [1]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [2]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [2]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [3]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [3]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [4]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [4]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [5]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [5]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [6]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [6]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [7]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [7]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [8]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [8]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [9]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [9]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_rx_elec_idle_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_elec_idle_q_reg_0 ),
        .Q(pipe_rx1_elec_idle),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_rx_phy_status_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_phy_status_q_reg_0 ),
        .Q(pipe_rx1_phy_status),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_rx_polarity_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_polarity_q_reg_0 ),
        .Q(pipe_rx1_polarity),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_status_q_reg[2]_1 [0]),
        .Q(\pipe_stages_1.pipe_rx_status_q_reg[2]_0 [0]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_status_q_reg[2]_1 [1]),
        .Q(\pipe_stages_1.pipe_rx_status_q_reg[2]_0 [1]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_status_q_reg[2]_1 [2]),
        .Q(\pipe_stages_1.pipe_rx_status_q_reg[2]_0 [2]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_rx_valid_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_valid_q_reg_0 ),
        .Q(pipe_rx1_valid),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_tx_char_is_k_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 [0]),
        .Q(\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 [0]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_tx_char_is_k_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 [1]),
        .Q(\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 [1]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_tx_compliance_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_tx1_compliance),
        .Q(\pipe_stages_1.pipe_tx_compliance_q_reg_0 ),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [0]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [0]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [10]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [10]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [11]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [11]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [12]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [12]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [13]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [13]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [14]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [14]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [15]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [15]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [1]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [1]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [2]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [2]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [3]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [3]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [4]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [4]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [5]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [5]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [6]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [6]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [7]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [7]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [8]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [8]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [9]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [9]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDSE \pipe_stages_1.pipe_tx_elec_idle_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_tx1_elec_idle),
        .Q(\pipe_stages_1.pipe_tx_elec_idle_q_reg_0 ),
        .S(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDRE \pipe_stages_1.pipe_tx_powerdown_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 [0]),
        .Q(\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 [0]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
  FDSE \pipe_stages_1.pipe_tx_powerdown_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 [1]),
        .Q(\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 [1]),
        .S(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pcie_pipe_lane" *) 
module pcie_7x_0_pcie_7x_0_pcie_pipe_lane_0
   (pipe_rx2_valid,
    pipe_rx2_chanisaligned,
    pipe_rx2_phy_status,
    pipe_rx2_elec_idle,
    pipe_rx2_polarity,
    \pipe_stages_1.pipe_tx_compliance_q_reg_0 ,
    \pipe_stages_1.pipe_tx_elec_idle_q_reg_0 ,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ,
    \pipe_stages_1.pipe_rx_data_q_reg[15]_0 ,
    \pipe_stages_1.pipe_rx_status_q_reg[2]_0 ,
    \pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 ,
    \pipe_stages_1.pipe_tx_data_q_reg[15]_0 ,
    \pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 ,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ,
    \pipe_stages_1.pipe_rx_valid_q_reg_0 ,
    pipe_pclk_in,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ,
    \pipe_stages_1.pipe_rx_phy_status_q_reg_0 ,
    \pipe_stages_1.pipe_rx_elec_idle_q_reg_0 ,
    \pipe_stages_1.pipe_rx_polarity_q_reg_0 ,
    pipe_tx2_compliance,
    pipe_tx2_elec_idle,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 ,
    \pipe_stages_1.pipe_rx_data_q_reg[15]_1 ,
    \pipe_stages_1.pipe_rx_status_q_reg[2]_1 ,
    \pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 ,
    \pipe_stages_1.pipe_tx_data_q_reg[15]_1 ,
    \pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 );
  output pipe_rx2_valid;
  output pipe_rx2_chanisaligned;
  output pipe_rx2_phy_status;
  output pipe_rx2_elec_idle;
  output pipe_rx2_polarity;
  output \pipe_stages_1.pipe_tx_compliance_q_reg_0 ;
  output \pipe_stages_1.pipe_tx_elec_idle_q_reg_0 ;
  output [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ;
  output [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_0 ;
  output [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_0 ;
  output [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 ;
  output [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_0 ;
  output [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 ;
  input [0:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ;
  input \pipe_stages_1.pipe_rx_valid_q_reg_0 ;
  input pipe_pclk_in;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  input \pipe_stages_1.pipe_rx_phy_status_q_reg_0 ;
  input \pipe_stages_1.pipe_rx_elec_idle_q_reg_0 ;
  input \pipe_stages_1.pipe_rx_polarity_q_reg_0 ;
  input pipe_tx2_compliance;
  input pipe_tx2_elec_idle;
  input [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 ;
  input [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_1 ;
  input [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_1 ;
  input [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 ;
  input [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_1 ;
  input [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 ;

  wire pipe_pclk_in;
  wire pipe_rx2_chanisaligned;
  wire pipe_rx2_elec_idle;
  wire pipe_rx2_phy_status;
  wire pipe_rx2_polarity;
  wire pipe_rx2_valid;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  wire [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ;
  wire [0:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ;
  wire [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 ;
  wire [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_0 ;
  wire [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_1 ;
  wire \pipe_stages_1.pipe_rx_elec_idle_q_reg_0 ;
  wire \pipe_stages_1.pipe_rx_phy_status_q_reg_0 ;
  wire \pipe_stages_1.pipe_rx_polarity_q_reg_0 ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_0 ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_1 ;
  wire \pipe_stages_1.pipe_rx_valid_q_reg_0 ;
  wire [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 ;
  wire [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 ;
  wire \pipe_stages_1.pipe_tx_compliance_q_reg_0 ;
  wire [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_0 ;
  wire [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_1 ;
  wire \pipe_stages_1.pipe_tx_elec_idle_q_reg_0 ;
  wire [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 ;
  wire [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 ;
  wire pipe_tx2_compliance;
  wire pipe_tx2_elec_idle;

  FDRE \pipe_stages_1.pipe_rx_chanisaligned_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ),
        .Q(pipe_rx2_chanisaligned),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_char_is_k_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 [0]),
        .Q(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 [0]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_char_is_k_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 [1]),
        .Q(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 [1]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [0]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [0]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [10]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [10]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [11]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [11]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [12]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [12]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [13]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [13]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [14]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [14]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [15]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [15]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [1]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [1]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [2]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [2]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [3]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [3]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [4]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [4]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [5]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [5]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [6]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [6]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [7]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [7]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [8]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [8]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [9]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [9]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_elec_idle_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_elec_idle_q_reg_0 ),
        .Q(pipe_rx2_elec_idle),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_phy_status_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_phy_status_q_reg_0 ),
        .Q(pipe_rx2_phy_status),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_polarity_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_polarity_q_reg_0 ),
        .Q(pipe_rx2_polarity),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_status_q_reg[2]_1 [0]),
        .Q(\pipe_stages_1.pipe_rx_status_q_reg[2]_0 [0]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_status_q_reg[2]_1 [1]),
        .Q(\pipe_stages_1.pipe_rx_status_q_reg[2]_0 [1]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_status_q_reg[2]_1 [2]),
        .Q(\pipe_stages_1.pipe_rx_status_q_reg[2]_0 [2]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_valid_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_valid_q_reg_0 ),
        .Q(pipe_rx2_valid),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_char_is_k_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 [0]),
        .Q(\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 [0]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_char_is_k_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 [1]),
        .Q(\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 [1]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_compliance_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_tx2_compliance),
        .Q(\pipe_stages_1.pipe_tx_compliance_q_reg_0 ),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [0]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [0]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [10]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [10]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [11]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [11]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [12]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [12]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [13]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [13]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [14]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [14]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [15]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [15]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [1]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [1]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [2]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [2]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [3]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [3]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [4]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [4]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [5]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [5]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [6]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [6]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [7]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [7]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [8]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [8]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [9]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [9]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDSE \pipe_stages_1.pipe_tx_elec_idle_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_tx2_elec_idle),
        .Q(\pipe_stages_1.pipe_tx_elec_idle_q_reg_0 ),
        .S(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_powerdown_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 [0]),
        .Q(\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 [0]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDSE \pipe_stages_1.pipe_tx_powerdown_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 [1]),
        .Q(\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 [1]),
        .S(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pcie_pipe_lane" *) 
module pcie_7x_0_pcie_7x_0_pcie_pipe_lane_1
   (pipe_rx3_valid,
    pipe_rx3_chanisaligned,
    pipe_rx3_phy_status,
    pipe_rx3_elec_idle,
    pipe_rx3_polarity,
    \pipe_stages_1.pipe_tx_compliance_q_reg_0 ,
    \pipe_stages_1.pipe_tx_elec_idle_q_reg_0 ,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ,
    \pipe_stages_1.pipe_rx_data_q_reg[15]_0 ,
    \pipe_stages_1.pipe_rx_status_q_reg[2]_0 ,
    \pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 ,
    \pipe_stages_1.pipe_tx_data_q_reg[15]_0 ,
    \pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 ,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ,
    \pipe_stages_1.pipe_rx_valid_q_reg_0 ,
    pipe_pclk_in,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ,
    \pipe_stages_1.pipe_rx_phy_status_q_reg_0 ,
    \pipe_stages_1.pipe_rx_elec_idle_q_reg_0 ,
    \pipe_stages_1.pipe_rx_polarity_q_reg_0 ,
    pipe_tx3_compliance,
    pipe_tx3_elec_idle,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 ,
    \pipe_stages_1.pipe_rx_data_q_reg[15]_1 ,
    \pipe_stages_1.pipe_rx_status_q_reg[2]_1 ,
    \pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 ,
    \pipe_stages_1.pipe_tx_data_q_reg[15]_1 ,
    \pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 );
  output pipe_rx3_valid;
  output pipe_rx3_chanisaligned;
  output pipe_rx3_phy_status;
  output pipe_rx3_elec_idle;
  output pipe_rx3_polarity;
  output \pipe_stages_1.pipe_tx_compliance_q_reg_0 ;
  output \pipe_stages_1.pipe_tx_elec_idle_q_reg_0 ;
  output [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ;
  output [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_0 ;
  output [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_0 ;
  output [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 ;
  output [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_0 ;
  output [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 ;
  input [0:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ;
  input \pipe_stages_1.pipe_rx_valid_q_reg_0 ;
  input pipe_pclk_in;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  input \pipe_stages_1.pipe_rx_phy_status_q_reg_0 ;
  input \pipe_stages_1.pipe_rx_elec_idle_q_reg_0 ;
  input \pipe_stages_1.pipe_rx_polarity_q_reg_0 ;
  input pipe_tx3_compliance;
  input pipe_tx3_elec_idle;
  input [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 ;
  input [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_1 ;
  input [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_1 ;
  input [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 ;
  input [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_1 ;
  input [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 ;

  wire pipe_pclk_in;
  wire pipe_rx3_chanisaligned;
  wire pipe_rx3_elec_idle;
  wire pipe_rx3_phy_status;
  wire pipe_rx3_polarity;
  wire pipe_rx3_valid;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  wire [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ;
  wire [0:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ;
  wire [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 ;
  wire [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_0 ;
  wire [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_1 ;
  wire \pipe_stages_1.pipe_rx_elec_idle_q_reg_0 ;
  wire \pipe_stages_1.pipe_rx_phy_status_q_reg_0 ;
  wire \pipe_stages_1.pipe_rx_polarity_q_reg_0 ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_0 ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_1 ;
  wire \pipe_stages_1.pipe_rx_valid_q_reg_0 ;
  wire [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 ;
  wire [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 ;
  wire \pipe_stages_1.pipe_tx_compliance_q_reg_0 ;
  wire [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_0 ;
  wire [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_1 ;
  wire \pipe_stages_1.pipe_tx_elec_idle_q_reg_0 ;
  wire [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 ;
  wire [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 ;
  wire pipe_tx3_compliance;
  wire pipe_tx3_elec_idle;

  FDRE \pipe_stages_1.pipe_rx_chanisaligned_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ),
        .Q(pipe_rx3_chanisaligned),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_char_is_k_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 [0]),
        .Q(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 [0]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_char_is_k_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 [1]),
        .Q(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 [1]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [0]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [0]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [10]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [10]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [11]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [11]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [12]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [12]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [13]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [13]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [14]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [14]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [15]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [15]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [1]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [1]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [2]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [2]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [3]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [3]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [4]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [4]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [5]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [5]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [6]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [6]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [7]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [7]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [8]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [8]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [9]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [9]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_elec_idle_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_elec_idle_q_reg_0 ),
        .Q(pipe_rx3_elec_idle),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_phy_status_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_phy_status_q_reg_0 ),
        .Q(pipe_rx3_phy_status),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_polarity_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_polarity_q_reg_0 ),
        .Q(pipe_rx3_polarity),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_status_q_reg[2]_1 [0]),
        .Q(\pipe_stages_1.pipe_rx_status_q_reg[2]_0 [0]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_status_q_reg[2]_1 [1]),
        .Q(\pipe_stages_1.pipe_rx_status_q_reg[2]_0 [1]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_status_q_reg[2]_1 [2]),
        .Q(\pipe_stages_1.pipe_rx_status_q_reg[2]_0 [2]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_valid_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_valid_q_reg_0 ),
        .Q(pipe_rx3_valid),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_char_is_k_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 [0]),
        .Q(\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 [0]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_char_is_k_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 [1]),
        .Q(\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 [1]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_compliance_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_tx3_compliance),
        .Q(\pipe_stages_1.pipe_tx_compliance_q_reg_0 ),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [0]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [0]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [10]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [10]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [11]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [11]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [12]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [12]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [13]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [13]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [14]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [14]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [15]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [15]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [1]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [1]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [2]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [2]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [3]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [3]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [4]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [4]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [5]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [5]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [6]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [6]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [7]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [7]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [8]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [8]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [9]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [9]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDSE \pipe_stages_1.pipe_tx_elec_idle_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_tx3_elec_idle),
        .Q(\pipe_stages_1.pipe_tx_elec_idle_q_reg_0 ),
        .S(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_powerdown_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 [0]),
        .Q(\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 [0]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDSE \pipe_stages_1.pipe_tx_powerdown_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 [1]),
        .Q(\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 [1]),
        .S(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pcie_pipe_lane" *) 
module pcie_7x_0_pcie_7x_0_pcie_pipe_lane_2
   (pipe_rx0_valid,
    pipe_rx0_chanisaligned,
    pipe_rx0_phy_status,
    pipe_rx0_elec_idle,
    pipe_rx0_polarity,
    USER_TXCOMPLIANCE,
    USER_TXELECIDLE,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ,
    \pipe_stages_1.pipe_rx_data_q_reg[15]_0 ,
    \pipe_stages_1.pipe_rx_status_q_reg[2]_0 ,
    \pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 ,
    \pipe_stages_1.pipe_tx_data_q_reg[15]_0 ,
    \pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 ,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ,
    \pipe_stages_1.pipe_rx_valid_q_reg_0 ,
    pipe_pclk_in,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ,
    \pipe_stages_1.pipe_rx_phy_status_q_reg_0 ,
    \pipe_stages_1.pipe_rx_elec_idle_q_reg_0 ,
    \pipe_stages_1.pipe_rx_polarity_q_reg_0 ,
    pipe_tx0_compliance,
    pipe_tx0_elec_idle,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 ,
    \pipe_stages_1.pipe_rx_data_q_reg[15]_1 ,
    \pipe_stages_1.pipe_rx_status_q_reg[2]_1 ,
    \pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 ,
    \pipe_stages_1.pipe_tx_data_q_reg[15]_1 ,
    \pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 );
  output pipe_rx0_valid;
  output pipe_rx0_chanisaligned;
  output pipe_rx0_phy_status;
  output pipe_rx0_elec_idle;
  output pipe_rx0_polarity;
  output USER_TXCOMPLIANCE;
  output USER_TXELECIDLE;
  output [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ;
  output [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_0 ;
  output [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_0 ;
  output [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 ;
  output [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_0 ;
  output [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 ;
  input [0:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ;
  input \pipe_stages_1.pipe_rx_valid_q_reg_0 ;
  input pipe_pclk_in;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  input \pipe_stages_1.pipe_rx_phy_status_q_reg_0 ;
  input \pipe_stages_1.pipe_rx_elec_idle_q_reg_0 ;
  input \pipe_stages_1.pipe_rx_polarity_q_reg_0 ;
  input pipe_tx0_compliance;
  input pipe_tx0_elec_idle;
  input [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 ;
  input [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_1 ;
  input [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_1 ;
  input [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 ;
  input [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_1 ;
  input [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 ;

  wire USER_TXCOMPLIANCE;
  wire USER_TXELECIDLE;
  wire pipe_pclk_in;
  wire pipe_rx0_chanisaligned;
  wire pipe_rx0_elec_idle;
  wire pipe_rx0_phy_status;
  wire pipe_rx0_polarity;
  wire pipe_rx0_valid;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  wire [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ;
  wire [0:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ;
  wire [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 ;
  wire [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_0 ;
  wire [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_1 ;
  wire \pipe_stages_1.pipe_rx_elec_idle_q_reg_0 ;
  wire \pipe_stages_1.pipe_rx_phy_status_q_reg_0 ;
  wire \pipe_stages_1.pipe_rx_polarity_q_reg_0 ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_0 ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_1 ;
  wire \pipe_stages_1.pipe_rx_valid_q_reg_0 ;
  wire [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 ;
  wire [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 ;
  wire [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_0 ;
  wire [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_1 ;
  wire [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 ;
  wire [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 ;
  wire pipe_tx0_compliance;
  wire pipe_tx0_elec_idle;

  FDRE \pipe_stages_1.pipe_rx_chanisaligned_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ),
        .Q(pipe_rx0_chanisaligned),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_char_is_k_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 [0]),
        .Q(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 [0]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_char_is_k_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 [1]),
        .Q(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 [1]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [0]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [0]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [10]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [10]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [11]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [11]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [12]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [12]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [13]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [13]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [14]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [14]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [15]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [15]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [1]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [1]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [2]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [2]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [3]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [3]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [4]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [4]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [5]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [5]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [6]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [6]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [7]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [7]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [8]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [8]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_data_q_reg[15]_1 [9]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15]_0 [9]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_elec_idle_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_elec_idle_q_reg_0 ),
        .Q(pipe_rx0_elec_idle),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_phy_status_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_phy_status_q_reg_0 ),
        .Q(pipe_rx0_phy_status),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_polarity_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_polarity_q_reg_0 ),
        .Q(pipe_rx0_polarity),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_status_q_reg[2]_1 [0]),
        .Q(\pipe_stages_1.pipe_rx_status_q_reg[2]_0 [0]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_status_q_reg[2]_1 [1]),
        .Q(\pipe_stages_1.pipe_rx_status_q_reg[2]_0 [1]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_status_q_reg[2]_1 [2]),
        .Q(\pipe_stages_1.pipe_rx_status_q_reg[2]_0 [2]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_rx_valid_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_valid_q_reg_0 ),
        .Q(pipe_rx0_valid),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_char_is_k_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 [0]),
        .Q(\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 [0]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_char_is_k_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 [1]),
        .Q(\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 [1]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_compliance_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_tx0_compliance),
        .Q(USER_TXCOMPLIANCE),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [0]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [0]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [10]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [10]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [11]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [11]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [12]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [12]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [13]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [13]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [14]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [14]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [15]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [15]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [1]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [1]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [2]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [2]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [3]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [3]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [4]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [4]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [5]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [5]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [6]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [6]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [7]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [7]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [8]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [8]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_data_q_reg[15]_1 [9]),
        .Q(\pipe_stages_1.pipe_tx_data_q_reg[15]_0 [9]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDSE \pipe_stages_1.pipe_tx_elec_idle_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_tx0_elec_idle),
        .Q(USER_TXELECIDLE),
        .S(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDRE \pipe_stages_1.pipe_tx_powerdown_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 [0]),
        .Q(\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 [0]),
        .R(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
  FDSE \pipe_stages_1.pipe_tx_powerdown_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 [1]),
        .Q(\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 [1]),
        .S(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pcie_pipe_misc" *) 
module pcie_7x_0_pcie_7x_0_pcie_pipe_misc
   (pipe_tx_rcvr_det_gt,
    D,
    pipe_tx_deemph_gt,
    \pipe_stages_1.pipe_tx_margin_q_reg[2]_0 ,
    \pipe_stages_1.pipe_tx_rcvr_det_q_reg_0 ,
    pipe_tx_rcvr_det,
    pipe_pclk_in,
    pipe_tx_rate,
    pipe_tx_deemph,
    \pipe_stages_1.pipe_tx_margin_q_reg[2]_1 );
  output pipe_tx_rcvr_det_gt;
  output [0:0]D;
  output pipe_tx_deemph_gt;
  output [2:0]\pipe_stages_1.pipe_tx_margin_q_reg[2]_0 ;
  input [0:0]\pipe_stages_1.pipe_tx_rcvr_det_q_reg_0 ;
  input pipe_tx_rcvr_det;
  input pipe_pclk_in;
  input pipe_tx_rate;
  input pipe_tx_deemph;
  input [2:0]\pipe_stages_1.pipe_tx_margin_q_reg[2]_1 ;

  wire [0:0]D;
  wire pipe_pclk_in;
  wire [2:0]\pipe_stages_1.pipe_tx_margin_q_reg[2]_0 ;
  wire [2:0]\pipe_stages_1.pipe_tx_margin_q_reg[2]_1 ;
  wire [0:0]\pipe_stages_1.pipe_tx_rcvr_det_q_reg_0 ;
  wire pipe_tx_deemph;
  wire pipe_tx_deemph_gt;
  wire pipe_tx_rate;
  wire pipe_tx_rcvr_det;
  wire pipe_tx_rcvr_det_gt;

  FDSE \pipe_stages_1.pipe_tx_deemph_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_tx_deemph),
        .Q(pipe_tx_deemph_gt),
        .S(\pipe_stages_1.pipe_tx_rcvr_det_q_reg_0 ));
  FDRE \pipe_stages_1.pipe_tx_margin_q_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_margin_q_reg[2]_1 [0]),
        .Q(\pipe_stages_1.pipe_tx_margin_q_reg[2]_0 [0]),
        .R(\pipe_stages_1.pipe_tx_rcvr_det_q_reg_0 ));
  FDRE \pipe_stages_1.pipe_tx_margin_q_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_margin_q_reg[2]_1 [1]),
        .Q(\pipe_stages_1.pipe_tx_margin_q_reg[2]_0 [1]),
        .R(\pipe_stages_1.pipe_tx_rcvr_det_q_reg_0 ));
  FDRE \pipe_stages_1.pipe_tx_margin_q_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_tx_margin_q_reg[2]_1 [2]),
        .Q(\pipe_stages_1.pipe_tx_margin_q_reg[2]_0 [2]),
        .R(\pipe_stages_1.pipe_tx_rcvr_det_q_reg_0 ));
  FDRE \pipe_stages_1.pipe_tx_rate_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_tx_rate),
        .Q(D),
        .R(\pipe_stages_1.pipe_tx_rcvr_det_q_reg_0 ));
  FDRE \pipe_stages_1.pipe_tx_rcvr_det_q_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_tx_rcvr_det),
        .Q(pipe_tx_rcvr_det_gt),
        .R(\pipe_stages_1.pipe_tx_rcvr_det_q_reg_0 ));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pcie_pipe_pipeline" *) 
module pcie_7x_0_pcie_7x_0_pcie_pipe_pipeline
   (pipe_rx1_valid,
    pipe_rx1_chanisaligned,
    pipe_rx1_phy_status,
    pipe_rx1_elec_idle,
    pipe_rx1_polarity,
    \pipe_stages_1.pipe_tx_compliance_q_reg ,
    \pipe_stages_1.pipe_tx_elec_idle_q_reg ,
    pipe_rx2_valid,
    pipe_rx2_chanisaligned,
    pipe_rx2_phy_status,
    pipe_rx2_elec_idle,
    pipe_rx2_polarity,
    \pipe_stages_1.pipe_tx_compliance_q_reg_0 ,
    \pipe_stages_1.pipe_tx_elec_idle_q_reg_0 ,
    pipe_rx3_valid,
    pipe_rx3_chanisaligned,
    pipe_rx3_phy_status,
    pipe_rx3_elec_idle,
    pipe_rx3_polarity,
    \pipe_stages_1.pipe_tx_compliance_q_reg_1 ,
    \pipe_stages_1.pipe_tx_elec_idle_q_reg_1 ,
    pipe_tx_rcvr_det_gt,
    D,
    pipe_tx_deemph_gt,
    pipe_rx0_valid,
    pipe_rx0_chanisaligned,
    pipe_rx0_phy_status,
    pipe_rx0_elec_idle,
    pipe_rx0_polarity,
    USER_TXCOMPLIANCE,
    USER_TXELECIDLE,
    Q,
    \pipe_stages_1.pipe_rx_data_q_reg[15] ,
    \pipe_stages_1.pipe_rx_status_q_reg[2] ,
    \pipe_stages_1.pipe_tx_char_is_k_q_reg[1] ,
    \pipe_stages_1.pipe_tx_data_q_reg[15] ,
    \pipe_stages_1.pipe_tx_powerdown_q_reg[1] ,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1] ,
    \pipe_stages_1.pipe_rx_data_q_reg[15]_0 ,
    \pipe_stages_1.pipe_rx_status_q_reg[2]_0 ,
    \pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 ,
    \pipe_stages_1.pipe_tx_data_q_reg[15]_0 ,
    \pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 ,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ,
    \pipe_stages_1.pipe_rx_data_q_reg[15]_1 ,
    \pipe_stages_1.pipe_rx_status_q_reg[2]_1 ,
    \pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 ,
    \pipe_stages_1.pipe_tx_data_q_reg[15]_1 ,
    \pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 ,
    \pipe_stages_1.pipe_tx_margin_q_reg[2] ,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ,
    \pipe_stages_1.pipe_rx_data_q_reg[15]_2 ,
    \pipe_stages_1.pipe_rx_status_q_reg[2]_2 ,
    \pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_2 ,
    \pipe_stages_1.pipe_tx_data_q_reg[15]_2 ,
    \pipe_stages_1.pipe_tx_powerdown_q_reg[1]_2 ,
    \pipe_stages_1.pipe_tx_rcvr_det_q_reg ,
    \pipe_stages_1.pipe_rx_valid_q_reg ,
    pipe_pclk_in,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg ,
    \pipe_stages_1.pipe_rx_phy_status_q_reg ,
    \pipe_stages_1.pipe_rx_elec_idle_q_reg ,
    \pipe_stages_1.pipe_rx_polarity_q_reg ,
    pipe_tx1_compliance,
    pipe_tx1_elec_idle,
    \pipe_stages_1.pipe_rx_valid_q_reg_0 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ,
    \pipe_stages_1.pipe_rx_phy_status_q_reg_0 ,
    \pipe_stages_1.pipe_rx_elec_idle_q_reg_0 ,
    \pipe_stages_1.pipe_rx_polarity_q_reg_0 ,
    pipe_tx2_compliance,
    pipe_tx2_elec_idle,
    \pipe_stages_1.pipe_rx_valid_q_reg_1 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ,
    \pipe_stages_1.pipe_rx_phy_status_q_reg_1 ,
    \pipe_stages_1.pipe_rx_elec_idle_q_reg_1 ,
    \pipe_stages_1.pipe_rx_polarity_q_reg_1 ,
    pipe_tx3_compliance,
    pipe_tx3_elec_idle,
    pipe_tx_rcvr_det,
    pipe_tx_rate,
    pipe_tx_deemph,
    \pipe_stages_1.pipe_rx_valid_q_reg_2 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ,
    \pipe_stages_1.pipe_rx_phy_status_q_reg_2 ,
    \pipe_stages_1.pipe_rx_elec_idle_q_reg_2 ,
    \pipe_stages_1.pipe_rx_polarity_q_reg_2 ,
    pipe_tx0_compliance,
    pipe_tx0_elec_idle,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 ,
    \pipe_stages_1.pipe_rx_data_q_reg[15]_3 ,
    \pipe_stages_1.pipe_rx_status_q_reg[2]_3 ,
    \pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_3 ,
    \pipe_stages_1.pipe_tx_data_q_reg[15]_3 ,
    \pipe_stages_1.pipe_tx_powerdown_q_reg[1]_3 ,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_3 ,
    \pipe_stages_1.pipe_rx_data_q_reg[15]_4 ,
    \pipe_stages_1.pipe_rx_status_q_reg[2]_4 ,
    \pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_4 ,
    \pipe_stages_1.pipe_tx_data_q_reg[15]_4 ,
    \pipe_stages_1.pipe_tx_powerdown_q_reg[1]_4 ,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_4 ,
    \pipe_stages_1.pipe_rx_data_q_reg[15]_5 ,
    \pipe_stages_1.pipe_rx_status_q_reg[2]_5 ,
    \pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_5 ,
    \pipe_stages_1.pipe_tx_data_q_reg[15]_5 ,
    \pipe_stages_1.pipe_tx_powerdown_q_reg[1]_5 ,
    \pipe_stages_1.pipe_tx_margin_q_reg[2]_0 ,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_5 ,
    \pipe_stages_1.pipe_rx_data_q_reg[15]_6 ,
    \pipe_stages_1.pipe_rx_status_q_reg[2]_6 ,
    \pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_6 ,
    \pipe_stages_1.pipe_tx_data_q_reg[15]_6 ,
    \pipe_stages_1.pipe_tx_powerdown_q_reg[1]_6 );
  output pipe_rx1_valid;
  output pipe_rx1_chanisaligned;
  output pipe_rx1_phy_status;
  output pipe_rx1_elec_idle;
  output pipe_rx1_polarity;
  output \pipe_stages_1.pipe_tx_compliance_q_reg ;
  output \pipe_stages_1.pipe_tx_elec_idle_q_reg ;
  output pipe_rx2_valid;
  output pipe_rx2_chanisaligned;
  output pipe_rx2_phy_status;
  output pipe_rx2_elec_idle;
  output pipe_rx2_polarity;
  output \pipe_stages_1.pipe_tx_compliance_q_reg_0 ;
  output \pipe_stages_1.pipe_tx_elec_idle_q_reg_0 ;
  output pipe_rx3_valid;
  output pipe_rx3_chanisaligned;
  output pipe_rx3_phy_status;
  output pipe_rx3_elec_idle;
  output pipe_rx3_polarity;
  output \pipe_stages_1.pipe_tx_compliance_q_reg_1 ;
  output \pipe_stages_1.pipe_tx_elec_idle_q_reg_1 ;
  output pipe_tx_rcvr_det_gt;
  output [0:0]D;
  output pipe_tx_deemph_gt;
  output pipe_rx0_valid;
  output pipe_rx0_chanisaligned;
  output pipe_rx0_phy_status;
  output pipe_rx0_elec_idle;
  output pipe_rx0_polarity;
  output USER_TXCOMPLIANCE;
  output USER_TXELECIDLE;
  output [1:0]Q;
  output [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15] ;
  output [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2] ;
  output [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1] ;
  output [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15] ;
  output [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1] ;
  output [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1] ;
  output [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_0 ;
  output [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_0 ;
  output [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 ;
  output [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_0 ;
  output [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 ;
  output [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ;
  output [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_1 ;
  output [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_1 ;
  output [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 ;
  output [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_1 ;
  output [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 ;
  output [2:0]\pipe_stages_1.pipe_tx_margin_q_reg[2] ;
  output [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ;
  output [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_2 ;
  output [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_2 ;
  output [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_2 ;
  output [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_2 ;
  output [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_2 ;
  input [0:0]\pipe_stages_1.pipe_tx_rcvr_det_q_reg ;
  input \pipe_stages_1.pipe_rx_valid_q_reg ;
  input pipe_pclk_in;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  input \pipe_stages_1.pipe_rx_phy_status_q_reg ;
  input \pipe_stages_1.pipe_rx_elec_idle_q_reg ;
  input \pipe_stages_1.pipe_rx_polarity_q_reg ;
  input pipe_tx1_compliance;
  input pipe_tx1_elec_idle;
  input \pipe_stages_1.pipe_rx_valid_q_reg_0 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  input \pipe_stages_1.pipe_rx_phy_status_q_reg_0 ;
  input \pipe_stages_1.pipe_rx_elec_idle_q_reg_0 ;
  input \pipe_stages_1.pipe_rx_polarity_q_reg_0 ;
  input pipe_tx2_compliance;
  input pipe_tx2_elec_idle;
  input \pipe_stages_1.pipe_rx_valid_q_reg_1 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ;
  input \pipe_stages_1.pipe_rx_phy_status_q_reg_1 ;
  input \pipe_stages_1.pipe_rx_elec_idle_q_reg_1 ;
  input \pipe_stages_1.pipe_rx_polarity_q_reg_1 ;
  input pipe_tx3_compliance;
  input pipe_tx3_elec_idle;
  input pipe_tx_rcvr_det;
  input pipe_tx_rate;
  input pipe_tx_deemph;
  input \pipe_stages_1.pipe_rx_valid_q_reg_2 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ;
  input \pipe_stages_1.pipe_rx_phy_status_q_reg_2 ;
  input \pipe_stages_1.pipe_rx_elec_idle_q_reg_2 ;
  input \pipe_stages_1.pipe_rx_polarity_q_reg_2 ;
  input pipe_tx0_compliance;
  input pipe_tx0_elec_idle;
  input [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 ;
  input [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_3 ;
  input [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_3 ;
  input [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_3 ;
  input [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_3 ;
  input [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_3 ;
  input [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_3 ;
  input [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_4 ;
  input [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_4 ;
  input [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_4 ;
  input [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_4 ;
  input [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_4 ;
  input [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_4 ;
  input [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_5 ;
  input [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_5 ;
  input [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_5 ;
  input [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_5 ;
  input [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_5 ;
  input [2:0]\pipe_stages_1.pipe_tx_margin_q_reg[2]_0 ;
  input [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_5 ;
  input [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_6 ;
  input [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_6 ;
  input [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_6 ;
  input [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_6 ;
  input [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_6 ;

  wire [0:0]D;
  wire [1:0]Q;
  wire USER_TXCOMPLIANCE;
  wire USER_TXELECIDLE;
  wire pipe_pclk_in;
  wire pipe_rx0_chanisaligned;
  wire pipe_rx0_elec_idle;
  wire pipe_rx0_phy_status;
  wire pipe_rx0_polarity;
  wire pipe_rx0_valid;
  wire pipe_rx1_chanisaligned;
  wire pipe_rx1_elec_idle;
  wire pipe_rx1_phy_status;
  wire pipe_rx1_polarity;
  wire pipe_rx1_valid;
  wire pipe_rx2_chanisaligned;
  wire pipe_rx2_elec_idle;
  wire pipe_rx2_phy_status;
  wire pipe_rx2_polarity;
  wire pipe_rx2_valid;
  wire pipe_rx3_chanisaligned;
  wire pipe_rx3_elec_idle;
  wire pipe_rx3_phy_status;
  wire pipe_rx3_polarity;
  wire pipe_rx3_valid;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ;
  wire [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1] ;
  wire [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ;
  wire [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ;
  wire [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 ;
  wire [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_3 ;
  wire [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_4 ;
  wire [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_5 ;
  wire [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15] ;
  wire [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_0 ;
  wire [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_1 ;
  wire [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_2 ;
  wire [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_3 ;
  wire [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_4 ;
  wire [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_5 ;
  wire [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_6 ;
  wire \pipe_stages_1.pipe_rx_elec_idle_q_reg ;
  wire \pipe_stages_1.pipe_rx_elec_idle_q_reg_0 ;
  wire \pipe_stages_1.pipe_rx_elec_idle_q_reg_1 ;
  wire \pipe_stages_1.pipe_rx_elec_idle_q_reg_2 ;
  wire \pipe_stages_1.pipe_rx_phy_status_q_reg ;
  wire \pipe_stages_1.pipe_rx_phy_status_q_reg_0 ;
  wire \pipe_stages_1.pipe_rx_phy_status_q_reg_1 ;
  wire \pipe_stages_1.pipe_rx_phy_status_q_reg_2 ;
  wire \pipe_stages_1.pipe_rx_polarity_q_reg ;
  wire \pipe_stages_1.pipe_rx_polarity_q_reg_0 ;
  wire \pipe_stages_1.pipe_rx_polarity_q_reg_1 ;
  wire \pipe_stages_1.pipe_rx_polarity_q_reg_2 ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2] ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_0 ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_1 ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_2 ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_3 ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_4 ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_5 ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_6 ;
  wire \pipe_stages_1.pipe_rx_valid_q_reg ;
  wire \pipe_stages_1.pipe_rx_valid_q_reg_0 ;
  wire \pipe_stages_1.pipe_rx_valid_q_reg_1 ;
  wire \pipe_stages_1.pipe_rx_valid_q_reg_2 ;
  wire [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1] ;
  wire [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 ;
  wire [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 ;
  wire [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_2 ;
  wire [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_3 ;
  wire [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_4 ;
  wire [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_5 ;
  wire [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_6 ;
  wire \pipe_stages_1.pipe_tx_compliance_q_reg ;
  wire \pipe_stages_1.pipe_tx_compliance_q_reg_0 ;
  wire \pipe_stages_1.pipe_tx_compliance_q_reg_1 ;
  wire [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15] ;
  wire [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_0 ;
  wire [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_1 ;
  wire [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_2 ;
  wire [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_3 ;
  wire [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_4 ;
  wire [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_5 ;
  wire [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_6 ;
  wire \pipe_stages_1.pipe_tx_elec_idle_q_reg ;
  wire \pipe_stages_1.pipe_tx_elec_idle_q_reg_0 ;
  wire \pipe_stages_1.pipe_tx_elec_idle_q_reg_1 ;
  wire [2:0]\pipe_stages_1.pipe_tx_margin_q_reg[2] ;
  wire [2:0]\pipe_stages_1.pipe_tx_margin_q_reg[2]_0 ;
  wire [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1] ;
  wire [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 ;
  wire [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 ;
  wire [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_2 ;
  wire [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_3 ;
  wire [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_4 ;
  wire [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_5 ;
  wire [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_6 ;
  wire [0:0]\pipe_stages_1.pipe_tx_rcvr_det_q_reg ;
  wire pipe_tx0_compliance;
  wire pipe_tx0_elec_idle;
  wire pipe_tx1_compliance;
  wire pipe_tx1_elec_idle;
  wire pipe_tx2_compliance;
  wire pipe_tx2_elec_idle;
  wire pipe_tx3_compliance;
  wire pipe_tx3_elec_idle;
  wire pipe_tx_deemph;
  wire pipe_tx_deemph_gt;
  wire pipe_tx_rate;
  wire pipe_tx_rcvr_det;
  wire pipe_tx_rcvr_det_gt;

  pcie_7x_0_pcie_7x_0_pcie_pipe_lane \pipe_2_lane.pipe_lane_1_i 
       (.Q(Q),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_rx1_chanisaligned(pipe_rx1_chanisaligned),
        .pipe_rx1_elec_idle(pipe_rx1_elec_idle),
        .pipe_rx1_phy_status(pipe_rx1_phy_status),
        .pipe_rx1_polarity(pipe_rx1_polarity),
        .pipe_rx1_valid(pipe_rx1_valid),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg ),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 (\pipe_stages_1.pipe_tx_rcvr_det_q_reg ),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 (\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 ),
        .\pipe_stages_1.pipe_rx_data_q_reg[15]_0 (\pipe_stages_1.pipe_rx_data_q_reg[15] ),
        .\pipe_stages_1.pipe_rx_data_q_reg[15]_1 (\pipe_stages_1.pipe_rx_data_q_reg[15]_3 ),
        .\pipe_stages_1.pipe_rx_elec_idle_q_reg_0 (\pipe_stages_1.pipe_rx_elec_idle_q_reg ),
        .\pipe_stages_1.pipe_rx_phy_status_q_reg_0 (\pipe_stages_1.pipe_rx_phy_status_q_reg ),
        .\pipe_stages_1.pipe_rx_polarity_q_reg_0 (\pipe_stages_1.pipe_rx_polarity_q_reg ),
        .\pipe_stages_1.pipe_rx_status_q_reg[2]_0 (\pipe_stages_1.pipe_rx_status_q_reg[2] ),
        .\pipe_stages_1.pipe_rx_status_q_reg[2]_1 (\pipe_stages_1.pipe_rx_status_q_reg[2]_3 ),
        .\pipe_stages_1.pipe_rx_valid_q_reg_0 (\pipe_stages_1.pipe_rx_valid_q_reg ),
        .\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 (\pipe_stages_1.pipe_tx_char_is_k_q_reg[1] ),
        .\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 (\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_3 ),
        .\pipe_stages_1.pipe_tx_compliance_q_reg_0 (\pipe_stages_1.pipe_tx_compliance_q_reg ),
        .\pipe_stages_1.pipe_tx_data_q_reg[15]_0 (\pipe_stages_1.pipe_tx_data_q_reg[15] ),
        .\pipe_stages_1.pipe_tx_data_q_reg[15]_1 (\pipe_stages_1.pipe_tx_data_q_reg[15]_3 ),
        .\pipe_stages_1.pipe_tx_elec_idle_q_reg_0 (\pipe_stages_1.pipe_tx_elec_idle_q_reg ),
        .\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 (\pipe_stages_1.pipe_tx_powerdown_q_reg[1] ),
        .\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 (\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_3 ),
        .pipe_tx1_compliance(pipe_tx1_compliance),
        .pipe_tx1_elec_idle(pipe_tx1_elec_idle));
  pcie_7x_0_pcie_7x_0_pcie_pipe_lane_0 \pipe_4_lane.pipe_lane_2_i 
       (.pipe_pclk_in(pipe_pclk_in),
        .pipe_rx2_chanisaligned(pipe_rx2_chanisaligned),
        .pipe_rx2_elec_idle(pipe_rx2_elec_idle),
        .pipe_rx2_phy_status(pipe_rx2_phy_status),
        .pipe_rx2_polarity(pipe_rx2_polarity),
        .pipe_rx2_valid(pipe_rx2_valid),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 (\pipe_stages_1.pipe_rx_char_is_k_q_reg[1] ),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 (\pipe_stages_1.pipe_tx_rcvr_det_q_reg ),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 (\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_3 ),
        .\pipe_stages_1.pipe_rx_data_q_reg[15]_0 (\pipe_stages_1.pipe_rx_data_q_reg[15]_0 ),
        .\pipe_stages_1.pipe_rx_data_q_reg[15]_1 (\pipe_stages_1.pipe_rx_data_q_reg[15]_4 ),
        .\pipe_stages_1.pipe_rx_elec_idle_q_reg_0 (\pipe_stages_1.pipe_rx_elec_idle_q_reg_0 ),
        .\pipe_stages_1.pipe_rx_phy_status_q_reg_0 (\pipe_stages_1.pipe_rx_phy_status_q_reg_0 ),
        .\pipe_stages_1.pipe_rx_polarity_q_reg_0 (\pipe_stages_1.pipe_rx_polarity_q_reg_0 ),
        .\pipe_stages_1.pipe_rx_status_q_reg[2]_0 (\pipe_stages_1.pipe_rx_status_q_reg[2]_0 ),
        .\pipe_stages_1.pipe_rx_status_q_reg[2]_1 (\pipe_stages_1.pipe_rx_status_q_reg[2]_4 ),
        .\pipe_stages_1.pipe_rx_valid_q_reg_0 (\pipe_stages_1.pipe_rx_valid_q_reg_0 ),
        .\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 (\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 ),
        .\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 (\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_4 ),
        .\pipe_stages_1.pipe_tx_compliance_q_reg_0 (\pipe_stages_1.pipe_tx_compliance_q_reg_0 ),
        .\pipe_stages_1.pipe_tx_data_q_reg[15]_0 (\pipe_stages_1.pipe_tx_data_q_reg[15]_0 ),
        .\pipe_stages_1.pipe_tx_data_q_reg[15]_1 (\pipe_stages_1.pipe_tx_data_q_reg[15]_4 ),
        .\pipe_stages_1.pipe_tx_elec_idle_q_reg_0 (\pipe_stages_1.pipe_tx_elec_idle_q_reg_0 ),
        .\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 (\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 ),
        .\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 (\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_4 ),
        .pipe_tx2_compliance(pipe_tx2_compliance),
        .pipe_tx2_elec_idle(pipe_tx2_elec_idle));
  pcie_7x_0_pcie_7x_0_pcie_pipe_lane_1 \pipe_4_lane.pipe_lane_3_i 
       (.pipe_pclk_in(pipe_pclk_in),
        .pipe_rx3_chanisaligned(pipe_rx3_chanisaligned),
        .pipe_rx3_elec_idle(pipe_rx3_elec_idle),
        .pipe_rx3_phy_status(pipe_rx3_phy_status),
        .pipe_rx3_polarity(pipe_rx3_polarity),
        .pipe_rx3_valid(pipe_rx3_valid),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 (\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 (\pipe_stages_1.pipe_tx_rcvr_det_q_reg ),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 (\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_4 ),
        .\pipe_stages_1.pipe_rx_data_q_reg[15]_0 (\pipe_stages_1.pipe_rx_data_q_reg[15]_1 ),
        .\pipe_stages_1.pipe_rx_data_q_reg[15]_1 (\pipe_stages_1.pipe_rx_data_q_reg[15]_5 ),
        .\pipe_stages_1.pipe_rx_elec_idle_q_reg_0 (\pipe_stages_1.pipe_rx_elec_idle_q_reg_1 ),
        .\pipe_stages_1.pipe_rx_phy_status_q_reg_0 (\pipe_stages_1.pipe_rx_phy_status_q_reg_1 ),
        .\pipe_stages_1.pipe_rx_polarity_q_reg_0 (\pipe_stages_1.pipe_rx_polarity_q_reg_1 ),
        .\pipe_stages_1.pipe_rx_status_q_reg[2]_0 (\pipe_stages_1.pipe_rx_status_q_reg[2]_1 ),
        .\pipe_stages_1.pipe_rx_status_q_reg[2]_1 (\pipe_stages_1.pipe_rx_status_q_reg[2]_5 ),
        .\pipe_stages_1.pipe_rx_valid_q_reg_0 (\pipe_stages_1.pipe_rx_valid_q_reg_1 ),
        .\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 (\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 ),
        .\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 (\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_5 ),
        .\pipe_stages_1.pipe_tx_compliance_q_reg_0 (\pipe_stages_1.pipe_tx_compliance_q_reg_1 ),
        .\pipe_stages_1.pipe_tx_data_q_reg[15]_0 (\pipe_stages_1.pipe_tx_data_q_reg[15]_1 ),
        .\pipe_stages_1.pipe_tx_data_q_reg[15]_1 (\pipe_stages_1.pipe_tx_data_q_reg[15]_5 ),
        .\pipe_stages_1.pipe_tx_elec_idle_q_reg_0 (\pipe_stages_1.pipe_tx_elec_idle_q_reg_1 ),
        .\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 (\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 ),
        .\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 (\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_5 ),
        .pipe_tx3_compliance(pipe_tx3_compliance),
        .pipe_tx3_elec_idle(pipe_tx3_elec_idle));
  pcie_7x_0_pcie_7x_0_pcie_pipe_lane_2 pipe_lane_0_i
       (.USER_TXCOMPLIANCE(USER_TXCOMPLIANCE),
        .USER_TXELECIDLE(USER_TXELECIDLE),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_rx0_chanisaligned(pipe_rx0_chanisaligned),
        .pipe_rx0_elec_idle(pipe_rx0_elec_idle),
        .pipe_rx0_phy_status(pipe_rx0_phy_status),
        .pipe_rx0_polarity(pipe_rx0_polarity),
        .pipe_rx0_valid(pipe_rx0_valid),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 (\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 (\pipe_stages_1.pipe_tx_rcvr_det_q_reg ),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 (\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_5 ),
        .\pipe_stages_1.pipe_rx_data_q_reg[15]_0 (\pipe_stages_1.pipe_rx_data_q_reg[15]_2 ),
        .\pipe_stages_1.pipe_rx_data_q_reg[15]_1 (\pipe_stages_1.pipe_rx_data_q_reg[15]_6 ),
        .\pipe_stages_1.pipe_rx_elec_idle_q_reg_0 (\pipe_stages_1.pipe_rx_elec_idle_q_reg_2 ),
        .\pipe_stages_1.pipe_rx_phy_status_q_reg_0 (\pipe_stages_1.pipe_rx_phy_status_q_reg_2 ),
        .\pipe_stages_1.pipe_rx_polarity_q_reg_0 (\pipe_stages_1.pipe_rx_polarity_q_reg_2 ),
        .\pipe_stages_1.pipe_rx_status_q_reg[2]_0 (\pipe_stages_1.pipe_rx_status_q_reg[2]_2 ),
        .\pipe_stages_1.pipe_rx_status_q_reg[2]_1 (\pipe_stages_1.pipe_rx_status_q_reg[2]_6 ),
        .\pipe_stages_1.pipe_rx_valid_q_reg_0 (\pipe_stages_1.pipe_rx_valid_q_reg_2 ),
        .\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 (\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_2 ),
        .\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 (\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_6 ),
        .\pipe_stages_1.pipe_tx_data_q_reg[15]_0 (\pipe_stages_1.pipe_tx_data_q_reg[15]_2 ),
        .\pipe_stages_1.pipe_tx_data_q_reg[15]_1 (\pipe_stages_1.pipe_tx_data_q_reg[15]_6 ),
        .\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 (\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_2 ),
        .\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 (\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_6 ),
        .pipe_tx0_compliance(pipe_tx0_compliance),
        .pipe_tx0_elec_idle(pipe_tx0_elec_idle));
  pcie_7x_0_pcie_7x_0_pcie_pipe_misc pipe_misc_i
       (.D(D),
        .pipe_pclk_in(pipe_pclk_in),
        .\pipe_stages_1.pipe_tx_margin_q_reg[2]_0 (\pipe_stages_1.pipe_tx_margin_q_reg[2] ),
        .\pipe_stages_1.pipe_tx_margin_q_reg[2]_1 (\pipe_stages_1.pipe_tx_margin_q_reg[2]_0 ),
        .\pipe_stages_1.pipe_tx_rcvr_det_q_reg_0 (\pipe_stages_1.pipe_tx_rcvr_det_q_reg ),
        .pipe_tx_deemph(pipe_tx_deemph),
        .pipe_tx_deemph_gt(pipe_tx_deemph_gt),
        .pipe_tx_rate(pipe_tx_rate),
        .pipe_tx_rcvr_det(pipe_tx_rcvr_det),
        .pipe_tx_rcvr_det_gt(pipe_tx_rcvr_det_gt));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pcie_top" *) 
module pcie_7x_0_pcie_7x_0_pcie_top
   (m_axis_rx_tvalid_mux,
    trn_tcfg_req,
    s_axis_tx_tready_mux,
    pipe_rx1_polarity,
    \pipe_stages_1.pipe_tx_compliance_q_reg ,
    \pipe_stages_1.pipe_tx_elec_idle_q_reg ,
    pipe_rx2_polarity,
    \pipe_stages_1.pipe_tx_compliance_q_reg_0 ,
    \pipe_stages_1.pipe_tx_elec_idle_q_reg_0 ,
    pipe_rx3_polarity,
    \pipe_stages_1.pipe_tx_compliance_q_reg_1 ,
    \pipe_stages_1.pipe_tx_elec_idle_q_reg_1 ,
    pipe_tx_rcvr_det_gt,
    D,
    pipe_tx_deemph_gt,
    pipe_rx0_polarity,
    USER_TXCOMPLIANCE,
    USER_TXELECIDLE,
    Q,
    reg_axi_in_pkt,
    \ecrc_pause_enabled.reg_tx_ecrc_pkt ,
    axi_in_packet,
    \m_axis_rx_tdata_reg[127] ,
    \m_axis_rx_tuser_reg[21] ,
    \m_axis_rx_tdata_reg[30] ,
    user_reset_int_reg,
    m_axis_rx_tvalid_reg,
    \m_axis_rx_tdata_reg[63] ,
    \m_axis_rx_tdata_reg[47] ,
    \m_axis_rx_tdata_reg[35] ,
    \m_axis_rx_tdata_reg[13] ,
    \m_axis_rx_tdata_reg[22] ,
    \m_axis_rx_tdata_reg[29] ,
    \FSM_sequential_pio_rx_sm_128.state_reg[0] ,
    \m_axis_rx_tdata_reg[89] ,
    \m_axis_rx_tdata_reg[30]_0 ,
    \m_axis_rx_tdata_reg[30]_1 ,
    \m_axis_rx_tdata_reg[73] ,
    \m_axis_rx_tdata_reg[15] ,
    \m_axis_rx_tdata_reg[14] ,
    \m_axis_rx_tdata_reg[29]_0 ,
    m_axis_rx_tvalid_reg_0,
    user_reset_out_reg,
    cfg_pcie_link_state,
    trn_tbuf_av,
    cfg_msg_received,
    s_axis_tx_tready,
    m_axis_rx_tvalid,
    \m_axis_rx_tdata_reg[30]_2 ,
    \m_axis_rx_tdata_reg[6] ,
    in0,
    pcie_drp_clk_0,
    m_axis_rx_tdata,
    m_axis_rx_tuser,
    \m_axis_rx_tdata_reg[31] ,
    \m_axis_rx_tdata_reg[9] ,
    src_in,
    cfg_mgmt_rd_wr_done,
    cfg_err_aer_headerlog_set,
    cfg_err_cpl_rdy,
    cfg_interrupt_rdy,
    cfg_received_func_lvl_rst,
    cfg_msg_received_pme_to,
    \cfg_bus_number_d_reg[7]_0 ,
    cfg_msg_data,
    \cfg_device_number_d_reg[4]_0 ,
    \cfg_function_number_d_reg[2]_0 ,
    \pipe_stages_1.pipe_tx_char_is_k_q_reg[1] ,
    \pipe_stages_1.pipe_tx_data_q_reg[15] ,
    \pipe_stages_1.pipe_tx_powerdown_q_reg[1] ,
    \pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 ,
    \pipe_stages_1.pipe_tx_data_q_reg[15]_0 ,
    \pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 ,
    \pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 ,
    \pipe_stages_1.pipe_tx_data_q_reg[15]_1 ,
    \pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 ,
    \pipe_stages_1.pipe_tx_margin_q_reg[2] ,
    \pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_2 ,
    \pipe_stages_1.pipe_tx_data_q_reg[15]_2 ,
    \pipe_stages_1.pipe_tx_powerdown_q_reg[1]_2 ,
    cfg_aer_ecrc_check_en,
    cfg_aer_ecrc_gen_en,
    cfg_aer_rooterr_corr_err_received,
    cfg_aer_rooterr_corr_err_reporting_en,
    cfg_aer_rooterr_fatal_err_received,
    cfg_aer_rooterr_fatal_err_reporting_en,
    cfg_aer_rooterr_non_fatal_err_received,
    cfg_aer_rooterr_non_fatal_err_reporting_en,
    cfg_bridge_serr_en,
    cfg_command,
    cfg_dcommand2,
    cfg_dcommand,
    cfg_dstatus,
    cfg_interrupt_msienable,
    cfg_interrupt_msixenable,
    cfg_interrupt_msixfm,
    cfg_lcommand,
    cfg_lstatus,
    cfg_msg_received_assert_int_a,
    cfg_msg_received_assert_int_b,
    cfg_msg_received_assert_int_c,
    cfg_msg_received_assert_int_d,
    cfg_msg_received_deassert_int_a,
    cfg_msg_received_deassert_int_b,
    cfg_msg_received_deassert_int_c,
    cfg_msg_received_deassert_int_d,
    cfg_msg_received_err_cor,
    cfg_msg_received_err_fatal,
    cfg_msg_received_err_non_fatal,
    cfg_msg_received_pm_as_nak,
    cfg_msg_received_pme_to_ack,
    cfg_msg_received_pm_pme,
    cfg_msg_received_setslotpowerlimit,
    cfg_pmcsr_pme_en,
    cfg_pmcsr_pme_status,
    cfg_root_control_pme_int_en,
    cfg_root_control_syserr_corr_err_en,
    cfg_root_control_syserr_fatal_err_en,
    cfg_root_control_syserr_non_fatal_err_en,
    cfg_slot_control_electromech_il_ctl_pulse,
    drp_rdy,
    pl_directed_change_done,
    pl_link_gen2_cap,
    pl_link_partner_gen2_supported,
    pl_link_upcfg_cap,
    pl_received_hot_rst,
    pl_sel_lnk_rate,
    trn_lnk_up,
    trn_terr_drop,
    fc_cpld,
    fc_npd,
    fc_pd,
    drp_do,
    cfg_pmcsr_powerstate,
    pl_lane_reversal_mode,
    pl_rx_pm_state,
    pl_sel_lnk_width,
    cfg_interrupt_mmenable,
    pl_initial_link_width,
    pl_tx_pm_state,
    cfg_mgmt_do,
    cfg_vc_tcvc_map,
    cfg_interrupt_do,
    fc_cplh,
    fc_nph,
    fc_ph,
    SR,
    data_hold,
    pipe_userclk2_in,
    E,
    tx_cfg_gnt_mux,
    cfg_turnoff_ok_mux,
    s_axis_tx_tlast_mux,
    s_axis_tx_tvalid_mux,
    \pipe_stages_1.pipe_tx_rcvr_det_q_reg ,
    pipe_rx1_valid,
    pipe_pclk_in,
    pipe_rx1_chanisaligned,
    pipe_rx1_phy_status,
    pipe_rx1_elec_idle,
    pipe_rx2_valid,
    pipe_rx2_chanisaligned,
    pipe_rx2_phy_status,
    pipe_rx2_elec_idle,
    pipe_rx3_valid,
    pipe_rx3_chanisaligned,
    pipe_rx3_phy_status,
    pipe_rx3_elec_idle,
    pipe_rx0_valid,
    pipe_rx0_chanisaligned,
    pipe_rx0_phy_status,
    pipe_rx0_elec_idle,
    DI,
    S,
    reg_axi_in_pkt_reg,
    \ecrc_pause_enabled.reg_tx_ecrc_pkt_reg ,
    axi_in_packet_reg,
    m_axis_rx_tready,
    m_axis_rx_tvalid_0,
    m_axis_rx_tready_cpler,
    bridge_reset_int,
    pl_phy_lnk_up_q,
    \pio_rx_sm_128.req_addr_reg[2] ,
    \pio_rx_sm_128.req_td_reg ,
    m_axis_rx_tready_mux,
    \thrtl_ctl_trn_flush.reg_disable_trn_reg ,
    tready_thrtl_reg,
    out,
    s_axis_tx_tvalid,
    \throttle_ctl_pipeline.reg_tsrc_rdy_reg ,
    s_axis_tx_tvalid_cpler,
    s_axis_tx_tlast,
    s_axis_tx_tready_0,
    ltssm_reg2,
    pl_ltssm_state,
    store_ltssm_inferred_i_1,
    cfg_mgmt_wr_rw1c_as_rw,
    cfg_mgmt_wr_readonly,
    cfg_err_posted,
    cfg_err_locked,
    cfg_err_norecovery,
    cfg_interrupt_assert,
    cfg_interrupt_stat,
    \m_axis_rx_tuser_reg[21]_0 ,
    \throttle_ctl_pipeline.reg_tdata_reg[127] ,
    \throttle_ctl_pipeline.reg_tuser_reg[3] ,
    \throttle_ctl_pipeline.reg_tkeep_reg[15] ,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1] ,
    \pipe_stages_1.pipe_rx_data_q_reg[15] ,
    \pipe_stages_1.pipe_rx_status_q_reg[2] ,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ,
    \pipe_stages_1.pipe_rx_data_q_reg[15]_0 ,
    \pipe_stages_1.pipe_rx_status_q_reg[2]_0 ,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ,
    \pipe_stages_1.pipe_rx_data_q_reg[15]_1 ,
    \pipe_stages_1.pipe_rx_status_q_reg[2]_1 ,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 ,
    \pipe_stages_1.pipe_rx_data_q_reg[15]_2 ,
    \pipe_stages_1.pipe_rx_status_q_reg[2]_2 ,
    pipe_userclk1_in,
    cfg_err_atomic_egress_blocked_n,
    cfg_err_cor_n,
    cfg_err_cpl_abort_n,
    cfg_err_cpl_timeout_n,
    cfg_err_cpl_unexpect_n,
    cfg_err_ecrc_n,
    cfg_err_internal_cor_n,
    cfg_err_internal_uncor_n,
    cfg_err_malformed_n,
    cfg_err_mc_blocked_n,
    cfg_err_poisoned_n,
    cfg_err_ur_n,
    cfg_interrupt_n,
    cfg_mgmt_rd_en_n,
    cfg_mgmt_wr_en_n,
    cfg_pm_force_state_en_n,
    cfg_pm_halt_aspm_l0s_n,
    cfg_pm_halt_aspm_l1_n,
    cfg_pm_wake_n,
    cfg_trn_pending_n,
    pcie_drp_clk,
    drp_en,
    drp_we,
    pl_directed_link_auton,
    pl_directed_link_speed,
    pl_downstream_deemph_source,
    pl_transmit_hot_rst,
    pl_upstream_prefer_deemph,
    sys_rst_n,
    trn_rnp_ok,
    trn_rnp_req,
    cfg_err_aer_headerlog,
    drp_di,
    cfg_pm_force_state,
    pl_directed_link_change,
    pl_directed_link_width,
    cfg_ds_function_number,
    trn_fc_sel,
    cfg_mgmt_di,
    cfg_mgmt_byte_en_n,
    cfg_err_tlp_cpl_header,
    cfg_aer_interrupt_msgnum,
    cfg_ds_device_number,
    cfg_pciecap_interrupt_msgnum,
    cfg_dsn,
    cfg_ds_bus_number,
    cfg_interrupt_di,
    drp_addr,
    cfg_mgmt_dwaddr);
  output m_axis_rx_tvalid_mux;
  output trn_tcfg_req;
  output s_axis_tx_tready_mux;
  output pipe_rx1_polarity;
  output \pipe_stages_1.pipe_tx_compliance_q_reg ;
  output \pipe_stages_1.pipe_tx_elec_idle_q_reg ;
  output pipe_rx2_polarity;
  output \pipe_stages_1.pipe_tx_compliance_q_reg_0 ;
  output \pipe_stages_1.pipe_tx_elec_idle_q_reg_0 ;
  output pipe_rx3_polarity;
  output \pipe_stages_1.pipe_tx_compliance_q_reg_1 ;
  output \pipe_stages_1.pipe_tx_elec_idle_q_reg_1 ;
  output pipe_tx_rcvr_det_gt;
  output [0:0]D;
  output pipe_tx_deemph_gt;
  output pipe_rx0_polarity;
  output USER_TXCOMPLIANCE;
  output USER_TXELECIDLE;
  output [1:0]Q;
  output reg_axi_in_pkt;
  output \ecrc_pause_enabled.reg_tx_ecrc_pkt ;
  output axi_in_packet;
  output [125:0]\m_axis_rx_tdata_reg[127] ;
  output [13:0]\m_axis_rx_tuser_reg[21] ;
  output \m_axis_rx_tdata_reg[30] ;
  output user_reset_int_reg;
  output [0:0]m_axis_rx_tvalid_reg;
  output [15:0]\m_axis_rx_tdata_reg[63] ;
  output [7:0]\m_axis_rx_tdata_reg[47] ;
  output [3:0]\m_axis_rx_tdata_reg[35] ;
  output [1:0]\m_axis_rx_tdata_reg[13] ;
  output [2:0]\m_axis_rx_tdata_reg[22] ;
  output \m_axis_rx_tdata_reg[29] ;
  output \FSM_sequential_pio_rx_sm_128.state_reg[0] ;
  output [0:0]\m_axis_rx_tdata_reg[89] ;
  output [0:0]\m_axis_rx_tdata_reg[30]_0 ;
  output \m_axis_rx_tdata_reg[30]_1 ;
  output \m_axis_rx_tdata_reg[73] ;
  output \m_axis_rx_tdata_reg[15] ;
  output \m_axis_rx_tdata_reg[14] ;
  output \m_axis_rx_tdata_reg[29]_0 ;
  output m_axis_rx_tvalid_reg_0;
  output [0:0]user_reset_out_reg;
  output [2:0]cfg_pcie_link_state;
  output [5:0]trn_tbuf_av;
  output cfg_msg_received;
  output s_axis_tx_tready;
  output m_axis_rx_tvalid;
  output \m_axis_rx_tdata_reg[30]_2 ;
  output [4:0]\m_axis_rx_tdata_reg[6] ;
  output in0;
  output [5:0]pcie_drp_clk_0;
  output [1:0]m_axis_rx_tdata;
  output [1:0]m_axis_rx_tuser;
  output [6:0]\m_axis_rx_tdata_reg[31] ;
  output [9:0]\m_axis_rx_tdata_reg[9] ;
  output src_in;
  output cfg_mgmt_rd_wr_done;
  output cfg_err_aer_headerlog_set;
  output cfg_err_cpl_rdy;
  output cfg_interrupt_rdy;
  output cfg_received_func_lvl_rst;
  output cfg_msg_received_pme_to;
  output [7:0]\cfg_bus_number_d_reg[7]_0 ;
  output [15:0]cfg_msg_data;
  output [4:0]\cfg_device_number_d_reg[4]_0 ;
  output [2:0]\cfg_function_number_d_reg[2]_0 ;
  output [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1] ;
  output [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15] ;
  output [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1] ;
  output [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 ;
  output [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_0 ;
  output [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 ;
  output [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 ;
  output [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_1 ;
  output [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 ;
  output [2:0]\pipe_stages_1.pipe_tx_margin_q_reg[2] ;
  output [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_2 ;
  output [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_2 ;
  output [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_2 ;
  output cfg_aer_ecrc_check_en;
  output cfg_aer_ecrc_gen_en;
  output cfg_aer_rooterr_corr_err_received;
  output cfg_aer_rooterr_corr_err_reporting_en;
  output cfg_aer_rooterr_fatal_err_received;
  output cfg_aer_rooterr_fatal_err_reporting_en;
  output cfg_aer_rooterr_non_fatal_err_received;
  output cfg_aer_rooterr_non_fatal_err_reporting_en;
  output cfg_bridge_serr_en;
  output [4:0]cfg_command;
  output [11:0]cfg_dcommand2;
  output [14:0]cfg_dcommand;
  output [3:0]cfg_dstatus;
  output cfg_interrupt_msienable;
  output cfg_interrupt_msixenable;
  output cfg_interrupt_msixfm;
  output [10:0]cfg_lcommand;
  output [9:0]cfg_lstatus;
  output cfg_msg_received_assert_int_a;
  output cfg_msg_received_assert_int_b;
  output cfg_msg_received_assert_int_c;
  output cfg_msg_received_assert_int_d;
  output cfg_msg_received_deassert_int_a;
  output cfg_msg_received_deassert_int_b;
  output cfg_msg_received_deassert_int_c;
  output cfg_msg_received_deassert_int_d;
  output cfg_msg_received_err_cor;
  output cfg_msg_received_err_fatal;
  output cfg_msg_received_err_non_fatal;
  output cfg_msg_received_pm_as_nak;
  output cfg_msg_received_pme_to_ack;
  output cfg_msg_received_pm_pme;
  output cfg_msg_received_setslotpowerlimit;
  output cfg_pmcsr_pme_en;
  output cfg_pmcsr_pme_status;
  output cfg_root_control_pme_int_en;
  output cfg_root_control_syserr_corr_err_en;
  output cfg_root_control_syserr_fatal_err_en;
  output cfg_root_control_syserr_non_fatal_err_en;
  output cfg_slot_control_electromech_il_ctl_pulse;
  output drp_rdy;
  output pl_directed_change_done;
  output pl_link_gen2_cap;
  output pl_link_partner_gen2_supported;
  output pl_link_upcfg_cap;
  output pl_received_hot_rst;
  output pl_sel_lnk_rate;
  output trn_lnk_up;
  output trn_terr_drop;
  output [11:0]fc_cpld;
  output [11:0]fc_npd;
  output [11:0]fc_pd;
  output [15:0]drp_do;
  output [1:0]cfg_pmcsr_powerstate;
  output [1:0]pl_lane_reversal_mode;
  output [1:0]pl_rx_pm_state;
  output [1:0]pl_sel_lnk_width;
  output [2:0]cfg_interrupt_mmenable;
  output [2:0]pl_initial_link_width;
  output [2:0]pl_tx_pm_state;
  output [31:0]cfg_mgmt_do;
  output [6:0]cfg_vc_tcvc_map;
  output [7:0]cfg_interrupt_do;
  output [7:0]fc_cplh;
  output [7:0]fc_nph;
  output [7:0]fc_ph;
  input [0:0]SR;
  input data_hold;
  input pipe_userclk2_in;
  input [0:0]E;
  input tx_cfg_gnt_mux;
  input cfg_turnoff_ok_mux;
  input s_axis_tx_tlast_mux;
  input s_axis_tx_tvalid_mux;
  input [0:0]\pipe_stages_1.pipe_tx_rcvr_det_q_reg ;
  input pipe_rx1_valid;
  input pipe_pclk_in;
  input pipe_rx1_chanisaligned;
  input pipe_rx1_phy_status;
  input pipe_rx1_elec_idle;
  input pipe_rx2_valid;
  input pipe_rx2_chanisaligned;
  input pipe_rx2_phy_status;
  input pipe_rx2_elec_idle;
  input pipe_rx3_valid;
  input pipe_rx3_chanisaligned;
  input pipe_rx3_phy_status;
  input pipe_rx3_elec_idle;
  input pipe_rx0_valid;
  input pipe_rx0_chanisaligned;
  input pipe_rx0_phy_status;
  input pipe_rx0_elec_idle;
  input [0:0]DI;
  input [1:0]S;
  input reg_axi_in_pkt_reg;
  input \ecrc_pause_enabled.reg_tx_ecrc_pkt_reg ;
  input axi_in_packet_reg;
  input m_axis_rx_tready;
  input m_axis_rx_tvalid_0;
  input m_axis_rx_tready_cpler;
  input bridge_reset_int;
  input pl_phy_lnk_up_q;
  input [2:0]\pio_rx_sm_128.req_addr_reg[2] ;
  input \pio_rx_sm_128.req_td_reg ;
  input m_axis_rx_tready_mux;
  input \thrtl_ctl_trn_flush.reg_disable_trn_reg ;
  input tready_thrtl_reg;
  input out;
  input s_axis_tx_tvalid;
  input \throttle_ctl_pipeline.reg_tsrc_rdy_reg ;
  input s_axis_tx_tvalid_cpler;
  input s_axis_tx_tlast;
  input s_axis_tx_tready_0;
  input [5:0]ltssm_reg2;
  input [1:0]pl_ltssm_state;
  input store_ltssm_inferred_i_1;
  input cfg_mgmt_wr_rw1c_as_rw;
  input cfg_mgmt_wr_readonly;
  input cfg_err_posted;
  input cfg_err_locked;
  input cfg_err_norecovery;
  input cfg_interrupt_assert;
  input cfg_interrupt_stat;
  input [0:0]\m_axis_rx_tuser_reg[21]_0 ;
  input [127:0]\throttle_ctl_pipeline.reg_tdata_reg[127] ;
  input [3:0]\throttle_ctl_pipeline.reg_tuser_reg[3] ;
  input [2:0]\throttle_ctl_pipeline.reg_tkeep_reg[15] ;
  input [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1] ;
  input [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15] ;
  input [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2] ;
  input [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ;
  input [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_0 ;
  input [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_0 ;
  input [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ;
  input [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_1 ;
  input [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_1 ;
  input [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 ;
  input [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_2 ;
  input [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_2 ;
  input pipe_userclk1_in;
  input cfg_err_atomic_egress_blocked_n;
  input cfg_err_cor_n;
  input cfg_err_cpl_abort_n;
  input cfg_err_cpl_timeout_n;
  input cfg_err_cpl_unexpect_n;
  input cfg_err_ecrc_n;
  input cfg_err_internal_cor_n;
  input cfg_err_internal_uncor_n;
  input cfg_err_malformed_n;
  input cfg_err_mc_blocked_n;
  input cfg_err_poisoned_n;
  input cfg_err_ur_n;
  input cfg_interrupt_n;
  input cfg_mgmt_rd_en_n;
  input cfg_mgmt_wr_en_n;
  input cfg_pm_force_state_en_n;
  input cfg_pm_halt_aspm_l0s_n;
  input cfg_pm_halt_aspm_l1_n;
  input cfg_pm_wake_n;
  input cfg_trn_pending_n;
  input pcie_drp_clk;
  input drp_en;
  input drp_we;
  input pl_directed_link_auton;
  input pl_directed_link_speed;
  input pl_downstream_deemph_source;
  input pl_transmit_hot_rst;
  input pl_upstream_prefer_deemph;
  input sys_rst_n;
  input trn_rnp_ok;
  input trn_rnp_req;
  input [127:0]cfg_err_aer_headerlog;
  input [15:0]drp_di;
  input [1:0]cfg_pm_force_state;
  input [1:0]pl_directed_link_change;
  input [1:0]pl_directed_link_width;
  input [2:0]cfg_ds_function_number;
  input [2:0]trn_fc_sel;
  input [31:0]cfg_mgmt_di;
  input [3:0]cfg_mgmt_byte_en_n;
  input [47:0]cfg_err_tlp_cpl_header;
  input [4:0]cfg_aer_interrupt_msgnum;
  input [4:0]cfg_ds_device_number;
  input [4:0]cfg_pciecap_interrupt_msgnum;
  input [63:0]cfg_dsn;
  input [7:0]cfg_ds_bus_number;
  input [7:0]cfg_interrupt_di;
  input [8:0]drp_addr;
  input [9:0]cfg_mgmt_dwaddr;

  wire [0:0]D;
  wire [0:0]DI;
  wire [0:0]E;
  wire \FSM_sequential_pio_rx_sm_128.state_reg[0] ;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire USER_TXCOMPLIANCE;
  wire USER_TXELECIDLE;
  wire axi_in_packet;
  wire axi_in_packet_reg;
  wire bridge_reset_int;
  wire cfg_aer_ecrc_check_en;
  wire cfg_aer_ecrc_gen_en;
  wire [4:0]cfg_aer_interrupt_msgnum;
  wire cfg_aer_rooterr_corr_err_received;
  wire cfg_aer_rooterr_corr_err_reporting_en;
  wire cfg_aer_rooterr_fatal_err_received;
  wire cfg_aer_rooterr_fatal_err_reporting_en;
  wire cfg_aer_rooterr_non_fatal_err_received;
  wire cfg_aer_rooterr_non_fatal_err_reporting_en;
  wire cfg_bridge_serr_en;
  wire [7:0]\cfg_bus_number_d_reg[7]_0 ;
  wire [4:0]cfg_command;
  wire [14:0]cfg_dcommand;
  wire [11:0]cfg_dcommand2;
  wire [4:0]\cfg_device_number_d_reg[4]_0 ;
  wire [7:0]cfg_ds_bus_number;
  wire [4:0]cfg_ds_device_number;
  wire [2:0]cfg_ds_function_number;
  wire [63:0]cfg_dsn;
  wire [3:0]cfg_dstatus;
  wire [127:0]cfg_err_aer_headerlog;
  wire cfg_err_aer_headerlog_set;
  wire cfg_err_atomic_egress_blocked_n;
  wire cfg_err_cor_n;
  wire cfg_err_cpl_abort_n;
  wire cfg_err_cpl_rdy;
  wire cfg_err_cpl_timeout_n;
  wire cfg_err_cpl_unexpect_n;
  wire cfg_err_ecrc_n;
  wire cfg_err_internal_cor_n;
  wire cfg_err_internal_uncor_n;
  wire cfg_err_locked;
  wire cfg_err_malformed_n;
  wire cfg_err_mc_blocked_n;
  wire cfg_err_norecovery;
  wire cfg_err_poisoned_n;
  wire cfg_err_posted;
  wire [47:0]cfg_err_tlp_cpl_header;
  wire cfg_err_ur_n;
  wire [2:0]\cfg_function_number_d_reg[2]_0 ;
  wire cfg_interrupt_assert;
  wire [7:0]cfg_interrupt_di;
  wire [7:0]cfg_interrupt_do;
  wire [2:0]cfg_interrupt_mmenable;
  wire cfg_interrupt_msienable;
  wire cfg_interrupt_msixenable;
  wire cfg_interrupt_msixfm;
  wire cfg_interrupt_n;
  wire cfg_interrupt_rdy;
  wire cfg_interrupt_stat;
  wire [10:0]cfg_lcommand;
  wire [9:0]cfg_lstatus;
  wire [3:0]cfg_mgmt_byte_en_n;
  wire [31:0]cfg_mgmt_di;
  wire [31:0]cfg_mgmt_do;
  wire [9:0]cfg_mgmt_dwaddr;
  wire cfg_mgmt_rd_en_n;
  wire cfg_mgmt_rd_wr_done;
  wire cfg_mgmt_wr_en_n;
  wire cfg_mgmt_wr_readonly;
  wire cfg_mgmt_wr_rw1c_as_rw;
  wire [15:0]cfg_msg_data;
  wire cfg_msg_received;
  wire cfg_msg_received_assert_int_a;
  wire cfg_msg_received_assert_int_b;
  wire cfg_msg_received_assert_int_c;
  wire cfg_msg_received_assert_int_d;
  wire cfg_msg_received_deassert_int_a;
  wire cfg_msg_received_deassert_int_b;
  wire cfg_msg_received_deassert_int_c;
  wire cfg_msg_received_deassert_int_d;
  wire cfg_msg_received_err_cor;
  wire cfg_msg_received_err_fatal;
  wire cfg_msg_received_err_non_fatal;
  wire cfg_msg_received_pm_as_nak;
  wire cfg_msg_received_pm_pme;
  wire cfg_msg_received_pme_to;
  wire cfg_msg_received_pme_to_ack;
  wire cfg_msg_received_setslotpowerlimit;
  wire [2:0]cfg_pcie_link_state;
  wire [4:0]cfg_pciecap_interrupt_msgnum;
  wire [1:0]cfg_pm_force_state;
  wire cfg_pm_force_state_en_n;
  wire cfg_pm_halt_aspm_l0s_n;
  wire cfg_pm_halt_aspm_l1_n;
  wire cfg_pm_wake_n;
  wire cfg_pmcsr_pme_en;
  wire cfg_pmcsr_pme_status;
  wire [1:0]cfg_pmcsr_powerstate;
  wire cfg_received_func_lvl_rst;
  wire cfg_root_control_pme_int_en;
  wire cfg_root_control_syserr_corr_err_en;
  wire cfg_root_control_syserr_fatal_err_en;
  wire cfg_root_control_syserr_non_fatal_err_en;
  wire cfg_slot_control_electromech_il_ctl_pulse;
  wire cfg_trn_pending_n;
  wire cfg_turnoff_ok_mux;
  wire cfg_turnoff_ok_w;
  wire [6:0]cfg_vc_tcvc_map;
  wire data_hold;
  wire [8:0]drp_addr;
  wire [15:0]drp_di;
  wire [15:0]drp_do;
  wire drp_en;
  wire drp_rdy;
  wire drp_we;
  wire \ecrc_pause_enabled.reg_tx_ecrc_pkt ;
  wire \ecrc_pause_enabled.reg_tx_ecrc_pkt_reg ;
  wire [11:0]fc_cpld;
  wire [7:0]fc_cplh;
  wire [11:0]fc_npd;
  wire [7:0]fc_nph;
  wire [11:0]fc_pd;
  wire [7:0]fc_ph;
  wire in0;
  wire [5:0]ltssm_reg2;
  wire [1:0]m_axis_rx_tdata;
  wire [125:0]\m_axis_rx_tdata_reg[127] ;
  wire [1:0]\m_axis_rx_tdata_reg[13] ;
  wire \m_axis_rx_tdata_reg[14] ;
  wire \m_axis_rx_tdata_reg[15] ;
  wire [2:0]\m_axis_rx_tdata_reg[22] ;
  wire \m_axis_rx_tdata_reg[29] ;
  wire \m_axis_rx_tdata_reg[29]_0 ;
  wire \m_axis_rx_tdata_reg[30] ;
  wire [0:0]\m_axis_rx_tdata_reg[30]_0 ;
  wire \m_axis_rx_tdata_reg[30]_1 ;
  wire \m_axis_rx_tdata_reg[30]_2 ;
  wire [6:0]\m_axis_rx_tdata_reg[31] ;
  wire [3:0]\m_axis_rx_tdata_reg[35] ;
  wire [7:0]\m_axis_rx_tdata_reg[47] ;
  wire [15:0]\m_axis_rx_tdata_reg[63] ;
  wire [4:0]\m_axis_rx_tdata_reg[6] ;
  wire \m_axis_rx_tdata_reg[73] ;
  wire [0:0]\m_axis_rx_tdata_reg[89] ;
  wire [9:0]\m_axis_rx_tdata_reg[9] ;
  wire m_axis_rx_tready;
  wire m_axis_rx_tready_cpler;
  wire m_axis_rx_tready_mux;
  wire [1:0]m_axis_rx_tuser;
  wire [13:0]\m_axis_rx_tuser_reg[21] ;
  wire [0:0]\m_axis_rx_tuser_reg[21]_0 ;
  wire m_axis_rx_tvalid;
  wire m_axis_rx_tvalid_0;
  wire m_axis_rx_tvalid_mux;
  wire [0:0]m_axis_rx_tvalid_reg;
  wire m_axis_rx_tvalid_reg_0;
  wire out;
  wire pcie_7x_i_n_17;
  wire pcie_7x_i_n_18;
  wire pcie_7x_i_n_20;
  wire pcie_7x_i_n_35;
  wire pcie_7x_i_n_36;
  wire pcie_7x_i_n_40;
  wire pcie_7x_i_n_9;
  wire pcie_drp_clk;
  wire [5:0]pcie_drp_clk_0;
  wire [2:0]\pio_rx_sm_128.req_addr_reg[2] ;
  wire \pio_rx_sm_128.req_td_reg ;
  wire pipe_pclk_in;
  wire pipe_rx0_chanisaligned;
  wire pipe_rx0_chanisaligned_13;
  wire [1:0]pipe_rx0_char_is_k;
  wire [15:0]pipe_rx0_data;
  wire pipe_rx0_elec_idle;
  wire pipe_rx0_elec_idle_15;
  wire pipe_rx0_phy_status;
  wire pipe_rx0_phy_status_14;
  wire pipe_rx0_polarity;
  wire pipe_rx0_polarity_19;
  wire [2:0]pipe_rx0_status;
  wire pipe_rx0_valid;
  wire pipe_rx0_valid_12;
  wire pipe_rx1_chanisaligned;
  wire pipe_rx1_chanisaligned_1;
  wire [1:0]pipe_rx1_char_is_k;
  wire [15:0]pipe_rx1_data;
  wire pipe_rx1_elec_idle;
  wire pipe_rx1_elec_idle_3;
  wire pipe_rx1_phy_status;
  wire pipe_rx1_phy_status_2;
  wire pipe_rx1_polarity;
  wire pipe_rx1_polarity_18;
  wire [2:0]pipe_rx1_status;
  wire pipe_rx1_valid;
  wire pipe_rx1_valid_0;
  wire pipe_rx2_chanisaligned;
  wire pipe_rx2_chanisaligned_5;
  wire [1:0]pipe_rx2_char_is_k;
  wire [15:0]pipe_rx2_data;
  wire pipe_rx2_elec_idle;
  wire pipe_rx2_elec_idle_7;
  wire pipe_rx2_phy_status;
  wire pipe_rx2_phy_status_6;
  wire pipe_rx2_polarity;
  wire pipe_rx2_polarity_17;
  wire [2:0]pipe_rx2_status;
  wire pipe_rx2_valid;
  wire pipe_rx2_valid_4;
  wire pipe_rx3_chanisaligned;
  wire pipe_rx3_chanisaligned_9;
  wire [1:0]pipe_rx3_char_is_k;
  wire [15:0]pipe_rx3_data;
  wire pipe_rx3_elec_idle;
  wire pipe_rx3_elec_idle_11;
  wire pipe_rx3_phy_status;
  wire pipe_rx3_phy_status_10;
  wire pipe_rx3_polarity;
  wire pipe_rx3_polarity_16;
  wire [2:0]pipe_rx3_status;
  wire pipe_rx3_valid;
  wire pipe_rx3_valid_8;
  wire [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1] ;
  wire [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ;
  wire [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ;
  wire [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 ;
  wire [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15] ;
  wire [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_0 ;
  wire [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_1 ;
  wire [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15]_2 ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2] ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_0 ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_1 ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2]_2 ;
  wire [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1] ;
  wire [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 ;
  wire [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 ;
  wire [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_2 ;
  wire \pipe_stages_1.pipe_tx_compliance_q_reg ;
  wire \pipe_stages_1.pipe_tx_compliance_q_reg_0 ;
  wire \pipe_stages_1.pipe_tx_compliance_q_reg_1 ;
  wire [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15] ;
  wire [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_0 ;
  wire [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_1 ;
  wire [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15]_2 ;
  wire \pipe_stages_1.pipe_tx_elec_idle_q_reg ;
  wire \pipe_stages_1.pipe_tx_elec_idle_q_reg_0 ;
  wire \pipe_stages_1.pipe_tx_elec_idle_q_reg_1 ;
  wire [2:0]\pipe_stages_1.pipe_tx_margin_q_reg[2] ;
  wire [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1] ;
  wire [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 ;
  wire [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 ;
  wire [1:0]\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_2 ;
  wire [0:0]\pipe_stages_1.pipe_tx_rcvr_det_q_reg ;
  wire [1:0]pipe_tx0_char_is_k;
  wire pipe_tx0_compliance;
  wire [15:0]pipe_tx0_data;
  wire pipe_tx0_elec_idle;
  wire [1:0]pipe_tx0_powerdown;
  wire [1:0]pipe_tx1_char_is_k;
  wire pipe_tx1_compliance;
  wire [15:0]pipe_tx1_data;
  wire pipe_tx1_elec_idle;
  wire [1:0]pipe_tx1_powerdown;
  wire [1:0]pipe_tx2_char_is_k;
  wire pipe_tx2_compliance;
  wire [15:0]pipe_tx2_data;
  wire pipe_tx2_elec_idle;
  wire [1:0]pipe_tx2_powerdown;
  wire [1:0]pipe_tx3_char_is_k;
  wire pipe_tx3_compliance;
  wire [15:0]pipe_tx3_data;
  wire pipe_tx3_elec_idle;
  wire [1:0]pipe_tx3_powerdown;
  wire pipe_tx_deemph;
  wire pipe_tx_deemph_gt;
  wire [2:0]pipe_tx_margin;
  wire pipe_tx_rate;
  wire pipe_tx_rcvr_det;
  wire pipe_tx_rcvr_det_gt;
  wire pipe_userclk1_in;
  wire pipe_userclk2_in;
  wire pl_directed_change_done;
  wire pl_directed_link_auton;
  wire [1:0]pl_directed_link_change;
  wire pl_directed_link_speed;
  wire [1:0]pl_directed_link_width;
  wire pl_downstream_deemph_source;
  wire [2:0]pl_initial_link_width;
  wire [1:0]pl_lane_reversal_mode;
  wire pl_link_gen2_cap;
  wire pl_link_partner_gen2_supported;
  wire pl_link_upcfg_cap;
  wire [1:0]pl_ltssm_state;
  wire pl_phy_lnk_up_q;
  wire pl_received_hot_rst;
  wire [1:0]pl_rx_pm_state;
  wire pl_sel_lnk_rate;
  wire [1:0]pl_sel_lnk_width;
  wire pl_transmit_hot_rst;
  wire [2:0]pl_tx_pm_state;
  wire pl_upstream_prefer_deemph;
  wire reg_axi_in_pkt;
  wire reg_axi_in_pkt_reg;
  wire \rx_inst/rx_pipeline_inst/dsc_detect ;
  wire \rx_inst/rx_pipeline_inst/reg_dsc_detect ;
  wire \rx_inst/rx_pipeline_inst/rsrc_rdy_filtered ;
  wire \rx_inst/rx_pipeline_inst/trn_in_packet ;
  wire \rx_inst/rx_pipeline_inst/trn_rsrc_dsc_d ;
  wire \rx_inst/rx_pipeline_inst/trn_rsrc_dsc_prev0 ;
  wire s_axis_tx_tlast;
  wire s_axis_tx_tlast_mux;
  wire s_axis_tx_tready;
  wire s_axis_tx_tready_0;
  wire s_axis_tx_tready_mux;
  wire s_axis_tx_tvalid;
  wire s_axis_tx_tvalid_cpler;
  wire s_axis_tx_tvalid_mux;
  wire src_in;
  wire store_ltssm_inferred_i_1;
  wire sys_rst_n;
  wire [127:0]\throttle_ctl_pipeline.reg_tdata_reg[127] ;
  wire [2:0]\throttle_ctl_pipeline.reg_tkeep_reg[15] ;
  wire \throttle_ctl_pipeline.reg_tsrc_rdy_reg ;
  wire [3:0]\throttle_ctl_pipeline.reg_tuser_reg[3] ;
  wire \thrtl_ctl_trn_flush.reg_disable_trn_reg ;
  wire tready_thrtl_reg;
  wire [2:0]trn_fc_sel;
  wire trn_lnk_up;
  wire [6:0]trn_rbar_hit;
  wire [127:0]trn_rd;
  wire trn_rdst_rdy;
  wire trn_recrc_err;
  wire trn_reof;
  wire trn_rerrfwd;
  wire trn_rnp_ok;
  wire trn_rnp_req;
  wire [1:0]trn_rrem;
  wire trn_rsof;
  wire trn_rsrc_dsc;
  wire [5:0]trn_tbuf_av;
  wire trn_tcfg_gnt;
  wire trn_tcfg_req;
  wire [127:0]trn_td;
  wire trn_tdst_rdy;
  wire trn_tecrc_gen;
  wire trn_teof;
  wire trn_terr_drop;
  wire trn_terrfwd;
  wire [0:0]trn_trem;
  wire trn_tsof;
  wire trn_tsrc_dsc;
  wire trn_tsrc_rdy;
  wire trn_tstr;
  wire tx_cfg_gnt_mux;
  wire \tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff ;
  wire \tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/lnk_up_thrtl ;
  wire \tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/ppm_L1_thrtl ;
  wire \tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/ppm_L1_trig ;
  wire \tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/reg_tcfg_gnt ;
  wire [4:3]\tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/tbuf_av_d ;
  wire \tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/tbuf_av_min_trig ;
  wire \tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/tcfg_req_trig ;
  wire \tx_inst/tx_pipeline_inst/reg_disable_trn2 ;
  wire \tx_inst/tx_pipeline_inst/tkeep_to_trem_128.axi_DW_2 ;
  wire user_reset_int_reg;
  wire [0:0]user_reset_out_reg;

  pcie_7x_0_pcie_7x_0_axi_basic_top axi_basic_top
       (.DI(DI),
        .E(E),
        .\FSM_sequential_pio_rx_sm_128.state_reg[0] (\FSM_sequential_pio_rx_sm_128.state_reg[0] ),
        .\L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff (\tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff ),
        .\L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg (pcie_7x_i_n_40),
        .Q(Q),
        .S(S),
        .SR(SR),
        .axi_in_packet(axi_in_packet),
        .axi_in_packet_reg(axi_in_packet_reg),
        .cfg_pcie_link_state(cfg_pcie_link_state),
        .cfg_pm_turnoff_ok_n(cfg_turnoff_ok_w),
        .cfg_turnoff_ok_mux(cfg_turnoff_ok_mux),
        .data_hold(data_hold),
        .dsc_detect(\rx_inst/rx_pipeline_inst/dsc_detect ),
        .\ecrc_pause_enabled.reg_tx_ecrc_pkt (\ecrc_pause_enabled.reg_tx_ecrc_pkt ),
        .\ecrc_pause_enabled.reg_tx_ecrc_pkt_reg (\ecrc_pause_enabled.reg_tx_ecrc_pkt_reg ),
        .lnk_up_thrtl(\tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/lnk_up_thrtl ),
        .lnk_up_thrtl_reg(pcie_7x_i_n_20),
        .m_axis_rx_tdata(m_axis_rx_tdata),
        .\m_axis_rx_tdata_reg[127] (\m_axis_rx_tdata_reg[127] ),
        .\m_axis_rx_tdata_reg[13] (\m_axis_rx_tdata_reg[13] ),
        .\m_axis_rx_tdata_reg[14] (\m_axis_rx_tdata_reg[14] ),
        .\m_axis_rx_tdata_reg[15] (\m_axis_rx_tdata_reg[15] ),
        .\m_axis_rx_tdata_reg[22] (\m_axis_rx_tdata_reg[22] ),
        .\m_axis_rx_tdata_reg[29] (\m_axis_rx_tdata_reg[29] ),
        .\m_axis_rx_tdata_reg[29]_0 (\m_axis_rx_tdata_reg[29]_0 ),
        .\m_axis_rx_tdata_reg[30] (\m_axis_rx_tdata_reg[30] ),
        .\m_axis_rx_tdata_reg[30]_0 (\m_axis_rx_tdata_reg[30]_0 ),
        .\m_axis_rx_tdata_reg[30]_1 (\m_axis_rx_tdata_reg[30]_1 ),
        .\m_axis_rx_tdata_reg[30]_2 (\m_axis_rx_tdata_reg[30]_2 ),
        .\m_axis_rx_tdata_reg[31] (\m_axis_rx_tdata_reg[31] ),
        .\m_axis_rx_tdata_reg[35] (\m_axis_rx_tdata_reg[35] ),
        .\m_axis_rx_tdata_reg[47] (\m_axis_rx_tdata_reg[47] ),
        .\m_axis_rx_tdata_reg[63] (\m_axis_rx_tdata_reg[63] ),
        .\m_axis_rx_tdata_reg[6] (\m_axis_rx_tdata_reg[6] ),
        .\m_axis_rx_tdata_reg[73] (\m_axis_rx_tdata_reg[73] ),
        .\m_axis_rx_tdata_reg[89] (\m_axis_rx_tdata_reg[89] ),
        .\m_axis_rx_tdata_reg[9] (\m_axis_rx_tdata_reg[9] ),
        .m_axis_rx_tready(m_axis_rx_tready),
        .m_axis_rx_tready_cpler(m_axis_rx_tready_cpler),
        .m_axis_rx_tready_mux(m_axis_rx_tready_mux),
        .m_axis_rx_tuser(m_axis_rx_tuser),
        .\m_axis_rx_tuser_reg[21] (\m_axis_rx_tuser_reg[21] ),
        .\m_axis_rx_tuser_reg[21]_0 (\m_axis_rx_tuser_reg[21]_0 ),
        .m_axis_rx_tvalid(m_axis_rx_tvalid),
        .m_axis_rx_tvalid_0(m_axis_rx_tvalid_0),
        .m_axis_rx_tvalid_reg(m_axis_rx_tvalid_mux),
        .m_axis_rx_tvalid_reg_0(m_axis_rx_tvalid_reg),
        .m_axis_rx_tvalid_reg_1(m_axis_rx_tvalid_reg_0),
        .out(out),
        .\pio_rx_sm_128.req_addr_reg[2] (\pio_rx_sm_128.req_addr_reg[2] ),
        .\pio_rx_sm_128.req_td_reg (\pio_rx_sm_128.req_td_reg ),
        .pipe_userclk2_in(pipe_userclk2_in),
        .ppm_L1_thrtl(\tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/ppm_L1_thrtl ),
        .ppm_L1_thrtl_reg(pcie_7x_i_n_36),
        .ppm_L1_trig(\tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/ppm_L1_trig ),
        .reg_axi_in_pkt(reg_axi_in_pkt),
        .reg_axi_in_pkt_reg(reg_axi_in_pkt_reg),
        .reg_dsc_detect(\rx_inst/rx_pipeline_inst/reg_dsc_detect ),
        .reg_tcfg_gnt(\tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/reg_tcfg_gnt ),
        .rsrc_rdy_filtered(\rx_inst/rx_pipeline_inst/rsrc_rdy_filtered ),
        .s_axis_tx_tlast(s_axis_tx_tlast),
        .s_axis_tx_tlast_mux(s_axis_tx_tlast_mux),
        .s_axis_tx_tready(s_axis_tx_tready),
        .s_axis_tx_tready_0(s_axis_tx_tready_0),
        .s_axis_tx_tvalid(s_axis_tx_tvalid),
        .s_axis_tx_tvalid_cpler(s_axis_tx_tvalid_cpler),
        .s_axis_tx_tvalid_mux(s_axis_tx_tvalid_mux),
        .\tbuf_av_d_reg[4] (\tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/tbuf_av_d ),
        .tbuf_av_gap_thrtl_i_2(pcie_7x_i_n_9),
        .tbuf_av_gap_thrtl_reg(pcie_7x_i_n_17),
        .tbuf_av_min_trig(\tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/tbuf_av_min_trig ),
        .tcfg_req_trig(\tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/tcfg_req_trig ),
        .\throttle_ctl_pipeline.reg_tdata_reg[127] ({trn_td[31:0],trn_td[63:32],trn_td[95:64],trn_td[127:96]}),
        .\throttle_ctl_pipeline.reg_tdata_reg[127]_0 (\throttle_ctl_pipeline.reg_tdata_reg[127] ),
        .\throttle_ctl_pipeline.reg_tkeep_reg[15] (\throttle_ctl_pipeline.reg_tkeep_reg[15] ),
        .\throttle_ctl_pipeline.reg_tsrc_rdy_reg (\throttle_ctl_pipeline.reg_tsrc_rdy_reg ),
        .\throttle_ctl_pipeline.reg_tuser_reg[3] ({trn_tsrc_dsc,trn_tstr,trn_terrfwd,trn_tecrc_gen}),
        .\throttle_ctl_pipeline.reg_tuser_reg[3]_0 (\throttle_ctl_pipeline.reg_tuser_reg[3] ),
        .\thrtl_ctl_trn_flush.reg_disable_trn_reg (\thrtl_ctl_trn_flush.reg_disable_trn_reg ),
        .tready_thrtl_reg(s_axis_tx_tready_mux),
        .tready_thrtl_reg_0(tready_thrtl_reg),
        .trn_in_packet(\rx_inst/rx_pipeline_inst/trn_in_packet ),
        .trn_in_packet_reg(pcie_7x_i_n_35),
        .trn_rbar_hit(trn_rbar_hit),
        .trn_rd(trn_rd),
        .trn_rdst_rdy(trn_rdst_rdy),
        .trn_recrc_err(trn_recrc_err),
        .trn_reof(trn_reof),
        .trn_rerrfwd(trn_rerrfwd),
        .trn_rrem(trn_rrem),
        .trn_rsof(trn_rsof),
        .trn_rsrc_dsc(trn_rsrc_dsc),
        .trn_rsrc_dsc_d(\rx_inst/rx_pipeline_inst/trn_rsrc_dsc_d ),
        .trn_rsrc_dsc_prev0(\rx_inst/rx_pipeline_inst/trn_rsrc_dsc_prev0 ),
        .trn_tbuf_av(trn_tbuf_av),
        .trn_tcfg_gnt(trn_tcfg_gnt),
        .trn_tcfg_req(trn_tcfg_req),
        .trn_tdst_rdy(trn_tdst_rdy),
        .trn_teof(trn_teof),
        .trn_trem({\tx_inst/tx_pipeline_inst/tkeep_to_trem_128.axi_DW_2 ,trn_trem}),
        .trn_tsof(trn_tsof),
        .trn_tsrc_rdy(trn_tsrc_rdy),
        .tx_cfg_gnt_mux(tx_cfg_gnt_mux),
        .user_reset_out_reg(user_reset_out_reg));
  LUT1 #(
    .INIT(2'h1)) 
    \cfg_bus_number_d[7]_i_1 
       (.I0(out),
        .O(\tx_inst/tx_pipeline_inst/reg_disable_trn2 ));
  FDRE \cfg_bus_number_d_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(pcie_7x_i_n_18),
        .D(cfg_msg_data[8]),
        .Q(\cfg_bus_number_d_reg[7]_0 [0]),
        .R(\tx_inst/tx_pipeline_inst/reg_disable_trn2 ));
  FDRE \cfg_bus_number_d_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(pcie_7x_i_n_18),
        .D(cfg_msg_data[9]),
        .Q(\cfg_bus_number_d_reg[7]_0 [1]),
        .R(\tx_inst/tx_pipeline_inst/reg_disable_trn2 ));
  FDRE \cfg_bus_number_d_reg[2] 
       (.C(pipe_userclk2_in),
        .CE(pcie_7x_i_n_18),
        .D(cfg_msg_data[10]),
        .Q(\cfg_bus_number_d_reg[7]_0 [2]),
        .R(\tx_inst/tx_pipeline_inst/reg_disable_trn2 ));
  FDRE \cfg_bus_number_d_reg[3] 
       (.C(pipe_userclk2_in),
        .CE(pcie_7x_i_n_18),
        .D(cfg_msg_data[11]),
        .Q(\cfg_bus_number_d_reg[7]_0 [3]),
        .R(\tx_inst/tx_pipeline_inst/reg_disable_trn2 ));
  FDRE \cfg_bus_number_d_reg[4] 
       (.C(pipe_userclk2_in),
        .CE(pcie_7x_i_n_18),
        .D(cfg_msg_data[12]),
        .Q(\cfg_bus_number_d_reg[7]_0 [4]),
        .R(\tx_inst/tx_pipeline_inst/reg_disable_trn2 ));
  FDRE \cfg_bus_number_d_reg[5] 
       (.C(pipe_userclk2_in),
        .CE(pcie_7x_i_n_18),
        .D(cfg_msg_data[13]),
        .Q(\cfg_bus_number_d_reg[7]_0 [5]),
        .R(\tx_inst/tx_pipeline_inst/reg_disable_trn2 ));
  FDRE \cfg_bus_number_d_reg[6] 
       (.C(pipe_userclk2_in),
        .CE(pcie_7x_i_n_18),
        .D(cfg_msg_data[14]),
        .Q(\cfg_bus_number_d_reg[7]_0 [6]),
        .R(\tx_inst/tx_pipeline_inst/reg_disable_trn2 ));
  FDRE \cfg_bus_number_d_reg[7] 
       (.C(pipe_userclk2_in),
        .CE(pcie_7x_i_n_18),
        .D(cfg_msg_data[15]),
        .Q(\cfg_bus_number_d_reg[7]_0 [7]),
        .R(\tx_inst/tx_pipeline_inst/reg_disable_trn2 ));
  FDRE \cfg_device_number_d_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(pcie_7x_i_n_18),
        .D(cfg_msg_data[3]),
        .Q(\cfg_device_number_d_reg[4]_0 [0]),
        .R(\tx_inst/tx_pipeline_inst/reg_disable_trn2 ));
  FDRE \cfg_device_number_d_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(pcie_7x_i_n_18),
        .D(cfg_msg_data[4]),
        .Q(\cfg_device_number_d_reg[4]_0 [1]),
        .R(\tx_inst/tx_pipeline_inst/reg_disable_trn2 ));
  FDRE \cfg_device_number_d_reg[2] 
       (.C(pipe_userclk2_in),
        .CE(pcie_7x_i_n_18),
        .D(cfg_msg_data[5]),
        .Q(\cfg_device_number_d_reg[4]_0 [2]),
        .R(\tx_inst/tx_pipeline_inst/reg_disable_trn2 ));
  FDRE \cfg_device_number_d_reg[3] 
       (.C(pipe_userclk2_in),
        .CE(pcie_7x_i_n_18),
        .D(cfg_msg_data[6]),
        .Q(\cfg_device_number_d_reg[4]_0 [3]),
        .R(\tx_inst/tx_pipeline_inst/reg_disable_trn2 ));
  FDRE \cfg_device_number_d_reg[4] 
       (.C(pipe_userclk2_in),
        .CE(pcie_7x_i_n_18),
        .D(cfg_msg_data[7]),
        .Q(\cfg_device_number_d_reg[4]_0 [4]),
        .R(\tx_inst/tx_pipeline_inst/reg_disable_trn2 ));
  FDRE \cfg_function_number_d_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(pcie_7x_i_n_18),
        .D(cfg_msg_data[0]),
        .Q(\cfg_function_number_d_reg[2]_0 [0]),
        .R(\tx_inst/tx_pipeline_inst/reg_disable_trn2 ));
  FDRE \cfg_function_number_d_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(pcie_7x_i_n_18),
        .D(cfg_msg_data[1]),
        .Q(\cfg_function_number_d_reg[2]_0 [1]),
        .R(\tx_inst/tx_pipeline_inst/reg_disable_trn2 ));
  FDRE \cfg_function_number_d_reg[2] 
       (.C(pipe_userclk2_in),
        .CE(pcie_7x_i_n_18),
        .D(cfg_msg_data[2]),
        .Q(\cfg_function_number_d_reg[2]_0 [2]),
        .R(\tx_inst/tx_pipeline_inst/reg_disable_trn2 ));
  pcie_7x_0_pcie_7x_0_pcie_7x pcie_7x_i
       (.E(pcie_7x_i_n_18),
        .\L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff (\tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff ),
        .\L23_thrtl_ep.x7_L23_thrtl_ep.reg_to_turnoff_reg (pcie_7x_i_n_40),
        .Q(pipe_rx0_data),
        .bridge_reset_int(bridge_reset_int),
        .cfg_aer_ecrc_check_en(cfg_aer_ecrc_check_en),
        .cfg_aer_ecrc_check_en_0({trn_tsrc_dsc,trn_tstr,trn_terrfwd,trn_tecrc_gen}),
        .cfg_aer_ecrc_check_en_1(pipe_rx1_data),
        .cfg_aer_ecrc_check_en_10(pipe_rx2_status),
        .cfg_aer_ecrc_check_en_11(pipe_rx3_status),
        .cfg_aer_ecrc_check_en_2(pipe_rx2_data),
        .cfg_aer_ecrc_check_en_3(pipe_rx3_data),
        .cfg_aer_ecrc_check_en_4(pipe_rx0_char_is_k),
        .cfg_aer_ecrc_check_en_5(pipe_rx1_char_is_k),
        .cfg_aer_ecrc_check_en_6(pipe_rx2_char_is_k),
        .cfg_aer_ecrc_check_en_7(pipe_rx3_char_is_k),
        .cfg_aer_ecrc_check_en_8(pipe_rx0_status),
        .cfg_aer_ecrc_check_en_9(pipe_rx1_status),
        .cfg_aer_ecrc_gen_en(cfg_aer_ecrc_gen_en),
        .cfg_aer_interrupt_msgnum(cfg_aer_interrupt_msgnum),
        .cfg_aer_rooterr_corr_err_received(cfg_aer_rooterr_corr_err_received),
        .cfg_aer_rooterr_corr_err_reporting_en(cfg_aer_rooterr_corr_err_reporting_en),
        .cfg_aer_rooterr_fatal_err_received(cfg_aer_rooterr_fatal_err_received),
        .cfg_aer_rooterr_fatal_err_reporting_en(cfg_aer_rooterr_fatal_err_reporting_en),
        .cfg_aer_rooterr_non_fatal_err_received(cfg_aer_rooterr_non_fatal_err_received),
        .cfg_aer_rooterr_non_fatal_err_reporting_en(cfg_aer_rooterr_non_fatal_err_reporting_en),
        .cfg_bridge_serr_en(cfg_bridge_serr_en),
        .cfg_command(cfg_command),
        .cfg_dcommand(cfg_dcommand),
        .cfg_dcommand2(cfg_dcommand2),
        .cfg_ds_bus_number(cfg_ds_bus_number),
        .cfg_ds_device_number(cfg_ds_device_number),
        .cfg_ds_function_number(cfg_ds_function_number),
        .cfg_dsn(cfg_dsn),
        .cfg_dstatus(cfg_dstatus),
        .cfg_err_aer_headerlog(cfg_err_aer_headerlog),
        .cfg_err_aer_headerlog_set(cfg_err_aer_headerlog_set),
        .cfg_err_atomic_egress_blocked_n(cfg_err_atomic_egress_blocked_n),
        .cfg_err_cor_n(cfg_err_cor_n),
        .cfg_err_cpl_abort_n(cfg_err_cpl_abort_n),
        .cfg_err_cpl_rdy(cfg_err_cpl_rdy),
        .cfg_err_cpl_timeout_n(cfg_err_cpl_timeout_n),
        .cfg_err_cpl_unexpect_n(cfg_err_cpl_unexpect_n),
        .cfg_err_ecrc_n(cfg_err_ecrc_n),
        .cfg_err_internal_cor_n(cfg_err_internal_cor_n),
        .cfg_err_internal_uncor_n(cfg_err_internal_uncor_n),
        .cfg_err_locked(cfg_err_locked),
        .cfg_err_malformed_n(cfg_err_malformed_n),
        .cfg_err_mc_blocked_n(cfg_err_mc_blocked_n),
        .cfg_err_norecovery(cfg_err_norecovery),
        .cfg_err_poisoned_n(cfg_err_poisoned_n),
        .cfg_err_posted(cfg_err_posted),
        .cfg_err_tlp_cpl_header(cfg_err_tlp_cpl_header),
        .cfg_err_ur_n(cfg_err_ur_n),
        .cfg_interrupt_assert(cfg_interrupt_assert),
        .cfg_interrupt_di(cfg_interrupt_di),
        .cfg_interrupt_do(cfg_interrupt_do),
        .cfg_interrupt_mmenable(cfg_interrupt_mmenable),
        .cfg_interrupt_msienable(cfg_interrupt_msienable),
        .cfg_interrupt_msixenable(cfg_interrupt_msixenable),
        .cfg_interrupt_msixfm(cfg_interrupt_msixfm),
        .cfg_interrupt_n(cfg_interrupt_n),
        .cfg_interrupt_rdy(cfg_interrupt_rdy),
        .cfg_interrupt_stat(cfg_interrupt_stat),
        .cfg_lcommand(cfg_lcommand),
        .cfg_lstatus(cfg_lstatus),
        .cfg_mgmt_byte_en_n(cfg_mgmt_byte_en_n),
        .cfg_mgmt_di(cfg_mgmt_di),
        .cfg_mgmt_do(cfg_mgmt_do),
        .cfg_mgmt_dwaddr(cfg_mgmt_dwaddr),
        .cfg_mgmt_rd_en_n(cfg_mgmt_rd_en_n),
        .cfg_mgmt_rd_wr_done(cfg_mgmt_rd_wr_done),
        .cfg_mgmt_wr_en_n(cfg_mgmt_wr_en_n),
        .cfg_mgmt_wr_readonly(cfg_mgmt_wr_readonly),
        .cfg_mgmt_wr_rw1c_as_rw(cfg_mgmt_wr_rw1c_as_rw),
        .cfg_msg_data(cfg_msg_data),
        .cfg_msg_received(cfg_msg_received),
        .cfg_msg_received_assert_int_a(cfg_msg_received_assert_int_a),
        .cfg_msg_received_assert_int_b(cfg_msg_received_assert_int_b),
        .cfg_msg_received_assert_int_c(cfg_msg_received_assert_int_c),
        .cfg_msg_received_assert_int_d(cfg_msg_received_assert_int_d),
        .cfg_msg_received_deassert_int_a(cfg_msg_received_deassert_int_a),
        .cfg_msg_received_deassert_int_b(cfg_msg_received_deassert_int_b),
        .cfg_msg_received_deassert_int_c(cfg_msg_received_deassert_int_c),
        .cfg_msg_received_deassert_int_d(cfg_msg_received_deassert_int_d),
        .cfg_msg_received_err_cor(cfg_msg_received_err_cor),
        .cfg_msg_received_err_fatal(cfg_msg_received_err_fatal),
        .cfg_msg_received_err_non_fatal(cfg_msg_received_err_non_fatal),
        .cfg_msg_received_pm_as_nak(cfg_msg_received_pm_as_nak),
        .cfg_msg_received_pm_pme(cfg_msg_received_pm_pme),
        .cfg_msg_received_pme_to(cfg_msg_received_pme_to),
        .cfg_msg_received_pme_to_ack(cfg_msg_received_pme_to_ack),
        .cfg_msg_received_setslotpowerlimit(cfg_msg_received_setslotpowerlimit),
        .cfg_pcie_link_state(cfg_pcie_link_state),
        .cfg_pciecap_interrupt_msgnum(cfg_pciecap_interrupt_msgnum),
        .cfg_pm_force_state(cfg_pm_force_state),
        .cfg_pm_force_state_en_n(cfg_pm_force_state_en_n),
        .cfg_pm_halt_aspm_l0s_n(cfg_pm_halt_aspm_l0s_n),
        .cfg_pm_halt_aspm_l1_n(cfg_pm_halt_aspm_l1_n),
        .cfg_pm_turnoff_ok_n(cfg_turnoff_ok_w),
        .cfg_pm_wake_n(cfg_pm_wake_n),
        .cfg_pmcsr_pme_en(cfg_pmcsr_pme_en),
        .cfg_pmcsr_pme_status(cfg_pmcsr_pme_status),
        .cfg_pmcsr_powerstate(cfg_pmcsr_powerstate),
        .cfg_received_func_lvl_rst(cfg_received_func_lvl_rst),
        .cfg_root_control_pme_int_en(cfg_root_control_pme_int_en),
        .cfg_root_control_syserr_corr_err_en(cfg_root_control_syserr_corr_err_en),
        .cfg_root_control_syserr_fatal_err_en(cfg_root_control_syserr_fatal_err_en),
        .cfg_root_control_syserr_non_fatal_err_en(cfg_root_control_syserr_non_fatal_err_en),
        .cfg_slot_control_electromech_il_ctl_pulse(cfg_slot_control_electromech_il_ctl_pulse),
        .cfg_trn_pending_n(cfg_trn_pending_n),
        .cfg_vc_tcvc_map(cfg_vc_tcvc_map),
        .drp_addr(drp_addr),
        .drp_di(drp_di),
        .drp_do(drp_do),
        .drp_en(drp_en),
        .drp_rdy(drp_rdy),
        .drp_we(drp_we),
        .dsc_detect(\rx_inst/rx_pipeline_inst/dsc_detect ),
        .fc_cpld(fc_cpld),
        .fc_cplh(fc_cplh),
        .fc_npd(fc_npd),
        .fc_nph(fc_nph),
        .fc_pd(fc_pd),
        .fc_ph(fc_ph),
        .in0(in0),
        .lnk_up_thrtl(\tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/lnk_up_thrtl ),
        .lnk_up_thrtl_reg(pcie_7x_i_n_20),
        .ltssm_reg2(ltssm_reg2),
        .out(out),
        .pcie_drp_clk(pcie_drp_clk),
        .pcie_drp_clk_0(pcie_7x_i_n_17),
        .pcie_drp_clk_1(pcie_drp_clk_0),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_rx0_chanisaligned(pipe_rx0_chanisaligned_13),
        .pipe_rx0_elec_idle(pipe_rx0_elec_idle_15),
        .pipe_rx0_phy_status(pipe_rx0_phy_status_14),
        .pipe_rx0_polarity(pipe_rx0_polarity_19),
        .pipe_rx0_valid(pipe_rx0_valid_12),
        .pipe_rx1_chanisaligned(pipe_rx1_chanisaligned_1),
        .pipe_rx1_elec_idle(pipe_rx1_elec_idle_3),
        .pipe_rx1_phy_status(pipe_rx1_phy_status_2),
        .pipe_rx1_polarity(pipe_rx1_polarity_18),
        .pipe_rx1_valid(pipe_rx1_valid_0),
        .pipe_rx2_chanisaligned(pipe_rx2_chanisaligned_5),
        .pipe_rx2_elec_idle(pipe_rx2_elec_idle_7),
        .pipe_rx2_phy_status(pipe_rx2_phy_status_6),
        .pipe_rx2_polarity(pipe_rx2_polarity_17),
        .pipe_rx2_valid(pipe_rx2_valid_4),
        .pipe_rx3_chanisaligned(pipe_rx3_chanisaligned_9),
        .pipe_rx3_elec_idle(pipe_rx3_elec_idle_11),
        .pipe_rx3_phy_status(pipe_rx3_phy_status_10),
        .pipe_rx3_polarity(pipe_rx3_polarity_16),
        .pipe_rx3_valid(pipe_rx3_valid_8),
        .pipe_tx0_char_is_k(pipe_tx0_char_is_k),
        .pipe_tx0_compliance(pipe_tx0_compliance),
        .pipe_tx0_data(pipe_tx0_data),
        .pipe_tx0_elec_idle(pipe_tx0_elec_idle),
        .pipe_tx0_powerdown(pipe_tx0_powerdown),
        .pipe_tx1_char_is_k(pipe_tx1_char_is_k),
        .pipe_tx1_compliance(pipe_tx1_compliance),
        .pipe_tx1_data(pipe_tx1_data),
        .pipe_tx1_elec_idle(pipe_tx1_elec_idle),
        .pipe_tx1_powerdown(pipe_tx1_powerdown),
        .pipe_tx2_char_is_k(pipe_tx2_char_is_k),
        .pipe_tx2_compliance(pipe_tx2_compliance),
        .pipe_tx2_data(pipe_tx2_data),
        .pipe_tx2_elec_idle(pipe_tx2_elec_idle),
        .pipe_tx2_powerdown(pipe_tx2_powerdown),
        .pipe_tx3_char_is_k(pipe_tx3_char_is_k),
        .pipe_tx3_compliance(pipe_tx3_compliance),
        .pipe_tx3_data(pipe_tx3_data),
        .pipe_tx3_elec_idle(pipe_tx3_elec_idle),
        .pipe_tx3_powerdown(pipe_tx3_powerdown),
        .pipe_tx_deemph(pipe_tx_deemph),
        .pipe_tx_margin(pipe_tx_margin),
        .pipe_tx_rate(pipe_tx_rate),
        .pipe_tx_rcvr_det(pipe_tx_rcvr_det),
        .pipe_userclk1_in(pipe_userclk1_in),
        .pipe_userclk2_in(pipe_userclk2_in),
        .pl_directed_change_done(pl_directed_change_done),
        .pl_directed_link_auton(pl_directed_link_auton),
        .pl_directed_link_change(pl_directed_link_change),
        .pl_directed_link_speed(pl_directed_link_speed),
        .pl_directed_link_width(pl_directed_link_width),
        .pl_downstream_deemph_source(pl_downstream_deemph_source),
        .pl_initial_link_width(pl_initial_link_width),
        .pl_lane_reversal_mode(pl_lane_reversal_mode),
        .pl_link_gen2_cap(pl_link_gen2_cap),
        .pl_link_partner_gen2_supported(pl_link_partner_gen2_supported),
        .pl_link_upcfg_cap(pl_link_upcfg_cap),
        .pl_ltssm_state(pl_ltssm_state),
        .pl_phy_lnk_up_q(pl_phy_lnk_up_q),
        .pl_received_hot_rst(pl_received_hot_rst),
        .pl_rx_pm_state(pl_rx_pm_state),
        .pl_sel_lnk_rate(pl_sel_lnk_rate),
        .pl_sel_lnk_width(pl_sel_lnk_width),
        .pl_transmit_hot_rst(pl_transmit_hot_rst),
        .pl_tx_pm_state(pl_tx_pm_state),
        .pl_upstream_prefer_deemph(pl_upstream_prefer_deemph),
        .ppm_L1_thrtl(\tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/ppm_L1_thrtl ),
        .ppm_L1_thrtl_reg(pcie_7x_i_n_36),
        .ppm_L1_trig(\tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/ppm_L1_trig ),
        .reg_dsc_detect(\rx_inst/rx_pipeline_inst/reg_dsc_detect ),
        .reg_tcfg_gnt(\tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/reg_tcfg_gnt ),
        .rsrc_rdy_filtered(\rx_inst/rx_pipeline_inst/rsrc_rdy_filtered ),
        .src_in(src_in),
        .store_ltssm_inferred_i_1_0(store_ltssm_inferred_i_1),
        .sys_rst_n(sys_rst_n),
        .\tbuf_av_d_reg[3] (pcie_7x_i_n_9),
        .tbuf_av_gap_thrtl_i_3(\tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/tbuf_av_d ),
        .tbuf_av_min_trig(\tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/tbuf_av_min_trig ),
        .tcfg_req_trig(\tx_inst/thrtl_ctl_enabled.tx_thrl_ctl_inst/tcfg_req_trig ),
        .trn_fc_sel(trn_fc_sel),
        .trn_in_packet(\rx_inst/rx_pipeline_inst/trn_in_packet ),
        .trn_in_packet_reg(pcie_7x_i_n_35),
        .trn_lnk_up(trn_lnk_up),
        .trn_rbar_hit(trn_rbar_hit),
        .trn_rd(trn_rd),
        .trn_rdst_rdy(trn_rdst_rdy),
        .trn_recrc_err(trn_recrc_err),
        .trn_reof(trn_reof),
        .trn_rerrfwd(trn_rerrfwd),
        .trn_rnp_ok(trn_rnp_ok),
        .trn_rnp_req(trn_rnp_req),
        .trn_rrem(trn_rrem),
        .trn_rsof(trn_rsof),
        .trn_rsrc_dsc(trn_rsrc_dsc),
        .trn_rsrc_dsc_d(\rx_inst/rx_pipeline_inst/trn_rsrc_dsc_d ),
        .trn_rsrc_dsc_prev0(\rx_inst/rx_pipeline_inst/trn_rsrc_dsc_prev0 ),
        .trn_tbuf_av(trn_tbuf_av),
        .trn_tcfg_gnt(trn_tcfg_gnt),
        .trn_tcfg_req(trn_tcfg_req),
        .trn_td(trn_td),
        .trn_tdst_rdy(trn_tdst_rdy),
        .trn_teof(trn_teof),
        .trn_terr_drop(trn_terr_drop),
        .trn_trem({\tx_inst/tx_pipeline_inst/tkeep_to_trem_128.axi_DW_2 ,trn_trem}),
        .trn_tsof(trn_tsof),
        .trn_tsrc_rdy(trn_tsrc_rdy),
        .user_reset_int_reg(user_reset_int_reg));
  pcie_7x_0_pcie_7x_0_pcie_pipe_pipeline pcie_pipe_pipeline_i
       (.D(D),
        .Q(pipe_rx1_char_is_k),
        .USER_TXCOMPLIANCE(USER_TXCOMPLIANCE),
        .USER_TXELECIDLE(USER_TXELECIDLE),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_rx0_chanisaligned(pipe_rx0_chanisaligned_13),
        .pipe_rx0_elec_idle(pipe_rx0_elec_idle_15),
        .pipe_rx0_phy_status(pipe_rx0_phy_status_14),
        .pipe_rx0_polarity(pipe_rx0_polarity),
        .pipe_rx0_valid(pipe_rx0_valid_12),
        .pipe_rx1_chanisaligned(pipe_rx1_chanisaligned_1),
        .pipe_rx1_elec_idle(pipe_rx1_elec_idle_3),
        .pipe_rx1_phy_status(pipe_rx1_phy_status_2),
        .pipe_rx1_polarity(pipe_rx1_polarity),
        .pipe_rx1_valid(pipe_rx1_valid_0),
        .pipe_rx2_chanisaligned(pipe_rx2_chanisaligned_5),
        .pipe_rx2_elec_idle(pipe_rx2_elec_idle_7),
        .pipe_rx2_phy_status(pipe_rx2_phy_status_6),
        .pipe_rx2_polarity(pipe_rx2_polarity),
        .pipe_rx2_valid(pipe_rx2_valid_4),
        .pipe_rx3_chanisaligned(pipe_rx3_chanisaligned_9),
        .pipe_rx3_elec_idle(pipe_rx3_elec_idle_11),
        .pipe_rx3_phy_status(pipe_rx3_phy_status_10),
        .pipe_rx3_polarity(pipe_rx3_polarity),
        .pipe_rx3_valid(pipe_rx3_valid_8),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg (pipe_rx1_chanisaligned),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 (pipe_rx2_chanisaligned),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 (pipe_rx3_chanisaligned),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 (pipe_rx0_chanisaligned),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1] (pipe_rx2_char_is_k),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 (pipe_rx3_char_is_k),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 (pipe_rx0_char_is_k),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 (\pipe_stages_1.pipe_rx_char_is_k_q_reg[1] ),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_3 (\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_0 ),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_4 (\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_1 ),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_5 (\pipe_stages_1.pipe_rx_char_is_k_q_reg[1]_2 ),
        .\pipe_stages_1.pipe_rx_data_q_reg[15] (pipe_rx1_data),
        .\pipe_stages_1.pipe_rx_data_q_reg[15]_0 (pipe_rx2_data),
        .\pipe_stages_1.pipe_rx_data_q_reg[15]_1 (pipe_rx3_data),
        .\pipe_stages_1.pipe_rx_data_q_reg[15]_2 (pipe_rx0_data),
        .\pipe_stages_1.pipe_rx_data_q_reg[15]_3 (\pipe_stages_1.pipe_rx_data_q_reg[15] ),
        .\pipe_stages_1.pipe_rx_data_q_reg[15]_4 (\pipe_stages_1.pipe_rx_data_q_reg[15]_0 ),
        .\pipe_stages_1.pipe_rx_data_q_reg[15]_5 (\pipe_stages_1.pipe_rx_data_q_reg[15]_1 ),
        .\pipe_stages_1.pipe_rx_data_q_reg[15]_6 (\pipe_stages_1.pipe_rx_data_q_reg[15]_2 ),
        .\pipe_stages_1.pipe_rx_elec_idle_q_reg (pipe_rx1_elec_idle),
        .\pipe_stages_1.pipe_rx_elec_idle_q_reg_0 (pipe_rx2_elec_idle),
        .\pipe_stages_1.pipe_rx_elec_idle_q_reg_1 (pipe_rx3_elec_idle),
        .\pipe_stages_1.pipe_rx_elec_idle_q_reg_2 (pipe_rx0_elec_idle),
        .\pipe_stages_1.pipe_rx_phy_status_q_reg (pipe_rx1_phy_status),
        .\pipe_stages_1.pipe_rx_phy_status_q_reg_0 (pipe_rx2_phy_status),
        .\pipe_stages_1.pipe_rx_phy_status_q_reg_1 (pipe_rx3_phy_status),
        .\pipe_stages_1.pipe_rx_phy_status_q_reg_2 (pipe_rx0_phy_status),
        .\pipe_stages_1.pipe_rx_polarity_q_reg (pipe_rx1_polarity_18),
        .\pipe_stages_1.pipe_rx_polarity_q_reg_0 (pipe_rx2_polarity_17),
        .\pipe_stages_1.pipe_rx_polarity_q_reg_1 (pipe_rx3_polarity_16),
        .\pipe_stages_1.pipe_rx_polarity_q_reg_2 (pipe_rx0_polarity_19),
        .\pipe_stages_1.pipe_rx_status_q_reg[2] (pipe_rx1_status),
        .\pipe_stages_1.pipe_rx_status_q_reg[2]_0 (pipe_rx2_status),
        .\pipe_stages_1.pipe_rx_status_q_reg[2]_1 (pipe_rx3_status),
        .\pipe_stages_1.pipe_rx_status_q_reg[2]_2 (pipe_rx0_status),
        .\pipe_stages_1.pipe_rx_status_q_reg[2]_3 (\pipe_stages_1.pipe_rx_status_q_reg[2] ),
        .\pipe_stages_1.pipe_rx_status_q_reg[2]_4 (\pipe_stages_1.pipe_rx_status_q_reg[2]_0 ),
        .\pipe_stages_1.pipe_rx_status_q_reg[2]_5 (\pipe_stages_1.pipe_rx_status_q_reg[2]_1 ),
        .\pipe_stages_1.pipe_rx_status_q_reg[2]_6 (\pipe_stages_1.pipe_rx_status_q_reg[2]_2 ),
        .\pipe_stages_1.pipe_rx_valid_q_reg (pipe_rx1_valid),
        .\pipe_stages_1.pipe_rx_valid_q_reg_0 (pipe_rx2_valid),
        .\pipe_stages_1.pipe_rx_valid_q_reg_1 (pipe_rx3_valid),
        .\pipe_stages_1.pipe_rx_valid_q_reg_2 (pipe_rx0_valid),
        .\pipe_stages_1.pipe_tx_char_is_k_q_reg[1] (\pipe_stages_1.pipe_tx_char_is_k_q_reg[1] ),
        .\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 (\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_0 ),
        .\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 (\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_1 ),
        .\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_2 (\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_2 ),
        .\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_3 (pipe_tx1_char_is_k),
        .\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_4 (pipe_tx2_char_is_k),
        .\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_5 (pipe_tx3_char_is_k),
        .\pipe_stages_1.pipe_tx_char_is_k_q_reg[1]_6 (pipe_tx0_char_is_k),
        .\pipe_stages_1.pipe_tx_compliance_q_reg (\pipe_stages_1.pipe_tx_compliance_q_reg ),
        .\pipe_stages_1.pipe_tx_compliance_q_reg_0 (\pipe_stages_1.pipe_tx_compliance_q_reg_0 ),
        .\pipe_stages_1.pipe_tx_compliance_q_reg_1 (\pipe_stages_1.pipe_tx_compliance_q_reg_1 ),
        .\pipe_stages_1.pipe_tx_data_q_reg[15] (\pipe_stages_1.pipe_tx_data_q_reg[15] ),
        .\pipe_stages_1.pipe_tx_data_q_reg[15]_0 (\pipe_stages_1.pipe_tx_data_q_reg[15]_0 ),
        .\pipe_stages_1.pipe_tx_data_q_reg[15]_1 (\pipe_stages_1.pipe_tx_data_q_reg[15]_1 ),
        .\pipe_stages_1.pipe_tx_data_q_reg[15]_2 (\pipe_stages_1.pipe_tx_data_q_reg[15]_2 ),
        .\pipe_stages_1.pipe_tx_data_q_reg[15]_3 (pipe_tx1_data),
        .\pipe_stages_1.pipe_tx_data_q_reg[15]_4 (pipe_tx2_data),
        .\pipe_stages_1.pipe_tx_data_q_reg[15]_5 (pipe_tx3_data),
        .\pipe_stages_1.pipe_tx_data_q_reg[15]_6 (pipe_tx0_data),
        .\pipe_stages_1.pipe_tx_elec_idle_q_reg (\pipe_stages_1.pipe_tx_elec_idle_q_reg ),
        .\pipe_stages_1.pipe_tx_elec_idle_q_reg_0 (\pipe_stages_1.pipe_tx_elec_idle_q_reg_0 ),
        .\pipe_stages_1.pipe_tx_elec_idle_q_reg_1 (\pipe_stages_1.pipe_tx_elec_idle_q_reg_1 ),
        .\pipe_stages_1.pipe_tx_margin_q_reg[2] (\pipe_stages_1.pipe_tx_margin_q_reg[2] ),
        .\pipe_stages_1.pipe_tx_margin_q_reg[2]_0 (pipe_tx_margin),
        .\pipe_stages_1.pipe_tx_powerdown_q_reg[1] (\pipe_stages_1.pipe_tx_powerdown_q_reg[1] ),
        .\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 (\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_0 ),
        .\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 (\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_1 ),
        .\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_2 (\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_2 ),
        .\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_3 (pipe_tx1_powerdown),
        .\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_4 (pipe_tx2_powerdown),
        .\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_5 (pipe_tx3_powerdown),
        .\pipe_stages_1.pipe_tx_powerdown_q_reg[1]_6 (pipe_tx0_powerdown),
        .\pipe_stages_1.pipe_tx_rcvr_det_q_reg (\pipe_stages_1.pipe_tx_rcvr_det_q_reg ),
        .pipe_tx0_compliance(pipe_tx0_compliance),
        .pipe_tx0_elec_idle(pipe_tx0_elec_idle),
        .pipe_tx1_compliance(pipe_tx1_compliance),
        .pipe_tx1_elec_idle(pipe_tx1_elec_idle),
        .pipe_tx2_compliance(pipe_tx2_compliance),
        .pipe_tx2_elec_idle(pipe_tx2_elec_idle),
        .pipe_tx3_compliance(pipe_tx3_compliance),
        .pipe_tx3_elec_idle(pipe_tx3_elec_idle),
        .pipe_tx_deemph(pipe_tx_deemph),
        .pipe_tx_deemph_gt(pipe_tx_deemph_gt),
        .pipe_tx_rate(pipe_tx_rate),
        .pipe_tx_rcvr_det(pipe_tx_rcvr_det),
        .pipe_tx_rcvr_det_gt(pipe_tx_rcvr_det_gt));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pipe_drp" *) 
module pcie_7x_0_pcie_7x_0_pipe_drp
   (Q,
    DRPADDR,
    DRPDI,
    drp_mux_en_0,
    drp_mux_we_0,
    gt_ch_drp_rdy,
    DRP_DONE,
    ext_ch_gt_drpaddr,
    ext_ch_gt_drpdi,
    ext_ch_gt_drpen,
    ext_ch_gt_drpwe,
    RST_DCLK_RESET,
    RATE_DRP_X16X20_MODE,
    pipe_dclk_in,
    RATE_DRP_START,
    ext_ch_gt_drprdy,
    \rate_reg1_reg[0]_0 ,
    ext_ch_gt_drpdo,
    DRP_GTXRESET);
  output [2:0]Q;
  output [8:0]DRPADDR;
  output [15:0]DRPDI;
  output drp_mux_en_0;
  output drp_mux_we_0;
  output [0:0]gt_ch_drp_rdy;
  output DRP_DONE;
  input [8:0]ext_ch_gt_drpaddr;
  input [15:0]ext_ch_gt_drpdi;
  input [0:0]ext_ch_gt_drpen;
  input [0:0]ext_ch_gt_drpwe;
  input RST_DCLK_RESET;
  input RATE_DRP_X16X20_MODE;
  input pipe_dclk_in;
  input RATE_DRP_START;
  input [0:0]ext_ch_gt_drprdy;
  input [0:0]\rate_reg1_reg[0]_0 ;
  input [15:0]ext_ch_gt_drpdo;
  input DRP_GTXRESET;

  wire [8:0]DRPADDR;
  wire [15:0]DRPDI;
  wire DRP_DONE;
  wire DRP_GTXRESET;
  wire [2:0]Q;
  wire RATE_DRP_START;
  wire RATE_DRP_X16X20_MODE;
  wire RST_DCLK_RESET;
  wire [7:0]addr_reg;
  wire \addr_reg[4]_i_1_n_0 ;
  wire \addr_reg[6]_i_1_n_0 ;
  wire [15:15]data_pma_rsv_a;
  wire [15:0]di_reg;
  wire \di_reg[0]_i_2_n_0 ;
  wire \di_reg[0]_i_3_n_0 ;
  wire \di_reg[11]_i_2_n_0 ;
  wire \di_reg[11]_i_3_n_0 ;
  wire \di_reg[11]_i_4_n_0 ;
  wire \di_reg[11]_i_5_n_0 ;
  wire \di_reg[12]_i_2_n_0 ;
  wire \di_reg[12]_i_3_n_0 ;
  wire \di_reg[13]_i_2_n_0 ;
  wire \di_reg[13]_i_3_n_0 ;
  wire \di_reg[14]_i_2_n_0 ;
  wire \di_reg[15]_i_2_n_0 ;
  wire \di_reg[1]_i_2_n_0 ;
  wire \di_reg[1]_i_3_n_0 ;
  wire \di_reg[2]_i_2_n_0 ;
  wire \di_reg[2]_i_3_n_0 ;
  wire \di_reg[3]_i_2_n_0 ;
  wire \di_reg[3]_i_3_n_0 ;
  wire \di_reg[4]_i_2_n_0 ;
  wire \di_reg[4]_i_3_n_0 ;
  wire \di_reg[4]_i_4_n_0 ;
  wire \di_reg[5]_i_2_n_0 ;
  wire \di_reg[5]_i_3_n_0 ;
  wire \di_reg[6]_i_2_n_0 ;
  wire \di_reg[6]_i_3_n_0 ;
  wire \di_reg[7]_i_2_n_0 ;
  wire \di_reg[7]_i_3_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [15:0]do_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [15:0]do_reg2;
  wire done_i_1__0_n_0;
  wire [7:0]drp_addr_0;
  wire [15:0]drp_di_0;
  wire drp_mux_en_0;
  wire drp_mux_we_0;
  wire [8:0]ext_ch_gt_drpaddr;
  wire [15:0]ext_ch_gt_drpdi;
  wire [15:0]ext_ch_gt_drpdo;
  wire [0:0]ext_ch_gt_drpen;
  wire [0:0]ext_ch_gt_drprdy;
  wire [0:0]ext_ch_gt_drpwe;
  wire [2:0]fsm;
  wire fsm1;
  wire \fsm[0]_i_3_n_0 ;
  wire [0:0]gt_ch_drp_rdy;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gtxreset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gtxreset_reg2;
  wire [4:0]index;
  wire \index[0]_i_1_n_0 ;
  wire \index[1]_i_1_n_0 ;
  wire \index[2]_i_1_n_0 ;
  wire \index[3]_i_1_n_0 ;
  wire \index[3]_i_2_n_0 ;
  wire \index[4]_i_1_n_0 ;
  wire \index[4]_i_2_n_0 ;
  wire \index[4]_i_3_n_0 ;
  wire [0:0]load_cnt;
  wire \load_cnt[0]_i_1_n_0 ;
  wire pipe_dclk_in;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_reg1;
  wire [0:0]\rate_reg1_reg[0]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rdy_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rdy_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16x20_mode_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16x20_mode_reg2;

  LUT6 #(
    .INIT(64'h1736415517364154)) 
    \addr_reg[0]_i_1 
       (.I0(index[4]),
        .I1(index[3]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(index[0]),
        .I5(x16x20_mode_reg2),
        .O(addr_reg[0]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT5 #(
    .INIT(32'h40500F00)) 
    \addr_reg[1]_i_1 
       (.I0(index[4]),
        .I1(index[0]),
        .I2(index[3]),
        .I3(index[1]),
        .I4(index[2]),
        .O(addr_reg[1]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT5 #(
    .INIT(32'h05105A00)) 
    \addr_reg[2]_i_1 
       (.I0(index[4]),
        .I1(index[0]),
        .I2(index[3]),
        .I3(index[2]),
        .I4(index[1]),
        .O(addr_reg[2]));
  LUT6 #(
    .INIT(64'h5767576753265327)) 
    \addr_reg[3]_i_1 
       (.I0(index[4]),
        .I1(index[3]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(x16x20_mode_reg2),
        .I5(index[0]),
        .O(addr_reg[3]));
  LUT6 #(
    .INIT(64'h00000000FAAFFF04)) 
    \addr_reg[4]_i_1 
       (.I0(index[0]),
        .I1(x16x20_mode_reg2),
        .I2(index[1]),
        .I3(index[2]),
        .I4(index[3]),
        .I5(index[4]),
        .O(\addr_reg[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT5 #(
    .INIT(32'h001A0F0A)) 
    \addr_reg[5]_i_1 
       (.I0(index[4]),
        .I1(index[0]),
        .I2(index[3]),
        .I3(index[1]),
        .I4(index[2]),
        .O(addr_reg[5]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT5 #(
    .INIT(32'h00001454)) 
    \addr_reg[6]_i_1 
       (.I0(index[2]),
        .I1(index[1]),
        .I2(index[3]),
        .I3(index[0]),
        .I4(index[4]),
        .O(\addr_reg[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h5252424223236263)) 
    \addr_reg[7]_i_1 
       (.I0(index[4]),
        .I1(index[3]),
        .I2(index[2]),
        .I3(x16x20_mode_reg2),
        .I4(index[0]),
        .I5(index[1]),
        .O(addr_reg[7]));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[0]),
        .Q(drp_addr_0[0]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[1]),
        .Q(drp_addr_0[1]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[2]),
        .Q(drp_addr_0[2]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[3]),
        .Q(drp_addr_0[3]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\addr_reg[4]_i_1_n_0 ),
        .Q(drp_addr_0[4]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[5]),
        .Q(drp_addr_0[5]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\addr_reg[6]_i_1_n_0 ),
        .Q(drp_addr_0[6]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[7]),
        .Q(drp_addr_0[7]),
        .R(RST_DCLK_RESET));
  LUT6 #(
    .INIT(64'hFF5E7F6FA1001000)) 
    \di_reg[0]_i_2 
       (.I0(index[3]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(data_pma_rsv_a),
        .I4(index[0]),
        .I5(do_reg2[0]),
        .O(\di_reg[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000005D0)) 
    \di_reg[0]_i_3 
       (.I0(index[0]),
        .I1(do_reg2[0]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(index[3]),
        .O(\di_reg[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h45555F5540000000)) 
    \di_reg[10]_i_1 
       (.I0(index[4]),
        .I1(\di_reg[15]_i_2_n_0 ),
        .I2(index[1]),
        .I3(index[2]),
        .I4(index[3]),
        .I5(do_reg2[10]),
        .O(di_reg[10]));
  LUT6 #(
    .INIT(64'h4F40DDDD4F408888)) 
    \di_reg[11]_i_2 
       (.I0(index[3]),
        .I1(do_reg2[11]),
        .I2(index[1]),
        .I3(\di_reg[11]_i_4_n_0 ),
        .I4(index[2]),
        .I5(\di_reg[11]_i_5_n_0 ),
        .O(\di_reg[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000008080838)) 
    \di_reg[11]_i_3 
       (.I0(do_reg2[11]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(data_pma_rsv_a),
        .I4(index[0]),
        .I5(index[3]),
        .O(\di_reg[11]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hB8BB)) 
    \di_reg[11]_i_4 
       (.I0(do_reg2[11]),
        .I1(index[0]),
        .I2(rate_reg2[0]),
        .I3(rate_reg2[1]),
        .O(\di_reg[11]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hEFFF0100)) 
    \di_reg[11]_i_5 
       (.I0(index[1]),
        .I1(index[0]),
        .I2(x16_reg2),
        .I3(x16x20_mode_reg2),
        .I4(do_reg2[11]),
        .O(\di_reg[11]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h777EFFFF01080000)) 
    \di_reg[12]_i_2 
       (.I0(index[3]),
        .I1(index[1]),
        .I2(index[0]),
        .I3(data_pma_rsv_a),
        .I4(index[2]),
        .I5(do_reg2[12]),
        .O(\di_reg[12]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00000B08)) 
    \di_reg[12]_i_3 
       (.I0(do_reg2[12]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(index[0]),
        .I4(index[3]),
        .O(\di_reg[12]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h767FFFFF00090000)) 
    \di_reg[13]_i_2 
       (.I0(index[3]),
        .I1(index[1]),
        .I2(index[0]),
        .I3(data_pma_rsv_a),
        .I4(index[2]),
        .I5(do_reg2[13]),
        .O(\di_reg[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000008380808)) 
    \di_reg[13]_i_3 
       (.I0(do_reg2[13]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(index[0]),
        .I4(data_pma_rsv_a),
        .I5(index[3]),
        .O(\di_reg[13]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0040FFFF00400000)) 
    \di_reg[14]_i_1 
       (.I0(index[1]),
        .I1(index[2]),
        .I2(do_reg2[14]),
        .I3(index[3]),
        .I4(index[4]),
        .I5(\di_reg[14]_i_2_n_0 ),
        .O(di_reg[14]));
  LUT6 #(
    .INIT(64'h653BFFF721080080)) 
    \di_reg[14]_i_2 
       (.I0(index[3]),
        .I1(index[1]),
        .I2(data_pma_rsv_a),
        .I3(index[0]),
        .I4(index[2]),
        .I5(do_reg2[14]),
        .O(\di_reg[14]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \di_reg[14]_i_3__2 
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .O(data_pma_rsv_a));
  LUT6 #(
    .INIT(64'h45555F5540000000)) 
    \di_reg[15]_i_1 
       (.I0(index[4]),
        .I1(\di_reg[15]_i_2_n_0 ),
        .I2(index[1]),
        .I3(index[2]),
        .I4(index[3]),
        .I5(do_reg2[15]),
        .O(di_reg[15]));
  LUT3 #(
    .INIT(8'h0D)) 
    \di_reg[15]_i_2 
       (.I0(rate_reg2[1]),
        .I1(rate_reg2[0]),
        .I2(index[0]),
        .O(\di_reg[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5FEE4E0076FF1000)) 
    \di_reg[1]_i_2 
       (.I0(index[3]),
        .I1(index[2]),
        .I2(data_pma_rsv_a),
        .I3(index[1]),
        .I4(do_reg2[1]),
        .I5(index[0]),
        .O(\di_reg[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000005D0)) 
    \di_reg[1]_i_3 
       (.I0(index[0]),
        .I1(do_reg2[1]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(index[3]),
        .O(\di_reg[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h5DEE080067FF0100)) 
    \di_reg[2]_i_2 
       (.I0(index[3]),
        .I1(index[2]),
        .I2(data_pma_rsv_a),
        .I3(index[1]),
        .I4(do_reg2[2]),
        .I5(index[0]),
        .O(\di_reg[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00000380)) 
    \di_reg[2]_i_3 
       (.I0(do_reg2[2]),
        .I1(index[0]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(index[3]),
        .O(\di_reg[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h43FFFFFF40000000)) 
    \di_reg[3]_i_2 
       (.I0(data_pma_rsv_a),
        .I1(index[2]),
        .I2(index[0]),
        .I3(index[1]),
        .I4(index[3]),
        .I5(do_reg2[3]),
        .O(\di_reg[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000000000033D100)) 
    \di_reg[3]_i_3 
       (.I0(data_pma_rsv_a),
        .I1(index[0]),
        .I2(do_reg2[3]),
        .I3(index[2]),
        .I4(index[1]),
        .I5(index[3]),
        .O(\di_reg[3]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di_reg[4]_i_1 
       (.I0(\di_reg[4]_i_2_n_0 ),
        .I1(index[4]),
        .I2(\di_reg[4]_i_3_n_0 ),
        .I3(index[3]),
        .I4(\di_reg[4]_i_4_n_0 ),
        .O(di_reg[4]));
  LUT6 #(
    .INIT(64'h0F0400F0000400F0)) 
    \di_reg[4]_i_2 
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .I2(index[1]),
        .I3(index[2]),
        .I4(index[0]),
        .I5(do_reg2[4]),
        .O(\di_reg[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h400FFFFF40000000)) 
    \di_reg[4]_i_3 
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .I2(index[2]),
        .I3(index[0]),
        .I4(index[1]),
        .I5(do_reg2[4]),
        .O(\di_reg[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBF00BF01FF40FE40)) 
    \di_reg[4]_i_4 
       (.I0(index[2]),
        .I1(index[1]),
        .I2(index[0]),
        .I3(do_reg2[4]),
        .I4(x16x20_mode_reg2),
        .I5(data_pma_rsv_a),
        .O(\di_reg[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h7F7F7F7E00000000)) 
    \di_reg[5]_i_2 
       (.I0(index[3]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(index[0]),
        .I4(x16x20_mode_reg2),
        .I5(do_reg2[5]),
        .O(\di_reg[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000038F0380)) 
    \di_reg[5]_i_3 
       (.I0(do_reg2[5]),
        .I1(index[0]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(data_pma_rsv_a),
        .I5(index[3]),
        .O(\di_reg[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h7D7F7D7E00000000)) 
    \di_reg[6]_i_2 
       (.I0(index[3]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(index[0]),
        .I4(x16x20_mode_reg2),
        .I5(do_reg2[6]),
        .O(\di_reg[6]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00000380)) 
    \di_reg[6]_i_3 
       (.I0(do_reg2[6]),
        .I1(index[0]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(index[3]),
        .O(\di_reg[6]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF0900)) 
    \di_reg[7]_i_2 
       (.I0(index[2]),
        .I1(index[1]),
        .I2(index[0]),
        .I3(index[3]),
        .I4(do_reg2[7]),
        .O(\di_reg[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000003800383)) 
    \di_reg[7]_i_3 
       (.I0(do_reg2[7]),
        .I1(index[0]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(data_pma_rsv_a),
        .I5(index[3]),
        .O(\di_reg[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h03333F7300000040)) 
    \di_reg[8]_i_1 
       (.I0(index[0]),
        .I1(index[4]),
        .I2(index[1]),
        .I3(index[2]),
        .I4(index[3]),
        .I5(do_reg2[8]),
        .O(di_reg[8]));
  LUT6 #(
    .INIT(64'h03333F7300000040)) 
    \di_reg[9]_i_1 
       (.I0(index[0]),
        .I1(index[4]),
        .I2(index[1]),
        .I3(index[2]),
        .I4(index[3]),
        .I5(do_reg2[9]),
        .O(di_reg[9]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[0]),
        .Q(drp_di_0[0]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[0]_i_1 
       (.I0(\di_reg[0]_i_2_n_0 ),
        .I1(\di_reg[0]_i_3_n_0 ),
        .O(di_reg[0]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[10]),
        .Q(drp_di_0[10]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[11]),
        .Q(drp_di_0[11]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[11]_i_1 
       (.I0(\di_reg[11]_i_2_n_0 ),
        .I1(\di_reg[11]_i_3_n_0 ),
        .O(di_reg[11]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[12]),
        .Q(drp_di_0[12]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[12]_i_1 
       (.I0(\di_reg[12]_i_2_n_0 ),
        .I1(\di_reg[12]_i_3_n_0 ),
        .O(di_reg[12]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[13]),
        .Q(drp_di_0[13]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[13]_i_1 
       (.I0(\di_reg[13]_i_2_n_0 ),
        .I1(\di_reg[13]_i_3_n_0 ),
        .O(di_reg[13]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[14]),
        .Q(drp_di_0[14]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[15]),
        .Q(drp_di_0[15]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[1]),
        .Q(drp_di_0[1]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[1]_i_1 
       (.I0(\di_reg[1]_i_2_n_0 ),
        .I1(\di_reg[1]_i_3_n_0 ),
        .O(di_reg[1]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[2]),
        .Q(drp_di_0[2]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[2]_i_1 
       (.I0(\di_reg[2]_i_2_n_0 ),
        .I1(\di_reg[2]_i_3_n_0 ),
        .O(di_reg[2]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[3]),
        .Q(drp_di_0[3]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[3]_i_1 
       (.I0(\di_reg[3]_i_2_n_0 ),
        .I1(\di_reg[3]_i_3_n_0 ),
        .O(di_reg[3]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[4]),
        .Q(drp_di_0[4]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[5]),
        .Q(drp_di_0[5]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[5]_i_1 
       (.I0(\di_reg[5]_i_2_n_0 ),
        .I1(\di_reg[5]_i_3_n_0 ),
        .O(di_reg[5]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[6]),
        .Q(drp_di_0[6]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[6]_i_1 
       (.I0(\di_reg[6]_i_2_n_0 ),
        .I1(\di_reg[6]_i_3_n_0 ),
        .O(di_reg[6]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[7]),
        .Q(drp_di_0[7]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[7]_i_1 
       (.I0(\di_reg[7]_i_2_n_0 ),
        .I1(\di_reg[7]_i_3_n_0 ),
        .O(di_reg[7]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[8]),
        .Q(drp_di_0[8]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[9]),
        .Q(drp_di_0[9]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[0]),
        .Q(do_reg1[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[10]),
        .Q(do_reg1[10]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[11]),
        .Q(do_reg1[11]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[12]),
        .Q(do_reg1[12]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[13]),
        .Q(do_reg1[13]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[14]),
        .Q(do_reg1[14]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[15]),
        .Q(do_reg1[15]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[1]),
        .Q(do_reg1[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[2]),
        .Q(do_reg1[2]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[3]),
        .Q(do_reg1[3]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[4]),
        .Q(do_reg1[4]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[5]),
        .Q(do_reg1[5]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[6]),
        .Q(do_reg1[6]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[7]),
        .Q(do_reg1[7]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[8]),
        .Q(do_reg1[8]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[9]),
        .Q(do_reg1[9]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[0]),
        .Q(do_reg2[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[10]),
        .Q(do_reg2[10]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[11]),
        .Q(do_reg2[11]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[12]),
        .Q(do_reg2[12]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[13]),
        .Q(do_reg2[13]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[14]),
        .Q(do_reg2[14]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[15]),
        .Q(do_reg2[15]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[1]),
        .Q(do_reg2[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[2]),
        .Q(do_reg2[2]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[3]),
        .Q(do_reg2[3]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[4]),
        .Q(do_reg2[4]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[5]),
        .Q(do_reg2[5]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[6]),
        .Q(do_reg2[6]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[7]),
        .Q(do_reg2[7]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[8]),
        .Q(do_reg2[8]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[9]),
        .Q(do_reg2[9]),
        .R(RST_DCLK_RESET));
  LUT4 #(
    .INIT(16'h0001)) 
    done_i_1__0
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(start_reg2),
        .I3(Q[1]),
        .O(done_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    done_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(done_i_1__0_n_0),
        .Q(DRP_DONE),
        .R(RST_DCLK_RESET));
  LUT6 #(
    .INIT(64'h0377FFFF03770000)) 
    \fsm[0]_i_1 
       (.I0(fsm1),
        .I1(Q[1]),
        .I2(rdy_reg2),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(\fsm[0]_i_3_n_0 ),
        .O(fsm[0]));
  LUT6 #(
    .INIT(64'h1000000110000000)) 
    \fsm[0]_i_2 
       (.I0(index[3]),
        .I1(index[1]),
        .I2(index[0]),
        .I3(index[4]),
        .I4(index[2]),
        .I5(x16x20_mode_reg2),
        .O(fsm1));
  LUT5 #(
    .INIT(32'h47FF47CC)) 
    \fsm[0]_i_3 
       (.I0(rdy_reg2),
        .I1(Q[1]),
        .I2(load_cnt),
        .I3(Q[0]),
        .I4(start_reg2),
        .O(\fsm[0]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h1D501850)) 
    \fsm[1]_i_1 
       (.I0(Q[2]),
        .I1(rdy_reg2),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(load_cnt),
        .O(fsm[1]));
  LUT4 #(
    .INIT(16'h6222)) 
    \fsm[2]_i_1 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(rdy_reg2),
        .I3(Q[0]),
        .O(fsm[2]));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(fsm[0]),
        .Q(Q[0]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(fsm[1]),
        .Q(Q[1]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(fsm[2]),
        .Q(Q[2]),
        .R(RST_DCLK_RESET));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \gt_ch_drp_rdy[0]_INST_0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(gt_ch_drp_rdy));
  LUT5 #(
    .INIT(32'hCCCCCCCA)) 
    \gtx_channel.gtxe2_channel_i_i_10 
       (.I0(ext_ch_gt_drpdi[11]),
        .I1(drp_di_0[11]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(DRPDI[11]));
  LUT5 #(
    .INIT(32'hCCCCCCCA)) 
    \gtx_channel.gtxe2_channel_i_i_11 
       (.I0(ext_ch_gt_drpdi[10]),
        .I1(drp_di_0[10]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(DRPDI[10]));
  LUT5 #(
    .INIT(32'hCCCCCCCA)) 
    \gtx_channel.gtxe2_channel_i_i_12 
       (.I0(ext_ch_gt_drpdi[9]),
        .I1(drp_di_0[9]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(DRPDI[9]));
  LUT5 #(
    .INIT(32'hCCCCCCCA)) 
    \gtx_channel.gtxe2_channel_i_i_13 
       (.I0(ext_ch_gt_drpdi[8]),
        .I1(drp_di_0[8]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(DRPDI[8]));
  LUT5 #(
    .INIT(32'hCCCCCCCA)) 
    \gtx_channel.gtxe2_channel_i_i_14 
       (.I0(ext_ch_gt_drpdi[7]),
        .I1(drp_di_0[7]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(DRPDI[7]));
  LUT5 #(
    .INIT(32'hCCCCCCCA)) 
    \gtx_channel.gtxe2_channel_i_i_15 
       (.I0(ext_ch_gt_drpdi[6]),
        .I1(drp_di_0[6]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(DRPDI[6]));
  LUT5 #(
    .INIT(32'hCCCCCCCA)) 
    \gtx_channel.gtxe2_channel_i_i_16 
       (.I0(ext_ch_gt_drpdi[5]),
        .I1(drp_di_0[5]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(DRPDI[5]));
  LUT5 #(
    .INIT(32'hCCCCCCCA)) 
    \gtx_channel.gtxe2_channel_i_i_17 
       (.I0(ext_ch_gt_drpdi[4]),
        .I1(drp_di_0[4]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(DRPDI[4]));
  LUT5 #(
    .INIT(32'hCCCCCCCA)) 
    \gtx_channel.gtxe2_channel_i_i_18 
       (.I0(ext_ch_gt_drpdi[3]),
        .I1(drp_di_0[3]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(DRPDI[3]));
  LUT5 #(
    .INIT(32'hCCCCCCCA)) 
    \gtx_channel.gtxe2_channel_i_i_19 
       (.I0(ext_ch_gt_drpdi[2]),
        .I1(drp_di_0[2]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(DRPDI[2]));
  LUT5 #(
    .INIT(32'hCCCCCCCA)) 
    \gtx_channel.gtxe2_channel_i_i_20 
       (.I0(ext_ch_gt_drpdi[1]),
        .I1(drp_di_0[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(DRPDI[1]));
  LUT5 #(
    .INIT(32'hCCCCCCCA)) 
    \gtx_channel.gtxe2_channel_i_i_21 
       (.I0(ext_ch_gt_drpdi[0]),
        .I1(drp_di_0[0]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(DRPDI[0]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT4 #(
    .INIT(16'h030E)) 
    \gtx_channel.gtxe2_channel_i_i_3 
       (.I0(ext_ch_gt_drpen),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(drp_mux_en_0));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    \gtx_channel.gtxe2_channel_i_i_39__2 
       (.I0(ext_ch_gt_drpaddr[8]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .O(DRPADDR[8]));
  LUT4 #(
    .INIT(16'h000E)) 
    \gtx_channel.gtxe2_channel_i_i_4 
       (.I0(ext_ch_gt_drpwe),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(drp_mux_we_0));
  LUT5 #(
    .INIT(32'hCCCCCCCA)) 
    \gtx_channel.gtxe2_channel_i_i_40 
       (.I0(ext_ch_gt_drpaddr[7]),
        .I1(drp_addr_0[7]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(DRPADDR[7]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT5 #(
    .INIT(32'hCCCCCCCA)) 
    \gtx_channel.gtxe2_channel_i_i_41 
       (.I0(ext_ch_gt_drpaddr[6]),
        .I1(drp_addr_0[6]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(DRPADDR[6]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT5 #(
    .INIT(32'hCCCCCCCA)) 
    \gtx_channel.gtxe2_channel_i_i_42 
       (.I0(ext_ch_gt_drpaddr[5]),
        .I1(drp_addr_0[5]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(DRPADDR[5]));
  LUT5 #(
    .INIT(32'hCCCCCCCA)) 
    \gtx_channel.gtxe2_channel_i_i_43 
       (.I0(ext_ch_gt_drpaddr[4]),
        .I1(drp_addr_0[4]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(DRPADDR[4]));
  LUT5 #(
    .INIT(32'hCCCCCCCA)) 
    \gtx_channel.gtxe2_channel_i_i_44 
       (.I0(ext_ch_gt_drpaddr[3]),
        .I1(drp_addr_0[3]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(DRPADDR[3]));
  LUT5 #(
    .INIT(32'hCCCCCCCA)) 
    \gtx_channel.gtxe2_channel_i_i_45 
       (.I0(ext_ch_gt_drpaddr[2]),
        .I1(drp_addr_0[2]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(DRPADDR[2]));
  LUT5 #(
    .INIT(32'hCCCCCCCA)) 
    \gtx_channel.gtxe2_channel_i_i_46 
       (.I0(ext_ch_gt_drpaddr[1]),
        .I1(drp_addr_0[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(DRPADDR[1]));
  LUT5 #(
    .INIT(32'hCCCCCCCA)) 
    \gtx_channel.gtxe2_channel_i_i_47 
       (.I0(ext_ch_gt_drpaddr[0]),
        .I1(drp_addr_0[0]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(DRPADDR[0]));
  LUT5 #(
    .INIT(32'hCCCCCCCA)) 
    \gtx_channel.gtxe2_channel_i_i_6__0 
       (.I0(ext_ch_gt_drpdi[15]),
        .I1(drp_di_0[15]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(DRPDI[15]));
  LUT5 #(
    .INIT(32'hCCCCCCCA)) 
    \gtx_channel.gtxe2_channel_i_i_7 
       (.I0(ext_ch_gt_drpdi[14]),
        .I1(drp_di_0[14]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(DRPDI[14]));
  LUT5 #(
    .INIT(32'hCCCCCCCA)) 
    \gtx_channel.gtxe2_channel_i_i_8 
       (.I0(ext_ch_gt_drpdi[13]),
        .I1(drp_di_0[13]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(DRPDI[13]));
  LUT5 #(
    .INIT(32'hCCCCCCCA)) 
    \gtx_channel.gtxe2_channel_i_i_9 
       (.I0(ext_ch_gt_drpdi[12]),
        .I1(drp_di_0[12]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(DRPDI[12]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gtxreset_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_GTXRESET),
        .Q(gtxreset_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gtxreset_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(gtxreset_reg1),
        .Q(gtxreset_reg2),
        .R(RST_DCLK_RESET));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT4 #(
    .INIT(16'h0100)) 
    \index[0]_i_1 
       (.I0(Q[0]),
        .I1(fsm1),
        .I2(index[0]),
        .I3(Q[2]),
        .O(\index[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT5 #(
    .INIT(32'h00140000)) 
    \index[1]_i_1 
       (.I0(Q[0]),
        .I1(index[1]),
        .I2(index[0]),
        .I3(fsm1),
        .I4(Q[2]),
        .O(\index[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000144400000000)) 
    \index[2]_i_1 
       (.I0(Q[0]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(index[0]),
        .I4(fsm1),
        .I5(Q[2]),
        .O(\index[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000144400000000)) 
    \index[3]_i_1 
       (.I0(Q[0]),
        .I1(index[3]),
        .I2(index[2]),
        .I3(\index[3]_i_2_n_0 ),
        .I4(fsm1),
        .I5(Q[2]),
        .O(\index[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \index[3]_i_2 
       (.I0(index[1]),
        .I1(index[0]),
        .O(\index[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hA1)) 
    \index[4]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .O(\index[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000144400000000)) 
    \index[4]_i_2 
       (.I0(Q[0]),
        .I1(index[4]),
        .I2(index[3]),
        .I3(\index[4]_i_3_n_0 ),
        .I4(fsm1),
        .I5(Q[2]),
        .O(\index[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \index[4]_i_3 
       (.I0(index[2]),
        .I1(index[0]),
        .I2(index[1]),
        .O(\index[4]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[0] 
       (.C(pipe_dclk_in),
        .CE(\index[4]_i_1_n_0 ),
        .D(\index[0]_i_1_n_0 ),
        .Q(index[0]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[1] 
       (.C(pipe_dclk_in),
        .CE(\index[4]_i_1_n_0 ),
        .D(\index[1]_i_1_n_0 ),
        .Q(index[1]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[2] 
       (.C(pipe_dclk_in),
        .CE(\index[4]_i_1_n_0 ),
        .D(\index[2]_i_1_n_0 ),
        .Q(index[2]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[3] 
       (.C(pipe_dclk_in),
        .CE(\index[4]_i_1_n_0 ),
        .D(\index[3]_i_1_n_0 ),
        .Q(index[3]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[4] 
       (.C(pipe_dclk_in),
        .CE(\index[4]_i_1_n_0 ),
        .D(\index[4]_i_2_n_0 ),
        .Q(index[4]),
        .R(RST_DCLK_RESET));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \load_cnt[0]_i_1 
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[0]),
        .O(\load_cnt[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \load_cnt_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\load_cnt[0]_i_1_n_0 ),
        .Q(load_cnt),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg1_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\rate_reg1_reg[0]_0 ),
        .Q(rate_reg1[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg1_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rate_reg1[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg2_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(rate_reg1[0]),
        .Q(rate_reg2[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg2_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(rate_reg1[1]),
        .Q(rate_reg2[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rdy_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drprdy),
        .Q(rdy_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rdy_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(rdy_reg1),
        .Q(rdy_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE start_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(RATE_DRP_START),
        .Q(start_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE start_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(start_reg1),
        .Q(start_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(RATE_DRP_X16X20_MODE),
        .Q(x16_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(x16_reg1),
        .Q(x16_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16x20_mode_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(RATE_DRP_X16X20_MODE),
        .Q(x16x20_mode_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16x20_mode_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(x16x20_mode_reg1),
        .Q(x16x20_mode_reg2),
        .R(RST_DCLK_RESET));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pipe_drp" *) 
module pcie_7x_0_pcie_7x_0_pipe_drp_22
   (Q,
    DRP_DONE,
    gt_ch_drp_rdy,
    DRPADDR,
    DRPDI,
    drp_mux_en_1,
    drp_mux_we_1,
    RST_DCLK_RESET,
    RATE_DRP_X16X20_MODE,
    pipe_dclk_in,
    RATE_DRP_START,
    ext_ch_gt_drprdy,
    \rate_reg1_reg[0]_0 ,
    ext_ch_gt_drpdo,
    DRP_GTXRESET,
    ext_ch_gt_drpaddr,
    ext_ch_gt_drpdi,
    ext_ch_gt_drpen,
    ext_ch_gt_drpwe);
  output [2:0]Q;
  output DRP_DONE;
  output [0:0]gt_ch_drp_rdy;
  output [8:0]DRPADDR;
  output [15:0]DRPDI;
  output drp_mux_en_1;
  output drp_mux_we_1;
  input RST_DCLK_RESET;
  input RATE_DRP_X16X20_MODE;
  input pipe_dclk_in;
  input RATE_DRP_START;
  input [0:0]ext_ch_gt_drprdy;
  input [0:0]\rate_reg1_reg[0]_0 ;
  input [15:0]ext_ch_gt_drpdo;
  input DRP_GTXRESET;
  input [8:0]ext_ch_gt_drpaddr;
  input [15:0]ext_ch_gt_drpdi;
  input [0:0]ext_ch_gt_drpen;
  input [0:0]ext_ch_gt_drpwe;

  wire [8:0]DRPADDR;
  wire [15:0]DRPDI;
  wire DRP_DONE;
  wire DRP_GTXRESET;
  wire [2:0]Q;
  wire RATE_DRP_START;
  wire RATE_DRP_X16X20_MODE;
  wire RST_DCLK_RESET;
  wire [7:0]addr_reg;
  wire \addr_reg[4]_i_1__0_n_0 ;
  wire \addr_reg[6]_i_1__0_n_0 ;
  wire [15:15]data_pma_rsv_a;
  wire [15:0]di_reg;
  wire \di_reg[0]_i_2__0_n_0 ;
  wire \di_reg[0]_i_3__0_n_0 ;
  wire \di_reg[11]_i_2__0_n_0 ;
  wire \di_reg[11]_i_3__0_n_0 ;
  wire \di_reg[11]_i_4__0_n_0 ;
  wire \di_reg[11]_i_5__0_n_0 ;
  wire \di_reg[12]_i_2__0_n_0 ;
  wire \di_reg[12]_i_3__0_n_0 ;
  wire \di_reg[13]_i_2__0_n_0 ;
  wire \di_reg[13]_i_3__0_n_0 ;
  wire \di_reg[14]_i_2__0_n_0 ;
  wire \di_reg[15]_i_2__0_n_0 ;
  wire \di_reg[1]_i_2__0_n_0 ;
  wire \di_reg[1]_i_3__0_n_0 ;
  wire \di_reg[2]_i_2__0_n_0 ;
  wire \di_reg[2]_i_3__0_n_0 ;
  wire \di_reg[3]_i_2__0_n_0 ;
  wire \di_reg[3]_i_3__0_n_0 ;
  wire \di_reg[4]_i_2__0_n_0 ;
  wire \di_reg[4]_i_3__0_n_0 ;
  wire \di_reg[4]_i_4__0_n_0 ;
  wire \di_reg[5]_i_2__0_n_0 ;
  wire \di_reg[5]_i_3__0_n_0 ;
  wire \di_reg[6]_i_2__0_n_0 ;
  wire \di_reg[6]_i_3__0_n_0 ;
  wire \di_reg[7]_i_2__0_n_0 ;
  wire \di_reg[7]_i_3__0_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [15:0]do_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [15:0]do_reg2;
  wire done_i_1__1_n_0;
  wire [7:0]drp_addr_9;
  wire [15:0]drp_di_16;
  wire drp_mux_en_1;
  wire drp_mux_we_1;
  wire [8:0]ext_ch_gt_drpaddr;
  wire [15:0]ext_ch_gt_drpdi;
  wire [15:0]ext_ch_gt_drpdo;
  wire [0:0]ext_ch_gt_drpen;
  wire [0:0]ext_ch_gt_drprdy;
  wire [0:0]ext_ch_gt_drpwe;
  wire [2:0]fsm;
  wire fsm1;
  wire \fsm[0]_i_3__0_n_0 ;
  wire [0:0]gt_ch_drp_rdy;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gtxreset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gtxreset_reg2;
  wire [4:0]index;
  wire \index[0]_i_1__0_n_0 ;
  wire \index[1]_i_1__0_n_0 ;
  wire \index[2]_i_1__0_n_0 ;
  wire \index[3]_i_1__0_n_0 ;
  wire \index[3]_i_2__0_n_0 ;
  wire \index[4]_i_1__0_n_0 ;
  wire \index[4]_i_2__0_n_0 ;
  wire \index[4]_i_3__0_n_0 ;
  wire [0:0]load_cnt;
  wire \load_cnt[0]_i_1__1_n_0 ;
  wire pipe_dclk_in;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_reg1;
  wire [0:0]\rate_reg1_reg[0]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rdy_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rdy_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16x20_mode_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16x20_mode_reg2;

  LUT6 #(
    .INIT(64'h1736415517364154)) 
    \addr_reg[0]_i_1__0 
       (.I0(index[4]),
        .I1(index[3]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(index[0]),
        .I5(x16x20_mode_reg2),
        .O(addr_reg[0]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT5 #(
    .INIT(32'h40500F00)) 
    \addr_reg[1]_i_1__0 
       (.I0(index[4]),
        .I1(index[0]),
        .I2(index[3]),
        .I3(index[1]),
        .I4(index[2]),
        .O(addr_reg[1]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT5 #(
    .INIT(32'h05105A00)) 
    \addr_reg[2]_i_1__0 
       (.I0(index[4]),
        .I1(index[0]),
        .I2(index[3]),
        .I3(index[2]),
        .I4(index[1]),
        .O(addr_reg[2]));
  LUT6 #(
    .INIT(64'h5767576753265327)) 
    \addr_reg[3]_i_1__0 
       (.I0(index[4]),
        .I1(index[3]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(x16x20_mode_reg2),
        .I5(index[0]),
        .O(addr_reg[3]));
  LUT6 #(
    .INIT(64'h00000000FAAFFF04)) 
    \addr_reg[4]_i_1__0 
       (.I0(index[0]),
        .I1(x16x20_mode_reg2),
        .I2(index[1]),
        .I3(index[2]),
        .I4(index[3]),
        .I5(index[4]),
        .O(\addr_reg[4]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT5 #(
    .INIT(32'h001A0F0A)) 
    \addr_reg[5]_i_1__0 
       (.I0(index[4]),
        .I1(index[0]),
        .I2(index[3]),
        .I3(index[1]),
        .I4(index[2]),
        .O(addr_reg[5]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT5 #(
    .INIT(32'h00001454)) 
    \addr_reg[6]_i_1__0 
       (.I0(index[2]),
        .I1(index[1]),
        .I2(index[3]),
        .I3(index[0]),
        .I4(index[4]),
        .O(\addr_reg[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h5252424223236263)) 
    \addr_reg[7]_i_1__0 
       (.I0(index[4]),
        .I1(index[3]),
        .I2(index[2]),
        .I3(x16x20_mode_reg2),
        .I4(index[0]),
        .I5(index[1]),
        .O(addr_reg[7]));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[0]),
        .Q(drp_addr_9[0]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[1]),
        .Q(drp_addr_9[1]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[2]),
        .Q(drp_addr_9[2]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[3]),
        .Q(drp_addr_9[3]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\addr_reg[4]_i_1__0_n_0 ),
        .Q(drp_addr_9[4]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[5]),
        .Q(drp_addr_9[5]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\addr_reg[6]_i_1__0_n_0 ),
        .Q(drp_addr_9[6]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[7]),
        .Q(drp_addr_9[7]),
        .R(RST_DCLK_RESET));
  LUT6 #(
    .INIT(64'hFF5E7F6FA1001000)) 
    \di_reg[0]_i_2__0 
       (.I0(index[3]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(data_pma_rsv_a),
        .I4(index[0]),
        .I5(do_reg2[0]),
        .O(\di_reg[0]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'h000005D0)) 
    \di_reg[0]_i_3__0 
       (.I0(index[0]),
        .I1(do_reg2[0]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(index[3]),
        .O(\di_reg[0]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h45555F5540000000)) 
    \di_reg[10]_i_1__0 
       (.I0(index[4]),
        .I1(\di_reg[15]_i_2__0_n_0 ),
        .I2(index[1]),
        .I3(index[2]),
        .I4(index[3]),
        .I5(do_reg2[10]),
        .O(di_reg[10]));
  LUT6 #(
    .INIT(64'h4F40DDDD4F408888)) 
    \di_reg[11]_i_2__0 
       (.I0(index[3]),
        .I1(do_reg2[11]),
        .I2(index[1]),
        .I3(\di_reg[11]_i_4__0_n_0 ),
        .I4(index[2]),
        .I5(\di_reg[11]_i_5__0_n_0 ),
        .O(\di_reg[11]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000008080838)) 
    \di_reg[11]_i_3__0 
       (.I0(do_reg2[11]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(data_pma_rsv_a),
        .I4(index[0]),
        .I5(index[3]),
        .O(\di_reg[11]_i_3__0_n_0 ));
  LUT4 #(
    .INIT(16'hB8BB)) 
    \di_reg[11]_i_4__0 
       (.I0(do_reg2[11]),
        .I1(index[0]),
        .I2(rate_reg2[0]),
        .I3(rate_reg2[1]),
        .O(\di_reg[11]_i_4__0_n_0 ));
  LUT5 #(
    .INIT(32'hEFFF0100)) 
    \di_reg[11]_i_5__0 
       (.I0(index[1]),
        .I1(index[0]),
        .I2(x16_reg2),
        .I3(x16x20_mode_reg2),
        .I4(do_reg2[11]),
        .O(\di_reg[11]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'h777EFFFF01080000)) 
    \di_reg[12]_i_2__0 
       (.I0(index[3]),
        .I1(index[1]),
        .I2(index[0]),
        .I3(data_pma_rsv_a),
        .I4(index[2]),
        .I5(do_reg2[12]),
        .O(\di_reg[12]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'h00000B08)) 
    \di_reg[12]_i_3__0 
       (.I0(do_reg2[12]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(index[0]),
        .I4(index[3]),
        .O(\di_reg[12]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h767FFFFF00090000)) 
    \di_reg[13]_i_2__0 
       (.I0(index[3]),
        .I1(index[1]),
        .I2(index[0]),
        .I3(data_pma_rsv_a),
        .I4(index[2]),
        .I5(do_reg2[13]),
        .O(\di_reg[13]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000008380808)) 
    \di_reg[13]_i_3__0 
       (.I0(do_reg2[13]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(index[0]),
        .I4(data_pma_rsv_a),
        .I5(index[3]),
        .O(\di_reg[13]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h0040FFFF00400000)) 
    \di_reg[14]_i_1__0 
       (.I0(index[1]),
        .I1(index[2]),
        .I2(do_reg2[14]),
        .I3(index[3]),
        .I4(index[4]),
        .I5(\di_reg[14]_i_2__0_n_0 ),
        .O(di_reg[14]));
  LUT6 #(
    .INIT(64'h653BFFF721080080)) 
    \di_reg[14]_i_2__0 
       (.I0(index[3]),
        .I1(index[1]),
        .I2(data_pma_rsv_a),
        .I3(index[0]),
        .I4(index[2]),
        .I5(do_reg2[14]),
        .O(\di_reg[14]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \di_reg[14]_i_3__1 
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .O(data_pma_rsv_a));
  LUT6 #(
    .INIT(64'h45555F5540000000)) 
    \di_reg[15]_i_1__0 
       (.I0(index[4]),
        .I1(\di_reg[15]_i_2__0_n_0 ),
        .I2(index[1]),
        .I3(index[2]),
        .I4(index[3]),
        .I5(do_reg2[15]),
        .O(di_reg[15]));
  LUT3 #(
    .INIT(8'h0D)) 
    \di_reg[15]_i_2__0 
       (.I0(rate_reg2[1]),
        .I1(rate_reg2[0]),
        .I2(index[0]),
        .O(\di_reg[15]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h5FEE4E0076FF1000)) 
    \di_reg[1]_i_2__0 
       (.I0(index[3]),
        .I1(index[2]),
        .I2(data_pma_rsv_a),
        .I3(index[1]),
        .I4(do_reg2[1]),
        .I5(index[0]),
        .O(\di_reg[1]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'h000005D0)) 
    \di_reg[1]_i_3__0 
       (.I0(index[0]),
        .I1(do_reg2[1]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(index[3]),
        .O(\di_reg[1]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h5DEE080067FF0100)) 
    \di_reg[2]_i_2__0 
       (.I0(index[3]),
        .I1(index[2]),
        .I2(data_pma_rsv_a),
        .I3(index[1]),
        .I4(do_reg2[2]),
        .I5(index[0]),
        .O(\di_reg[2]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'h00000380)) 
    \di_reg[2]_i_3__0 
       (.I0(do_reg2[2]),
        .I1(index[0]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(index[3]),
        .O(\di_reg[2]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h43FFFFFF40000000)) 
    \di_reg[3]_i_2__0 
       (.I0(data_pma_rsv_a),
        .I1(index[2]),
        .I2(index[0]),
        .I3(index[1]),
        .I4(index[3]),
        .I5(do_reg2[3]),
        .O(\di_reg[3]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h000000000033D100)) 
    \di_reg[3]_i_3__0 
       (.I0(data_pma_rsv_a),
        .I1(index[0]),
        .I2(do_reg2[3]),
        .I3(index[2]),
        .I4(index[1]),
        .I5(index[3]),
        .O(\di_reg[3]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di_reg[4]_i_1__0 
       (.I0(\di_reg[4]_i_2__0_n_0 ),
        .I1(index[4]),
        .I2(\di_reg[4]_i_3__0_n_0 ),
        .I3(index[3]),
        .I4(\di_reg[4]_i_4__0_n_0 ),
        .O(di_reg[4]));
  LUT6 #(
    .INIT(64'h0F0400F0000400F0)) 
    \di_reg[4]_i_2__0 
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .I2(index[1]),
        .I3(index[2]),
        .I4(index[0]),
        .I5(do_reg2[4]),
        .O(\di_reg[4]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h400FFFFF40000000)) 
    \di_reg[4]_i_3__0 
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .I2(index[2]),
        .I3(index[0]),
        .I4(index[1]),
        .I5(do_reg2[4]),
        .O(\di_reg[4]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hBF00BF01FF40FE40)) 
    \di_reg[4]_i_4__0 
       (.I0(index[2]),
        .I1(index[1]),
        .I2(index[0]),
        .I3(do_reg2[4]),
        .I4(x16x20_mode_reg2),
        .I5(data_pma_rsv_a),
        .O(\di_reg[4]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h7F7F7F7E00000000)) 
    \di_reg[5]_i_2__0 
       (.I0(index[3]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(index[0]),
        .I4(x16x20_mode_reg2),
        .I5(do_reg2[5]),
        .O(\di_reg[5]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000038F0380)) 
    \di_reg[5]_i_3__0 
       (.I0(do_reg2[5]),
        .I1(index[0]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(data_pma_rsv_a),
        .I5(index[3]),
        .O(\di_reg[5]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h7D7F7D7E00000000)) 
    \di_reg[6]_i_2__0 
       (.I0(index[3]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(index[0]),
        .I4(x16x20_mode_reg2),
        .I5(do_reg2[6]),
        .O(\di_reg[6]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'h00000380)) 
    \di_reg[6]_i_3__0 
       (.I0(do_reg2[6]),
        .I1(index[0]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(index[3]),
        .O(\di_reg[6]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF0900)) 
    \di_reg[7]_i_2__0 
       (.I0(index[2]),
        .I1(index[1]),
        .I2(index[0]),
        .I3(index[3]),
        .I4(do_reg2[7]),
        .O(\di_reg[7]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000003800383)) 
    \di_reg[7]_i_3__0 
       (.I0(do_reg2[7]),
        .I1(index[0]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(data_pma_rsv_a),
        .I5(index[3]),
        .O(\di_reg[7]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h03333F7300000040)) 
    \di_reg[8]_i_1__0 
       (.I0(index[0]),
        .I1(index[4]),
        .I2(index[1]),
        .I3(index[2]),
        .I4(index[3]),
        .I5(do_reg2[8]),
        .O(di_reg[8]));
  LUT6 #(
    .INIT(64'h03333F7300000040)) 
    \di_reg[9]_i_1__0 
       (.I0(index[0]),
        .I1(index[4]),
        .I2(index[1]),
        .I3(index[2]),
        .I4(index[3]),
        .I5(do_reg2[9]),
        .O(di_reg[9]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[0]),
        .Q(drp_di_16[0]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[0]_i_1__0 
       (.I0(\di_reg[0]_i_2__0_n_0 ),
        .I1(\di_reg[0]_i_3__0_n_0 ),
        .O(di_reg[0]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[10]),
        .Q(drp_di_16[10]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[11]),
        .Q(drp_di_16[11]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[11]_i_1__0 
       (.I0(\di_reg[11]_i_2__0_n_0 ),
        .I1(\di_reg[11]_i_3__0_n_0 ),
        .O(di_reg[11]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[12]),
        .Q(drp_di_16[12]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[12]_i_1__0 
       (.I0(\di_reg[12]_i_2__0_n_0 ),
        .I1(\di_reg[12]_i_3__0_n_0 ),
        .O(di_reg[12]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[13]),
        .Q(drp_di_16[13]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[13]_i_1__0 
       (.I0(\di_reg[13]_i_2__0_n_0 ),
        .I1(\di_reg[13]_i_3__0_n_0 ),
        .O(di_reg[13]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[14]),
        .Q(drp_di_16[14]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[15]),
        .Q(drp_di_16[15]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[1]),
        .Q(drp_di_16[1]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[1]_i_1__0 
       (.I0(\di_reg[1]_i_2__0_n_0 ),
        .I1(\di_reg[1]_i_3__0_n_0 ),
        .O(di_reg[1]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[2]),
        .Q(drp_di_16[2]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[2]_i_1__0 
       (.I0(\di_reg[2]_i_2__0_n_0 ),
        .I1(\di_reg[2]_i_3__0_n_0 ),
        .O(di_reg[2]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[3]),
        .Q(drp_di_16[3]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[3]_i_1__0 
       (.I0(\di_reg[3]_i_2__0_n_0 ),
        .I1(\di_reg[3]_i_3__0_n_0 ),
        .O(di_reg[3]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[4]),
        .Q(drp_di_16[4]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[5]),
        .Q(drp_di_16[5]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[5]_i_1__0 
       (.I0(\di_reg[5]_i_2__0_n_0 ),
        .I1(\di_reg[5]_i_3__0_n_0 ),
        .O(di_reg[5]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[6]),
        .Q(drp_di_16[6]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[6]_i_1__0 
       (.I0(\di_reg[6]_i_2__0_n_0 ),
        .I1(\di_reg[6]_i_3__0_n_0 ),
        .O(di_reg[6]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[7]),
        .Q(drp_di_16[7]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[7]_i_1__0 
       (.I0(\di_reg[7]_i_2__0_n_0 ),
        .I1(\di_reg[7]_i_3__0_n_0 ),
        .O(di_reg[7]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[8]),
        .Q(drp_di_16[8]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[9]),
        .Q(drp_di_16[9]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[0]),
        .Q(do_reg1[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[10]),
        .Q(do_reg1[10]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[11]),
        .Q(do_reg1[11]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[12]),
        .Q(do_reg1[12]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[13]),
        .Q(do_reg1[13]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[14]),
        .Q(do_reg1[14]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[15]),
        .Q(do_reg1[15]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[1]),
        .Q(do_reg1[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[2]),
        .Q(do_reg1[2]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[3]),
        .Q(do_reg1[3]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[4]),
        .Q(do_reg1[4]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[5]),
        .Q(do_reg1[5]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[6]),
        .Q(do_reg1[6]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[7]),
        .Q(do_reg1[7]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[8]),
        .Q(do_reg1[8]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[9]),
        .Q(do_reg1[9]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[0]),
        .Q(do_reg2[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[10]),
        .Q(do_reg2[10]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[11]),
        .Q(do_reg2[11]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[12]),
        .Q(do_reg2[12]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[13]),
        .Q(do_reg2[13]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[14]),
        .Q(do_reg2[14]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[15]),
        .Q(do_reg2[15]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[1]),
        .Q(do_reg2[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[2]),
        .Q(do_reg2[2]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[3]),
        .Q(do_reg2[3]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[4]),
        .Q(do_reg2[4]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[5]),
        .Q(do_reg2[5]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[6]),
        .Q(do_reg2[6]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[7]),
        .Q(do_reg2[7]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[8]),
        .Q(do_reg2[8]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[9]),
        .Q(do_reg2[9]),
        .R(RST_DCLK_RESET));
  LUT4 #(
    .INIT(16'h0001)) 
    done_i_1__1
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(start_reg2),
        .I3(Q[1]),
        .O(done_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    done_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(done_i_1__1_n_0),
        .Q(DRP_DONE),
        .R(RST_DCLK_RESET));
  LUT6 #(
    .INIT(64'h0377FFFF03770000)) 
    \fsm[0]_i_1__1 
       (.I0(fsm1),
        .I1(Q[1]),
        .I2(rdy_reg2),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(\fsm[0]_i_3__0_n_0 ),
        .O(fsm[0]));
  LUT6 #(
    .INIT(64'h1000000110000000)) 
    \fsm[0]_i_2__1 
       (.I0(index[3]),
        .I1(index[1]),
        .I2(index[0]),
        .I3(index[4]),
        .I4(index[2]),
        .I5(x16x20_mode_reg2),
        .O(fsm1));
  LUT5 #(
    .INIT(32'h47FF47CC)) 
    \fsm[0]_i_3__0 
       (.I0(rdy_reg2),
        .I1(Q[1]),
        .I2(load_cnt),
        .I3(Q[0]),
        .I4(start_reg2),
        .O(\fsm[0]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'h1D501850)) 
    \fsm[1]_i_1__1 
       (.I0(Q[2]),
        .I1(rdy_reg2),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(load_cnt),
        .O(fsm[1]));
  LUT4 #(
    .INIT(16'h6222)) 
    \fsm[2]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(rdy_reg2),
        .I3(Q[0]),
        .O(fsm[2]));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(fsm[0]),
        .Q(Q[0]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(fsm[1]),
        .Q(Q[1]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(fsm[2]),
        .Q(Q[2]),
        .R(RST_DCLK_RESET));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \gt_ch_drp_rdy[1]_INST_0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .O(gt_ch_drp_rdy));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_10__0 
       (.I0(ext_ch_gt_drpdi[11]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_16[11]),
        .O(DRPDI[11]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_11__0 
       (.I0(ext_ch_gt_drpdi[10]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_16[10]),
        .O(DRPDI[10]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_12__0 
       (.I0(ext_ch_gt_drpdi[9]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_16[9]),
        .O(DRPDI[9]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_13__0 
       (.I0(ext_ch_gt_drpdi[8]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_16[8]),
        .O(DRPDI[8]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_14__0 
       (.I0(ext_ch_gt_drpdi[7]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_16[7]),
        .O(DRPDI[7]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_15__0 
       (.I0(ext_ch_gt_drpdi[6]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_16[6]),
        .O(DRPDI[6]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_16__0 
       (.I0(ext_ch_gt_drpdi[5]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_16[5]),
        .O(DRPDI[5]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_17__0 
       (.I0(ext_ch_gt_drpdi[4]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_16[4]),
        .O(DRPDI[4]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_18__0 
       (.I0(ext_ch_gt_drpdi[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_16[3]),
        .O(DRPDI[3]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_19__0 
       (.I0(ext_ch_gt_drpdi[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_16[2]),
        .O(DRPDI[2]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_20__0 
       (.I0(ext_ch_gt_drpdi[1]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_16[1]),
        .O(DRPDI[1]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_21__0 
       (.I0(ext_ch_gt_drpdi[0]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_16[0]),
        .O(DRPDI[0]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT4 #(
    .INIT(16'h0100)) 
    \gtx_channel.gtxe2_channel_i_i_39__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(ext_ch_gt_drpaddr[8]),
        .O(DRPADDR[8]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT4 #(
    .INIT(16'h030E)) 
    \gtx_channel.gtxe2_channel_i_i_3__0 
       (.I0(ext_ch_gt_drpen),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .O(drp_mux_en_1));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_40__0 
       (.I0(ext_ch_gt_drpaddr[7]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_addr_9[7]),
        .O(DRPADDR[7]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_41__0 
       (.I0(ext_ch_gt_drpaddr[6]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_addr_9[6]),
        .O(DRPADDR[6]));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_42__0 
       (.I0(ext_ch_gt_drpaddr[5]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_addr_9[5]),
        .O(DRPADDR[5]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_43__0 
       (.I0(ext_ch_gt_drpaddr[4]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_addr_9[4]),
        .O(DRPADDR[4]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_44__0 
       (.I0(ext_ch_gt_drpaddr[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_addr_9[3]),
        .O(DRPADDR[3]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_45__0 
       (.I0(ext_ch_gt_drpaddr[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_addr_9[2]),
        .O(DRPADDR[2]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_46__0 
       (.I0(ext_ch_gt_drpaddr[1]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_addr_9[1]),
        .O(DRPADDR[1]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_47__0 
       (.I0(ext_ch_gt_drpaddr[0]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_addr_9[0]),
        .O(DRPADDR[0]));
  LUT4 #(
    .INIT(16'h0302)) 
    \gtx_channel.gtxe2_channel_i_i_4__0 
       (.I0(ext_ch_gt_drpwe),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .O(drp_mux_we_1));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_6__0__0 
       (.I0(ext_ch_gt_drpdi[15]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_16[15]),
        .O(DRPDI[15]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_7__0 
       (.I0(ext_ch_gt_drpdi[14]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_16[14]),
        .O(DRPDI[14]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_8__0 
       (.I0(ext_ch_gt_drpdi[13]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_16[13]),
        .O(DRPDI[13]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_9__0 
       (.I0(ext_ch_gt_drpdi[12]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_16[12]),
        .O(DRPDI[12]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gtxreset_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_GTXRESET),
        .Q(gtxreset_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gtxreset_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(gtxreset_reg1),
        .Q(gtxreset_reg2),
        .R(RST_DCLK_RESET));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT4 #(
    .INIT(16'h0100)) 
    \index[0]_i_1__0 
       (.I0(Q[0]),
        .I1(fsm1),
        .I2(index[0]),
        .I3(Q[2]),
        .O(\index[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT5 #(
    .INIT(32'h00140000)) 
    \index[1]_i_1__0 
       (.I0(Q[0]),
        .I1(index[1]),
        .I2(index[0]),
        .I3(fsm1),
        .I4(Q[2]),
        .O(\index[1]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000144400000000)) 
    \index[2]_i_1__0 
       (.I0(Q[0]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(index[0]),
        .I4(fsm1),
        .I5(Q[2]),
        .O(\index[2]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000144400000000)) 
    \index[3]_i_1__0 
       (.I0(Q[0]),
        .I1(index[3]),
        .I2(index[2]),
        .I3(\index[3]_i_2__0_n_0 ),
        .I4(fsm1),
        .I5(Q[2]),
        .O(\index[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \index[3]_i_2__0 
       (.I0(index[1]),
        .I1(index[0]),
        .O(\index[3]_i_2__0_n_0 ));
  LUT3 #(
    .INIT(8'hA1)) 
    \index[4]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .O(\index[4]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000144400000000)) 
    \index[4]_i_2__0 
       (.I0(Q[0]),
        .I1(index[4]),
        .I2(index[3]),
        .I3(\index[4]_i_3__0_n_0 ),
        .I4(fsm1),
        .I5(Q[2]),
        .O(\index[4]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \index[4]_i_3__0 
       (.I0(index[2]),
        .I1(index[0]),
        .I2(index[1]),
        .O(\index[4]_i_3__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[0] 
       (.C(pipe_dclk_in),
        .CE(\index[4]_i_1__0_n_0 ),
        .D(\index[0]_i_1__0_n_0 ),
        .Q(index[0]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[1] 
       (.C(pipe_dclk_in),
        .CE(\index[4]_i_1__0_n_0 ),
        .D(\index[1]_i_1__0_n_0 ),
        .Q(index[1]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[2] 
       (.C(pipe_dclk_in),
        .CE(\index[4]_i_1__0_n_0 ),
        .D(\index[2]_i_1__0_n_0 ),
        .Q(index[2]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[3] 
       (.C(pipe_dclk_in),
        .CE(\index[4]_i_1__0_n_0 ),
        .D(\index[3]_i_1__0_n_0 ),
        .Q(index[3]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[4] 
       (.C(pipe_dclk_in),
        .CE(\index[4]_i_1__0_n_0 ),
        .D(\index[4]_i_2__0_n_0 ),
        .Q(index[4]),
        .R(RST_DCLK_RESET));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \load_cnt[0]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[0]),
        .O(\load_cnt[0]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \load_cnt_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\load_cnt[0]_i_1__1_n_0 ),
        .Q(load_cnt),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg1_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\rate_reg1_reg[0]_0 ),
        .Q(rate_reg1[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg1_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rate_reg1[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg2_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(rate_reg1[0]),
        .Q(rate_reg2[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg2_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(rate_reg1[1]),
        .Q(rate_reg2[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rdy_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drprdy),
        .Q(rdy_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rdy_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(rdy_reg1),
        .Q(rdy_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE start_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(RATE_DRP_START),
        .Q(start_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE start_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(start_reg1),
        .Q(start_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(RATE_DRP_X16X20_MODE),
        .Q(x16_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(x16_reg1),
        .Q(x16_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16x20_mode_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(RATE_DRP_X16X20_MODE),
        .Q(x16x20_mode_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16x20_mode_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(x16x20_mode_reg1),
        .Q(x16x20_mode_reg2),
        .R(RST_DCLK_RESET));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pipe_drp" *) 
module pcie_7x_0_pcie_7x_0_pipe_drp_28
   (Q,
    DRP_DONE,
    gt_ch_drp_rdy,
    DRPADDR,
    DRPDI,
    drp_mux_en_2,
    drp_mux_we_2,
    RST_DCLK_RESET,
    RATE_DRP_X16X20_MODE,
    pipe_dclk_in,
    RATE_DRP_START,
    ext_ch_gt_drprdy,
    \rate_reg1_reg[0]_0 ,
    ext_ch_gt_drpdo,
    DRP_GTXRESET,
    ext_ch_gt_drpaddr,
    ext_ch_gt_drpdi,
    ext_ch_gt_drpen,
    ext_ch_gt_drpwe);
  output [2:0]Q;
  output DRP_DONE;
  output [0:0]gt_ch_drp_rdy;
  output [8:0]DRPADDR;
  output [15:0]DRPDI;
  output drp_mux_en_2;
  output drp_mux_we_2;
  input RST_DCLK_RESET;
  input RATE_DRP_X16X20_MODE;
  input pipe_dclk_in;
  input RATE_DRP_START;
  input [0:0]ext_ch_gt_drprdy;
  input [0:0]\rate_reg1_reg[0]_0 ;
  input [15:0]ext_ch_gt_drpdo;
  input DRP_GTXRESET;
  input [8:0]ext_ch_gt_drpaddr;
  input [15:0]ext_ch_gt_drpdi;
  input [0:0]ext_ch_gt_drpen;
  input [0:0]ext_ch_gt_drpwe;

  wire [8:0]DRPADDR;
  wire [15:0]DRPDI;
  wire DRP_DONE;
  wire DRP_GTXRESET;
  wire [2:0]Q;
  wire RATE_DRP_START;
  wire RATE_DRP_X16X20_MODE;
  wire RST_DCLK_RESET;
  wire [7:0]addr_reg;
  wire \addr_reg[4]_i_1__1_n_0 ;
  wire \addr_reg[6]_i_1__1_n_0 ;
  wire [15:15]data_pma_rsv_a;
  wire [15:0]di_reg;
  wire \di_reg[0]_i_2__1_n_0 ;
  wire \di_reg[0]_i_3__1_n_0 ;
  wire \di_reg[11]_i_2__1_n_0 ;
  wire \di_reg[11]_i_3__1_n_0 ;
  wire \di_reg[11]_i_4__1_n_0 ;
  wire \di_reg[11]_i_5__1_n_0 ;
  wire \di_reg[12]_i_2__1_n_0 ;
  wire \di_reg[12]_i_3__1_n_0 ;
  wire \di_reg[13]_i_2__1_n_0 ;
  wire \di_reg[13]_i_3__1_n_0 ;
  wire \di_reg[14]_i_2__1_n_0 ;
  wire \di_reg[15]_i_2__1_n_0 ;
  wire \di_reg[1]_i_2__1_n_0 ;
  wire \di_reg[1]_i_3__1_n_0 ;
  wire \di_reg[2]_i_2__1_n_0 ;
  wire \di_reg[2]_i_3__1_n_0 ;
  wire \di_reg[3]_i_2__1_n_0 ;
  wire \di_reg[3]_i_3__1_n_0 ;
  wire \di_reg[4]_i_2__1_n_0 ;
  wire \di_reg[4]_i_3__1_n_0 ;
  wire \di_reg[4]_i_4__1_n_0 ;
  wire \di_reg[5]_i_2__1_n_0 ;
  wire \di_reg[5]_i_3__1_n_0 ;
  wire \di_reg[6]_i_2__1_n_0 ;
  wire \di_reg[6]_i_3__1_n_0 ;
  wire \di_reg[7]_i_2__1_n_0 ;
  wire \di_reg[7]_i_3__1_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [15:0]do_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [15:0]do_reg2;
  wire done_i_1__2_n_0;
  wire [7:0]drp_addr_18;
  wire [15:0]drp_di_32;
  wire drp_mux_en_2;
  wire drp_mux_we_2;
  wire [8:0]ext_ch_gt_drpaddr;
  wire [15:0]ext_ch_gt_drpdi;
  wire [15:0]ext_ch_gt_drpdo;
  wire [0:0]ext_ch_gt_drpen;
  wire [0:0]ext_ch_gt_drprdy;
  wire [0:0]ext_ch_gt_drpwe;
  wire [2:0]fsm;
  wire fsm1;
  wire \fsm[0]_i_3__1_n_0 ;
  wire [0:0]gt_ch_drp_rdy;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gtxreset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gtxreset_reg2;
  wire [4:0]index;
  wire \index[0]_i_1__1_n_0 ;
  wire \index[1]_i_1__1_n_0 ;
  wire \index[2]_i_1__1_n_0 ;
  wire \index[3]_i_1__1_n_0 ;
  wire \index[3]_i_2__1_n_0 ;
  wire \index[4]_i_1__1_n_0 ;
  wire \index[4]_i_2__1_n_0 ;
  wire \index[4]_i_3__1_n_0 ;
  wire [0:0]load_cnt;
  wire \load_cnt[0]_i_1__2_n_0 ;
  wire pipe_dclk_in;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_reg1;
  wire [0:0]\rate_reg1_reg[0]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rdy_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rdy_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16x20_mode_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16x20_mode_reg2;

  LUT6 #(
    .INIT(64'h1736415517364154)) 
    \addr_reg[0]_i_1__1 
       (.I0(index[4]),
        .I1(index[3]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(index[0]),
        .I5(x16x20_mode_reg2),
        .O(addr_reg[0]));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT5 #(
    .INIT(32'h40500F00)) 
    \addr_reg[1]_i_1__1 
       (.I0(index[4]),
        .I1(index[0]),
        .I2(index[3]),
        .I3(index[1]),
        .I4(index[2]),
        .O(addr_reg[1]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT5 #(
    .INIT(32'h05105A00)) 
    \addr_reg[2]_i_1__1 
       (.I0(index[4]),
        .I1(index[0]),
        .I2(index[3]),
        .I3(index[2]),
        .I4(index[1]),
        .O(addr_reg[2]));
  LUT6 #(
    .INIT(64'h5767576753265327)) 
    \addr_reg[3]_i_1__1 
       (.I0(index[4]),
        .I1(index[3]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(x16x20_mode_reg2),
        .I5(index[0]),
        .O(addr_reg[3]));
  LUT6 #(
    .INIT(64'h00000000FAAFFF04)) 
    \addr_reg[4]_i_1__1 
       (.I0(index[0]),
        .I1(x16x20_mode_reg2),
        .I2(index[1]),
        .I3(index[2]),
        .I4(index[3]),
        .I5(index[4]),
        .O(\addr_reg[4]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT5 #(
    .INIT(32'h001A0F0A)) 
    \addr_reg[5]_i_1__1 
       (.I0(index[4]),
        .I1(index[0]),
        .I2(index[3]),
        .I3(index[1]),
        .I4(index[2]),
        .O(addr_reg[5]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT5 #(
    .INIT(32'h00001454)) 
    \addr_reg[6]_i_1__1 
       (.I0(index[2]),
        .I1(index[1]),
        .I2(index[3]),
        .I3(index[0]),
        .I4(index[4]),
        .O(\addr_reg[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h5252424223236263)) 
    \addr_reg[7]_i_1__1 
       (.I0(index[4]),
        .I1(index[3]),
        .I2(index[2]),
        .I3(x16x20_mode_reg2),
        .I4(index[0]),
        .I5(index[1]),
        .O(addr_reg[7]));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[0]),
        .Q(drp_addr_18[0]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[1]),
        .Q(drp_addr_18[1]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[2]),
        .Q(drp_addr_18[2]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[3]),
        .Q(drp_addr_18[3]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\addr_reg[4]_i_1__1_n_0 ),
        .Q(drp_addr_18[4]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[5]),
        .Q(drp_addr_18[5]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\addr_reg[6]_i_1__1_n_0 ),
        .Q(drp_addr_18[6]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[7]),
        .Q(drp_addr_18[7]),
        .R(RST_DCLK_RESET));
  LUT6 #(
    .INIT(64'hFF5E7F6FA1001000)) 
    \di_reg[0]_i_2__1 
       (.I0(index[3]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(data_pma_rsv_a),
        .I4(index[0]),
        .I5(do_reg2[0]),
        .O(\di_reg[0]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'h000005D0)) 
    \di_reg[0]_i_3__1 
       (.I0(index[0]),
        .I1(do_reg2[0]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(index[3]),
        .O(\di_reg[0]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'h45555F5540000000)) 
    \di_reg[10]_i_1__1 
       (.I0(index[4]),
        .I1(\di_reg[15]_i_2__1_n_0 ),
        .I2(index[1]),
        .I3(index[2]),
        .I4(index[3]),
        .I5(do_reg2[10]),
        .O(di_reg[10]));
  LUT6 #(
    .INIT(64'h4F40DDDD4F408888)) 
    \di_reg[11]_i_2__1 
       (.I0(index[3]),
        .I1(do_reg2[11]),
        .I2(index[1]),
        .I3(\di_reg[11]_i_4__1_n_0 ),
        .I4(index[2]),
        .I5(\di_reg[11]_i_5__1_n_0 ),
        .O(\di_reg[11]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000008080838)) 
    \di_reg[11]_i_3__1 
       (.I0(do_reg2[11]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(data_pma_rsv_a),
        .I4(index[0]),
        .I5(index[3]),
        .O(\di_reg[11]_i_3__1_n_0 ));
  LUT4 #(
    .INIT(16'hB8BB)) 
    \di_reg[11]_i_4__1 
       (.I0(do_reg2[11]),
        .I1(index[0]),
        .I2(rate_reg2[0]),
        .I3(rate_reg2[1]),
        .O(\di_reg[11]_i_4__1_n_0 ));
  LUT5 #(
    .INIT(32'hEFFF0100)) 
    \di_reg[11]_i_5__1 
       (.I0(index[1]),
        .I1(index[0]),
        .I2(x16_reg2),
        .I3(x16x20_mode_reg2),
        .I4(do_reg2[11]),
        .O(\di_reg[11]_i_5__1_n_0 ));
  LUT6 #(
    .INIT(64'h777EFFFF01080000)) 
    \di_reg[12]_i_2__1 
       (.I0(index[3]),
        .I1(index[1]),
        .I2(index[0]),
        .I3(data_pma_rsv_a),
        .I4(index[2]),
        .I5(do_reg2[12]),
        .O(\di_reg[12]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'h00000B08)) 
    \di_reg[12]_i_3__1 
       (.I0(do_reg2[12]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(index[0]),
        .I4(index[3]),
        .O(\di_reg[12]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'h767FFFFF00090000)) 
    \di_reg[13]_i_2__1 
       (.I0(index[3]),
        .I1(index[1]),
        .I2(index[0]),
        .I3(data_pma_rsv_a),
        .I4(index[2]),
        .I5(do_reg2[13]),
        .O(\di_reg[13]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000008380808)) 
    \di_reg[13]_i_3__1 
       (.I0(do_reg2[13]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(index[0]),
        .I4(data_pma_rsv_a),
        .I5(index[3]),
        .O(\di_reg[13]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'h0040FFFF00400000)) 
    \di_reg[14]_i_1__1 
       (.I0(index[1]),
        .I1(index[2]),
        .I2(do_reg2[14]),
        .I3(index[3]),
        .I4(index[4]),
        .I5(\di_reg[14]_i_2__1_n_0 ),
        .O(di_reg[14]));
  LUT6 #(
    .INIT(64'h653BFFF721080080)) 
    \di_reg[14]_i_2__1 
       (.I0(index[3]),
        .I1(index[1]),
        .I2(data_pma_rsv_a),
        .I3(index[0]),
        .I4(index[2]),
        .I5(do_reg2[14]),
        .O(\di_reg[14]_i_2__1_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \di_reg[14]_i_3__0 
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .O(data_pma_rsv_a));
  LUT6 #(
    .INIT(64'h45555F5540000000)) 
    \di_reg[15]_i_1__1 
       (.I0(index[4]),
        .I1(\di_reg[15]_i_2__1_n_0 ),
        .I2(index[1]),
        .I3(index[2]),
        .I4(index[3]),
        .I5(do_reg2[15]),
        .O(di_reg[15]));
  LUT3 #(
    .INIT(8'h0D)) 
    \di_reg[15]_i_2__1 
       (.I0(rate_reg2[1]),
        .I1(rate_reg2[0]),
        .I2(index[0]),
        .O(\di_reg[15]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h5FEE4E0076FF1000)) 
    \di_reg[1]_i_2__1 
       (.I0(index[3]),
        .I1(index[2]),
        .I2(data_pma_rsv_a),
        .I3(index[1]),
        .I4(do_reg2[1]),
        .I5(index[0]),
        .O(\di_reg[1]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'h000005D0)) 
    \di_reg[1]_i_3__1 
       (.I0(index[0]),
        .I1(do_reg2[1]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(index[3]),
        .O(\di_reg[1]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'h5DEE080067FF0100)) 
    \di_reg[2]_i_2__1 
       (.I0(index[3]),
        .I1(index[2]),
        .I2(data_pma_rsv_a),
        .I3(index[1]),
        .I4(do_reg2[2]),
        .I5(index[0]),
        .O(\di_reg[2]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'h00000380)) 
    \di_reg[2]_i_3__1 
       (.I0(do_reg2[2]),
        .I1(index[0]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(index[3]),
        .O(\di_reg[2]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'h43FFFFFF40000000)) 
    \di_reg[3]_i_2__1 
       (.I0(data_pma_rsv_a),
        .I1(index[2]),
        .I2(index[0]),
        .I3(index[1]),
        .I4(index[3]),
        .I5(do_reg2[3]),
        .O(\di_reg[3]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000033D100)) 
    \di_reg[3]_i_3__1 
       (.I0(data_pma_rsv_a),
        .I1(index[0]),
        .I2(do_reg2[3]),
        .I3(index[2]),
        .I4(index[1]),
        .I5(index[3]),
        .O(\di_reg[3]_i_3__1_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di_reg[4]_i_1__1 
       (.I0(\di_reg[4]_i_2__1_n_0 ),
        .I1(index[4]),
        .I2(\di_reg[4]_i_3__1_n_0 ),
        .I3(index[3]),
        .I4(\di_reg[4]_i_4__1_n_0 ),
        .O(di_reg[4]));
  LUT6 #(
    .INIT(64'h0F0400F0000400F0)) 
    \di_reg[4]_i_2__1 
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .I2(index[1]),
        .I3(index[2]),
        .I4(index[0]),
        .I5(do_reg2[4]),
        .O(\di_reg[4]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h400FFFFF40000000)) 
    \di_reg[4]_i_3__1 
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .I2(index[2]),
        .I3(index[0]),
        .I4(index[1]),
        .I5(do_reg2[4]),
        .O(\di_reg[4]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'hBF00BF01FF40FE40)) 
    \di_reg[4]_i_4__1 
       (.I0(index[2]),
        .I1(index[1]),
        .I2(index[0]),
        .I3(do_reg2[4]),
        .I4(x16x20_mode_reg2),
        .I5(data_pma_rsv_a),
        .O(\di_reg[4]_i_4__1_n_0 ));
  LUT6 #(
    .INIT(64'h7F7F7F7E00000000)) 
    \di_reg[5]_i_2__1 
       (.I0(index[3]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(index[0]),
        .I4(x16x20_mode_reg2),
        .I5(do_reg2[5]),
        .O(\di_reg[5]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000038F0380)) 
    \di_reg[5]_i_3__1 
       (.I0(do_reg2[5]),
        .I1(index[0]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(data_pma_rsv_a),
        .I5(index[3]),
        .O(\di_reg[5]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'h7D7F7D7E00000000)) 
    \di_reg[6]_i_2__1 
       (.I0(index[3]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(index[0]),
        .I4(x16x20_mode_reg2),
        .I5(do_reg2[6]),
        .O(\di_reg[6]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'h00000380)) 
    \di_reg[6]_i_3__1 
       (.I0(do_reg2[6]),
        .I1(index[0]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(index[3]),
        .O(\di_reg[6]_i_3__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF0900)) 
    \di_reg[7]_i_2__1 
       (.I0(index[2]),
        .I1(index[1]),
        .I2(index[0]),
        .I3(index[3]),
        .I4(do_reg2[7]),
        .O(\di_reg[7]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000003800383)) 
    \di_reg[7]_i_3__1 
       (.I0(do_reg2[7]),
        .I1(index[0]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(data_pma_rsv_a),
        .I5(index[3]),
        .O(\di_reg[7]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'h03333F7300000040)) 
    \di_reg[8]_i_1__1 
       (.I0(index[0]),
        .I1(index[4]),
        .I2(index[1]),
        .I3(index[2]),
        .I4(index[3]),
        .I5(do_reg2[8]),
        .O(di_reg[8]));
  LUT6 #(
    .INIT(64'h03333F7300000040)) 
    \di_reg[9]_i_1__1 
       (.I0(index[0]),
        .I1(index[4]),
        .I2(index[1]),
        .I3(index[2]),
        .I4(index[3]),
        .I5(do_reg2[9]),
        .O(di_reg[9]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[0]),
        .Q(drp_di_32[0]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[0]_i_1__1 
       (.I0(\di_reg[0]_i_2__1_n_0 ),
        .I1(\di_reg[0]_i_3__1_n_0 ),
        .O(di_reg[0]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[10]),
        .Q(drp_di_32[10]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[11]),
        .Q(drp_di_32[11]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[11]_i_1__1 
       (.I0(\di_reg[11]_i_2__1_n_0 ),
        .I1(\di_reg[11]_i_3__1_n_0 ),
        .O(di_reg[11]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[12]),
        .Q(drp_di_32[12]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[12]_i_1__1 
       (.I0(\di_reg[12]_i_2__1_n_0 ),
        .I1(\di_reg[12]_i_3__1_n_0 ),
        .O(di_reg[12]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[13]),
        .Q(drp_di_32[13]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[13]_i_1__1 
       (.I0(\di_reg[13]_i_2__1_n_0 ),
        .I1(\di_reg[13]_i_3__1_n_0 ),
        .O(di_reg[13]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[14]),
        .Q(drp_di_32[14]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[15]),
        .Q(drp_di_32[15]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[1]),
        .Q(drp_di_32[1]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[1]_i_1__1 
       (.I0(\di_reg[1]_i_2__1_n_0 ),
        .I1(\di_reg[1]_i_3__1_n_0 ),
        .O(di_reg[1]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[2]),
        .Q(drp_di_32[2]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[2]_i_1__1 
       (.I0(\di_reg[2]_i_2__1_n_0 ),
        .I1(\di_reg[2]_i_3__1_n_0 ),
        .O(di_reg[2]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[3]),
        .Q(drp_di_32[3]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[3]_i_1__1 
       (.I0(\di_reg[3]_i_2__1_n_0 ),
        .I1(\di_reg[3]_i_3__1_n_0 ),
        .O(di_reg[3]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[4]),
        .Q(drp_di_32[4]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[5]),
        .Q(drp_di_32[5]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[5]_i_1__1 
       (.I0(\di_reg[5]_i_2__1_n_0 ),
        .I1(\di_reg[5]_i_3__1_n_0 ),
        .O(di_reg[5]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[6]),
        .Q(drp_di_32[6]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[6]_i_1__1 
       (.I0(\di_reg[6]_i_2__1_n_0 ),
        .I1(\di_reg[6]_i_3__1_n_0 ),
        .O(di_reg[6]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[7]),
        .Q(drp_di_32[7]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[7]_i_1__1 
       (.I0(\di_reg[7]_i_2__1_n_0 ),
        .I1(\di_reg[7]_i_3__1_n_0 ),
        .O(di_reg[7]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[8]),
        .Q(drp_di_32[8]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[9]),
        .Q(drp_di_32[9]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[0]),
        .Q(do_reg1[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[10]),
        .Q(do_reg1[10]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[11]),
        .Q(do_reg1[11]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[12]),
        .Q(do_reg1[12]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[13]),
        .Q(do_reg1[13]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[14]),
        .Q(do_reg1[14]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[15]),
        .Q(do_reg1[15]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[1]),
        .Q(do_reg1[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[2]),
        .Q(do_reg1[2]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[3]),
        .Q(do_reg1[3]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[4]),
        .Q(do_reg1[4]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[5]),
        .Q(do_reg1[5]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[6]),
        .Q(do_reg1[6]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[7]),
        .Q(do_reg1[7]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[8]),
        .Q(do_reg1[8]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[9]),
        .Q(do_reg1[9]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[0]),
        .Q(do_reg2[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[10]),
        .Q(do_reg2[10]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[11]),
        .Q(do_reg2[11]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[12]),
        .Q(do_reg2[12]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[13]),
        .Q(do_reg2[13]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[14]),
        .Q(do_reg2[14]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[15]),
        .Q(do_reg2[15]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[1]),
        .Q(do_reg2[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[2]),
        .Q(do_reg2[2]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[3]),
        .Q(do_reg2[3]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[4]),
        .Q(do_reg2[4]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[5]),
        .Q(do_reg2[5]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[6]),
        .Q(do_reg2[6]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[7]),
        .Q(do_reg2[7]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[8]),
        .Q(do_reg2[8]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[9]),
        .Q(do_reg2[9]),
        .R(RST_DCLK_RESET));
  LUT4 #(
    .INIT(16'h0001)) 
    done_i_1__2
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(start_reg2),
        .I3(Q[1]),
        .O(done_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    done_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(done_i_1__2_n_0),
        .Q(DRP_DONE),
        .R(RST_DCLK_RESET));
  LUT6 #(
    .INIT(64'h0377FFFF03770000)) 
    \fsm[0]_i_1__2 
       (.I0(fsm1),
        .I1(Q[1]),
        .I2(rdy_reg2),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(\fsm[0]_i_3__1_n_0 ),
        .O(fsm[0]));
  LUT6 #(
    .INIT(64'h1000000110000000)) 
    \fsm[0]_i_2__2 
       (.I0(index[3]),
        .I1(index[1]),
        .I2(index[0]),
        .I3(index[4]),
        .I4(index[2]),
        .I5(x16x20_mode_reg2),
        .O(fsm1));
  LUT5 #(
    .INIT(32'h47FF47CC)) 
    \fsm[0]_i_3__1 
       (.I0(rdy_reg2),
        .I1(Q[1]),
        .I2(load_cnt),
        .I3(Q[0]),
        .I4(start_reg2),
        .O(\fsm[0]_i_3__1_n_0 ));
  LUT5 #(
    .INIT(32'h1D501850)) 
    \fsm[1]_i_1__2 
       (.I0(Q[2]),
        .I1(rdy_reg2),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(load_cnt),
        .O(fsm[1]));
  LUT4 #(
    .INIT(16'h6222)) 
    \fsm[2]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(rdy_reg2),
        .I3(Q[0]),
        .O(fsm[2]));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(fsm[0]),
        .Q(Q[0]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(fsm[1]),
        .Q(Q[1]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(fsm[2]),
        .Q(Q[2]),
        .R(RST_DCLK_RESET));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \gt_ch_drp_rdy[2]_INST_0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .O(gt_ch_drp_rdy));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_10__1 
       (.I0(ext_ch_gt_drpdi[11]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_32[11]),
        .O(DRPDI[11]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_11__1 
       (.I0(ext_ch_gt_drpdi[10]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_32[10]),
        .O(DRPDI[10]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_12__1 
       (.I0(ext_ch_gt_drpdi[9]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_32[9]),
        .O(DRPDI[9]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_13__1 
       (.I0(ext_ch_gt_drpdi[8]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_32[8]),
        .O(DRPDI[8]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_14__1 
       (.I0(ext_ch_gt_drpdi[7]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_32[7]),
        .O(DRPDI[7]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_15__1 
       (.I0(ext_ch_gt_drpdi[6]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_32[6]),
        .O(DRPDI[6]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_16__1 
       (.I0(ext_ch_gt_drpdi[5]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_32[5]),
        .O(DRPDI[5]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_17__1 
       (.I0(ext_ch_gt_drpdi[4]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_32[4]),
        .O(DRPDI[4]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_18__1 
       (.I0(ext_ch_gt_drpdi[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_32[3]),
        .O(DRPDI[3]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_19__1 
       (.I0(ext_ch_gt_drpdi[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_32[2]),
        .O(DRPDI[2]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_20__1 
       (.I0(ext_ch_gt_drpdi[1]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_32[1]),
        .O(DRPDI[1]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_21__1 
       (.I0(ext_ch_gt_drpdi[0]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_32[0]),
        .O(DRPDI[0]));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT4 #(
    .INIT(16'h0100)) 
    \gtx_channel.gtxe2_channel_i_i_39__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(ext_ch_gt_drpaddr[8]),
        .O(DRPADDR[8]));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT4 #(
    .INIT(16'h030E)) 
    \gtx_channel.gtxe2_channel_i_i_3__1 
       (.I0(ext_ch_gt_drpen),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .O(drp_mux_en_2));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_40__1 
       (.I0(ext_ch_gt_drpaddr[7]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_addr_18[7]),
        .O(DRPADDR[7]));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_41__1 
       (.I0(ext_ch_gt_drpaddr[6]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_addr_18[6]),
        .O(DRPADDR[6]));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_42__1 
       (.I0(ext_ch_gt_drpaddr[5]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_addr_18[5]),
        .O(DRPADDR[5]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_43__1 
       (.I0(ext_ch_gt_drpaddr[4]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_addr_18[4]),
        .O(DRPADDR[4]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_44__1 
       (.I0(ext_ch_gt_drpaddr[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_addr_18[3]),
        .O(DRPADDR[3]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_45__1 
       (.I0(ext_ch_gt_drpaddr[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_addr_18[2]),
        .O(DRPADDR[2]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_46__1 
       (.I0(ext_ch_gt_drpaddr[1]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_addr_18[1]),
        .O(DRPADDR[1]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_47__1 
       (.I0(ext_ch_gt_drpaddr[0]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_addr_18[0]),
        .O(DRPADDR[0]));
  LUT4 #(
    .INIT(16'h0302)) 
    \gtx_channel.gtxe2_channel_i_i_4__1 
       (.I0(ext_ch_gt_drpwe),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .O(drp_mux_we_2));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_6__1 
       (.I0(ext_ch_gt_drpdi[15]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_32[15]),
        .O(DRPDI[15]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_7__1 
       (.I0(ext_ch_gt_drpdi[14]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_32[14]),
        .O(DRPDI[14]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_8__1 
       (.I0(ext_ch_gt_drpdi[13]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_32[13]),
        .O(DRPDI[13]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_9__1 
       (.I0(ext_ch_gt_drpdi[12]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_32[12]),
        .O(DRPDI[12]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gtxreset_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_GTXRESET),
        .Q(gtxreset_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gtxreset_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(gtxreset_reg1),
        .Q(gtxreset_reg2),
        .R(RST_DCLK_RESET));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT4 #(
    .INIT(16'h0100)) 
    \index[0]_i_1__1 
       (.I0(Q[0]),
        .I1(fsm1),
        .I2(index[0]),
        .I3(Q[2]),
        .O(\index[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT5 #(
    .INIT(32'h00140000)) 
    \index[1]_i_1__1 
       (.I0(Q[0]),
        .I1(index[1]),
        .I2(index[0]),
        .I3(fsm1),
        .I4(Q[2]),
        .O(\index[1]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000144400000000)) 
    \index[2]_i_1__1 
       (.I0(Q[0]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(index[0]),
        .I4(fsm1),
        .I5(Q[2]),
        .O(\index[2]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000144400000000)) 
    \index[3]_i_1__1 
       (.I0(Q[0]),
        .I1(index[3]),
        .I2(index[2]),
        .I3(\index[3]_i_2__1_n_0 ),
        .I4(fsm1),
        .I5(Q[2]),
        .O(\index[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \index[3]_i_2__1 
       (.I0(index[1]),
        .I1(index[0]),
        .O(\index[3]_i_2__1_n_0 ));
  LUT3 #(
    .INIT(8'hA1)) 
    \index[4]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .O(\index[4]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000144400000000)) 
    \index[4]_i_2__1 
       (.I0(Q[0]),
        .I1(index[4]),
        .I2(index[3]),
        .I3(\index[4]_i_3__1_n_0 ),
        .I4(fsm1),
        .I5(Q[2]),
        .O(\index[4]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \index[4]_i_3__1 
       (.I0(index[2]),
        .I1(index[0]),
        .I2(index[1]),
        .O(\index[4]_i_3__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[0] 
       (.C(pipe_dclk_in),
        .CE(\index[4]_i_1__1_n_0 ),
        .D(\index[0]_i_1__1_n_0 ),
        .Q(index[0]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[1] 
       (.C(pipe_dclk_in),
        .CE(\index[4]_i_1__1_n_0 ),
        .D(\index[1]_i_1__1_n_0 ),
        .Q(index[1]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[2] 
       (.C(pipe_dclk_in),
        .CE(\index[4]_i_1__1_n_0 ),
        .D(\index[2]_i_1__1_n_0 ),
        .Q(index[2]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[3] 
       (.C(pipe_dclk_in),
        .CE(\index[4]_i_1__1_n_0 ),
        .D(\index[3]_i_1__1_n_0 ),
        .Q(index[3]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[4] 
       (.C(pipe_dclk_in),
        .CE(\index[4]_i_1__1_n_0 ),
        .D(\index[4]_i_2__1_n_0 ),
        .Q(index[4]),
        .R(RST_DCLK_RESET));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \load_cnt[0]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[0]),
        .O(\load_cnt[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \load_cnt_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\load_cnt[0]_i_1__2_n_0 ),
        .Q(load_cnt),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg1_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\rate_reg1_reg[0]_0 ),
        .Q(rate_reg1[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg1_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rate_reg1[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg2_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(rate_reg1[0]),
        .Q(rate_reg2[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg2_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(rate_reg1[1]),
        .Q(rate_reg2[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rdy_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drprdy),
        .Q(rdy_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rdy_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(rdy_reg1),
        .Q(rdy_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE start_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(RATE_DRP_START),
        .Q(start_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE start_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(start_reg1),
        .Q(start_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(RATE_DRP_X16X20_MODE),
        .Q(x16_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(x16_reg1),
        .Q(x16_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16x20_mode_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(RATE_DRP_X16X20_MODE),
        .Q(x16x20_mode_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16x20_mode_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(x16x20_mode_reg1),
        .Q(x16x20_mode_reg2),
        .R(RST_DCLK_RESET));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pipe_drp" *) 
module pcie_7x_0_pcie_7x_0_pipe_drp_34
   (Q,
    DRP_DONE,
    gt_ch_drp_rdy,
    DRPADDR,
    DRPDI,
    drp_mux_en_3,
    drp_mux_we_3,
    RST_DCLK_RESET,
    RATE_DRP_X16X20_MODE,
    pipe_dclk_in,
    RATE_DRP_START,
    ext_ch_gt_drprdy,
    \rate_reg1_reg[0]_0 ,
    ext_ch_gt_drpdo,
    DRP_GTXRESET,
    ext_ch_gt_drpaddr,
    ext_ch_gt_drpdi,
    ext_ch_gt_drpen,
    ext_ch_gt_drpwe);
  output [2:0]Q;
  output DRP_DONE;
  output [0:0]gt_ch_drp_rdy;
  output [8:0]DRPADDR;
  output [15:0]DRPDI;
  output drp_mux_en_3;
  output drp_mux_we_3;
  input RST_DCLK_RESET;
  input RATE_DRP_X16X20_MODE;
  input pipe_dclk_in;
  input RATE_DRP_START;
  input [0:0]ext_ch_gt_drprdy;
  input [0:0]\rate_reg1_reg[0]_0 ;
  input [15:0]ext_ch_gt_drpdo;
  input DRP_GTXRESET;
  input [8:0]ext_ch_gt_drpaddr;
  input [15:0]ext_ch_gt_drpdi;
  input [0:0]ext_ch_gt_drpen;
  input [0:0]ext_ch_gt_drpwe;

  wire [8:0]DRPADDR;
  wire [15:0]DRPDI;
  wire DRP_DONE;
  wire DRP_GTXRESET;
  wire [2:0]Q;
  wire RATE_DRP_START;
  wire RATE_DRP_X16X20_MODE;
  wire RST_DCLK_RESET;
  wire [7:0]addr_reg;
  wire \addr_reg[4]_i_1__2_n_0 ;
  wire \addr_reg[6]_i_1__2_n_0 ;
  wire [15:15]data_pma_rsv_a;
  wire [15:0]di_reg;
  wire \di_reg[0]_i_2__2_n_0 ;
  wire \di_reg[0]_i_3__2_n_0 ;
  wire \di_reg[11]_i_2__2_n_0 ;
  wire \di_reg[11]_i_3__2_n_0 ;
  wire \di_reg[11]_i_4__2_n_0 ;
  wire \di_reg[11]_i_5__2_n_0 ;
  wire \di_reg[12]_i_2__2_n_0 ;
  wire \di_reg[12]_i_3__2_n_0 ;
  wire \di_reg[13]_i_2__2_n_0 ;
  wire \di_reg[13]_i_3__2_n_0 ;
  wire \di_reg[14]_i_2__2_n_0 ;
  wire \di_reg[15]_i_2__2_n_0 ;
  wire \di_reg[1]_i_2__2_n_0 ;
  wire \di_reg[1]_i_3__2_n_0 ;
  wire \di_reg[2]_i_2__2_n_0 ;
  wire \di_reg[2]_i_3__2_n_0 ;
  wire \di_reg[3]_i_2__2_n_0 ;
  wire \di_reg[3]_i_3__2_n_0 ;
  wire \di_reg[4]_i_2__2_n_0 ;
  wire \di_reg[4]_i_3__2_n_0 ;
  wire \di_reg[4]_i_4__2_n_0 ;
  wire \di_reg[5]_i_2__2_n_0 ;
  wire \di_reg[5]_i_3__2_n_0 ;
  wire \di_reg[6]_i_2__2_n_0 ;
  wire \di_reg[6]_i_3__2_n_0 ;
  wire \di_reg[7]_i_2__2_n_0 ;
  wire \di_reg[7]_i_3__2_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [15:0]do_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [15:0]do_reg2;
  wire done_i_1__3_n_0;
  wire [7:0]drp_addr_27;
  wire [15:0]drp_di_48;
  wire drp_mux_en_3;
  wire drp_mux_we_3;
  wire [8:0]ext_ch_gt_drpaddr;
  wire [15:0]ext_ch_gt_drpdi;
  wire [15:0]ext_ch_gt_drpdo;
  wire [0:0]ext_ch_gt_drpen;
  wire [0:0]ext_ch_gt_drprdy;
  wire [0:0]ext_ch_gt_drpwe;
  wire [2:0]fsm;
  wire fsm1;
  wire \fsm[0]_i_3__2_n_0 ;
  wire [0:0]gt_ch_drp_rdy;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gtxreset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gtxreset_reg2;
  wire [4:0]index;
  wire \index[0]_i_1__2_n_0 ;
  wire \index[1]_i_1__2_n_0 ;
  wire \index[2]_i_1__2_n_0 ;
  wire \index[3]_i_1__2_n_0 ;
  wire \index[3]_i_2__2_n_0 ;
  wire \index[4]_i_1__2_n_0 ;
  wire \index[4]_i_2__2_n_0 ;
  wire \index[4]_i_3__2_n_0 ;
  wire [0:0]load_cnt;
  wire \load_cnt[0]_i_1__3_n_0 ;
  wire pipe_dclk_in;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_reg1;
  wire [0:0]\rate_reg1_reg[0]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rdy_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rdy_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16x20_mode_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire x16x20_mode_reg2;

  LUT6 #(
    .INIT(64'h1736415517364154)) 
    \addr_reg[0]_i_1__2 
       (.I0(index[4]),
        .I1(index[3]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(index[0]),
        .I5(x16x20_mode_reg2),
        .O(addr_reg[0]));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT5 #(
    .INIT(32'h40500F00)) 
    \addr_reg[1]_i_1__2 
       (.I0(index[4]),
        .I1(index[0]),
        .I2(index[3]),
        .I3(index[1]),
        .I4(index[2]),
        .O(addr_reg[1]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT5 #(
    .INIT(32'h05105A00)) 
    \addr_reg[2]_i_1__2 
       (.I0(index[4]),
        .I1(index[0]),
        .I2(index[3]),
        .I3(index[2]),
        .I4(index[1]),
        .O(addr_reg[2]));
  LUT6 #(
    .INIT(64'h5767576753265327)) 
    \addr_reg[3]_i_1__2 
       (.I0(index[4]),
        .I1(index[3]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(x16x20_mode_reg2),
        .I5(index[0]),
        .O(addr_reg[3]));
  LUT6 #(
    .INIT(64'h00000000FAAFFF04)) 
    \addr_reg[4]_i_1__2 
       (.I0(index[0]),
        .I1(x16x20_mode_reg2),
        .I2(index[1]),
        .I3(index[2]),
        .I4(index[3]),
        .I5(index[4]),
        .O(\addr_reg[4]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT5 #(
    .INIT(32'h001A0F0A)) 
    \addr_reg[5]_i_1__2 
       (.I0(index[4]),
        .I1(index[0]),
        .I2(index[3]),
        .I3(index[1]),
        .I4(index[2]),
        .O(addr_reg[5]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT5 #(
    .INIT(32'h00001454)) 
    \addr_reg[6]_i_1__2 
       (.I0(index[2]),
        .I1(index[1]),
        .I2(index[3]),
        .I3(index[0]),
        .I4(index[4]),
        .O(\addr_reg[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h5252424223236263)) 
    \addr_reg[7]_i_1__2 
       (.I0(index[4]),
        .I1(index[3]),
        .I2(index[2]),
        .I3(x16x20_mode_reg2),
        .I4(index[0]),
        .I5(index[1]),
        .O(addr_reg[7]));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[0]),
        .Q(drp_addr_27[0]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[1]),
        .Q(drp_addr_27[1]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[2]),
        .Q(drp_addr_27[2]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[3]),
        .Q(drp_addr_27[3]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\addr_reg[4]_i_1__2_n_0 ),
        .Q(drp_addr_27[4]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[5]),
        .Q(drp_addr_27[5]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\addr_reg[6]_i_1__2_n_0 ),
        .Q(drp_addr_27[6]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(addr_reg[7]),
        .Q(drp_addr_27[7]),
        .R(RST_DCLK_RESET));
  LUT6 #(
    .INIT(64'hFF5E7F6FA1001000)) 
    \di_reg[0]_i_2__2 
       (.I0(index[3]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(data_pma_rsv_a),
        .I4(index[0]),
        .I5(do_reg2[0]),
        .O(\di_reg[0]_i_2__2_n_0 ));
  LUT5 #(
    .INIT(32'h000005D0)) 
    \di_reg[0]_i_3__2 
       (.I0(index[0]),
        .I1(do_reg2[0]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(index[3]),
        .O(\di_reg[0]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'h45555F5540000000)) 
    \di_reg[10]_i_1__2 
       (.I0(index[4]),
        .I1(\di_reg[15]_i_2__2_n_0 ),
        .I2(index[1]),
        .I3(index[2]),
        .I4(index[3]),
        .I5(do_reg2[10]),
        .O(di_reg[10]));
  LUT6 #(
    .INIT(64'h4F40DDDD4F408888)) 
    \di_reg[11]_i_2__2 
       (.I0(index[3]),
        .I1(do_reg2[11]),
        .I2(index[1]),
        .I3(\di_reg[11]_i_4__2_n_0 ),
        .I4(index[2]),
        .I5(\di_reg[11]_i_5__2_n_0 ),
        .O(\di_reg[11]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000008080838)) 
    \di_reg[11]_i_3__2 
       (.I0(do_reg2[11]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(data_pma_rsv_a),
        .I4(index[0]),
        .I5(index[3]),
        .O(\di_reg[11]_i_3__2_n_0 ));
  LUT4 #(
    .INIT(16'hB8BB)) 
    \di_reg[11]_i_4__2 
       (.I0(do_reg2[11]),
        .I1(index[0]),
        .I2(rate_reg2[0]),
        .I3(rate_reg2[1]),
        .O(\di_reg[11]_i_4__2_n_0 ));
  LUT5 #(
    .INIT(32'hEFFF0100)) 
    \di_reg[11]_i_5__2 
       (.I0(index[1]),
        .I1(index[0]),
        .I2(x16_reg2),
        .I3(x16x20_mode_reg2),
        .I4(do_reg2[11]),
        .O(\di_reg[11]_i_5__2_n_0 ));
  LUT6 #(
    .INIT(64'h777EFFFF01080000)) 
    \di_reg[12]_i_2__2 
       (.I0(index[3]),
        .I1(index[1]),
        .I2(index[0]),
        .I3(data_pma_rsv_a),
        .I4(index[2]),
        .I5(do_reg2[12]),
        .O(\di_reg[12]_i_2__2_n_0 ));
  LUT5 #(
    .INIT(32'h00000B08)) 
    \di_reg[12]_i_3__2 
       (.I0(do_reg2[12]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(index[0]),
        .I4(index[3]),
        .O(\di_reg[12]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'h767FFFFF00090000)) 
    \di_reg[13]_i_2__2 
       (.I0(index[3]),
        .I1(index[1]),
        .I2(index[0]),
        .I3(data_pma_rsv_a),
        .I4(index[2]),
        .I5(do_reg2[13]),
        .O(\di_reg[13]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000008380808)) 
    \di_reg[13]_i_3__2 
       (.I0(do_reg2[13]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(index[0]),
        .I4(data_pma_rsv_a),
        .I5(index[3]),
        .O(\di_reg[13]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'h0040FFFF00400000)) 
    \di_reg[14]_i_1__2 
       (.I0(index[1]),
        .I1(index[2]),
        .I2(do_reg2[14]),
        .I3(index[3]),
        .I4(index[4]),
        .I5(\di_reg[14]_i_2__2_n_0 ),
        .O(di_reg[14]));
  LUT6 #(
    .INIT(64'h653BFFF721080080)) 
    \di_reg[14]_i_2__2 
       (.I0(index[3]),
        .I1(index[1]),
        .I2(data_pma_rsv_a),
        .I3(index[0]),
        .I4(index[2]),
        .I5(do_reg2[14]),
        .O(\di_reg[14]_i_2__2_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \di_reg[14]_i_3 
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .O(data_pma_rsv_a));
  LUT6 #(
    .INIT(64'h45555F5540000000)) 
    \di_reg[15]_i_1__2 
       (.I0(index[4]),
        .I1(\di_reg[15]_i_2__2_n_0 ),
        .I2(index[1]),
        .I3(index[2]),
        .I4(index[3]),
        .I5(do_reg2[15]),
        .O(di_reg[15]));
  LUT3 #(
    .INIT(8'h0D)) 
    \di_reg[15]_i_2__2 
       (.I0(rate_reg2[1]),
        .I1(rate_reg2[0]),
        .I2(index[0]),
        .O(\di_reg[15]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h5FEE4E0076FF1000)) 
    \di_reg[1]_i_2__2 
       (.I0(index[3]),
        .I1(index[2]),
        .I2(data_pma_rsv_a),
        .I3(index[1]),
        .I4(do_reg2[1]),
        .I5(index[0]),
        .O(\di_reg[1]_i_2__2_n_0 ));
  LUT5 #(
    .INIT(32'h000005D0)) 
    \di_reg[1]_i_3__2 
       (.I0(index[0]),
        .I1(do_reg2[1]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(index[3]),
        .O(\di_reg[1]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'h5DEE080067FF0100)) 
    \di_reg[2]_i_2__2 
       (.I0(index[3]),
        .I1(index[2]),
        .I2(data_pma_rsv_a),
        .I3(index[1]),
        .I4(do_reg2[2]),
        .I5(index[0]),
        .O(\di_reg[2]_i_2__2_n_0 ));
  LUT5 #(
    .INIT(32'h00000380)) 
    \di_reg[2]_i_3__2 
       (.I0(do_reg2[2]),
        .I1(index[0]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(index[3]),
        .O(\di_reg[2]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'h43FFFFFF40000000)) 
    \di_reg[3]_i_2__2 
       (.I0(data_pma_rsv_a),
        .I1(index[2]),
        .I2(index[0]),
        .I3(index[1]),
        .I4(index[3]),
        .I5(do_reg2[3]),
        .O(\di_reg[3]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h000000000033D100)) 
    \di_reg[3]_i_3__2 
       (.I0(data_pma_rsv_a),
        .I1(index[0]),
        .I2(do_reg2[3]),
        .I3(index[2]),
        .I4(index[1]),
        .I5(index[3]),
        .O(\di_reg[3]_i_3__2_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \di_reg[4]_i_1__2 
       (.I0(\di_reg[4]_i_2__2_n_0 ),
        .I1(index[4]),
        .I2(\di_reg[4]_i_3__2_n_0 ),
        .I3(index[3]),
        .I4(\di_reg[4]_i_4__2_n_0 ),
        .O(di_reg[4]));
  LUT6 #(
    .INIT(64'h0F0400F0000400F0)) 
    \di_reg[4]_i_2__2 
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .I2(index[1]),
        .I3(index[2]),
        .I4(index[0]),
        .I5(do_reg2[4]),
        .O(\di_reg[4]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h400FFFFF40000000)) 
    \di_reg[4]_i_3__2 
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .I2(index[2]),
        .I3(index[0]),
        .I4(index[1]),
        .I5(do_reg2[4]),
        .O(\di_reg[4]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'hBF00BF01FF40FE40)) 
    \di_reg[4]_i_4__2 
       (.I0(index[2]),
        .I1(index[1]),
        .I2(index[0]),
        .I3(do_reg2[4]),
        .I4(x16x20_mode_reg2),
        .I5(data_pma_rsv_a),
        .O(\di_reg[4]_i_4__2_n_0 ));
  LUT6 #(
    .INIT(64'h7F7F7F7E00000000)) 
    \di_reg[5]_i_2__2 
       (.I0(index[3]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(index[0]),
        .I4(x16x20_mode_reg2),
        .I5(do_reg2[5]),
        .O(\di_reg[5]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000038F0380)) 
    \di_reg[5]_i_3__2 
       (.I0(do_reg2[5]),
        .I1(index[0]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(data_pma_rsv_a),
        .I5(index[3]),
        .O(\di_reg[5]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'h7D7F7D7E00000000)) 
    \di_reg[6]_i_2__2 
       (.I0(index[3]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(index[0]),
        .I4(x16x20_mode_reg2),
        .I5(do_reg2[6]),
        .O(\di_reg[6]_i_2__2_n_0 ));
  LUT5 #(
    .INIT(32'h00000380)) 
    \di_reg[6]_i_3__2 
       (.I0(do_reg2[6]),
        .I1(index[0]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(index[3]),
        .O(\di_reg[6]_i_3__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF0900)) 
    \di_reg[7]_i_2__2 
       (.I0(index[2]),
        .I1(index[1]),
        .I2(index[0]),
        .I3(index[3]),
        .I4(do_reg2[7]),
        .O(\di_reg[7]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000003800383)) 
    \di_reg[7]_i_3__2 
       (.I0(do_reg2[7]),
        .I1(index[0]),
        .I2(index[2]),
        .I3(index[1]),
        .I4(data_pma_rsv_a),
        .I5(index[3]),
        .O(\di_reg[7]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'h03333F7300000040)) 
    \di_reg[8]_i_1__2 
       (.I0(index[0]),
        .I1(index[4]),
        .I2(index[1]),
        .I3(index[2]),
        .I4(index[3]),
        .I5(do_reg2[8]),
        .O(di_reg[8]));
  LUT6 #(
    .INIT(64'h03333F7300000040)) 
    \di_reg[9]_i_1__2 
       (.I0(index[0]),
        .I1(index[4]),
        .I2(index[1]),
        .I3(index[2]),
        .I4(index[3]),
        .I5(do_reg2[9]),
        .O(di_reg[9]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[0]),
        .Q(drp_di_48[0]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[0]_i_1__2 
       (.I0(\di_reg[0]_i_2__2_n_0 ),
        .I1(\di_reg[0]_i_3__2_n_0 ),
        .O(di_reg[0]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[10]),
        .Q(drp_di_48[10]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[11]),
        .Q(drp_di_48[11]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[11]_i_1__2 
       (.I0(\di_reg[11]_i_2__2_n_0 ),
        .I1(\di_reg[11]_i_3__2_n_0 ),
        .O(di_reg[11]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[12]),
        .Q(drp_di_48[12]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[12]_i_1__2 
       (.I0(\di_reg[12]_i_2__2_n_0 ),
        .I1(\di_reg[12]_i_3__2_n_0 ),
        .O(di_reg[12]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[13]),
        .Q(drp_di_48[13]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[13]_i_1__2 
       (.I0(\di_reg[13]_i_2__2_n_0 ),
        .I1(\di_reg[13]_i_3__2_n_0 ),
        .O(di_reg[13]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[14]),
        .Q(drp_di_48[14]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[15]),
        .Q(drp_di_48[15]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[1]),
        .Q(drp_di_48[1]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[1]_i_1__2 
       (.I0(\di_reg[1]_i_2__2_n_0 ),
        .I1(\di_reg[1]_i_3__2_n_0 ),
        .O(di_reg[1]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[2]),
        .Q(drp_di_48[2]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[2]_i_1__2 
       (.I0(\di_reg[2]_i_2__2_n_0 ),
        .I1(\di_reg[2]_i_3__2_n_0 ),
        .O(di_reg[2]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[3]),
        .Q(drp_di_48[3]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[3]_i_1__2 
       (.I0(\di_reg[3]_i_2__2_n_0 ),
        .I1(\di_reg[3]_i_3__2_n_0 ),
        .O(di_reg[3]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[4]),
        .Q(drp_di_48[4]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[5]),
        .Q(drp_di_48[5]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[5]_i_1__2 
       (.I0(\di_reg[5]_i_2__2_n_0 ),
        .I1(\di_reg[5]_i_3__2_n_0 ),
        .O(di_reg[5]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[6]),
        .Q(drp_di_48[6]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[6]_i_1__2 
       (.I0(\di_reg[6]_i_2__2_n_0 ),
        .I1(\di_reg[6]_i_3__2_n_0 ),
        .O(di_reg[6]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[7]),
        .Q(drp_di_48[7]),
        .R(RST_DCLK_RESET));
  MUXF7 \di_reg_reg[7]_i_1__2 
       (.I0(\di_reg[7]_i_2__2_n_0 ),
        .I1(\di_reg[7]_i_3__2_n_0 ),
        .O(di_reg[7]),
        .S(index[4]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[8]),
        .Q(drp_di_48[8]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di_reg[9]),
        .Q(drp_di_48[9]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[0]),
        .Q(do_reg1[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[10]),
        .Q(do_reg1[10]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[11]),
        .Q(do_reg1[11]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[12]),
        .Q(do_reg1[12]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[13]),
        .Q(do_reg1[13]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[14]),
        .Q(do_reg1[14]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[15]),
        .Q(do_reg1[15]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[1]),
        .Q(do_reg1[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[2]),
        .Q(do_reg1[2]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[3]),
        .Q(do_reg1[3]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[4]),
        .Q(do_reg1[4]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[5]),
        .Q(do_reg1[5]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[6]),
        .Q(do_reg1[6]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[7]),
        .Q(do_reg1[7]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[8]),
        .Q(do_reg1[8]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[9]),
        .Q(do_reg1[9]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[0]),
        .Q(do_reg2[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[10]),
        .Q(do_reg2[10]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[11]),
        .Q(do_reg2[11]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[12]),
        .Q(do_reg2[12]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[13]),
        .Q(do_reg2[13]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[14]),
        .Q(do_reg2[14]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[15]),
        .Q(do_reg2[15]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[1]),
        .Q(do_reg2[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[2]),
        .Q(do_reg2[2]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[3]),
        .Q(do_reg2[3]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[4]),
        .Q(do_reg2[4]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[5]),
        .Q(do_reg2[5]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[6]),
        .Q(do_reg2[6]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[7]),
        .Q(do_reg2[7]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[8]),
        .Q(do_reg2[8]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[9]),
        .Q(do_reg2[9]),
        .R(RST_DCLK_RESET));
  LUT4 #(
    .INIT(16'h0001)) 
    done_i_1__3
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(start_reg2),
        .I3(Q[1]),
        .O(done_i_1__3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    done_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(done_i_1__3_n_0),
        .Q(DRP_DONE),
        .R(RST_DCLK_RESET));
  LUT6 #(
    .INIT(64'h0377FFFF03770000)) 
    \fsm[0]_i_1__3 
       (.I0(fsm1),
        .I1(Q[1]),
        .I2(rdy_reg2),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(\fsm[0]_i_3__2_n_0 ),
        .O(fsm[0]));
  LUT6 #(
    .INIT(64'h1000000110000000)) 
    \fsm[0]_i_2__3 
       (.I0(index[3]),
        .I1(index[1]),
        .I2(index[0]),
        .I3(index[4]),
        .I4(index[2]),
        .I5(x16x20_mode_reg2),
        .O(fsm1));
  LUT5 #(
    .INIT(32'h47FF47CC)) 
    \fsm[0]_i_3__2 
       (.I0(rdy_reg2),
        .I1(Q[1]),
        .I2(load_cnt),
        .I3(Q[0]),
        .I4(start_reg2),
        .O(\fsm[0]_i_3__2_n_0 ));
  LUT5 #(
    .INIT(32'h1D501850)) 
    \fsm[1]_i_1__3 
       (.I0(Q[2]),
        .I1(rdy_reg2),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(load_cnt),
        .O(fsm[1]));
  LUT4 #(
    .INIT(16'h6222)) 
    \fsm[2]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(rdy_reg2),
        .I3(Q[0]),
        .O(fsm[2]));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(fsm[0]),
        .Q(Q[0]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(fsm[1]),
        .Q(Q[1]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(fsm[2]),
        .Q(Q[2]),
        .R(RST_DCLK_RESET));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \gt_ch_drp_rdy[3]_INST_0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .O(gt_ch_drp_rdy));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_10__2 
       (.I0(ext_ch_gt_drpdi[12]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_48[12]),
        .O(DRPDI[12]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_11__2 
       (.I0(ext_ch_gt_drpdi[11]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_48[11]),
        .O(DRPDI[11]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_12__2 
       (.I0(ext_ch_gt_drpdi[10]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_48[10]),
        .O(DRPDI[10]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_13__2 
       (.I0(ext_ch_gt_drpdi[9]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_48[9]),
        .O(DRPDI[9]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_14__2 
       (.I0(ext_ch_gt_drpdi[8]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_48[8]),
        .O(DRPDI[8]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_15__2 
       (.I0(ext_ch_gt_drpdi[7]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_48[7]),
        .O(DRPDI[7]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_16__2 
       (.I0(ext_ch_gt_drpdi[6]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_48[6]),
        .O(DRPDI[6]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_17__2 
       (.I0(ext_ch_gt_drpdi[5]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_48[5]),
        .O(DRPDI[5]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_18__2 
       (.I0(ext_ch_gt_drpdi[4]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_48[4]),
        .O(DRPDI[4]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_19__2 
       (.I0(ext_ch_gt_drpdi[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_48[3]),
        .O(DRPDI[3]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_20__2 
       (.I0(ext_ch_gt_drpdi[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_48[2]),
        .O(DRPDI[2]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_21__2 
       (.I0(ext_ch_gt_drpdi[1]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_48[1]),
        .O(DRPDI[1]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_22__2 
       (.I0(ext_ch_gt_drpdi[0]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_48[0]),
        .O(DRPDI[0]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT4 #(
    .INIT(16'h030E)) 
    \gtx_channel.gtxe2_channel_i_i_3__2 
       (.I0(ext_ch_gt_drpen),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .O(drp_mux_en_3));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT4 #(
    .INIT(16'h0100)) 
    \gtx_channel.gtxe2_channel_i_i_40__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(ext_ch_gt_drpaddr[8]),
        .O(DRPADDR[8]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_41__2 
       (.I0(ext_ch_gt_drpaddr[7]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_addr_27[7]),
        .O(DRPADDR[7]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_42__2 
       (.I0(ext_ch_gt_drpaddr[6]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_addr_27[6]),
        .O(DRPADDR[6]));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_43__2 
       (.I0(ext_ch_gt_drpaddr[5]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_addr_27[5]),
        .O(DRPADDR[5]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_44__2 
       (.I0(ext_ch_gt_drpaddr[4]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_addr_27[4]),
        .O(DRPADDR[4]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_45__2 
       (.I0(ext_ch_gt_drpaddr[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_addr_27[3]),
        .O(DRPADDR[3]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_46__2 
       (.I0(ext_ch_gt_drpaddr[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_addr_27[2]),
        .O(DRPADDR[2]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_47__2 
       (.I0(ext_ch_gt_drpaddr[1]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_addr_27[1]),
        .O(DRPADDR[1]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_48 
       (.I0(ext_ch_gt_drpaddr[0]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_addr_27[0]),
        .O(DRPADDR[0]));
  LUT4 #(
    .INIT(16'h0302)) 
    \gtx_channel.gtxe2_channel_i_i_4__2 
       (.I0(ext_ch_gt_drpwe),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .O(drp_mux_we_3));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_7__2 
       (.I0(ext_ch_gt_drpdi[15]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_48[15]),
        .O(DRPDI[15]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_8__2 
       (.I0(ext_ch_gt_drpdi[14]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_48[14]),
        .O(DRPDI[14]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtx_channel.gtxe2_channel_i_i_9__2 
       (.I0(ext_ch_gt_drpdi[13]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_di_48[13]),
        .O(DRPDI[13]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gtxreset_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(DRP_GTXRESET),
        .Q(gtxreset_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gtxreset_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(gtxreset_reg1),
        .Q(gtxreset_reg2),
        .R(RST_DCLK_RESET));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT4 #(
    .INIT(16'h0100)) 
    \index[0]_i_1__2 
       (.I0(Q[0]),
        .I1(fsm1),
        .I2(index[0]),
        .I3(Q[2]),
        .O(\index[0]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT5 #(
    .INIT(32'h00140000)) 
    \index[1]_i_1__2 
       (.I0(Q[0]),
        .I1(index[1]),
        .I2(index[0]),
        .I3(fsm1),
        .I4(Q[2]),
        .O(\index[1]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000144400000000)) 
    \index[2]_i_1__2 
       (.I0(Q[0]),
        .I1(index[2]),
        .I2(index[1]),
        .I3(index[0]),
        .I4(fsm1),
        .I5(Q[2]),
        .O(\index[2]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000144400000000)) 
    \index[3]_i_1__2 
       (.I0(Q[0]),
        .I1(index[3]),
        .I2(index[2]),
        .I3(\index[3]_i_2__2_n_0 ),
        .I4(fsm1),
        .I5(Q[2]),
        .O(\index[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \index[3]_i_2__2 
       (.I0(index[1]),
        .I1(index[0]),
        .O(\index[3]_i_2__2_n_0 ));
  LUT3 #(
    .INIT(8'hA1)) 
    \index[4]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .O(\index[4]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000144400000000)) 
    \index[4]_i_2__2 
       (.I0(Q[0]),
        .I1(index[4]),
        .I2(index[3]),
        .I3(\index[4]_i_3__2_n_0 ),
        .I4(fsm1),
        .I5(Q[2]),
        .O(\index[4]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \index[4]_i_3__2 
       (.I0(index[2]),
        .I1(index[0]),
        .I2(index[1]),
        .O(\index[4]_i_3__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[0] 
       (.C(pipe_dclk_in),
        .CE(\index[4]_i_1__2_n_0 ),
        .D(\index[0]_i_1__2_n_0 ),
        .Q(index[0]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[1] 
       (.C(pipe_dclk_in),
        .CE(\index[4]_i_1__2_n_0 ),
        .D(\index[1]_i_1__2_n_0 ),
        .Q(index[1]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[2] 
       (.C(pipe_dclk_in),
        .CE(\index[4]_i_1__2_n_0 ),
        .D(\index[2]_i_1__2_n_0 ),
        .Q(index[2]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[3] 
       (.C(pipe_dclk_in),
        .CE(\index[4]_i_1__2_n_0 ),
        .D(\index[3]_i_1__2_n_0 ),
        .Q(index[3]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[4] 
       (.C(pipe_dclk_in),
        .CE(\index[4]_i_1__2_n_0 ),
        .D(\index[4]_i_2__2_n_0 ),
        .Q(index[4]),
        .R(RST_DCLK_RESET));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \load_cnt[0]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[0]),
        .O(\load_cnt[0]_i_1__3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \load_cnt_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\load_cnt[0]_i_1__3_n_0 ),
        .Q(load_cnt),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg1_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\rate_reg1_reg[0]_0 ),
        .Q(rate_reg1[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg1_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rate_reg1[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg2_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(rate_reg1[0]),
        .Q(rate_reg2[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg2_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(rate_reg1[1]),
        .Q(rate_reg2[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rdy_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ext_ch_gt_drprdy),
        .Q(rdy_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rdy_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(rdy_reg1),
        .Q(rdy_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE start_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(RATE_DRP_START),
        .Q(start_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE start_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(start_reg1),
        .Q(start_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(RATE_DRP_X16X20_MODE),
        .Q(x16_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(x16_reg1),
        .Q(x16_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16x20_mode_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(RATE_DRP_X16X20_MODE),
        .Q(x16x20_mode_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16x20_mode_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(x16x20_mode_reg1),
        .Q(x16x20_mode_reg2),
        .R(RST_DCLK_RESET));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pipe_eq" *) 
module pcie_7x_0_pcie_7x_0_pipe_eq
   (TXPRECURSOR,
    TXMAINCURSOR,
    TXPOSTCURSOR,
    USER_RXEQ_ADAPT_DONE,
    RST_CPLLRESET,
    pipe_pclk_in,
    USER_RATE_GEN3);
  output [4:0]TXPRECURSOR;
  output [6:0]TXMAINCURSOR;
  output [4:0]TXPOSTCURSOR;
  output USER_RXEQ_ADAPT_DONE;
  input RST_CPLLRESET;
  input pipe_pclk_in;
  input USER_RATE_GEN3;

  wire \FSM_onehot_fsm_rx[1]_i_1_n_0 ;
  wire \FSM_onehot_fsm_rx[1]_i_2_n_0 ;
  wire \FSM_onehot_fsm_rx[3]_i_1_n_0 ;
  wire \FSM_onehot_fsm_rx[4]_i_1_n_0 ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[1] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[2] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[3] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[4] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[5] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[6] ;
  wire \FSM_sequential_fsm_tx[0]_i_1_n_0 ;
  wire \FSM_sequential_fsm_tx[1]_i_1_n_0 ;
  wire \FSM_sequential_fsm_tx[1]_i_2_n_0 ;
  wire \FSM_sequential_fsm_tx[2]_i_1_n_0 ;
  wire \FSM_sequential_fsm_tx[2]_i_2_n_0 ;
  wire RST_CPLLRESET;
  wire [6:0]TXMAINCURSOR;
  wire [4:0]TXPOSTCURSOR;
  wire [4:0]TXPRECURSOR;
  wire USER_RATE_GEN3;
  wire USER_RXEQ_ADAPT_DONE;
  wire [2:0]fsm_tx;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg2;
  wire [17:0]p_0_out;
  wire pipe_pclk_in;
  wire rxeq_adapt_done_i_2_n_0;
  wire rxeq_adapt_done_reg_i_2_n_0;
  wire rxeq_adapt_done_reg_reg_n_0;
  wire [2:0]rxeq_cnt;
  wire \rxeq_cnt_reg_n_0_[0] ;
  wire \rxeq_cnt_reg_n_0_[1] ;
  wire \rxeq_cnt_reg_n_0_[2] ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rxeq_control_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rxeq_control_reg2;
  wire [5:0]rxeq_fs;
  wire \rxeq_fs[5]_i_1_n_0 ;
  wire \rxeq_fs_reg_n_0_[0] ;
  wire \rxeq_fs_reg_n_0_[1] ;
  wire \rxeq_fs_reg_n_0_[2] ;
  wire \rxeq_fs_reg_n_0_[3] ;
  wire \rxeq_fs_reg_n_0_[4] ;
  wire \rxeq_fs_reg_n_0_[5] ;
  wire [5:0]rxeq_lf;
  wire \rxeq_lf[5]_i_1_n_0 ;
  wire \rxeq_lf_reg_n_0_[0] ;
  wire \rxeq_lf_reg_n_0_[1] ;
  wire \rxeq_lf_reg_n_0_[2] ;
  wire \rxeq_lf_reg_n_0_[3] ;
  wire \rxeq_lf_reg_n_0_[4] ;
  wire \rxeq_lf_reg_n_0_[5] ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]rxeq_lffs_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]rxeq_lffs_reg2;
  wire rxeq_new_txcoeff_req;
  wire rxeq_new_txcoeff_req_reg_n_0;
  wire \rxeq_preset[0]_i_1_n_0 ;
  wire \rxeq_preset[1]_i_1_n_0 ;
  wire \rxeq_preset[2]_i_1_n_0 ;
  wire \rxeq_preset[2]_i_2_n_0 ;
  wire \rxeq_preset[2]_i_3_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]rxeq_preset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]rxeq_preset_reg2;
  wire \rxeq_preset_reg_n_0_[0] ;
  wire \rxeq_preset_reg_n_0_[1] ;
  wire \rxeq_preset_reg_n_0_[2] ;
  wire rxeq_preset_valid;
  wire rxeq_scan_i_n_0;
  wire rxeq_scan_i_n_1;
  wire rxeq_scan_i_n_2;
  wire rxeq_scan_i_n_4;
  wire rxeq_scan_i_n_5;
  wire [17:0]rxeq_txcoeff;
  wire \rxeq_txcoeff_reg_n_0_[0] ;
  wire \rxeq_txcoeff_reg_n_0_[10] ;
  wire \rxeq_txcoeff_reg_n_0_[11] ;
  wire \rxeq_txcoeff_reg_n_0_[12] ;
  wire \rxeq_txcoeff_reg_n_0_[13] ;
  wire \rxeq_txcoeff_reg_n_0_[14] ;
  wire \rxeq_txcoeff_reg_n_0_[15] ;
  wire \rxeq_txcoeff_reg_n_0_[16] ;
  wire \rxeq_txcoeff_reg_n_0_[17] ;
  wire \rxeq_txcoeff_reg_n_0_[1] ;
  wire \rxeq_txcoeff_reg_n_0_[2] ;
  wire \rxeq_txcoeff_reg_n_0_[3] ;
  wire \rxeq_txcoeff_reg_n_0_[4] ;
  wire \rxeq_txcoeff_reg_n_0_[5] ;
  wire \rxeq_txcoeff_reg_n_0_[6] ;
  wire \rxeq_txcoeff_reg_n_0_[7] ;
  wire \rxeq_txcoeff_reg_n_0_[8] ;
  wire \rxeq_txcoeff_reg_n_0_[9] ;
  wire [3:0]rxeq_txpreset;
  wire \rxeq_txpreset[3]_i_1_n_0 ;
  wire \rxeq_txpreset[3]_i_3_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]rxeq_txpreset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]rxeq_txpreset_reg2;
  wire \rxeq_txpreset_reg_n_0_[0] ;
  wire \rxeq_txpreset_reg_n_0_[1] ;
  wire \rxeq_txpreset_reg_n_0_[2] ;
  wire \rxeq_txpreset_reg_n_0_[3] ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_en_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_en_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_mode_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_mode_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]rxeq_user_txcoeff_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]rxeq_user_txcoeff_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]txeq_control_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]txeq_control_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]txeq_deemph_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]txeq_deemph_reg2;
  wire \txeq_preset[17]_i_1_n_0 ;
  wire \txeq_preset[3]_i_1_n_0 ;
  wire \txeq_preset[7]_i_1_n_0 ;
  wire txeq_preset_done;
  wire txeq_preset_done_i_1_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txeq_preset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txeq_preset_reg2;
  wire \txeq_preset_reg_n_0_[0] ;
  wire \txeq_preset_reg_n_0_[10] ;
  wire \txeq_preset_reg_n_0_[11] ;
  wire \txeq_preset_reg_n_0_[12] ;
  wire \txeq_preset_reg_n_0_[13] ;
  wire \txeq_preset_reg_n_0_[14] ;
  wire \txeq_preset_reg_n_0_[15] ;
  wire \txeq_preset_reg_n_0_[16] ;
  wire \txeq_preset_reg_n_0_[17] ;
  wire \txeq_preset_reg_n_0_[1] ;
  wire \txeq_preset_reg_n_0_[2] ;
  wire \txeq_preset_reg_n_0_[3] ;
  wire \txeq_preset_reg_n_0_[7] ;
  wire \txeq_preset_reg_n_0_[8] ;
  wire \txeq_preset_reg_n_0_[9] ;
  wire txeq_txcoeff;
  wire \txeq_txcoeff[0]_i_1_n_0 ;
  wire \txeq_txcoeff[0]_i_2_n_0 ;
  wire \txeq_txcoeff[10]_i_1_n_0 ;
  wire \txeq_txcoeff[10]_i_2_n_0 ;
  wire \txeq_txcoeff[11]_i_1_n_0 ;
  wire \txeq_txcoeff[11]_i_2_n_0 ;
  wire \txeq_txcoeff[12]_i_1_n_0 ;
  wire \txeq_txcoeff[12]_i_2_n_0 ;
  wire \txeq_txcoeff[13]_i_1_n_0 ;
  wire \txeq_txcoeff[13]_i_2_n_0 ;
  wire \txeq_txcoeff[14]_i_1_n_0 ;
  wire \txeq_txcoeff[14]_i_2_n_0 ;
  wire \txeq_txcoeff[15]_i_1_n_0 ;
  wire \txeq_txcoeff[15]_i_2_n_0 ;
  wire \txeq_txcoeff[16]_i_1_n_0 ;
  wire \txeq_txcoeff[16]_i_2_n_0 ;
  wire \txeq_txcoeff[17]_i_1_n_0 ;
  wire \txeq_txcoeff[17]_i_2_n_0 ;
  wire \txeq_txcoeff[18]_i_2_n_0 ;
  wire \txeq_txcoeff[18]_i_3_n_0 ;
  wire \txeq_txcoeff[1]_i_1_n_0 ;
  wire \txeq_txcoeff[1]_i_2_n_0 ;
  wire \txeq_txcoeff[2]_i_1_n_0 ;
  wire \txeq_txcoeff[2]_i_2_n_0 ;
  wire \txeq_txcoeff[3]_i_1_n_0 ;
  wire \txeq_txcoeff[3]_i_2_n_0 ;
  wire \txeq_txcoeff[4]_i_1_n_0 ;
  wire \txeq_txcoeff[4]_i_2_n_0 ;
  wire \txeq_txcoeff[5]_i_1_n_0 ;
  wire \txeq_txcoeff[5]_i_2_n_0 ;
  wire \txeq_txcoeff[6]_i_1_n_0 ;
  wire \txeq_txcoeff[6]_i_2_n_0 ;
  wire \txeq_txcoeff[7]_i_1_n_0 ;
  wire \txeq_txcoeff[7]_i_2_n_0 ;
  wire \txeq_txcoeff[8]_i_1_n_0 ;
  wire \txeq_txcoeff[8]_i_2_n_0 ;
  wire \txeq_txcoeff[9]_i_1_n_0 ;
  wire \txeq_txcoeff[9]_i_2_n_0 ;
  wire [1:0]txeq_txcoeff_cnt;
  wire \txeq_txcoeff_cnt_reg_n_0_[0] ;
  wire \txeq_txcoeff_cnt_reg_n_0_[1] ;
  wire \txeq_txcoeff_reg_n_0_[0] ;
  wire \txeq_txcoeff_reg_n_0_[10] ;
  wire \txeq_txcoeff_reg_n_0_[11] ;
  wire \txeq_txcoeff_reg_n_0_[12] ;
  wire \txeq_txcoeff_reg_n_0_[13] ;
  wire \txeq_txcoeff_reg_n_0_[14] ;
  wire \txeq_txcoeff_reg_n_0_[15] ;
  wire \txeq_txcoeff_reg_n_0_[16] ;
  wire \txeq_txcoeff_reg_n_0_[17] ;
  wire \txeq_txcoeff_reg_n_0_[18] ;
  wire \txeq_txcoeff_reg_n_0_[1] ;
  wire \txeq_txcoeff_reg_n_0_[2] ;
  wire \txeq_txcoeff_reg_n_0_[3] ;
  wire \txeq_txcoeff_reg_n_0_[4] ;
  wire \txeq_txcoeff_reg_n_0_[5] ;
  wire \txeq_txcoeff_reg_n_0_[6] ;
  wire \txeq_txcoeff_reg_n_0_[7] ;
  wire \txeq_txcoeff_reg_n_0_[8] ;
  wire \txeq_txcoeff_reg_n_0_[9] ;

  LUT5 #(
    .INIT(32'hABABABAA)) 
    \FSM_onehot_fsm_rx[1]_i_1 
       (.I0(\FSM_onehot_fsm_rx[1]_i_2_n_0 ),
        .I1(rxeq_control_reg2[1]),
        .I2(rxeq_control_reg2[0]),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .O(\FSM_onehot_fsm_rx[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \FSM_onehot_fsm_rx[1]_i_2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .O(\FSM_onehot_fsm_rx[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF8FF88888888)) 
    \FSM_onehot_fsm_rx[3]_i_1 
       (.I0(rxeq_control_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\rxeq_cnt_reg_n_0_[2] ),
        .I3(\rxeq_cnt_reg_n_0_[1] ),
        .I4(\rxeq_cnt_reg_n_0_[0] ),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm_rx[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT5 #(
    .INIT(32'h2ABA2AAA)) 
    \FSM_onehot_fsm_rx[4]_i_1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(\rxeq_cnt_reg_n_0_[2] ),
        .I2(\rxeq_cnt_reg_n_0_[1] ),
        .I3(\rxeq_cnt_reg_n_0_[0] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm_rx[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx[1]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_2),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx[3]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx[4]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_1),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_0),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hC04FC043C04FF04F)) 
    \FSM_sequential_fsm_tx[0]_i_1 
       (.I0(\FSM_sequential_fsm_tx[1]_i_2_n_0 ),
        .I1(fsm_tx[0]),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[2]),
        .I4(txeq_control_reg2[1]),
        .I5(txeq_control_reg2[0]),
        .O(\FSM_sequential_fsm_tx[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h3F703F7C3F7C0F70)) 
    \FSM_sequential_fsm_tx[1]_i_1 
       (.I0(\FSM_sequential_fsm_tx[1]_i_2_n_0 ),
        .I1(fsm_tx[0]),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[2]),
        .I4(txeq_control_reg2[1]),
        .I5(txeq_control_reg2[0]),
        .O(\FSM_sequential_fsm_tx[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_fsm_tx[1]_i_2 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .O(\FSM_sequential_fsm_tx[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h3A2A2A227F7F7F77)) 
    \FSM_sequential_fsm_tx[2]_i_1 
       (.I0(fsm_tx[2]),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[0]),
        .I3(txeq_control_reg2[1]),
        .I4(txeq_control_reg2[0]),
        .I5(\FSM_sequential_fsm_tx[2]_i_2_n_0 ),
        .O(\FSM_sequential_fsm_tx[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT5 #(
    .INIT(32'hD0FFDFFF)) 
    \FSM_sequential_fsm_tx[2]_i_2 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I2(fsm_tx[0]),
        .I3(fsm_tx[1]),
        .I4(txeq_preset_done),
        .O(\FSM_sequential_fsm_tx[2]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_TXEQ_QUERY:101,FSM_TXEQ_PRESET:010,FSM_TXEQ_TXCOEFF:011,FSM_TXEQ_REMAP:100,FSM_TXEQ_DONE:110,FSM_TXEQ_IDLE:001,iSTATE:000" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_sequential_fsm_tx_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_sequential_fsm_tx[0]_i_1_n_0 ),
        .Q(fsm_tx[0]),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_TXEQ_QUERY:101,FSM_TXEQ_PRESET:010,FSM_TXEQ_TXCOEFF:011,FSM_TXEQ_REMAP:100,FSM_TXEQ_DONE:110,FSM_TXEQ_IDLE:001,iSTATE:000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_fsm_tx_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_sequential_fsm_tx[1]_i_1_n_0 ),
        .Q(fsm_tx[1]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_TXEQ_QUERY:101,FSM_TXEQ_PRESET:010,FSM_TXEQ_TXCOEFF:011,FSM_TXEQ_REMAP:100,FSM_TXEQ_DONE:110,FSM_TXEQ_IDLE:001,iSTATE:000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_fsm_tx_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_sequential_fsm_tx[2]_i_1_n_0 ),
        .Q(fsm_tx[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_RATE_GEN3),
        .Q(gen3_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_reg1),
        .Q(gen3_reg2),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_22 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[17] ),
        .O(TXPOSTCURSOR[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_23 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[16] ),
        .O(TXPOSTCURSOR[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_24 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[15] ),
        .O(TXPOSTCURSOR[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_25 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[14] ),
        .O(TXPOSTCURSOR[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_26 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[13] ),
        .O(TXPOSTCURSOR[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_27 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[4] ),
        .O(TXPRECURSOR[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_28 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[3] ),
        .O(TXPRECURSOR[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_29 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[2] ),
        .O(TXPRECURSOR[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_30 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[1] ),
        .O(TXPRECURSOR[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_31 
       (.I0(\txeq_txcoeff_reg_n_0_[0] ),
        .I1(gen3_reg2),
        .O(TXPRECURSOR[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_32 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[12] ),
        .O(TXMAINCURSOR[6]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_33 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[11] ),
        .O(TXMAINCURSOR[5]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_34 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[10] ),
        .O(TXMAINCURSOR[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_35 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[9] ),
        .O(TXMAINCURSOR[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_36 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[8] ),
        .O(TXMAINCURSOR[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_37 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[7] ),
        .O(TXMAINCURSOR[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_38 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[6] ),
        .O(TXMAINCURSOR[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
    rxeq_adapt_done_i_2
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .O(rxeq_adapt_done_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_adapt_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_5),
        .Q(USER_RXEQ_ADAPT_DONE),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'h08)) 
    rxeq_adapt_done_reg_i_2
       (.I0(rxeq_control_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(rxeq_control_reg2[1]),
        .O(rxeq_adapt_done_reg_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_adapt_done_reg_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_4),
        .Q(rxeq_adapt_done_reg_reg_n_0),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h8888FFF8)) 
    \rxeq_cnt[0]_i_1 
       (.I0(rxeq_control_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I4(\rxeq_cnt_reg_n_0_[0] ),
        .O(rxeq_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT4 #(
    .INIT(16'h6660)) 
    \rxeq_cnt[1]_i_1 
       (.I0(\rxeq_cnt_reg_n_0_[0] ),
        .I1(\rxeq_cnt_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(rxeq_cnt[1]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT5 #(
    .INIT(32'h78787800)) 
    \rxeq_cnt[2]_i_1 
       (.I0(\rxeq_cnt_reg_n_0_[1] ),
        .I1(\rxeq_cnt_reg_n_0_[0] ),
        .I2(\rxeq_cnt_reg_n_0_[2] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(rxeq_cnt[2]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_cnt[0]),
        .Q(\rxeq_cnt_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_cnt[1]),
        .Q(\rxeq_cnt_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_cnt[2]),
        .Q(\rxeq_cnt_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_control_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_control_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_control_reg1[0]),
        .Q(rxeq_control_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_control_reg1[1]),
        .Q(rxeq_control_reg2[1]),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[0]_i_1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[0]),
        .O(rxeq_fs[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[1]_i_1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[1]),
        .O(rxeq_fs[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[2]_i_1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[2]),
        .O(rxeq_fs[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[3]_i_1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[3]),
        .O(rxeq_fs[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[4]_i_1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[4]),
        .O(rxeq_fs[4]));
  LUT3 #(
    .INIT(8'hF8)) 
    \rxeq_fs[5]_i_1 
       (.I0(rxeq_control_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx[1]_i_2_n_0 ),
        .O(\rxeq_fs[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[5]_i_2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[5]),
        .O(rxeq_fs[5]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1_n_0 ),
        .D(rxeq_fs[0]),
        .Q(\rxeq_fs_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1_n_0 ),
        .D(rxeq_fs[1]),
        .Q(\rxeq_fs_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1_n_0 ),
        .D(rxeq_fs[2]),
        .Q(\rxeq_fs_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1_n_0 ),
        .D(rxeq_fs[3]),
        .Q(\rxeq_fs_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[4] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1_n_0 ),
        .D(rxeq_fs[4]),
        .Q(\rxeq_fs_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[5] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1_n_0 ),
        .D(rxeq_fs[5]),
        .Q(\rxeq_fs_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[0]_i_1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[0]),
        .O(rxeq_lf[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[1]_i_1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[1]),
        .O(rxeq_lf[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[2]_i_1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[2]),
        .O(rxeq_lf[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[3]_i_1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[3]),
        .O(rxeq_lf[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[4]_i_1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[4]),
        .O(rxeq_lf[4]));
  LUT5 #(
    .INIT(32'hEAAAAAAA)) 
    \rxeq_lf[5]_i_1 
       (.I0(\FSM_onehot_fsm_rx[1]_i_2_n_0 ),
        .I1(\rxeq_cnt_reg_n_0_[2] ),
        .I2(\rxeq_cnt_reg_n_0_[0] ),
        .I3(\rxeq_cnt_reg_n_0_[1] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .O(\rxeq_lf[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[5]_i_2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[5]),
        .O(rxeq_lf[5]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1_n_0 ),
        .D(rxeq_lf[0]),
        .Q(\rxeq_lf_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1_n_0 ),
        .D(rxeq_lf[1]),
        .Q(\rxeq_lf_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1_n_0 ),
        .D(rxeq_lf[2]),
        .Q(\rxeq_lf_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1_n_0 ),
        .D(rxeq_lf[3]),
        .Q(\rxeq_lf_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[4] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1_n_0 ),
        .D(rxeq_lf[4]),
        .Q(\rxeq_lf_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[5] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1_n_0 ),
        .D(rxeq_lf[5]),
        .Q(\rxeq_lf_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[0]),
        .Q(rxeq_lffs_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[1]),
        .Q(rxeq_lffs_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[2]),
        .Q(rxeq_lffs_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[3]),
        .Q(rxeq_lffs_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[4]),
        .Q(rxeq_lffs_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[5]),
        .Q(rxeq_lffs_reg2[5]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_new_txcoeff_req_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_new_txcoeff_req),
        .Q(rxeq_new_txcoeff_req_reg_n_0),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hA8FFA800)) 
    \rxeq_preset[0]_i_1 
       (.I0(rxeq_preset_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(\rxeq_preset[2]_i_2_n_0 ),
        .I4(\rxeq_preset_reg_n_0_[0] ),
        .O(\rxeq_preset[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA8FFA800)) 
    \rxeq_preset[1]_i_1 
       (.I0(rxeq_preset_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(\rxeq_preset[2]_i_2_n_0 ),
        .I4(\rxeq_preset_reg_n_0_[1] ),
        .O(\rxeq_preset[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA8FFA800)) 
    \rxeq_preset[2]_i_1 
       (.I0(rxeq_preset_reg2[2]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(\rxeq_preset[2]_i_2_n_0 ),
        .I4(\rxeq_preset_reg_n_0_[2] ),
        .O(\rxeq_preset[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0002)) 
    \rxeq_preset[2]_i_2 
       (.I0(\rxeq_preset[2]_i_3_n_0 ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .I4(rxeq_adapt_done_reg_i_2_n_0),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .O(\rxeq_preset[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \rxeq_preset[2]_i_3 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\rxeq_preset[2]_i_3_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_preset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_preset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_preset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_reg1[0]),
        .Q(rxeq_preset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_reg1[1]),
        .Q(rxeq_preset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_reg1[2]),
        .Q(rxeq_preset_reg2[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_preset_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxeq_preset[0]_i_1_n_0 ),
        .Q(\rxeq_preset_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_preset_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxeq_preset[1]_i_1_n_0 ),
        .Q(\rxeq_preset_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_preset_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxeq_preset[2]_i_1_n_0 ),
        .Q(\rxeq_preset_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_preset_valid_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .Q(rxeq_preset_valid),
        .R(RST_CPLLRESET));
  pcie_7x_0_pcie_7x_0_rxeq_scan_43 rxeq_scan_i
       (.D({rxeq_scan_i_n_0,rxeq_scan_i_n_1,rxeq_scan_i_n_2}),
        .\FSM_onehot_fsm_rx_reg[5] ({\rxeq_cnt_reg_n_0_[2] ,\rxeq_cnt_reg_n_0_[1] ,\rxeq_cnt_reg_n_0_[0] }),
        .Q({\FSM_onehot_fsm_rx_reg_n_0_[6] ,\FSM_onehot_fsm_rx_reg_n_0_[5] ,\FSM_onehot_fsm_rx_reg_n_0_[4] ,\FSM_onehot_fsm_rx_reg_n_0_[2] ,\FSM_onehot_fsm_rx_reg_n_0_[1] }),
        .RST_CPLLRESET(RST_CPLLRESET),
        .USER_RXEQ_ADAPT_DONE(USER_RXEQ_ADAPT_DONE),
        .adapt_done_reg_0(rxeq_scan_i_n_4),
        .\fs_reg1_reg[5]_0 ({\rxeq_fs_reg_n_0_[5] ,\rxeq_fs_reg_n_0_[4] ,\rxeq_fs_reg_n_0_[3] ,\rxeq_fs_reg_n_0_[2] ,\rxeq_fs_reg_n_0_[1] ,\rxeq_fs_reg_n_0_[0] }),
        .\lf_reg1_reg[5]_0 ({\rxeq_lf_reg_n_0_[5] ,\rxeq_lf_reg_n_0_[4] ,\rxeq_lf_reg_n_0_[3] ,\rxeq_lf_reg_n_0_[2] ,\rxeq_lf_reg_n_0_[1] ,\rxeq_lf_reg_n_0_[0] }),
        .new_txcoeff_done_reg_0(rxeq_scan_i_n_5),
        .new_txcoeff_req_reg1_reg_0(rxeq_new_txcoeff_req_reg_n_0),
        .out(rxeq_control_reg2),
        .pipe_pclk_in(pipe_pclk_in),
        .\preset_reg1_reg[2]_0 ({\rxeq_preset_reg_n_0_[2] ,\rxeq_preset_reg_n_0_[1] ,\rxeq_preset_reg_n_0_[0] }),
        .rxeq_adapt_done_reg(rxeq_adapt_done_i_2_n_0),
        .rxeq_adapt_done_reg_reg(\FSM_onehot_fsm_rx[1]_i_2_n_0 ),
        .rxeq_adapt_done_reg_reg_0(rxeq_adapt_done_reg_i_2_n_0),
        .rxeq_adapt_done_reg_reg_1(rxeq_adapt_done_reg_reg_n_0),
        .rxeq_new_txcoeff_req(rxeq_new_txcoeff_req),
        .rxeq_preset_valid(rxeq_preset_valid),
        .\txcoeff_reg1_reg[17]_0 ({\rxeq_txcoeff_reg_n_0_[17] ,\rxeq_txcoeff_reg_n_0_[16] ,\rxeq_txcoeff_reg_n_0_[15] ,\rxeq_txcoeff_reg_n_0_[14] ,\rxeq_txcoeff_reg_n_0_[13] ,\rxeq_txcoeff_reg_n_0_[12] ,\rxeq_txcoeff_reg_n_0_[11] ,\rxeq_txcoeff_reg_n_0_[10] ,\rxeq_txcoeff_reg_n_0_[9] ,\rxeq_txcoeff_reg_n_0_[8] ,\rxeq_txcoeff_reg_n_0_[7] ,\rxeq_txcoeff_reg_n_0_[6] ,\rxeq_txcoeff_reg_n_0_[5] ,\rxeq_txcoeff_reg_n_0_[4] ,\rxeq_txcoeff_reg_n_0_[3] ,\rxeq_txcoeff_reg_n_0_[2] ,\rxeq_txcoeff_reg_n_0_[1] ,\rxeq_txcoeff_reg_n_0_[0] }),
        .\txpreset_reg1_reg[3]_0 ({\rxeq_txpreset_reg_n_0_[3] ,\rxeq_txpreset_reg_n_0_[2] ,\rxeq_txpreset_reg_n_0_[1] ,\rxeq_txpreset_reg_n_0_[0] }));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[0]_i_1 
       (.I0(\rxeq_txcoeff_reg_n_0_[6] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[0]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[10]_i_1 
       (.I0(\rxeq_txcoeff_reg_n_0_[16] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[10]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[11]_i_1 
       (.I0(\rxeq_txcoeff_reg_n_0_[17] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[11]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[12]_i_1 
       (.I0(txeq_deemph_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[12]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[13]_i_1 
       (.I0(txeq_deemph_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[13]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[14]_i_1 
       (.I0(txeq_deemph_reg2[2]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[14]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[15]_i_1 
       (.I0(txeq_deemph_reg2[3]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[15]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[16]_i_1 
       (.I0(txeq_deemph_reg2[4]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[16]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[17]_i_1 
       (.I0(txeq_deemph_reg2[5]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[17]));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[1]_i_1 
       (.I0(\rxeq_txcoeff_reg_n_0_[7] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[1]));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[2]_i_1 
       (.I0(\rxeq_txcoeff_reg_n_0_[8] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[2]));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[3]_i_1 
       (.I0(\rxeq_txcoeff_reg_n_0_[9] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[3]));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[4]_i_1 
       (.I0(\rxeq_txcoeff_reg_n_0_[10] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[4]));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[5]_i_1 
       (.I0(\rxeq_txcoeff_reg_n_0_[11] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[5]));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[6]_i_1 
       (.I0(\rxeq_txcoeff_reg_n_0_[12] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[6]));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[7]_i_1 
       (.I0(\rxeq_txcoeff_reg_n_0_[13] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[7]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[8]_i_1 
       (.I0(\rxeq_txcoeff_reg_n_0_[14] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[8]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[9]_i_1 
       (.I0(\rxeq_txcoeff_reg_n_0_[15] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[9]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[0]),
        .Q(\rxeq_txcoeff_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[10] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[10]),
        .Q(\rxeq_txcoeff_reg_n_0_[10] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[11] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[11]),
        .Q(\rxeq_txcoeff_reg_n_0_[11] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[12] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[12]),
        .Q(\rxeq_txcoeff_reg_n_0_[12] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[13] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[13]),
        .Q(\rxeq_txcoeff_reg_n_0_[13] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[14] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[14]),
        .Q(\rxeq_txcoeff_reg_n_0_[14] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[15] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[15]),
        .Q(\rxeq_txcoeff_reg_n_0_[15] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[16] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[16]),
        .Q(\rxeq_txcoeff_reg_n_0_[16] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[17] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[17]),
        .Q(\rxeq_txcoeff_reg_n_0_[17] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[1]),
        .Q(\rxeq_txcoeff_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[2]),
        .Q(\rxeq_txcoeff_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[3]),
        .Q(\rxeq_txcoeff_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[4] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[4]),
        .Q(\rxeq_txcoeff_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[5] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[5]),
        .Q(\rxeq_txcoeff_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[6] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[6]),
        .Q(\rxeq_txcoeff_reg_n_0_[6] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[7] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[7]),
        .Q(\rxeq_txcoeff_reg_n_0_[7] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[8] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[8]),
        .Q(\rxeq_txcoeff_reg_n_0_[8] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[9] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff[9]),
        .Q(\rxeq_txcoeff_reg_n_0_[9] ),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[0]_i_1 
       (.I0(rxeq_txpreset_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[0]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[1]_i_1 
       (.I0(rxeq_txpreset_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[1]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[2]_i_1 
       (.I0(rxeq_txpreset_reg2[2]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[2]));
  LUT5 #(
    .INIT(32'hFFFFF404)) 
    \rxeq_txpreset[3]_i_1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .I1(\rxeq_txpreset[3]_i_3_n_0 ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(rxeq_control_reg2[1]),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\rxeq_txpreset[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[3]_i_2 
       (.I0(rxeq_txpreset_reg2[3]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[3]));
  LUT3 #(
    .INIT(8'h01)) 
    \rxeq_txpreset[3]_i_3 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .O(\rxeq_txpreset[3]_i_3_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_txpreset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_txpreset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_txpreset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_txpreset_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[0]),
        .Q(rxeq_txpreset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[1]),
        .Q(rxeq_txpreset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[2]),
        .Q(rxeq_txpreset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[3]),
        .Q(rxeq_txpreset_reg2[3]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txpreset[0]),
        .Q(\rxeq_txpreset_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txpreset[1]),
        .Q(\rxeq_txpreset_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txpreset[2]),
        .Q(\rxeq_txpreset_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txpreset[3]),
        .Q(\rxeq_txpreset_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_en_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_en_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_en_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_en_reg1),
        .Q(rxeq_user_en_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_mode_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_mode_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_mode_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_mode_reg1),
        .Q(rxeq_user_mode_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[0]),
        .Q(rxeq_user_txcoeff_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[10]),
        .Q(rxeq_user_txcoeff_reg2[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[11]),
        .Q(rxeq_user_txcoeff_reg2[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[12]),
        .Q(rxeq_user_txcoeff_reg2[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[13]),
        .Q(rxeq_user_txcoeff_reg2[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[14]),
        .Q(rxeq_user_txcoeff_reg2[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[15]),
        .Q(rxeq_user_txcoeff_reg2[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[16]),
        .Q(rxeq_user_txcoeff_reg2[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[17]),
        .Q(rxeq_user_txcoeff_reg2[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[1]),
        .Q(rxeq_user_txcoeff_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[2]),
        .Q(rxeq_user_txcoeff_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[3]),
        .Q(rxeq_user_txcoeff_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[4]),
        .Q(rxeq_user_txcoeff_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[5]),
        .Q(rxeq_user_txcoeff_reg2[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[6]),
        .Q(rxeq_user_txcoeff_reg2[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[7]),
        .Q(rxeq_user_txcoeff_reg2[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[8]),
        .Q(rxeq_user_txcoeff_reg2[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[9]),
        .Q(rxeq_user_txcoeff_reg2[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_control_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_control_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_control_reg1[0]),
        .Q(txeq_control_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_control_reg1[1]),
        .Q(txeq_control_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \txeq_deemph_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[0]),
        .S(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \txeq_deemph_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[0]),
        .Q(txeq_deemph_reg2[0]),
        .S(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[1]),
        .Q(txeq_deemph_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[2]),
        .Q(txeq_deemph_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[3]),
        .Q(txeq_deemph_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[4]),
        .Q(txeq_deemph_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[5]),
        .Q(txeq_deemph_reg2[5]),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h00001000)) 
    \txeq_preset[0]_i_1 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[2]),
        .I2(txeq_preset_reg2[0]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[1]),
        .O(p_0_out[0]));
  LUT5 #(
    .INIT(32'hABEAABAF)) 
    \txeq_preset[10]_i_1 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[2]),
        .I2(txeq_preset_reg2[0]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[1]),
        .O(p_0_out[10]));
  LUT5 #(
    .INIT(32'hFFFF200D)) 
    \txeq_preset[11]_i_1 
       (.I0(txeq_preset_reg2[1]),
        .I1(txeq_preset_reg2[3]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[0]),
        .I4(RST_CPLLRESET),
        .O(p_0_out[11]));
  LUT5 #(
    .INIT(32'h01151110)) 
    \txeq_preset[12]_i_1 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[3]),
        .I2(txeq_preset_reg2[1]),
        .I3(txeq_preset_reg2[2]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[12]));
  LUT5 #(
    .INIT(32'h01000010)) 
    \txeq_preset[13]_i_1 
       (.I0(txeq_preset_reg2[2]),
        .I1(RST_CPLLRESET),
        .I2(txeq_preset_reg2[0]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[1]),
        .O(p_0_out[13]));
  LUT5 #(
    .INIT(32'h01000010)) 
    \txeq_preset[14]_i_1 
       (.I0(txeq_preset_reg2[2]),
        .I1(RST_CPLLRESET),
        .I2(txeq_preset_reg2[3]),
        .I3(txeq_preset_reg2[1]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[14]));
  LUT4 #(
    .INIT(16'hF0F1)) 
    \txeq_preset[15]_i_1 
       (.I0(txeq_preset_reg2[2]),
        .I1(txeq_preset_reg2[1]),
        .I2(RST_CPLLRESET),
        .I3(txeq_preset_reg2[3]),
        .O(p_0_out[15]));
  LUT4 #(
    .INIT(16'h0006)) 
    \txeq_preset[16]_i_1 
       (.I0(txeq_preset_reg2[3]),
        .I1(txeq_preset_reg2[0]),
        .I2(txeq_preset_reg2[2]),
        .I3(RST_CPLLRESET),
        .O(p_0_out[16]));
  LUT4 #(
    .INIT(16'hAABA)) 
    \txeq_preset[17]_i_1 
       (.I0(RST_CPLLRESET),
        .I1(fsm_tx[0]),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[2]),
        .O(\txeq_preset[17]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF400D)) 
    \txeq_preset[17]_i_2 
       (.I0(txeq_preset_reg2[3]),
        .I1(txeq_preset_reg2[1]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[0]),
        .I4(RST_CPLLRESET),
        .O(p_0_out[17]));
  LUT5 #(
    .INIT(32'h00001004)) 
    \txeq_preset[1]_i_1 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[3]),
        .I2(txeq_preset_reg2[1]),
        .I3(txeq_preset_reg2[2]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[1]));
  LUT4 #(
    .INIT(16'h0E00)) 
    \txeq_preset[2]_i_1 
       (.I0(txeq_preset_reg2[2]),
        .I1(txeq_preset_reg2[0]),
        .I2(RST_CPLLRESET),
        .I3(txeq_preset_reg2[3]),
        .O(p_0_out[2]));
  LUT5 #(
    .INIT(32'h01440140)) 
    \txeq_preset[3]_i_1 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[2]),
        .I2(txeq_preset_reg2[1]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[0]),
        .O(\txeq_preset[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00001400)) 
    \txeq_preset[7]_i_1 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[0]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[1]),
        .I4(txeq_preset_reg2[3]),
        .O(\txeq_preset[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAAAFBEAF)) 
    \txeq_preset[8]_i_1 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[0]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[1]),
        .I4(txeq_preset_reg2[3]),
        .O(p_0_out[8]));
  LUT5 #(
    .INIT(32'hCCFCCFCD)) 
    \txeq_preset[9]_i_1 
       (.I0(txeq_preset_reg2[1]),
        .I1(RST_CPLLRESET),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[9]));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'h04)) 
    txeq_preset_done_i_1
       (.I0(fsm_tx[2]),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[0]),
        .O(txeq_preset_done_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txeq_preset_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_done_i_1_n_0),
        .Q(txeq_preset_done),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_preset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_preset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_preset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_preset_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[0]),
        .Q(txeq_preset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[1]),
        .Q(txeq_preset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[2]),
        .Q(txeq_preset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[3]),
        .Q(txeq_preset_reg2[3]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(p_0_out[0]),
        .Q(\txeq_preset_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[10] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(p_0_out[10]),
        .Q(\txeq_preset_reg_n_0_[10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[11] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(p_0_out[11]),
        .Q(\txeq_preset_reg_n_0_[11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[12] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(p_0_out[12]),
        .Q(\txeq_preset_reg_n_0_[12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[13] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(p_0_out[13]),
        .Q(\txeq_preset_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[14] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(p_0_out[14]),
        .Q(\txeq_preset_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[15] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(p_0_out[15]),
        .Q(\txeq_preset_reg_n_0_[15] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[16] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(p_0_out[16]),
        .Q(\txeq_preset_reg_n_0_[16] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[17] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(p_0_out[17]),
        .Q(\txeq_preset_reg_n_0_[17] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(p_0_out[1]),
        .Q(\txeq_preset_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(p_0_out[2]),
        .Q(\txeq_preset_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(\txeq_preset[3]_i_1_n_0 ),
        .Q(\txeq_preset_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[7] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(\txeq_preset[7]_i_1_n_0 ),
        .Q(\txeq_preset_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[8] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(p_0_out[8]),
        .Q(\txeq_preset_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[9] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1_n_0 ),
        .D(p_0_out[9]),
        .Q(\txeq_preset_reg_n_0_[9] ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h45404040)) 
    \txeq_txcoeff[0]_i_1 
       (.I0(fsm_tx[2]),
        .I1(\txeq_txcoeff[0]_i_2_n_0 ),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[0]),
        .I4(\txeq_txcoeff_reg_n_0_[6] ),
        .O(\txeq_txcoeff[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[0]_i_2 
       (.I0(\txeq_txcoeff_reg_n_0_[6] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[7] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[0] ),
        .O(\txeq_txcoeff[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[10]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[9] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[10]_i_2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[16] ),
        .O(\txeq_txcoeff[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[10]_i_2 
       (.I0(\txeq_txcoeff_reg_n_0_[16] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[17] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[10] ),
        .O(\txeq_txcoeff[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[11]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[10] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[11]_i_2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[17] ),
        .O(\txeq_txcoeff[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[11]_i_2 
       (.I0(\txeq_txcoeff_reg_n_0_[17] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[18] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[11] ),
        .O(\txeq_txcoeff[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[12]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[11] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[12]_i_2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[18] ),
        .O(\txeq_txcoeff[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[12]_i_2 
       (.I0(\txeq_txcoeff_reg_n_0_[18] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[0]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[12] ),
        .O(\txeq_txcoeff[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[13]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[12] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[13]_i_2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[0]),
        .O(\txeq_txcoeff[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[13]_i_2 
       (.I0(txeq_deemph_reg2[0]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[13] ),
        .O(\txeq_txcoeff[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[14]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[13] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[14]_i_2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[1]),
        .O(\txeq_txcoeff[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[14]_i_2 
       (.I0(txeq_deemph_reg2[1]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[2]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[14] ),
        .O(\txeq_txcoeff[14]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[15]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[14] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[15]_i_2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[2]),
        .O(\txeq_txcoeff[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[15]_i_2 
       (.I0(txeq_deemph_reg2[2]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[3]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[15] ),
        .O(\txeq_txcoeff[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[16]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[15] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[16]_i_2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[3]),
        .O(\txeq_txcoeff[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[16]_i_2 
       (.I0(txeq_deemph_reg2[3]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[4]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[16] ),
        .O(\txeq_txcoeff[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[17]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[16] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[17]_i_2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[4]),
        .O(\txeq_txcoeff[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[17]_i_2 
       (.I0(txeq_deemph_reg2[4]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[5]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[17] ),
        .O(\txeq_txcoeff[17]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFF040FFF)) 
    \txeq_txcoeff[18]_i_1 
       (.I0(txeq_control_reg2[0]),
        .I1(txeq_control_reg2[1]),
        .I2(fsm_tx[2]),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .O(txeq_txcoeff));
  LUT6 #(
    .INIT(64'h22F3220022002200)) 
    \txeq_txcoeff[18]_i_2 
       (.I0(\txeq_txcoeff_reg_n_0_[17] ),
        .I1(fsm_tx[1]),
        .I2(\txeq_txcoeff[18]_i_3_n_0 ),
        .I3(fsm_tx[2]),
        .I4(txeq_deemph_reg2[5]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[18]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \txeq_txcoeff[18]_i_3 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .O(\txeq_txcoeff[18]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[1]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[0] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[1]_i_2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[7] ),
        .O(\txeq_txcoeff[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[1]_i_2 
       (.I0(\txeq_txcoeff_reg_n_0_[7] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[8] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[1] ),
        .O(\txeq_txcoeff[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[2]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[1] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[2]_i_2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[8] ),
        .O(\txeq_txcoeff[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[2]_i_2 
       (.I0(\txeq_txcoeff_reg_n_0_[8] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[9] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[2] ),
        .O(\txeq_txcoeff[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[3]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[2] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[3]_i_2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[9] ),
        .O(\txeq_txcoeff[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[3]_i_2 
       (.I0(\txeq_txcoeff_reg_n_0_[9] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[10] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[3] ),
        .O(\txeq_txcoeff[3]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \txeq_txcoeff[4]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[3] ),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[2]),
        .I3(\txeq_txcoeff[4]_i_2_n_0 ),
        .O(\txeq_txcoeff[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCACCCCCC00000000)) 
    \txeq_txcoeff[4]_i_2 
       (.I0(\txeq_txcoeff_reg_n_0_[11] ),
        .I1(\txeq_txcoeff_reg_n_0_[10] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I3(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I4(fsm_tx[1]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \txeq_txcoeff[5]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[4] ),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[2]),
        .I3(\txeq_txcoeff[5]_i_2_n_0 ),
        .O(\txeq_txcoeff[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCACCCCCC00000000)) 
    \txeq_txcoeff[5]_i_2 
       (.I0(\txeq_txcoeff_reg_n_0_[12] ),
        .I1(\txeq_txcoeff_reg_n_0_[11] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I3(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I4(fsm_tx[1]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[5]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \txeq_txcoeff[6]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[5] ),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[2]),
        .I3(\txeq_txcoeff[6]_i_2_n_0 ),
        .O(\txeq_txcoeff[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCACCCCCC00000000)) 
    \txeq_txcoeff[6]_i_2 
       (.I0(\txeq_txcoeff_reg_n_0_[13] ),
        .I1(\txeq_txcoeff_reg_n_0_[12] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I3(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I4(fsm_tx[1]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[7]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[6] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[7]_i_2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[13] ),
        .O(\txeq_txcoeff[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[7]_i_2 
       (.I0(\txeq_txcoeff_reg_n_0_[13] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[14] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[7] ),
        .O(\txeq_txcoeff[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[8]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[7] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[8]_i_2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[14] ),
        .O(\txeq_txcoeff[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[8]_i_2 
       (.I0(\txeq_txcoeff_reg_n_0_[14] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[15] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[8] ),
        .O(\txeq_txcoeff[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[9]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[8] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[9]_i_2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[15] ),
        .O(\txeq_txcoeff[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[9]_i_2 
       (.I0(\txeq_txcoeff_reg_n_0_[15] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[16] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[9] ),
        .O(\txeq_txcoeff[9]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000004000F000400)) 
    \txeq_txcoeff_cnt[0]_i_1 
       (.I0(txeq_control_reg2[0]),
        .I1(txeq_control_reg2[1]),
        .I2(fsm_tx[2]),
        .I3(fsm_tx[0]),
        .I4(fsm_tx[1]),
        .I5(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .O(txeq_txcoeff_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT5 #(
    .INIT(32'h00006000)) 
    \txeq_txcoeff_cnt[1]_i_1 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I2(fsm_tx[0]),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[2]),
        .O(txeq_txcoeff_cnt[1]));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_txcoeff_cnt[0]),
        .Q(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_txcoeff_cnt[1]),
        .Q(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[0] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[0]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[10] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[10]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[10] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[11] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[11]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[11] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[12] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[12]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[12] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[13] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[13]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[13] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[14] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[14]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[14] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[15] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[15]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[15] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[16] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[16]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[16] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[17] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[17]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[17] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[18] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[18]_i_2_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[18] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[1] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[1]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[2] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[2]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[3] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[3]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[4] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[4]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[5] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[5]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[6] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[6]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[6] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[7] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[7]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[7] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[8] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[8]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[8] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[9] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[9]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[9] ),
        .R(RST_CPLLRESET));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pipe_eq" *) 
module pcie_7x_0_pcie_7x_0_pipe_eq_23
   (TXPRECURSOR,
    TXMAINCURSOR,
    TXPOSTCURSOR,
    USER_RXEQ_ADAPT_DONE,
    RST_CPLLRESET,
    pipe_pclk_in,
    rate_gen3_1);
  output [4:0]TXPRECURSOR;
  output [6:0]TXMAINCURSOR;
  output [4:0]TXPOSTCURSOR;
  output USER_RXEQ_ADAPT_DONE;
  input RST_CPLLRESET;
  input pipe_pclk_in;
  input rate_gen3_1;

  wire \FSM_onehot_fsm_rx[1]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm_rx[1]_i_2__0_n_0 ;
  wire \FSM_onehot_fsm_rx[3]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm_rx[4]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[1] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[2] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[3] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[4] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[5] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[6] ;
  wire \FSM_sequential_fsm_tx[0]_i_1__0_n_0 ;
  wire \FSM_sequential_fsm_tx[1]_i_1__0_n_0 ;
  wire \FSM_sequential_fsm_tx[1]_i_2__0_n_0 ;
  wire \FSM_sequential_fsm_tx[2]_i_1__0_n_0 ;
  wire \FSM_sequential_fsm_tx[2]_i_2__0_n_0 ;
  wire RST_CPLLRESET;
  wire [6:0]TXMAINCURSOR;
  wire [4:0]TXPOSTCURSOR;
  wire [4:0]TXPRECURSOR;
  wire USER_RXEQ_ADAPT_DONE;
  wire [2:0]fsm_tx;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg2;
  wire [17:0]p_0_out;
  wire pipe_pclk_in;
  wire rate_gen3_1;
  wire rxeq_adapt_done_i_2__0_n_0;
  wire rxeq_adapt_done_reg_i_2__0_n_0;
  wire rxeq_adapt_done_reg_reg_n_0;
  wire [2:0]rxeq_cnt;
  wire \rxeq_cnt_reg_n_0_[0] ;
  wire \rxeq_cnt_reg_n_0_[1] ;
  wire \rxeq_cnt_reg_n_0_[2] ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rxeq_control_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rxeq_control_reg2;
  wire [5:0]rxeq_fs;
  wire \rxeq_fs[5]_i_1__0_n_0 ;
  wire \rxeq_fs_reg_n_0_[0] ;
  wire \rxeq_fs_reg_n_0_[1] ;
  wire \rxeq_fs_reg_n_0_[2] ;
  wire \rxeq_fs_reg_n_0_[3] ;
  wire \rxeq_fs_reg_n_0_[4] ;
  wire \rxeq_fs_reg_n_0_[5] ;
  wire [5:0]rxeq_lf;
  wire \rxeq_lf[5]_i_1__0_n_0 ;
  wire \rxeq_lf_reg_n_0_[0] ;
  wire \rxeq_lf_reg_n_0_[1] ;
  wire \rxeq_lf_reg_n_0_[2] ;
  wire \rxeq_lf_reg_n_0_[3] ;
  wire \rxeq_lf_reg_n_0_[4] ;
  wire \rxeq_lf_reg_n_0_[5] ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]rxeq_lffs_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]rxeq_lffs_reg2;
  wire rxeq_new_txcoeff_req;
  wire rxeq_new_txcoeff_req_reg_n_0;
  wire \rxeq_preset[0]_i_1__0_n_0 ;
  wire \rxeq_preset[1]_i_1__0_n_0 ;
  wire \rxeq_preset[2]_i_1__0_n_0 ;
  wire \rxeq_preset[2]_i_2__0_n_0 ;
  wire \rxeq_preset[2]_i_3__0_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]rxeq_preset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]rxeq_preset_reg2;
  wire \rxeq_preset_reg_n_0_[0] ;
  wire \rxeq_preset_reg_n_0_[1] ;
  wire \rxeq_preset_reg_n_0_[2] ;
  wire rxeq_preset_valid;
  wire rxeq_scan_i_n_0;
  wire rxeq_scan_i_n_1;
  wire rxeq_scan_i_n_2;
  wire rxeq_scan_i_n_4;
  wire rxeq_scan_i_n_5;
  wire [17:0]rxeq_txcoeff;
  wire \rxeq_txcoeff_reg_n_0_[0] ;
  wire \rxeq_txcoeff_reg_n_0_[10] ;
  wire \rxeq_txcoeff_reg_n_0_[11] ;
  wire \rxeq_txcoeff_reg_n_0_[12] ;
  wire \rxeq_txcoeff_reg_n_0_[13] ;
  wire \rxeq_txcoeff_reg_n_0_[14] ;
  wire \rxeq_txcoeff_reg_n_0_[15] ;
  wire \rxeq_txcoeff_reg_n_0_[16] ;
  wire \rxeq_txcoeff_reg_n_0_[17] ;
  wire \rxeq_txcoeff_reg_n_0_[1] ;
  wire \rxeq_txcoeff_reg_n_0_[2] ;
  wire \rxeq_txcoeff_reg_n_0_[3] ;
  wire \rxeq_txcoeff_reg_n_0_[4] ;
  wire \rxeq_txcoeff_reg_n_0_[5] ;
  wire \rxeq_txcoeff_reg_n_0_[6] ;
  wire \rxeq_txcoeff_reg_n_0_[7] ;
  wire \rxeq_txcoeff_reg_n_0_[8] ;
  wire \rxeq_txcoeff_reg_n_0_[9] ;
  wire [3:0]rxeq_txpreset;
  wire \rxeq_txpreset[3]_i_1__0_n_0 ;
  wire \rxeq_txpreset[3]_i_3__0_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]rxeq_txpreset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]rxeq_txpreset_reg2;
  wire \rxeq_txpreset_reg_n_0_[0] ;
  wire \rxeq_txpreset_reg_n_0_[1] ;
  wire \rxeq_txpreset_reg_n_0_[2] ;
  wire \rxeq_txpreset_reg_n_0_[3] ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_en_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_en_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_mode_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_mode_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]rxeq_user_txcoeff_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]rxeq_user_txcoeff_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]txeq_control_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]txeq_control_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]txeq_deemph_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]txeq_deemph_reg2;
  wire \txeq_preset[17]_i_1__0_n_0 ;
  wire \txeq_preset[3]_i_1__0_n_0 ;
  wire \txeq_preset[7]_i_1__0_n_0 ;
  wire txeq_preset_done;
  wire txeq_preset_done_i_1__0_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txeq_preset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txeq_preset_reg2;
  wire \txeq_preset_reg_n_0_[0] ;
  wire \txeq_preset_reg_n_0_[10] ;
  wire \txeq_preset_reg_n_0_[11] ;
  wire \txeq_preset_reg_n_0_[12] ;
  wire \txeq_preset_reg_n_0_[13] ;
  wire \txeq_preset_reg_n_0_[14] ;
  wire \txeq_preset_reg_n_0_[15] ;
  wire \txeq_preset_reg_n_0_[16] ;
  wire \txeq_preset_reg_n_0_[17] ;
  wire \txeq_preset_reg_n_0_[1] ;
  wire \txeq_preset_reg_n_0_[2] ;
  wire \txeq_preset_reg_n_0_[3] ;
  wire \txeq_preset_reg_n_0_[7] ;
  wire \txeq_preset_reg_n_0_[8] ;
  wire \txeq_preset_reg_n_0_[9] ;
  wire txeq_txcoeff;
  wire \txeq_txcoeff[0]_i_1__0_n_0 ;
  wire \txeq_txcoeff[0]_i_2__0_n_0 ;
  wire \txeq_txcoeff[10]_i_1__0_n_0 ;
  wire \txeq_txcoeff[10]_i_2__0_n_0 ;
  wire \txeq_txcoeff[11]_i_1__0_n_0 ;
  wire \txeq_txcoeff[11]_i_2__0_n_0 ;
  wire \txeq_txcoeff[12]_i_1__0_n_0 ;
  wire \txeq_txcoeff[12]_i_2__0_n_0 ;
  wire \txeq_txcoeff[13]_i_1__0_n_0 ;
  wire \txeq_txcoeff[13]_i_2__0_n_0 ;
  wire \txeq_txcoeff[14]_i_1__0_n_0 ;
  wire \txeq_txcoeff[14]_i_2__0_n_0 ;
  wire \txeq_txcoeff[15]_i_1__0_n_0 ;
  wire \txeq_txcoeff[15]_i_2__0_n_0 ;
  wire \txeq_txcoeff[16]_i_1__0_n_0 ;
  wire \txeq_txcoeff[16]_i_2__0_n_0 ;
  wire \txeq_txcoeff[17]_i_1__0_n_0 ;
  wire \txeq_txcoeff[17]_i_2__0_n_0 ;
  wire \txeq_txcoeff[18]_i_2__0_n_0 ;
  wire \txeq_txcoeff[18]_i_3__0_n_0 ;
  wire \txeq_txcoeff[1]_i_1__0_n_0 ;
  wire \txeq_txcoeff[1]_i_2__0_n_0 ;
  wire \txeq_txcoeff[2]_i_1__0_n_0 ;
  wire \txeq_txcoeff[2]_i_2__0_n_0 ;
  wire \txeq_txcoeff[3]_i_1__0_n_0 ;
  wire \txeq_txcoeff[3]_i_2__0_n_0 ;
  wire \txeq_txcoeff[4]_i_1__0_n_0 ;
  wire \txeq_txcoeff[4]_i_2__0_n_0 ;
  wire \txeq_txcoeff[5]_i_1__0_n_0 ;
  wire \txeq_txcoeff[5]_i_2__0_n_0 ;
  wire \txeq_txcoeff[6]_i_1__0_n_0 ;
  wire \txeq_txcoeff[6]_i_2__0_n_0 ;
  wire \txeq_txcoeff[7]_i_1__0_n_0 ;
  wire \txeq_txcoeff[7]_i_2__0_n_0 ;
  wire \txeq_txcoeff[8]_i_1__0_n_0 ;
  wire \txeq_txcoeff[8]_i_2__0_n_0 ;
  wire \txeq_txcoeff[9]_i_1__0_n_0 ;
  wire \txeq_txcoeff[9]_i_2__0_n_0 ;
  wire [1:0]txeq_txcoeff_cnt;
  wire \txeq_txcoeff_cnt_reg_n_0_[0] ;
  wire \txeq_txcoeff_cnt_reg_n_0_[1] ;
  wire \txeq_txcoeff_reg_n_0_[0] ;
  wire \txeq_txcoeff_reg_n_0_[10] ;
  wire \txeq_txcoeff_reg_n_0_[11] ;
  wire \txeq_txcoeff_reg_n_0_[12] ;
  wire \txeq_txcoeff_reg_n_0_[13] ;
  wire \txeq_txcoeff_reg_n_0_[14] ;
  wire \txeq_txcoeff_reg_n_0_[15] ;
  wire \txeq_txcoeff_reg_n_0_[16] ;
  wire \txeq_txcoeff_reg_n_0_[17] ;
  wire \txeq_txcoeff_reg_n_0_[18] ;
  wire \txeq_txcoeff_reg_n_0_[1] ;
  wire \txeq_txcoeff_reg_n_0_[2] ;
  wire \txeq_txcoeff_reg_n_0_[3] ;
  wire \txeq_txcoeff_reg_n_0_[4] ;
  wire \txeq_txcoeff_reg_n_0_[5] ;
  wire \txeq_txcoeff_reg_n_0_[6] ;
  wire \txeq_txcoeff_reg_n_0_[7] ;
  wire \txeq_txcoeff_reg_n_0_[8] ;
  wire \txeq_txcoeff_reg_n_0_[9] ;

  LUT5 #(
    .INIT(32'hABABABAA)) 
    \FSM_onehot_fsm_rx[1]_i_1__0 
       (.I0(\FSM_onehot_fsm_rx[1]_i_2__0_n_0 ),
        .I1(rxeq_control_reg2[1]),
        .I2(rxeq_control_reg2[0]),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .O(\FSM_onehot_fsm_rx[1]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \FSM_onehot_fsm_rx[1]_i_2__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .O(\FSM_onehot_fsm_rx[1]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF8FF88888888)) 
    \FSM_onehot_fsm_rx[3]_i_1__0 
       (.I0(rxeq_control_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\rxeq_cnt_reg_n_0_[2] ),
        .I3(\rxeq_cnt_reg_n_0_[1] ),
        .I4(\rxeq_cnt_reg_n_0_[0] ),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm_rx[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT5 #(
    .INIT(32'h2ABA2AAA)) 
    \FSM_onehot_fsm_rx[4]_i_1__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(\rxeq_cnt_reg_n_0_[2] ),
        .I2(\rxeq_cnt_reg_n_0_[1] ),
        .I3(\rxeq_cnt_reg_n_0_[0] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm_rx[4]_i_1__0_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx[1]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_2),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx[3]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx[4]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_1),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_0),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hC04FC043C04FF04F)) 
    \FSM_sequential_fsm_tx[0]_i_1__0 
       (.I0(\FSM_sequential_fsm_tx[1]_i_2__0_n_0 ),
        .I1(fsm_tx[0]),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[2]),
        .I4(txeq_control_reg2[1]),
        .I5(txeq_control_reg2[0]),
        .O(\FSM_sequential_fsm_tx[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h3F703F7C3F7C0F70)) 
    \FSM_sequential_fsm_tx[1]_i_1__0 
       (.I0(\FSM_sequential_fsm_tx[1]_i_2__0_n_0 ),
        .I1(fsm_tx[0]),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[2]),
        .I4(txeq_control_reg2[1]),
        .I5(txeq_control_reg2[0]),
        .O(\FSM_sequential_fsm_tx[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_fsm_tx[1]_i_2__0 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .O(\FSM_sequential_fsm_tx[1]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h3A2A2A227F7F7F77)) 
    \FSM_sequential_fsm_tx[2]_i_1__0 
       (.I0(fsm_tx[2]),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[0]),
        .I3(txeq_control_reg2[1]),
        .I4(txeq_control_reg2[0]),
        .I5(\FSM_sequential_fsm_tx[2]_i_2__0_n_0 ),
        .O(\FSM_sequential_fsm_tx[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT5 #(
    .INIT(32'hD0FFDFFF)) 
    \FSM_sequential_fsm_tx[2]_i_2__0 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I2(fsm_tx[0]),
        .I3(fsm_tx[1]),
        .I4(txeq_preset_done),
        .O(\FSM_sequential_fsm_tx[2]_i_2__0_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_TXEQ_QUERY:101,FSM_TXEQ_PRESET:010,FSM_TXEQ_TXCOEFF:011,FSM_TXEQ_REMAP:100,FSM_TXEQ_DONE:110,FSM_TXEQ_IDLE:001,iSTATE:000" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_sequential_fsm_tx_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_sequential_fsm_tx[0]_i_1__0_n_0 ),
        .Q(fsm_tx[0]),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_TXEQ_QUERY:101,FSM_TXEQ_PRESET:010,FSM_TXEQ_TXCOEFF:011,FSM_TXEQ_REMAP:100,FSM_TXEQ_DONE:110,FSM_TXEQ_IDLE:001,iSTATE:000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_fsm_tx_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_sequential_fsm_tx[1]_i_1__0_n_0 ),
        .Q(fsm_tx[1]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_TXEQ_QUERY:101,FSM_TXEQ_PRESET:010,FSM_TXEQ_TXCOEFF:011,FSM_TXEQ_REMAP:100,FSM_TXEQ_DONE:110,FSM_TXEQ_IDLE:001,iSTATE:000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_fsm_tx_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_sequential_fsm_tx[2]_i_1__0_n_0 ),
        .Q(fsm_tx[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_gen3_1),
        .Q(gen3_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_reg1),
        .Q(gen3_reg2),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_22__0 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[17] ),
        .O(TXPOSTCURSOR[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_23__0 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[16] ),
        .O(TXPOSTCURSOR[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_24__0 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[15] ),
        .O(TXPOSTCURSOR[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_25__0 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[14] ),
        .O(TXPOSTCURSOR[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_26__0 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[13] ),
        .O(TXPOSTCURSOR[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_27__0 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[4] ),
        .O(TXPRECURSOR[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_28__0 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[3] ),
        .O(TXPRECURSOR[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_29__0 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[2] ),
        .O(TXPRECURSOR[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_30__0 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[1] ),
        .O(TXPRECURSOR[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_31__0 
       (.I0(\txeq_txcoeff_reg_n_0_[0] ),
        .I1(gen3_reg2),
        .O(TXPRECURSOR[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_32__0 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[12] ),
        .O(TXMAINCURSOR[6]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_33__0 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[11] ),
        .O(TXMAINCURSOR[5]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_34__0 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[10] ),
        .O(TXMAINCURSOR[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_35__0 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[9] ),
        .O(TXMAINCURSOR[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_36__0 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[8] ),
        .O(TXMAINCURSOR[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_37__0 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[7] ),
        .O(TXMAINCURSOR[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_38__0 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[6] ),
        .O(TXMAINCURSOR[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
    rxeq_adapt_done_i_2__0
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .O(rxeq_adapt_done_i_2__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_adapt_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_5),
        .Q(USER_RXEQ_ADAPT_DONE),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'h08)) 
    rxeq_adapt_done_reg_i_2__0
       (.I0(rxeq_control_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(rxeq_control_reg2[1]),
        .O(rxeq_adapt_done_reg_i_2__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_adapt_done_reg_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_4),
        .Q(rxeq_adapt_done_reg_reg_n_0),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h8888FFF8)) 
    \rxeq_cnt[0]_i_1__0 
       (.I0(rxeq_control_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I4(\rxeq_cnt_reg_n_0_[0] ),
        .O(rxeq_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT4 #(
    .INIT(16'h6660)) 
    \rxeq_cnt[1]_i_1__0 
       (.I0(\rxeq_cnt_reg_n_0_[0] ),
        .I1(\rxeq_cnt_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(rxeq_cnt[1]));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT5 #(
    .INIT(32'h78787800)) 
    \rxeq_cnt[2]_i_1__0 
       (.I0(\rxeq_cnt_reg_n_0_[1] ),
        .I1(\rxeq_cnt_reg_n_0_[0] ),
        .I2(\rxeq_cnt_reg_n_0_[2] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(rxeq_cnt[2]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_cnt[0]),
        .Q(\rxeq_cnt_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_cnt[1]),
        .Q(\rxeq_cnt_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_cnt[2]),
        .Q(\rxeq_cnt_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_control_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_control_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_control_reg1[0]),
        .Q(rxeq_control_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_control_reg1[1]),
        .Q(rxeq_control_reg2[1]),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[0]_i_1__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[0]),
        .O(rxeq_fs[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[1]_i_1__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[1]),
        .O(rxeq_fs[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[2]_i_1__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[2]),
        .O(rxeq_fs[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[3]_i_1__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[3]),
        .O(rxeq_fs[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[4]_i_1__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[4]),
        .O(rxeq_fs[4]));
  LUT3 #(
    .INIT(8'hF8)) 
    \rxeq_fs[5]_i_1__0 
       (.I0(rxeq_control_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx[1]_i_2__0_n_0 ),
        .O(\rxeq_fs[5]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[5]_i_2__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[5]),
        .O(rxeq_fs[5]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__0_n_0 ),
        .D(rxeq_fs[0]),
        .Q(\rxeq_fs_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__0_n_0 ),
        .D(rxeq_fs[1]),
        .Q(\rxeq_fs_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__0_n_0 ),
        .D(rxeq_fs[2]),
        .Q(\rxeq_fs_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__0_n_0 ),
        .D(rxeq_fs[3]),
        .Q(\rxeq_fs_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[4] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__0_n_0 ),
        .D(rxeq_fs[4]),
        .Q(\rxeq_fs_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[5] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__0_n_0 ),
        .D(rxeq_fs[5]),
        .Q(\rxeq_fs_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[0]_i_1__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[0]),
        .O(rxeq_lf[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[1]_i_1__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[1]),
        .O(rxeq_lf[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[2]_i_1__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[2]),
        .O(rxeq_lf[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[3]_i_1__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[3]),
        .O(rxeq_lf[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[4]_i_1__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[4]),
        .O(rxeq_lf[4]));
  LUT5 #(
    .INIT(32'hEAAAAAAA)) 
    \rxeq_lf[5]_i_1__0 
       (.I0(\FSM_onehot_fsm_rx[1]_i_2__0_n_0 ),
        .I1(\rxeq_cnt_reg_n_0_[2] ),
        .I2(\rxeq_cnt_reg_n_0_[0] ),
        .I3(\rxeq_cnt_reg_n_0_[1] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .O(\rxeq_lf[5]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[5]_i_2__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[5]),
        .O(rxeq_lf[5]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__0_n_0 ),
        .D(rxeq_lf[0]),
        .Q(\rxeq_lf_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__0_n_0 ),
        .D(rxeq_lf[1]),
        .Q(\rxeq_lf_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__0_n_0 ),
        .D(rxeq_lf[2]),
        .Q(\rxeq_lf_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__0_n_0 ),
        .D(rxeq_lf[3]),
        .Q(\rxeq_lf_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[4] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__0_n_0 ),
        .D(rxeq_lf[4]),
        .Q(\rxeq_lf_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[5] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__0_n_0 ),
        .D(rxeq_lf[5]),
        .Q(\rxeq_lf_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[0]),
        .Q(rxeq_lffs_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[1]),
        .Q(rxeq_lffs_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[2]),
        .Q(rxeq_lffs_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[3]),
        .Q(rxeq_lffs_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[4]),
        .Q(rxeq_lffs_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[5]),
        .Q(rxeq_lffs_reg2[5]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_new_txcoeff_req_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_new_txcoeff_req),
        .Q(rxeq_new_txcoeff_req_reg_n_0),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hA8FFA800)) 
    \rxeq_preset[0]_i_1__0 
       (.I0(rxeq_preset_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(\rxeq_preset[2]_i_2__0_n_0 ),
        .I4(\rxeq_preset_reg_n_0_[0] ),
        .O(\rxeq_preset[0]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hA8FFA800)) 
    \rxeq_preset[1]_i_1__0 
       (.I0(rxeq_preset_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(\rxeq_preset[2]_i_2__0_n_0 ),
        .I4(\rxeq_preset_reg_n_0_[1] ),
        .O(\rxeq_preset[1]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hA8FFA800)) 
    \rxeq_preset[2]_i_1__0 
       (.I0(rxeq_preset_reg2[2]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(\rxeq_preset[2]_i_2__0_n_0 ),
        .I4(\rxeq_preset_reg_n_0_[2] ),
        .O(\rxeq_preset[2]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0002)) 
    \rxeq_preset[2]_i_2__0 
       (.I0(\rxeq_preset[2]_i_3__0_n_0 ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .I4(rxeq_adapt_done_reg_i_2__0_n_0),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .O(\rxeq_preset[2]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \rxeq_preset[2]_i_3__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\rxeq_preset[2]_i_3__0_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_preset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_preset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_preset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_reg1[0]),
        .Q(rxeq_preset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_reg1[1]),
        .Q(rxeq_preset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_reg1[2]),
        .Q(rxeq_preset_reg2[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_preset_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxeq_preset[0]_i_1__0_n_0 ),
        .Q(\rxeq_preset_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_preset_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxeq_preset[1]_i_1__0_n_0 ),
        .Q(\rxeq_preset_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_preset_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxeq_preset[2]_i_1__0_n_0 ),
        .Q(\rxeq_preset_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_preset_valid_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .Q(rxeq_preset_valid),
        .R(RST_CPLLRESET));
  pcie_7x_0_pcie_7x_0_rxeq_scan_41 rxeq_scan_i
       (.D({rxeq_scan_i_n_0,rxeq_scan_i_n_1,rxeq_scan_i_n_2}),
        .\FSM_onehot_fsm_rx_reg[5] ({\rxeq_cnt_reg_n_0_[2] ,\rxeq_cnt_reg_n_0_[1] ,\rxeq_cnt_reg_n_0_[0] }),
        .Q({\FSM_onehot_fsm_rx_reg_n_0_[6] ,\FSM_onehot_fsm_rx_reg_n_0_[5] ,\FSM_onehot_fsm_rx_reg_n_0_[4] ,\FSM_onehot_fsm_rx_reg_n_0_[2] ,\FSM_onehot_fsm_rx_reg_n_0_[1] }),
        .RST_CPLLRESET(RST_CPLLRESET),
        .USER_RXEQ_ADAPT_DONE(USER_RXEQ_ADAPT_DONE),
        .adapt_done_reg_0(rxeq_scan_i_n_4),
        .\fs_reg1_reg[5]_0 ({\rxeq_fs_reg_n_0_[5] ,\rxeq_fs_reg_n_0_[4] ,\rxeq_fs_reg_n_0_[3] ,\rxeq_fs_reg_n_0_[2] ,\rxeq_fs_reg_n_0_[1] ,\rxeq_fs_reg_n_0_[0] }),
        .\lf_reg1_reg[5]_0 ({\rxeq_lf_reg_n_0_[5] ,\rxeq_lf_reg_n_0_[4] ,\rxeq_lf_reg_n_0_[3] ,\rxeq_lf_reg_n_0_[2] ,\rxeq_lf_reg_n_0_[1] ,\rxeq_lf_reg_n_0_[0] }),
        .new_txcoeff_done_reg_0(rxeq_scan_i_n_5),
        .new_txcoeff_req_reg1_reg_0(rxeq_new_txcoeff_req_reg_n_0),
        .out(rxeq_control_reg2),
        .pipe_pclk_in(pipe_pclk_in),
        .\preset_reg1_reg[2]_0 ({\rxeq_preset_reg_n_0_[2] ,\rxeq_preset_reg_n_0_[1] ,\rxeq_preset_reg_n_0_[0] }),
        .rxeq_adapt_done_reg(rxeq_adapt_done_i_2__0_n_0),
        .rxeq_adapt_done_reg_reg(\FSM_onehot_fsm_rx[1]_i_2__0_n_0 ),
        .rxeq_adapt_done_reg_reg_0(rxeq_adapt_done_reg_i_2__0_n_0),
        .rxeq_adapt_done_reg_reg_1(rxeq_adapt_done_reg_reg_n_0),
        .rxeq_new_txcoeff_req(rxeq_new_txcoeff_req),
        .rxeq_preset_valid(rxeq_preset_valid),
        .\txcoeff_reg1_reg[17]_0 ({\rxeq_txcoeff_reg_n_0_[17] ,\rxeq_txcoeff_reg_n_0_[16] ,\rxeq_txcoeff_reg_n_0_[15] ,\rxeq_txcoeff_reg_n_0_[14] ,\rxeq_txcoeff_reg_n_0_[13] ,\rxeq_txcoeff_reg_n_0_[12] ,\rxeq_txcoeff_reg_n_0_[11] ,\rxeq_txcoeff_reg_n_0_[10] ,\rxeq_txcoeff_reg_n_0_[9] ,\rxeq_txcoeff_reg_n_0_[8] ,\rxeq_txcoeff_reg_n_0_[7] ,\rxeq_txcoeff_reg_n_0_[6] ,\rxeq_txcoeff_reg_n_0_[5] ,\rxeq_txcoeff_reg_n_0_[4] ,\rxeq_txcoeff_reg_n_0_[3] ,\rxeq_txcoeff_reg_n_0_[2] ,\rxeq_txcoeff_reg_n_0_[1] ,\rxeq_txcoeff_reg_n_0_[0] }),
        .\txpreset_reg1_reg[3]_0 ({\rxeq_txpreset_reg_n_0_[3] ,\rxeq_txpreset_reg_n_0_[2] ,\rxeq_txpreset_reg_n_0_[1] ,\rxeq_txpreset_reg_n_0_[0] }));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[0]_i_1__0 
       (.I0(\rxeq_txcoeff_reg_n_0_[6] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[0]));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[10]_i_1__0 
       (.I0(\rxeq_txcoeff_reg_n_0_[16] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[10]));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[11]_i_1__0 
       (.I0(\rxeq_txcoeff_reg_n_0_[17] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[11]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[12]_i_1__0 
       (.I0(txeq_deemph_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[12]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[13]_i_1__0 
       (.I0(txeq_deemph_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[13]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[14]_i_1__0 
       (.I0(txeq_deemph_reg2[2]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[14]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[15]_i_1__0 
       (.I0(txeq_deemph_reg2[3]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[15]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[16]_i_1__0 
       (.I0(txeq_deemph_reg2[4]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[16]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[17]_i_1__0 
       (.I0(txeq_deemph_reg2[5]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[17]));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[1]_i_1__0 
       (.I0(\rxeq_txcoeff_reg_n_0_[7] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[1]));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[2]_i_1__0 
       (.I0(\rxeq_txcoeff_reg_n_0_[8] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[2]));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[3]_i_1__0 
       (.I0(\rxeq_txcoeff_reg_n_0_[9] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[3]));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[4]_i_1__0 
       (.I0(\rxeq_txcoeff_reg_n_0_[10] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[4]));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[5]_i_1__0 
       (.I0(\rxeq_txcoeff_reg_n_0_[11] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[5]));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[6]_i_1__0 
       (.I0(\rxeq_txcoeff_reg_n_0_[12] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[6]));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[7]_i_1__0 
       (.I0(\rxeq_txcoeff_reg_n_0_[13] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[7]));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[8]_i_1__0 
       (.I0(\rxeq_txcoeff_reg_n_0_[14] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[8]));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[9]_i_1__0 
       (.I0(\rxeq_txcoeff_reg_n_0_[15] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[9]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[0]),
        .Q(\rxeq_txcoeff_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[10] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[10]),
        .Q(\rxeq_txcoeff_reg_n_0_[10] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[11] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[11]),
        .Q(\rxeq_txcoeff_reg_n_0_[11] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[12] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[12]),
        .Q(\rxeq_txcoeff_reg_n_0_[12] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[13] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[13]),
        .Q(\rxeq_txcoeff_reg_n_0_[13] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[14] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[14]),
        .Q(\rxeq_txcoeff_reg_n_0_[14] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[15] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[15]),
        .Q(\rxeq_txcoeff_reg_n_0_[15] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[16] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[16]),
        .Q(\rxeq_txcoeff_reg_n_0_[16] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[17] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[17]),
        .Q(\rxeq_txcoeff_reg_n_0_[17] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[1]),
        .Q(\rxeq_txcoeff_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[2]),
        .Q(\rxeq_txcoeff_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[3]),
        .Q(\rxeq_txcoeff_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[4] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[4]),
        .Q(\rxeq_txcoeff_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[5] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[5]),
        .Q(\rxeq_txcoeff_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[6] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[6]),
        .Q(\rxeq_txcoeff_reg_n_0_[6] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[7] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[7]),
        .Q(\rxeq_txcoeff_reg_n_0_[7] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[8] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[8]),
        .Q(\rxeq_txcoeff_reg_n_0_[8] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[9] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txcoeff[9]),
        .Q(\rxeq_txcoeff_reg_n_0_[9] ),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[0]_i_1__0 
       (.I0(rxeq_txpreset_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[0]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[1]_i_1__0 
       (.I0(rxeq_txpreset_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[1]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[2]_i_1__0 
       (.I0(rxeq_txpreset_reg2[2]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[2]));
  LUT5 #(
    .INIT(32'hFFFFF404)) 
    \rxeq_txpreset[3]_i_1__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .I1(\rxeq_txpreset[3]_i_3__0_n_0 ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(rxeq_control_reg2[1]),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\rxeq_txpreset[3]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[3]_i_2__0 
       (.I0(rxeq_txpreset_reg2[3]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[3]));
  LUT3 #(
    .INIT(8'h01)) 
    \rxeq_txpreset[3]_i_3__0 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .O(\rxeq_txpreset[3]_i_3__0_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_txpreset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_txpreset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_txpreset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_txpreset_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[0]),
        .Q(rxeq_txpreset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[1]),
        .Q(rxeq_txpreset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[2]),
        .Q(rxeq_txpreset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[3]),
        .Q(rxeq_txpreset_reg2[3]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txpreset[0]),
        .Q(\rxeq_txpreset_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txpreset[1]),
        .Q(\rxeq_txpreset_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txpreset[2]),
        .Q(\rxeq_txpreset_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__0_n_0 ),
        .D(rxeq_txpreset[3]),
        .Q(\rxeq_txpreset_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_en_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_en_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_en_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_en_reg1),
        .Q(rxeq_user_en_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_mode_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_mode_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_mode_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_mode_reg1),
        .Q(rxeq_user_mode_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[0]),
        .Q(rxeq_user_txcoeff_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[10]),
        .Q(rxeq_user_txcoeff_reg2[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[11]),
        .Q(rxeq_user_txcoeff_reg2[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[12]),
        .Q(rxeq_user_txcoeff_reg2[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[13]),
        .Q(rxeq_user_txcoeff_reg2[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[14]),
        .Q(rxeq_user_txcoeff_reg2[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[15]),
        .Q(rxeq_user_txcoeff_reg2[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[16]),
        .Q(rxeq_user_txcoeff_reg2[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[17]),
        .Q(rxeq_user_txcoeff_reg2[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[1]),
        .Q(rxeq_user_txcoeff_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[2]),
        .Q(rxeq_user_txcoeff_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[3]),
        .Q(rxeq_user_txcoeff_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[4]),
        .Q(rxeq_user_txcoeff_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[5]),
        .Q(rxeq_user_txcoeff_reg2[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[6]),
        .Q(rxeq_user_txcoeff_reg2[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[7]),
        .Q(rxeq_user_txcoeff_reg2[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[8]),
        .Q(rxeq_user_txcoeff_reg2[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[9]),
        .Q(rxeq_user_txcoeff_reg2[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_control_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_control_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_control_reg1[0]),
        .Q(txeq_control_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_control_reg1[1]),
        .Q(txeq_control_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \txeq_deemph_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[0]),
        .S(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \txeq_deemph_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[0]),
        .Q(txeq_deemph_reg2[0]),
        .S(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[1]),
        .Q(txeq_deemph_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[2]),
        .Q(txeq_deemph_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[3]),
        .Q(txeq_deemph_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[4]),
        .Q(txeq_deemph_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[5]),
        .Q(txeq_deemph_reg2[5]),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h00001000)) 
    \txeq_preset[0]_i_1__0 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[2]),
        .I2(txeq_preset_reg2[0]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[1]),
        .O(p_0_out[0]));
  LUT5 #(
    .INIT(32'hABEAABAF)) 
    \txeq_preset[10]_i_1__0 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[2]),
        .I2(txeq_preset_reg2[0]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[1]),
        .O(p_0_out[10]));
  LUT5 #(
    .INIT(32'hFFFF200D)) 
    \txeq_preset[11]_i_1__0 
       (.I0(txeq_preset_reg2[1]),
        .I1(txeq_preset_reg2[3]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[0]),
        .I4(RST_CPLLRESET),
        .O(p_0_out[11]));
  LUT5 #(
    .INIT(32'h01151110)) 
    \txeq_preset[12]_i_1__0 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[3]),
        .I2(txeq_preset_reg2[1]),
        .I3(txeq_preset_reg2[2]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[12]));
  LUT5 #(
    .INIT(32'h01000010)) 
    \txeq_preset[13]_i_1__0 
       (.I0(txeq_preset_reg2[2]),
        .I1(RST_CPLLRESET),
        .I2(txeq_preset_reg2[0]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[1]),
        .O(p_0_out[13]));
  LUT5 #(
    .INIT(32'h01000010)) 
    \txeq_preset[14]_i_1__0 
       (.I0(txeq_preset_reg2[2]),
        .I1(RST_CPLLRESET),
        .I2(txeq_preset_reg2[3]),
        .I3(txeq_preset_reg2[1]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[14]));
  LUT4 #(
    .INIT(16'hF0F1)) 
    \txeq_preset[15]_i_1__0 
       (.I0(txeq_preset_reg2[2]),
        .I1(txeq_preset_reg2[1]),
        .I2(RST_CPLLRESET),
        .I3(txeq_preset_reg2[3]),
        .O(p_0_out[15]));
  LUT4 #(
    .INIT(16'h0006)) 
    \txeq_preset[16]_i_1__0 
       (.I0(txeq_preset_reg2[3]),
        .I1(txeq_preset_reg2[0]),
        .I2(txeq_preset_reg2[2]),
        .I3(RST_CPLLRESET),
        .O(p_0_out[16]));
  LUT4 #(
    .INIT(16'hAABA)) 
    \txeq_preset[17]_i_1__0 
       (.I0(RST_CPLLRESET),
        .I1(fsm_tx[0]),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[2]),
        .O(\txeq_preset[17]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF400D)) 
    \txeq_preset[17]_i_2__0 
       (.I0(txeq_preset_reg2[3]),
        .I1(txeq_preset_reg2[1]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[0]),
        .I4(RST_CPLLRESET),
        .O(p_0_out[17]));
  LUT5 #(
    .INIT(32'h00001004)) 
    \txeq_preset[1]_i_1__0 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[3]),
        .I2(txeq_preset_reg2[1]),
        .I3(txeq_preset_reg2[2]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[1]));
  LUT4 #(
    .INIT(16'h0E00)) 
    \txeq_preset[2]_i_1__0 
       (.I0(txeq_preset_reg2[2]),
        .I1(txeq_preset_reg2[0]),
        .I2(RST_CPLLRESET),
        .I3(txeq_preset_reg2[3]),
        .O(p_0_out[2]));
  LUT5 #(
    .INIT(32'h01440140)) 
    \txeq_preset[3]_i_1__0 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[2]),
        .I2(txeq_preset_reg2[1]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[0]),
        .O(\txeq_preset[3]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h00001400)) 
    \txeq_preset[7]_i_1__0 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[0]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[1]),
        .I4(txeq_preset_reg2[3]),
        .O(\txeq_preset[7]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hAAAFBEAF)) 
    \txeq_preset[8]_i_1__0 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[0]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[1]),
        .I4(txeq_preset_reg2[3]),
        .O(p_0_out[8]));
  LUT5 #(
    .INIT(32'hCCFCCFCD)) 
    \txeq_preset[9]_i_1__0 
       (.I0(txeq_preset_reg2[1]),
        .I1(RST_CPLLRESET),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[9]));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT3 #(
    .INIT(8'h04)) 
    txeq_preset_done_i_1__0
       (.I0(fsm_tx[2]),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[0]),
        .O(txeq_preset_done_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txeq_preset_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_done_i_1__0_n_0),
        .Q(txeq_preset_done),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_preset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_preset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_preset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_preset_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[0]),
        .Q(txeq_preset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[1]),
        .Q(txeq_preset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[2]),
        .Q(txeq_preset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[3]),
        .Q(txeq_preset_reg2[3]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(p_0_out[0]),
        .Q(\txeq_preset_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[10] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(p_0_out[10]),
        .Q(\txeq_preset_reg_n_0_[10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[11] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(p_0_out[11]),
        .Q(\txeq_preset_reg_n_0_[11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[12] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(p_0_out[12]),
        .Q(\txeq_preset_reg_n_0_[12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[13] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(p_0_out[13]),
        .Q(\txeq_preset_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[14] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(p_0_out[14]),
        .Q(\txeq_preset_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[15] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(p_0_out[15]),
        .Q(\txeq_preset_reg_n_0_[15] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[16] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(p_0_out[16]),
        .Q(\txeq_preset_reg_n_0_[16] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[17] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(p_0_out[17]),
        .Q(\txeq_preset_reg_n_0_[17] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(p_0_out[1]),
        .Q(\txeq_preset_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(p_0_out[2]),
        .Q(\txeq_preset_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(\txeq_preset[3]_i_1__0_n_0 ),
        .Q(\txeq_preset_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[7] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(\txeq_preset[7]_i_1__0_n_0 ),
        .Q(\txeq_preset_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[8] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(p_0_out[8]),
        .Q(\txeq_preset_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[9] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__0_n_0 ),
        .D(p_0_out[9]),
        .Q(\txeq_preset_reg_n_0_[9] ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h45404040)) 
    \txeq_txcoeff[0]_i_1__0 
       (.I0(fsm_tx[2]),
        .I1(\txeq_txcoeff[0]_i_2__0_n_0 ),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[0]),
        .I4(\txeq_txcoeff_reg_n_0_[6] ),
        .O(\txeq_txcoeff[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[0]_i_2__0 
       (.I0(\txeq_txcoeff_reg_n_0_[6] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[7] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[0] ),
        .O(\txeq_txcoeff[0]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[10]_i_1__0 
       (.I0(\txeq_txcoeff_reg_n_0_[9] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[10]_i_2__0_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[16] ),
        .O(\txeq_txcoeff[10]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[10]_i_2__0 
       (.I0(\txeq_txcoeff_reg_n_0_[16] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[17] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[10] ),
        .O(\txeq_txcoeff[10]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[11]_i_1__0 
       (.I0(\txeq_txcoeff_reg_n_0_[10] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[11]_i_2__0_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[17] ),
        .O(\txeq_txcoeff[11]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[11]_i_2__0 
       (.I0(\txeq_txcoeff_reg_n_0_[17] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[18] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[11] ),
        .O(\txeq_txcoeff[11]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[12]_i_1__0 
       (.I0(\txeq_txcoeff_reg_n_0_[11] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[12]_i_2__0_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[18] ),
        .O(\txeq_txcoeff[12]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[12]_i_2__0 
       (.I0(\txeq_txcoeff_reg_n_0_[18] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[0]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[12] ),
        .O(\txeq_txcoeff[12]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[13]_i_1__0 
       (.I0(\txeq_txcoeff_reg_n_0_[12] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[13]_i_2__0_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[0]),
        .O(\txeq_txcoeff[13]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[13]_i_2__0 
       (.I0(txeq_deemph_reg2[0]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[13] ),
        .O(\txeq_txcoeff[13]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[14]_i_1__0 
       (.I0(\txeq_txcoeff_reg_n_0_[13] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[14]_i_2__0_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[1]),
        .O(\txeq_txcoeff[14]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[14]_i_2__0 
       (.I0(txeq_deemph_reg2[1]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[2]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[14] ),
        .O(\txeq_txcoeff[14]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[15]_i_1__0 
       (.I0(\txeq_txcoeff_reg_n_0_[14] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[15]_i_2__0_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[2]),
        .O(\txeq_txcoeff[15]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[15]_i_2__0 
       (.I0(txeq_deemph_reg2[2]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[3]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[15] ),
        .O(\txeq_txcoeff[15]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[16]_i_1__0 
       (.I0(\txeq_txcoeff_reg_n_0_[15] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[16]_i_2__0_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[3]),
        .O(\txeq_txcoeff[16]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[16]_i_2__0 
       (.I0(txeq_deemph_reg2[3]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[4]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[16] ),
        .O(\txeq_txcoeff[16]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[17]_i_1__0 
       (.I0(\txeq_txcoeff_reg_n_0_[16] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[17]_i_2__0_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[4]),
        .O(\txeq_txcoeff[17]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[17]_i_2__0 
       (.I0(txeq_deemph_reg2[4]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[5]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[17] ),
        .O(\txeq_txcoeff[17]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'hFF040FFF)) 
    \txeq_txcoeff[18]_i_1__0 
       (.I0(txeq_control_reg2[0]),
        .I1(txeq_control_reg2[1]),
        .I2(fsm_tx[2]),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .O(txeq_txcoeff));
  LUT6 #(
    .INIT(64'h22F3220022002200)) 
    \txeq_txcoeff[18]_i_2__0 
       (.I0(\txeq_txcoeff_reg_n_0_[17] ),
        .I1(fsm_tx[1]),
        .I2(\txeq_txcoeff[18]_i_3__0_n_0 ),
        .I3(fsm_tx[2]),
        .I4(txeq_deemph_reg2[5]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[18]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \txeq_txcoeff[18]_i_3__0 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .O(\txeq_txcoeff[18]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[1]_i_1__0 
       (.I0(\txeq_txcoeff_reg_n_0_[0] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[1]_i_2__0_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[7] ),
        .O(\txeq_txcoeff[1]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[1]_i_2__0 
       (.I0(\txeq_txcoeff_reg_n_0_[7] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[8] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[1] ),
        .O(\txeq_txcoeff[1]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[2]_i_1__0 
       (.I0(\txeq_txcoeff_reg_n_0_[1] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[2]_i_2__0_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[8] ),
        .O(\txeq_txcoeff[2]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[2]_i_2__0 
       (.I0(\txeq_txcoeff_reg_n_0_[8] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[9] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[2] ),
        .O(\txeq_txcoeff[2]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[3]_i_1__0 
       (.I0(\txeq_txcoeff_reg_n_0_[2] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[3]_i_2__0_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[9] ),
        .O(\txeq_txcoeff[3]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[3]_i_2__0 
       (.I0(\txeq_txcoeff_reg_n_0_[9] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[10] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[3] ),
        .O(\txeq_txcoeff[3]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \txeq_txcoeff[4]_i_1__0 
       (.I0(\txeq_txcoeff_reg_n_0_[3] ),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[2]),
        .I3(\txeq_txcoeff[4]_i_2__0_n_0 ),
        .O(\txeq_txcoeff[4]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hCACCCCCC00000000)) 
    \txeq_txcoeff[4]_i_2__0 
       (.I0(\txeq_txcoeff_reg_n_0_[11] ),
        .I1(\txeq_txcoeff_reg_n_0_[10] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I3(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I4(fsm_tx[1]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[4]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \txeq_txcoeff[5]_i_1__0 
       (.I0(\txeq_txcoeff_reg_n_0_[4] ),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[2]),
        .I3(\txeq_txcoeff[5]_i_2__0_n_0 ),
        .O(\txeq_txcoeff[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hCACCCCCC00000000)) 
    \txeq_txcoeff[5]_i_2__0 
       (.I0(\txeq_txcoeff_reg_n_0_[12] ),
        .I1(\txeq_txcoeff_reg_n_0_[11] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I3(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I4(fsm_tx[1]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[5]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \txeq_txcoeff[6]_i_1__0 
       (.I0(\txeq_txcoeff_reg_n_0_[5] ),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[2]),
        .I3(\txeq_txcoeff[6]_i_2__0_n_0 ),
        .O(\txeq_txcoeff[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hCACCCCCC00000000)) 
    \txeq_txcoeff[6]_i_2__0 
       (.I0(\txeq_txcoeff_reg_n_0_[13] ),
        .I1(\txeq_txcoeff_reg_n_0_[12] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I3(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I4(fsm_tx[1]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[6]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[7]_i_1__0 
       (.I0(\txeq_txcoeff_reg_n_0_[6] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[7]_i_2__0_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[13] ),
        .O(\txeq_txcoeff[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[7]_i_2__0 
       (.I0(\txeq_txcoeff_reg_n_0_[13] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[14] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[7] ),
        .O(\txeq_txcoeff[7]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[8]_i_1__0 
       (.I0(\txeq_txcoeff_reg_n_0_[7] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[8]_i_2__0_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[14] ),
        .O(\txeq_txcoeff[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[8]_i_2__0 
       (.I0(\txeq_txcoeff_reg_n_0_[14] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[15] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[8] ),
        .O(\txeq_txcoeff[8]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[9]_i_1__0 
       (.I0(\txeq_txcoeff_reg_n_0_[8] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[9]_i_2__0_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[15] ),
        .O(\txeq_txcoeff[9]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[9]_i_2__0 
       (.I0(\txeq_txcoeff_reg_n_0_[15] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[16] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[9] ),
        .O(\txeq_txcoeff[9]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h000004000F000400)) 
    \txeq_txcoeff_cnt[0]_i_1__0 
       (.I0(txeq_control_reg2[0]),
        .I1(txeq_control_reg2[1]),
        .I2(fsm_tx[2]),
        .I3(fsm_tx[0]),
        .I4(fsm_tx[1]),
        .I5(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .O(txeq_txcoeff_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT5 #(
    .INIT(32'h00006000)) 
    \txeq_txcoeff_cnt[1]_i_1__0 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I2(fsm_tx[0]),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[2]),
        .O(txeq_txcoeff_cnt[1]));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_txcoeff_cnt[0]),
        .Q(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_txcoeff_cnt[1]),
        .Q(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[0] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[0]_i_1__0_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[10] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[10]_i_1__0_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[10] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[11] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[11]_i_1__0_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[11] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[12] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[12]_i_1__0_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[12] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[13] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[13]_i_1__0_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[13] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[14] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[14]_i_1__0_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[14] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[15] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[15]_i_1__0_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[15] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[16] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[16]_i_1__0_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[16] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[17] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[17]_i_1__0_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[17] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[18] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[18]_i_2__0_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[18] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[1] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[1]_i_1__0_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[2] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[2]_i_1__0_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[3] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[3]_i_1__0_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[4] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[4]_i_1__0_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[5] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[5]_i_1__0_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[6] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[6]_i_1__0_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[6] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[7] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[7]_i_1__0_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[7] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[8] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[8]_i_1__0_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[8] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[9] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[9]_i_1__0_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[9] ),
        .R(RST_CPLLRESET));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pipe_eq" *) 
module pcie_7x_0_pcie_7x_0_pipe_eq_29
   (TXPRECURSOR,
    TXMAINCURSOR,
    TXPOSTCURSOR,
    USER_RXEQ_ADAPT_DONE,
    RST_CPLLRESET,
    pipe_pclk_in,
    rate_gen3_2);
  output [4:0]TXPRECURSOR;
  output [6:0]TXMAINCURSOR;
  output [4:0]TXPOSTCURSOR;
  output USER_RXEQ_ADAPT_DONE;
  input RST_CPLLRESET;
  input pipe_pclk_in;
  input rate_gen3_2;

  wire \FSM_onehot_fsm_rx[1]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm_rx[1]_i_2__1_n_0 ;
  wire \FSM_onehot_fsm_rx[3]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm_rx[4]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[1] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[2] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[3] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[4] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[5] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[6] ;
  wire \FSM_sequential_fsm_tx[0]_i_1__1_n_0 ;
  wire \FSM_sequential_fsm_tx[1]_i_1__1_n_0 ;
  wire \FSM_sequential_fsm_tx[1]_i_2__1_n_0 ;
  wire \FSM_sequential_fsm_tx[2]_i_1__1_n_0 ;
  wire \FSM_sequential_fsm_tx[2]_i_2__1_n_0 ;
  wire RST_CPLLRESET;
  wire [6:0]TXMAINCURSOR;
  wire [4:0]TXPOSTCURSOR;
  wire [4:0]TXPRECURSOR;
  wire USER_RXEQ_ADAPT_DONE;
  wire [2:0]fsm_tx;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg2;
  wire [17:0]p_0_out;
  wire pipe_pclk_in;
  wire rate_gen3_2;
  wire rxeq_adapt_done_i_2__1_n_0;
  wire rxeq_adapt_done_reg_i_2__1_n_0;
  wire rxeq_adapt_done_reg_reg_n_0;
  wire [2:0]rxeq_cnt;
  wire \rxeq_cnt_reg_n_0_[0] ;
  wire \rxeq_cnt_reg_n_0_[1] ;
  wire \rxeq_cnt_reg_n_0_[2] ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rxeq_control_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rxeq_control_reg2;
  wire [5:0]rxeq_fs;
  wire \rxeq_fs[5]_i_1__1_n_0 ;
  wire \rxeq_fs_reg_n_0_[0] ;
  wire \rxeq_fs_reg_n_0_[1] ;
  wire \rxeq_fs_reg_n_0_[2] ;
  wire \rxeq_fs_reg_n_0_[3] ;
  wire \rxeq_fs_reg_n_0_[4] ;
  wire \rxeq_fs_reg_n_0_[5] ;
  wire [5:0]rxeq_lf;
  wire \rxeq_lf[5]_i_1__1_n_0 ;
  wire \rxeq_lf_reg_n_0_[0] ;
  wire \rxeq_lf_reg_n_0_[1] ;
  wire \rxeq_lf_reg_n_0_[2] ;
  wire \rxeq_lf_reg_n_0_[3] ;
  wire \rxeq_lf_reg_n_0_[4] ;
  wire \rxeq_lf_reg_n_0_[5] ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]rxeq_lffs_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]rxeq_lffs_reg2;
  wire rxeq_new_txcoeff_req;
  wire rxeq_new_txcoeff_req_reg_n_0;
  wire \rxeq_preset[0]_i_1__1_n_0 ;
  wire \rxeq_preset[1]_i_1__1_n_0 ;
  wire \rxeq_preset[2]_i_1__1_n_0 ;
  wire \rxeq_preset[2]_i_2__1_n_0 ;
  wire \rxeq_preset[2]_i_3__1_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]rxeq_preset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]rxeq_preset_reg2;
  wire \rxeq_preset_reg_n_0_[0] ;
  wire \rxeq_preset_reg_n_0_[1] ;
  wire \rxeq_preset_reg_n_0_[2] ;
  wire rxeq_preset_valid;
  wire rxeq_scan_i_n_0;
  wire rxeq_scan_i_n_1;
  wire rxeq_scan_i_n_2;
  wire rxeq_scan_i_n_4;
  wire rxeq_scan_i_n_5;
  wire [17:0]rxeq_txcoeff;
  wire \rxeq_txcoeff_reg_n_0_[0] ;
  wire \rxeq_txcoeff_reg_n_0_[10] ;
  wire \rxeq_txcoeff_reg_n_0_[11] ;
  wire \rxeq_txcoeff_reg_n_0_[12] ;
  wire \rxeq_txcoeff_reg_n_0_[13] ;
  wire \rxeq_txcoeff_reg_n_0_[14] ;
  wire \rxeq_txcoeff_reg_n_0_[15] ;
  wire \rxeq_txcoeff_reg_n_0_[16] ;
  wire \rxeq_txcoeff_reg_n_0_[17] ;
  wire \rxeq_txcoeff_reg_n_0_[1] ;
  wire \rxeq_txcoeff_reg_n_0_[2] ;
  wire \rxeq_txcoeff_reg_n_0_[3] ;
  wire \rxeq_txcoeff_reg_n_0_[4] ;
  wire \rxeq_txcoeff_reg_n_0_[5] ;
  wire \rxeq_txcoeff_reg_n_0_[6] ;
  wire \rxeq_txcoeff_reg_n_0_[7] ;
  wire \rxeq_txcoeff_reg_n_0_[8] ;
  wire \rxeq_txcoeff_reg_n_0_[9] ;
  wire [3:0]rxeq_txpreset;
  wire \rxeq_txpreset[3]_i_1__1_n_0 ;
  wire \rxeq_txpreset[3]_i_3__1_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]rxeq_txpreset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]rxeq_txpreset_reg2;
  wire \rxeq_txpreset_reg_n_0_[0] ;
  wire \rxeq_txpreset_reg_n_0_[1] ;
  wire \rxeq_txpreset_reg_n_0_[2] ;
  wire \rxeq_txpreset_reg_n_0_[3] ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_en_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_en_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_mode_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_mode_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]rxeq_user_txcoeff_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]rxeq_user_txcoeff_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]txeq_control_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]txeq_control_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]txeq_deemph_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]txeq_deemph_reg2;
  wire \txeq_preset[17]_i_1__1_n_0 ;
  wire \txeq_preset[3]_i_1__1_n_0 ;
  wire \txeq_preset[7]_i_1__1_n_0 ;
  wire txeq_preset_done;
  wire txeq_preset_done_i_1__1_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txeq_preset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txeq_preset_reg2;
  wire \txeq_preset_reg_n_0_[0] ;
  wire \txeq_preset_reg_n_0_[10] ;
  wire \txeq_preset_reg_n_0_[11] ;
  wire \txeq_preset_reg_n_0_[12] ;
  wire \txeq_preset_reg_n_0_[13] ;
  wire \txeq_preset_reg_n_0_[14] ;
  wire \txeq_preset_reg_n_0_[15] ;
  wire \txeq_preset_reg_n_0_[16] ;
  wire \txeq_preset_reg_n_0_[17] ;
  wire \txeq_preset_reg_n_0_[1] ;
  wire \txeq_preset_reg_n_0_[2] ;
  wire \txeq_preset_reg_n_0_[3] ;
  wire \txeq_preset_reg_n_0_[7] ;
  wire \txeq_preset_reg_n_0_[8] ;
  wire \txeq_preset_reg_n_0_[9] ;
  wire txeq_txcoeff;
  wire \txeq_txcoeff[0]_i_1__1_n_0 ;
  wire \txeq_txcoeff[0]_i_2__1_n_0 ;
  wire \txeq_txcoeff[10]_i_1__1_n_0 ;
  wire \txeq_txcoeff[10]_i_2__1_n_0 ;
  wire \txeq_txcoeff[11]_i_1__1_n_0 ;
  wire \txeq_txcoeff[11]_i_2__1_n_0 ;
  wire \txeq_txcoeff[12]_i_1__1_n_0 ;
  wire \txeq_txcoeff[12]_i_2__1_n_0 ;
  wire \txeq_txcoeff[13]_i_1__1_n_0 ;
  wire \txeq_txcoeff[13]_i_2__1_n_0 ;
  wire \txeq_txcoeff[14]_i_1__1_n_0 ;
  wire \txeq_txcoeff[14]_i_2__1_n_0 ;
  wire \txeq_txcoeff[15]_i_1__1_n_0 ;
  wire \txeq_txcoeff[15]_i_2__1_n_0 ;
  wire \txeq_txcoeff[16]_i_1__1_n_0 ;
  wire \txeq_txcoeff[16]_i_2__1_n_0 ;
  wire \txeq_txcoeff[17]_i_1__1_n_0 ;
  wire \txeq_txcoeff[17]_i_2__1_n_0 ;
  wire \txeq_txcoeff[18]_i_2__1_n_0 ;
  wire \txeq_txcoeff[18]_i_3__1_n_0 ;
  wire \txeq_txcoeff[1]_i_1__1_n_0 ;
  wire \txeq_txcoeff[1]_i_2__1_n_0 ;
  wire \txeq_txcoeff[2]_i_1__1_n_0 ;
  wire \txeq_txcoeff[2]_i_2__1_n_0 ;
  wire \txeq_txcoeff[3]_i_1__1_n_0 ;
  wire \txeq_txcoeff[3]_i_2__1_n_0 ;
  wire \txeq_txcoeff[4]_i_1__1_n_0 ;
  wire \txeq_txcoeff[4]_i_2__1_n_0 ;
  wire \txeq_txcoeff[5]_i_1__1_n_0 ;
  wire \txeq_txcoeff[5]_i_2__1_n_0 ;
  wire \txeq_txcoeff[6]_i_1__1_n_0 ;
  wire \txeq_txcoeff[6]_i_2__1_n_0 ;
  wire \txeq_txcoeff[7]_i_1__1_n_0 ;
  wire \txeq_txcoeff[7]_i_2__1_n_0 ;
  wire \txeq_txcoeff[8]_i_1__1_n_0 ;
  wire \txeq_txcoeff[8]_i_2__1_n_0 ;
  wire \txeq_txcoeff[9]_i_1__1_n_0 ;
  wire \txeq_txcoeff[9]_i_2__1_n_0 ;
  wire [1:0]txeq_txcoeff_cnt;
  wire \txeq_txcoeff_cnt_reg_n_0_[0] ;
  wire \txeq_txcoeff_cnt_reg_n_0_[1] ;
  wire \txeq_txcoeff_reg_n_0_[0] ;
  wire \txeq_txcoeff_reg_n_0_[10] ;
  wire \txeq_txcoeff_reg_n_0_[11] ;
  wire \txeq_txcoeff_reg_n_0_[12] ;
  wire \txeq_txcoeff_reg_n_0_[13] ;
  wire \txeq_txcoeff_reg_n_0_[14] ;
  wire \txeq_txcoeff_reg_n_0_[15] ;
  wire \txeq_txcoeff_reg_n_0_[16] ;
  wire \txeq_txcoeff_reg_n_0_[17] ;
  wire \txeq_txcoeff_reg_n_0_[18] ;
  wire \txeq_txcoeff_reg_n_0_[1] ;
  wire \txeq_txcoeff_reg_n_0_[2] ;
  wire \txeq_txcoeff_reg_n_0_[3] ;
  wire \txeq_txcoeff_reg_n_0_[4] ;
  wire \txeq_txcoeff_reg_n_0_[5] ;
  wire \txeq_txcoeff_reg_n_0_[6] ;
  wire \txeq_txcoeff_reg_n_0_[7] ;
  wire \txeq_txcoeff_reg_n_0_[8] ;
  wire \txeq_txcoeff_reg_n_0_[9] ;

  LUT5 #(
    .INIT(32'hABABABAA)) 
    \FSM_onehot_fsm_rx[1]_i_1__1 
       (.I0(\FSM_onehot_fsm_rx[1]_i_2__1_n_0 ),
        .I1(rxeq_control_reg2[1]),
        .I2(rxeq_control_reg2[0]),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .O(\FSM_onehot_fsm_rx[1]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \FSM_onehot_fsm_rx[1]_i_2__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .O(\FSM_onehot_fsm_rx[1]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF8FF88888888)) 
    \FSM_onehot_fsm_rx[3]_i_1__1 
       (.I0(rxeq_control_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\rxeq_cnt_reg_n_0_[2] ),
        .I3(\rxeq_cnt_reg_n_0_[1] ),
        .I4(\rxeq_cnt_reg_n_0_[0] ),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm_rx[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT5 #(
    .INIT(32'h2ABA2AAA)) 
    \FSM_onehot_fsm_rx[4]_i_1__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(\rxeq_cnt_reg_n_0_[2] ),
        .I2(\rxeq_cnt_reg_n_0_[1] ),
        .I3(\rxeq_cnt_reg_n_0_[0] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm_rx[4]_i_1__1_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx[1]_i_1__1_n_0 ),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_2),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx[3]_i_1__1_n_0 ),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx[4]_i_1__1_n_0 ),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_1),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_0),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hC04FC043C04FF04F)) 
    \FSM_sequential_fsm_tx[0]_i_1__1 
       (.I0(\FSM_sequential_fsm_tx[1]_i_2__1_n_0 ),
        .I1(fsm_tx[0]),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[2]),
        .I4(txeq_control_reg2[1]),
        .I5(txeq_control_reg2[0]),
        .O(\FSM_sequential_fsm_tx[0]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h3F703F7C3F7C0F70)) 
    \FSM_sequential_fsm_tx[1]_i_1__1 
       (.I0(\FSM_sequential_fsm_tx[1]_i_2__1_n_0 ),
        .I1(fsm_tx[0]),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[2]),
        .I4(txeq_control_reg2[1]),
        .I5(txeq_control_reg2[0]),
        .O(\FSM_sequential_fsm_tx[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_fsm_tx[1]_i_2__1 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .O(\FSM_sequential_fsm_tx[1]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h3A2A2A227F7F7F77)) 
    \FSM_sequential_fsm_tx[2]_i_1__1 
       (.I0(fsm_tx[2]),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[0]),
        .I3(txeq_control_reg2[1]),
        .I4(txeq_control_reg2[0]),
        .I5(\FSM_sequential_fsm_tx[2]_i_2__1_n_0 ),
        .O(\FSM_sequential_fsm_tx[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT5 #(
    .INIT(32'hD0FFDFFF)) 
    \FSM_sequential_fsm_tx[2]_i_2__1 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I2(fsm_tx[0]),
        .I3(fsm_tx[1]),
        .I4(txeq_preset_done),
        .O(\FSM_sequential_fsm_tx[2]_i_2__1_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_TXEQ_QUERY:101,FSM_TXEQ_PRESET:010,FSM_TXEQ_TXCOEFF:011,FSM_TXEQ_REMAP:100,FSM_TXEQ_DONE:110,FSM_TXEQ_IDLE:001,iSTATE:000" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_sequential_fsm_tx_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_sequential_fsm_tx[0]_i_1__1_n_0 ),
        .Q(fsm_tx[0]),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_TXEQ_QUERY:101,FSM_TXEQ_PRESET:010,FSM_TXEQ_TXCOEFF:011,FSM_TXEQ_REMAP:100,FSM_TXEQ_DONE:110,FSM_TXEQ_IDLE:001,iSTATE:000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_fsm_tx_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_sequential_fsm_tx[1]_i_1__1_n_0 ),
        .Q(fsm_tx[1]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_TXEQ_QUERY:101,FSM_TXEQ_PRESET:010,FSM_TXEQ_TXCOEFF:011,FSM_TXEQ_REMAP:100,FSM_TXEQ_DONE:110,FSM_TXEQ_IDLE:001,iSTATE:000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_fsm_tx_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_sequential_fsm_tx[2]_i_1__1_n_0 ),
        .Q(fsm_tx[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_gen3_2),
        .Q(gen3_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_reg1),
        .Q(gen3_reg2),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_22__1 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[17] ),
        .O(TXPOSTCURSOR[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_23__1 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[16] ),
        .O(TXPOSTCURSOR[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_24__1 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[15] ),
        .O(TXPOSTCURSOR[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_25__1 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[14] ),
        .O(TXPOSTCURSOR[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_26__1 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[13] ),
        .O(TXPOSTCURSOR[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_27__1 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[4] ),
        .O(TXPRECURSOR[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_28__1 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[3] ),
        .O(TXPRECURSOR[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_29__1 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[2] ),
        .O(TXPRECURSOR[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_30__1 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[1] ),
        .O(TXPRECURSOR[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_31__1 
       (.I0(\txeq_txcoeff_reg_n_0_[0] ),
        .I1(gen3_reg2),
        .O(TXPRECURSOR[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_32__1 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[12] ),
        .O(TXMAINCURSOR[6]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_33__1 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[11] ),
        .O(TXMAINCURSOR[5]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_34__1 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[10] ),
        .O(TXMAINCURSOR[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_35__1 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[9] ),
        .O(TXMAINCURSOR[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_36__1 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[8] ),
        .O(TXMAINCURSOR[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_37__1 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[7] ),
        .O(TXMAINCURSOR[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_38__1 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[6] ),
        .O(TXMAINCURSOR[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
    rxeq_adapt_done_i_2__1
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .O(rxeq_adapt_done_i_2__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_adapt_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_5),
        .Q(USER_RXEQ_ADAPT_DONE),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'h08)) 
    rxeq_adapt_done_reg_i_2__1
       (.I0(rxeq_control_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(rxeq_control_reg2[1]),
        .O(rxeq_adapt_done_reg_i_2__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_adapt_done_reg_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_4),
        .Q(rxeq_adapt_done_reg_reg_n_0),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h8888FFF8)) 
    \rxeq_cnt[0]_i_1__1 
       (.I0(rxeq_control_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I4(\rxeq_cnt_reg_n_0_[0] ),
        .O(rxeq_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT4 #(
    .INIT(16'h6660)) 
    \rxeq_cnt[1]_i_1__1 
       (.I0(\rxeq_cnt_reg_n_0_[0] ),
        .I1(\rxeq_cnt_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(rxeq_cnt[1]));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT5 #(
    .INIT(32'h78787800)) 
    \rxeq_cnt[2]_i_1__1 
       (.I0(\rxeq_cnt_reg_n_0_[1] ),
        .I1(\rxeq_cnt_reg_n_0_[0] ),
        .I2(\rxeq_cnt_reg_n_0_[2] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(rxeq_cnt[2]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_cnt[0]),
        .Q(\rxeq_cnt_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_cnt[1]),
        .Q(\rxeq_cnt_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_cnt[2]),
        .Q(\rxeq_cnt_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_control_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_control_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_control_reg1[0]),
        .Q(rxeq_control_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_control_reg1[1]),
        .Q(rxeq_control_reg2[1]),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[0]_i_1__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[0]),
        .O(rxeq_fs[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[1]_i_1__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[1]),
        .O(rxeq_fs[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[2]_i_1__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[2]),
        .O(rxeq_fs[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[3]_i_1__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[3]),
        .O(rxeq_fs[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[4]_i_1__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[4]),
        .O(rxeq_fs[4]));
  LUT3 #(
    .INIT(8'hF8)) 
    \rxeq_fs[5]_i_1__1 
       (.I0(rxeq_control_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx[1]_i_2__1_n_0 ),
        .O(\rxeq_fs[5]_i_1__1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[5]_i_2__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[5]),
        .O(rxeq_fs[5]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__1_n_0 ),
        .D(rxeq_fs[0]),
        .Q(\rxeq_fs_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__1_n_0 ),
        .D(rxeq_fs[1]),
        .Q(\rxeq_fs_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__1_n_0 ),
        .D(rxeq_fs[2]),
        .Q(\rxeq_fs_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__1_n_0 ),
        .D(rxeq_fs[3]),
        .Q(\rxeq_fs_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[4] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__1_n_0 ),
        .D(rxeq_fs[4]),
        .Q(\rxeq_fs_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[5] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__1_n_0 ),
        .D(rxeq_fs[5]),
        .Q(\rxeq_fs_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[0]_i_1__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[0]),
        .O(rxeq_lf[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[1]_i_1__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[1]),
        .O(rxeq_lf[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[2]_i_1__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[2]),
        .O(rxeq_lf[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[3]_i_1__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[3]),
        .O(rxeq_lf[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[4]_i_1__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[4]),
        .O(rxeq_lf[4]));
  LUT5 #(
    .INIT(32'hEAAAAAAA)) 
    \rxeq_lf[5]_i_1__1 
       (.I0(\FSM_onehot_fsm_rx[1]_i_2__1_n_0 ),
        .I1(\rxeq_cnt_reg_n_0_[2] ),
        .I2(\rxeq_cnt_reg_n_0_[0] ),
        .I3(\rxeq_cnt_reg_n_0_[1] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .O(\rxeq_lf[5]_i_1__1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[5]_i_2__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[5]),
        .O(rxeq_lf[5]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__1_n_0 ),
        .D(rxeq_lf[0]),
        .Q(\rxeq_lf_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__1_n_0 ),
        .D(rxeq_lf[1]),
        .Q(\rxeq_lf_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__1_n_0 ),
        .D(rxeq_lf[2]),
        .Q(\rxeq_lf_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__1_n_0 ),
        .D(rxeq_lf[3]),
        .Q(\rxeq_lf_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[4] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__1_n_0 ),
        .D(rxeq_lf[4]),
        .Q(\rxeq_lf_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[5] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__1_n_0 ),
        .D(rxeq_lf[5]),
        .Q(\rxeq_lf_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[0]),
        .Q(rxeq_lffs_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[1]),
        .Q(rxeq_lffs_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[2]),
        .Q(rxeq_lffs_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[3]),
        .Q(rxeq_lffs_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[4]),
        .Q(rxeq_lffs_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[5]),
        .Q(rxeq_lffs_reg2[5]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_new_txcoeff_req_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_new_txcoeff_req),
        .Q(rxeq_new_txcoeff_req_reg_n_0),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hA8FFA800)) 
    \rxeq_preset[0]_i_1__1 
       (.I0(rxeq_preset_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(\rxeq_preset[2]_i_2__1_n_0 ),
        .I4(\rxeq_preset_reg_n_0_[0] ),
        .O(\rxeq_preset[0]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hA8FFA800)) 
    \rxeq_preset[1]_i_1__1 
       (.I0(rxeq_preset_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(\rxeq_preset[2]_i_2__1_n_0 ),
        .I4(\rxeq_preset_reg_n_0_[1] ),
        .O(\rxeq_preset[1]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hA8FFA800)) 
    \rxeq_preset[2]_i_1__1 
       (.I0(rxeq_preset_reg2[2]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(\rxeq_preset[2]_i_2__1_n_0 ),
        .I4(\rxeq_preset_reg_n_0_[2] ),
        .O(\rxeq_preset[2]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0002)) 
    \rxeq_preset[2]_i_2__1 
       (.I0(\rxeq_preset[2]_i_3__1_n_0 ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .I4(rxeq_adapt_done_reg_i_2__1_n_0),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .O(\rxeq_preset[2]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \rxeq_preset[2]_i_3__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\rxeq_preset[2]_i_3__1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_preset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_preset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_preset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_reg1[0]),
        .Q(rxeq_preset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_reg1[1]),
        .Q(rxeq_preset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_reg1[2]),
        .Q(rxeq_preset_reg2[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_preset_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxeq_preset[0]_i_1__1_n_0 ),
        .Q(\rxeq_preset_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_preset_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxeq_preset[1]_i_1__1_n_0 ),
        .Q(\rxeq_preset_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_preset_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxeq_preset[2]_i_1__1_n_0 ),
        .Q(\rxeq_preset_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_preset_valid_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .Q(rxeq_preset_valid),
        .R(RST_CPLLRESET));
  pcie_7x_0_pcie_7x_0_rxeq_scan_39 rxeq_scan_i
       (.D({rxeq_scan_i_n_0,rxeq_scan_i_n_1,rxeq_scan_i_n_2}),
        .\FSM_onehot_fsm_rx_reg[5] ({\rxeq_cnt_reg_n_0_[2] ,\rxeq_cnt_reg_n_0_[1] ,\rxeq_cnt_reg_n_0_[0] }),
        .Q({\FSM_onehot_fsm_rx_reg_n_0_[6] ,\FSM_onehot_fsm_rx_reg_n_0_[5] ,\FSM_onehot_fsm_rx_reg_n_0_[4] ,\FSM_onehot_fsm_rx_reg_n_0_[2] ,\FSM_onehot_fsm_rx_reg_n_0_[1] }),
        .RST_CPLLRESET(RST_CPLLRESET),
        .USER_RXEQ_ADAPT_DONE(USER_RXEQ_ADAPT_DONE),
        .adapt_done_reg_0(rxeq_scan_i_n_4),
        .\fs_reg1_reg[5]_0 ({\rxeq_fs_reg_n_0_[5] ,\rxeq_fs_reg_n_0_[4] ,\rxeq_fs_reg_n_0_[3] ,\rxeq_fs_reg_n_0_[2] ,\rxeq_fs_reg_n_0_[1] ,\rxeq_fs_reg_n_0_[0] }),
        .\lf_reg1_reg[5]_0 ({\rxeq_lf_reg_n_0_[5] ,\rxeq_lf_reg_n_0_[4] ,\rxeq_lf_reg_n_0_[3] ,\rxeq_lf_reg_n_0_[2] ,\rxeq_lf_reg_n_0_[1] ,\rxeq_lf_reg_n_0_[0] }),
        .new_txcoeff_done_reg_0(rxeq_scan_i_n_5),
        .new_txcoeff_req_reg1_reg_0(rxeq_new_txcoeff_req_reg_n_0),
        .out(rxeq_control_reg2),
        .pipe_pclk_in(pipe_pclk_in),
        .\preset_reg1_reg[2]_0 ({\rxeq_preset_reg_n_0_[2] ,\rxeq_preset_reg_n_0_[1] ,\rxeq_preset_reg_n_0_[0] }),
        .rxeq_adapt_done_reg(rxeq_adapt_done_i_2__1_n_0),
        .rxeq_adapt_done_reg_reg(\FSM_onehot_fsm_rx[1]_i_2__1_n_0 ),
        .rxeq_adapt_done_reg_reg_0(rxeq_adapt_done_reg_i_2__1_n_0),
        .rxeq_adapt_done_reg_reg_1(rxeq_adapt_done_reg_reg_n_0),
        .rxeq_new_txcoeff_req(rxeq_new_txcoeff_req),
        .rxeq_preset_valid(rxeq_preset_valid),
        .\txcoeff_reg1_reg[17]_0 ({\rxeq_txcoeff_reg_n_0_[17] ,\rxeq_txcoeff_reg_n_0_[16] ,\rxeq_txcoeff_reg_n_0_[15] ,\rxeq_txcoeff_reg_n_0_[14] ,\rxeq_txcoeff_reg_n_0_[13] ,\rxeq_txcoeff_reg_n_0_[12] ,\rxeq_txcoeff_reg_n_0_[11] ,\rxeq_txcoeff_reg_n_0_[10] ,\rxeq_txcoeff_reg_n_0_[9] ,\rxeq_txcoeff_reg_n_0_[8] ,\rxeq_txcoeff_reg_n_0_[7] ,\rxeq_txcoeff_reg_n_0_[6] ,\rxeq_txcoeff_reg_n_0_[5] ,\rxeq_txcoeff_reg_n_0_[4] ,\rxeq_txcoeff_reg_n_0_[3] ,\rxeq_txcoeff_reg_n_0_[2] ,\rxeq_txcoeff_reg_n_0_[1] ,\rxeq_txcoeff_reg_n_0_[0] }),
        .\txpreset_reg1_reg[3]_0 ({\rxeq_txpreset_reg_n_0_[3] ,\rxeq_txpreset_reg_n_0_[2] ,\rxeq_txpreset_reg_n_0_[1] ,\rxeq_txpreset_reg_n_0_[0] }));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[0]_i_1__1 
       (.I0(\rxeq_txcoeff_reg_n_0_[6] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[0]));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[10]_i_1__1 
       (.I0(\rxeq_txcoeff_reg_n_0_[16] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[10]));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[11]_i_1__1 
       (.I0(\rxeq_txcoeff_reg_n_0_[17] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[11]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[12]_i_1__1 
       (.I0(txeq_deemph_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[12]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[13]_i_1__1 
       (.I0(txeq_deemph_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[13]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[14]_i_1__1 
       (.I0(txeq_deemph_reg2[2]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[14]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[15]_i_1__1 
       (.I0(txeq_deemph_reg2[3]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[15]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[16]_i_1__1 
       (.I0(txeq_deemph_reg2[4]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[16]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[17]_i_1__1 
       (.I0(txeq_deemph_reg2[5]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[17]));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[1]_i_1__1 
       (.I0(\rxeq_txcoeff_reg_n_0_[7] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[1]));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[2]_i_1__1 
       (.I0(\rxeq_txcoeff_reg_n_0_[8] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[2]));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[3]_i_1__1 
       (.I0(\rxeq_txcoeff_reg_n_0_[9] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[3]));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[4]_i_1__1 
       (.I0(\rxeq_txcoeff_reg_n_0_[10] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[4]));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[5]_i_1__1 
       (.I0(\rxeq_txcoeff_reg_n_0_[11] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[5]));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[6]_i_1__1 
       (.I0(\rxeq_txcoeff_reg_n_0_[12] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[6]));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[7]_i_1__1 
       (.I0(\rxeq_txcoeff_reg_n_0_[13] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[7]));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[8]_i_1__1 
       (.I0(\rxeq_txcoeff_reg_n_0_[14] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[8]));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[9]_i_1__1 
       (.I0(\rxeq_txcoeff_reg_n_0_[15] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[9]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[0]),
        .Q(\rxeq_txcoeff_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[10] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[10]),
        .Q(\rxeq_txcoeff_reg_n_0_[10] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[11] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[11]),
        .Q(\rxeq_txcoeff_reg_n_0_[11] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[12] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[12]),
        .Q(\rxeq_txcoeff_reg_n_0_[12] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[13] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[13]),
        .Q(\rxeq_txcoeff_reg_n_0_[13] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[14] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[14]),
        .Q(\rxeq_txcoeff_reg_n_0_[14] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[15] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[15]),
        .Q(\rxeq_txcoeff_reg_n_0_[15] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[16] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[16]),
        .Q(\rxeq_txcoeff_reg_n_0_[16] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[17] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[17]),
        .Q(\rxeq_txcoeff_reg_n_0_[17] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[1]),
        .Q(\rxeq_txcoeff_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[2]),
        .Q(\rxeq_txcoeff_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[3]),
        .Q(\rxeq_txcoeff_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[4] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[4]),
        .Q(\rxeq_txcoeff_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[5] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[5]),
        .Q(\rxeq_txcoeff_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[6] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[6]),
        .Q(\rxeq_txcoeff_reg_n_0_[6] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[7] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[7]),
        .Q(\rxeq_txcoeff_reg_n_0_[7] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[8] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[8]),
        .Q(\rxeq_txcoeff_reg_n_0_[8] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[9] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txcoeff[9]),
        .Q(\rxeq_txcoeff_reg_n_0_[9] ),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[0]_i_1__1 
       (.I0(rxeq_txpreset_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[0]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[1]_i_1__1 
       (.I0(rxeq_txpreset_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[1]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[2]_i_1__1 
       (.I0(rxeq_txpreset_reg2[2]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[2]));
  LUT5 #(
    .INIT(32'hFFFFF404)) 
    \rxeq_txpreset[3]_i_1__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .I1(\rxeq_txpreset[3]_i_3__1_n_0 ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(rxeq_control_reg2[1]),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\rxeq_txpreset[3]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[3]_i_2__1 
       (.I0(rxeq_txpreset_reg2[3]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[3]));
  LUT3 #(
    .INIT(8'h01)) 
    \rxeq_txpreset[3]_i_3__1 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .O(\rxeq_txpreset[3]_i_3__1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_txpreset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_txpreset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_txpreset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_txpreset_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[0]),
        .Q(rxeq_txpreset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[1]),
        .Q(rxeq_txpreset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[2]),
        .Q(rxeq_txpreset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[3]),
        .Q(rxeq_txpreset_reg2[3]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txpreset[0]),
        .Q(\rxeq_txpreset_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txpreset[1]),
        .Q(\rxeq_txpreset_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txpreset[2]),
        .Q(\rxeq_txpreset_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__1_n_0 ),
        .D(rxeq_txpreset[3]),
        .Q(\rxeq_txpreset_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_en_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_en_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_en_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_en_reg1),
        .Q(rxeq_user_en_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_mode_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_mode_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_mode_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_mode_reg1),
        .Q(rxeq_user_mode_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[0]),
        .Q(rxeq_user_txcoeff_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[10]),
        .Q(rxeq_user_txcoeff_reg2[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[11]),
        .Q(rxeq_user_txcoeff_reg2[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[12]),
        .Q(rxeq_user_txcoeff_reg2[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[13]),
        .Q(rxeq_user_txcoeff_reg2[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[14]),
        .Q(rxeq_user_txcoeff_reg2[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[15]),
        .Q(rxeq_user_txcoeff_reg2[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[16]),
        .Q(rxeq_user_txcoeff_reg2[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[17]),
        .Q(rxeq_user_txcoeff_reg2[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[1]),
        .Q(rxeq_user_txcoeff_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[2]),
        .Q(rxeq_user_txcoeff_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[3]),
        .Q(rxeq_user_txcoeff_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[4]),
        .Q(rxeq_user_txcoeff_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[5]),
        .Q(rxeq_user_txcoeff_reg2[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[6]),
        .Q(rxeq_user_txcoeff_reg2[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[7]),
        .Q(rxeq_user_txcoeff_reg2[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[8]),
        .Q(rxeq_user_txcoeff_reg2[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[9]),
        .Q(rxeq_user_txcoeff_reg2[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_control_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_control_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_control_reg1[0]),
        .Q(txeq_control_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_control_reg1[1]),
        .Q(txeq_control_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \txeq_deemph_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[0]),
        .S(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \txeq_deemph_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[0]),
        .Q(txeq_deemph_reg2[0]),
        .S(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[1]),
        .Q(txeq_deemph_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[2]),
        .Q(txeq_deemph_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[3]),
        .Q(txeq_deemph_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[4]),
        .Q(txeq_deemph_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[5]),
        .Q(txeq_deemph_reg2[5]),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h00001000)) 
    \txeq_preset[0]_i_1__1 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[2]),
        .I2(txeq_preset_reg2[0]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[1]),
        .O(p_0_out[0]));
  LUT5 #(
    .INIT(32'hABEAABAF)) 
    \txeq_preset[10]_i_1__1 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[2]),
        .I2(txeq_preset_reg2[0]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[1]),
        .O(p_0_out[10]));
  LUT5 #(
    .INIT(32'hFFFF200D)) 
    \txeq_preset[11]_i_1__1 
       (.I0(txeq_preset_reg2[1]),
        .I1(txeq_preset_reg2[3]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[0]),
        .I4(RST_CPLLRESET),
        .O(p_0_out[11]));
  LUT5 #(
    .INIT(32'h01151110)) 
    \txeq_preset[12]_i_1__1 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[3]),
        .I2(txeq_preset_reg2[1]),
        .I3(txeq_preset_reg2[2]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[12]));
  LUT5 #(
    .INIT(32'h01000010)) 
    \txeq_preset[13]_i_1__1 
       (.I0(txeq_preset_reg2[2]),
        .I1(RST_CPLLRESET),
        .I2(txeq_preset_reg2[0]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[1]),
        .O(p_0_out[13]));
  LUT5 #(
    .INIT(32'h01000010)) 
    \txeq_preset[14]_i_1__1 
       (.I0(txeq_preset_reg2[2]),
        .I1(RST_CPLLRESET),
        .I2(txeq_preset_reg2[3]),
        .I3(txeq_preset_reg2[1]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[14]));
  LUT4 #(
    .INIT(16'hF0F1)) 
    \txeq_preset[15]_i_1__1 
       (.I0(txeq_preset_reg2[2]),
        .I1(txeq_preset_reg2[1]),
        .I2(RST_CPLLRESET),
        .I3(txeq_preset_reg2[3]),
        .O(p_0_out[15]));
  LUT4 #(
    .INIT(16'h0006)) 
    \txeq_preset[16]_i_1__1 
       (.I0(txeq_preset_reg2[3]),
        .I1(txeq_preset_reg2[0]),
        .I2(txeq_preset_reg2[2]),
        .I3(RST_CPLLRESET),
        .O(p_0_out[16]));
  LUT4 #(
    .INIT(16'hAABA)) 
    \txeq_preset[17]_i_1__1 
       (.I0(RST_CPLLRESET),
        .I1(fsm_tx[0]),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[2]),
        .O(\txeq_preset[17]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF400D)) 
    \txeq_preset[17]_i_2__1 
       (.I0(txeq_preset_reg2[3]),
        .I1(txeq_preset_reg2[1]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[0]),
        .I4(RST_CPLLRESET),
        .O(p_0_out[17]));
  LUT5 #(
    .INIT(32'h00001004)) 
    \txeq_preset[1]_i_1__1 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[3]),
        .I2(txeq_preset_reg2[1]),
        .I3(txeq_preset_reg2[2]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[1]));
  LUT4 #(
    .INIT(16'h0E00)) 
    \txeq_preset[2]_i_1__1 
       (.I0(txeq_preset_reg2[2]),
        .I1(txeq_preset_reg2[0]),
        .I2(RST_CPLLRESET),
        .I3(txeq_preset_reg2[3]),
        .O(p_0_out[2]));
  LUT5 #(
    .INIT(32'h01440140)) 
    \txeq_preset[3]_i_1__1 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[2]),
        .I2(txeq_preset_reg2[1]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[0]),
        .O(\txeq_preset[3]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h00001400)) 
    \txeq_preset[7]_i_1__1 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[0]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[1]),
        .I4(txeq_preset_reg2[3]),
        .O(\txeq_preset[7]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hAAAFBEAF)) 
    \txeq_preset[8]_i_1__1 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[0]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[1]),
        .I4(txeq_preset_reg2[3]),
        .O(p_0_out[8]));
  LUT5 #(
    .INIT(32'hCCFCCFCD)) 
    \txeq_preset[9]_i_1__1 
       (.I0(txeq_preset_reg2[1]),
        .I1(RST_CPLLRESET),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[9]));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT3 #(
    .INIT(8'h04)) 
    txeq_preset_done_i_1__1
       (.I0(fsm_tx[2]),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[0]),
        .O(txeq_preset_done_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txeq_preset_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_done_i_1__1_n_0),
        .Q(txeq_preset_done),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_preset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_preset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_preset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_preset_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[0]),
        .Q(txeq_preset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[1]),
        .Q(txeq_preset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[2]),
        .Q(txeq_preset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[3]),
        .Q(txeq_preset_reg2[3]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(p_0_out[0]),
        .Q(\txeq_preset_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[10] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(p_0_out[10]),
        .Q(\txeq_preset_reg_n_0_[10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[11] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(p_0_out[11]),
        .Q(\txeq_preset_reg_n_0_[11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[12] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(p_0_out[12]),
        .Q(\txeq_preset_reg_n_0_[12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[13] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(p_0_out[13]),
        .Q(\txeq_preset_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[14] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(p_0_out[14]),
        .Q(\txeq_preset_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[15] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(p_0_out[15]),
        .Q(\txeq_preset_reg_n_0_[15] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[16] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(p_0_out[16]),
        .Q(\txeq_preset_reg_n_0_[16] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[17] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(p_0_out[17]),
        .Q(\txeq_preset_reg_n_0_[17] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(p_0_out[1]),
        .Q(\txeq_preset_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(p_0_out[2]),
        .Q(\txeq_preset_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(\txeq_preset[3]_i_1__1_n_0 ),
        .Q(\txeq_preset_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[7] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(\txeq_preset[7]_i_1__1_n_0 ),
        .Q(\txeq_preset_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[8] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(p_0_out[8]),
        .Q(\txeq_preset_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[9] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__1_n_0 ),
        .D(p_0_out[9]),
        .Q(\txeq_preset_reg_n_0_[9] ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h45404040)) 
    \txeq_txcoeff[0]_i_1__1 
       (.I0(fsm_tx[2]),
        .I1(\txeq_txcoeff[0]_i_2__1_n_0 ),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[0]),
        .I4(\txeq_txcoeff_reg_n_0_[6] ),
        .O(\txeq_txcoeff[0]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[0]_i_2__1 
       (.I0(\txeq_txcoeff_reg_n_0_[6] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[7] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[0] ),
        .O(\txeq_txcoeff[0]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[10]_i_1__1 
       (.I0(\txeq_txcoeff_reg_n_0_[9] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[10]_i_2__1_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[16] ),
        .O(\txeq_txcoeff[10]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[10]_i_2__1 
       (.I0(\txeq_txcoeff_reg_n_0_[16] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[17] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[10] ),
        .O(\txeq_txcoeff[10]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[11]_i_1__1 
       (.I0(\txeq_txcoeff_reg_n_0_[10] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[11]_i_2__1_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[17] ),
        .O(\txeq_txcoeff[11]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[11]_i_2__1 
       (.I0(\txeq_txcoeff_reg_n_0_[17] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[18] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[11] ),
        .O(\txeq_txcoeff[11]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[12]_i_1__1 
       (.I0(\txeq_txcoeff_reg_n_0_[11] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[12]_i_2__1_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[18] ),
        .O(\txeq_txcoeff[12]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[12]_i_2__1 
       (.I0(\txeq_txcoeff_reg_n_0_[18] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[0]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[12] ),
        .O(\txeq_txcoeff[12]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[13]_i_1__1 
       (.I0(\txeq_txcoeff_reg_n_0_[12] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[13]_i_2__1_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[0]),
        .O(\txeq_txcoeff[13]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[13]_i_2__1 
       (.I0(txeq_deemph_reg2[0]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[13] ),
        .O(\txeq_txcoeff[13]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[14]_i_1__1 
       (.I0(\txeq_txcoeff_reg_n_0_[13] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[14]_i_2__1_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[1]),
        .O(\txeq_txcoeff[14]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[14]_i_2__1 
       (.I0(txeq_deemph_reg2[1]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[2]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[14] ),
        .O(\txeq_txcoeff[14]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[15]_i_1__1 
       (.I0(\txeq_txcoeff_reg_n_0_[14] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[15]_i_2__1_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[2]),
        .O(\txeq_txcoeff[15]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[15]_i_2__1 
       (.I0(txeq_deemph_reg2[2]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[3]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[15] ),
        .O(\txeq_txcoeff[15]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[16]_i_1__1 
       (.I0(\txeq_txcoeff_reg_n_0_[15] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[16]_i_2__1_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[3]),
        .O(\txeq_txcoeff[16]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[16]_i_2__1 
       (.I0(txeq_deemph_reg2[3]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[4]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[16] ),
        .O(\txeq_txcoeff[16]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[17]_i_1__1 
       (.I0(\txeq_txcoeff_reg_n_0_[16] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[17]_i_2__1_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[4]),
        .O(\txeq_txcoeff[17]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[17]_i_2__1 
       (.I0(txeq_deemph_reg2[4]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[5]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[17] ),
        .O(\txeq_txcoeff[17]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'hFF040FFF)) 
    \txeq_txcoeff[18]_i_1__1 
       (.I0(txeq_control_reg2[0]),
        .I1(txeq_control_reg2[1]),
        .I2(fsm_tx[2]),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .O(txeq_txcoeff));
  LUT6 #(
    .INIT(64'h22F3220022002200)) 
    \txeq_txcoeff[18]_i_2__1 
       (.I0(\txeq_txcoeff_reg_n_0_[17] ),
        .I1(fsm_tx[1]),
        .I2(\txeq_txcoeff[18]_i_3__1_n_0 ),
        .I3(fsm_tx[2]),
        .I4(txeq_deemph_reg2[5]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[18]_i_2__1_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \txeq_txcoeff[18]_i_3__1 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .O(\txeq_txcoeff[18]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[1]_i_1__1 
       (.I0(\txeq_txcoeff_reg_n_0_[0] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[1]_i_2__1_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[7] ),
        .O(\txeq_txcoeff[1]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[1]_i_2__1 
       (.I0(\txeq_txcoeff_reg_n_0_[7] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[8] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[1] ),
        .O(\txeq_txcoeff[1]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[2]_i_1__1 
       (.I0(\txeq_txcoeff_reg_n_0_[1] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[2]_i_2__1_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[8] ),
        .O(\txeq_txcoeff[2]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[2]_i_2__1 
       (.I0(\txeq_txcoeff_reg_n_0_[8] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[9] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[2] ),
        .O(\txeq_txcoeff[2]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[3]_i_1__1 
       (.I0(\txeq_txcoeff_reg_n_0_[2] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[3]_i_2__1_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[9] ),
        .O(\txeq_txcoeff[3]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[3]_i_2__1 
       (.I0(\txeq_txcoeff_reg_n_0_[9] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[10] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[3] ),
        .O(\txeq_txcoeff[3]_i_2__1_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \txeq_txcoeff[4]_i_1__1 
       (.I0(\txeq_txcoeff_reg_n_0_[3] ),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[2]),
        .I3(\txeq_txcoeff[4]_i_2__1_n_0 ),
        .O(\txeq_txcoeff[4]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hCACCCCCC00000000)) 
    \txeq_txcoeff[4]_i_2__1 
       (.I0(\txeq_txcoeff_reg_n_0_[11] ),
        .I1(\txeq_txcoeff_reg_n_0_[10] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I3(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I4(fsm_tx[1]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[4]_i_2__1_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \txeq_txcoeff[5]_i_1__1 
       (.I0(\txeq_txcoeff_reg_n_0_[4] ),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[2]),
        .I3(\txeq_txcoeff[5]_i_2__1_n_0 ),
        .O(\txeq_txcoeff[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hCACCCCCC00000000)) 
    \txeq_txcoeff[5]_i_2__1 
       (.I0(\txeq_txcoeff_reg_n_0_[12] ),
        .I1(\txeq_txcoeff_reg_n_0_[11] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I3(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I4(fsm_tx[1]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[5]_i_2__1_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \txeq_txcoeff[6]_i_1__1 
       (.I0(\txeq_txcoeff_reg_n_0_[5] ),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[2]),
        .I3(\txeq_txcoeff[6]_i_2__1_n_0 ),
        .O(\txeq_txcoeff[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hCACCCCCC00000000)) 
    \txeq_txcoeff[6]_i_2__1 
       (.I0(\txeq_txcoeff_reg_n_0_[13] ),
        .I1(\txeq_txcoeff_reg_n_0_[12] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I3(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I4(fsm_tx[1]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[6]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[7]_i_1__1 
       (.I0(\txeq_txcoeff_reg_n_0_[6] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[7]_i_2__1_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[13] ),
        .O(\txeq_txcoeff[7]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[7]_i_2__1 
       (.I0(\txeq_txcoeff_reg_n_0_[13] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[14] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[7] ),
        .O(\txeq_txcoeff[7]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[8]_i_1__1 
       (.I0(\txeq_txcoeff_reg_n_0_[7] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[8]_i_2__1_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[14] ),
        .O(\txeq_txcoeff[8]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[8]_i_2__1 
       (.I0(\txeq_txcoeff_reg_n_0_[14] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[15] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[8] ),
        .O(\txeq_txcoeff[8]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[9]_i_1__1 
       (.I0(\txeq_txcoeff_reg_n_0_[8] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[9]_i_2__1_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[15] ),
        .O(\txeq_txcoeff[9]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[9]_i_2__1 
       (.I0(\txeq_txcoeff_reg_n_0_[15] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[16] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[9] ),
        .O(\txeq_txcoeff[9]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h000004000F000400)) 
    \txeq_txcoeff_cnt[0]_i_1__1 
       (.I0(txeq_control_reg2[0]),
        .I1(txeq_control_reg2[1]),
        .I2(fsm_tx[2]),
        .I3(fsm_tx[0]),
        .I4(fsm_tx[1]),
        .I5(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .O(txeq_txcoeff_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT5 #(
    .INIT(32'h00006000)) 
    \txeq_txcoeff_cnt[1]_i_1__1 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I2(fsm_tx[0]),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[2]),
        .O(txeq_txcoeff_cnt[1]));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_txcoeff_cnt[0]),
        .Q(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_txcoeff_cnt[1]),
        .Q(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[0] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[0]_i_1__1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[10] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[10]_i_1__1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[10] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[11] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[11]_i_1__1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[11] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[12] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[12]_i_1__1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[12] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[13] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[13]_i_1__1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[13] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[14] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[14]_i_1__1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[14] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[15] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[15]_i_1__1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[15] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[16] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[16]_i_1__1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[16] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[17] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[17]_i_1__1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[17] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[18] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[18]_i_2__1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[18] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[1] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[1]_i_1__1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[2] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[2]_i_1__1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[3] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[3]_i_1__1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[4] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[4]_i_1__1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[5] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[5]_i_1__1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[6] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[6]_i_1__1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[6] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[7] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[7]_i_1__1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[7] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[8] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[8]_i_1__1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[8] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[9] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[9]_i_1__1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[9] ),
        .R(RST_CPLLRESET));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pipe_eq" *) 
module pcie_7x_0_pcie_7x_0_pipe_eq_35
   (TXPRECURSOR,
    TXMAINCURSOR,
    TXPOSTCURSOR,
    USER_RXEQ_ADAPT_DONE,
    RST_CPLLRESET,
    pipe_pclk_in,
    rate_gen3_3);
  output [4:0]TXPRECURSOR;
  output [6:0]TXMAINCURSOR;
  output [4:0]TXPOSTCURSOR;
  output USER_RXEQ_ADAPT_DONE;
  input RST_CPLLRESET;
  input pipe_pclk_in;
  input rate_gen3_3;

  wire \FSM_onehot_fsm_rx[1]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm_rx[1]_i_2__2_n_0 ;
  wire \FSM_onehot_fsm_rx[3]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm_rx[4]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[1] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[2] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[3] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[4] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[5] ;
  wire \FSM_onehot_fsm_rx_reg_n_0_[6] ;
  wire \FSM_sequential_fsm_tx[0]_i_1__2_n_0 ;
  wire \FSM_sequential_fsm_tx[1]_i_1__2_n_0 ;
  wire \FSM_sequential_fsm_tx[1]_i_2__2_n_0 ;
  wire \FSM_sequential_fsm_tx[2]_i_1__2_n_0 ;
  wire \FSM_sequential_fsm_tx[2]_i_2__2_n_0 ;
  wire RST_CPLLRESET;
  wire [6:0]TXMAINCURSOR;
  wire [4:0]TXPOSTCURSOR;
  wire [4:0]TXPRECURSOR;
  wire USER_RXEQ_ADAPT_DONE;
  wire [2:0]fsm_tx;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg2;
  wire [17:0]p_0_out;
  wire pipe_pclk_in;
  wire rate_gen3_3;
  wire rxeq_adapt_done_i_2__2_n_0;
  wire rxeq_adapt_done_reg_i_2__2_n_0;
  wire rxeq_adapt_done_reg_reg_n_0;
  wire [2:0]rxeq_cnt;
  wire \rxeq_cnt_reg_n_0_[0] ;
  wire \rxeq_cnt_reg_n_0_[1] ;
  wire \rxeq_cnt_reg_n_0_[2] ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rxeq_control_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rxeq_control_reg2;
  wire [5:0]rxeq_fs;
  wire \rxeq_fs[5]_i_1__2_n_0 ;
  wire \rxeq_fs_reg_n_0_[0] ;
  wire \rxeq_fs_reg_n_0_[1] ;
  wire \rxeq_fs_reg_n_0_[2] ;
  wire \rxeq_fs_reg_n_0_[3] ;
  wire \rxeq_fs_reg_n_0_[4] ;
  wire \rxeq_fs_reg_n_0_[5] ;
  wire [5:0]rxeq_lf;
  wire \rxeq_lf[5]_i_1__2_n_0 ;
  wire \rxeq_lf_reg_n_0_[0] ;
  wire \rxeq_lf_reg_n_0_[1] ;
  wire \rxeq_lf_reg_n_0_[2] ;
  wire \rxeq_lf_reg_n_0_[3] ;
  wire \rxeq_lf_reg_n_0_[4] ;
  wire \rxeq_lf_reg_n_0_[5] ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]rxeq_lffs_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]rxeq_lffs_reg2;
  wire rxeq_new_txcoeff_req;
  wire rxeq_new_txcoeff_req_reg_n_0;
  wire \rxeq_preset[0]_i_1__2_n_0 ;
  wire \rxeq_preset[1]_i_1__2_n_0 ;
  wire \rxeq_preset[2]_i_1__2_n_0 ;
  wire \rxeq_preset[2]_i_2__2_n_0 ;
  wire \rxeq_preset[2]_i_3__2_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]rxeq_preset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]rxeq_preset_reg2;
  wire \rxeq_preset_reg_n_0_[0] ;
  wire \rxeq_preset_reg_n_0_[1] ;
  wire \rxeq_preset_reg_n_0_[2] ;
  wire rxeq_preset_valid;
  wire rxeq_scan_i_n_0;
  wire rxeq_scan_i_n_1;
  wire rxeq_scan_i_n_2;
  wire rxeq_scan_i_n_4;
  wire rxeq_scan_i_n_5;
  wire [17:0]rxeq_txcoeff;
  wire \rxeq_txcoeff_reg_n_0_[0] ;
  wire \rxeq_txcoeff_reg_n_0_[10] ;
  wire \rxeq_txcoeff_reg_n_0_[11] ;
  wire \rxeq_txcoeff_reg_n_0_[12] ;
  wire \rxeq_txcoeff_reg_n_0_[13] ;
  wire \rxeq_txcoeff_reg_n_0_[14] ;
  wire \rxeq_txcoeff_reg_n_0_[15] ;
  wire \rxeq_txcoeff_reg_n_0_[16] ;
  wire \rxeq_txcoeff_reg_n_0_[17] ;
  wire \rxeq_txcoeff_reg_n_0_[1] ;
  wire \rxeq_txcoeff_reg_n_0_[2] ;
  wire \rxeq_txcoeff_reg_n_0_[3] ;
  wire \rxeq_txcoeff_reg_n_0_[4] ;
  wire \rxeq_txcoeff_reg_n_0_[5] ;
  wire \rxeq_txcoeff_reg_n_0_[6] ;
  wire \rxeq_txcoeff_reg_n_0_[7] ;
  wire \rxeq_txcoeff_reg_n_0_[8] ;
  wire \rxeq_txcoeff_reg_n_0_[9] ;
  wire [3:0]rxeq_txpreset;
  wire \rxeq_txpreset[3]_i_1__2_n_0 ;
  wire \rxeq_txpreset[3]_i_3__2_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]rxeq_txpreset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]rxeq_txpreset_reg2;
  wire \rxeq_txpreset_reg_n_0_[0] ;
  wire \rxeq_txpreset_reg_n_0_[1] ;
  wire \rxeq_txpreset_reg_n_0_[2] ;
  wire \rxeq_txpreset_reg_n_0_[3] ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_en_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_en_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_mode_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_user_mode_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]rxeq_user_txcoeff_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]rxeq_user_txcoeff_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]txeq_control_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]txeq_control_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]txeq_deemph_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]txeq_deemph_reg2;
  wire \txeq_preset[17]_i_1__2_n_0 ;
  wire \txeq_preset[3]_i_1__2_n_0 ;
  wire \txeq_preset[7]_i_1__2_n_0 ;
  wire txeq_preset_done;
  wire txeq_preset_done_i_1__2_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txeq_preset_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txeq_preset_reg2;
  wire \txeq_preset_reg_n_0_[0] ;
  wire \txeq_preset_reg_n_0_[10] ;
  wire \txeq_preset_reg_n_0_[11] ;
  wire \txeq_preset_reg_n_0_[12] ;
  wire \txeq_preset_reg_n_0_[13] ;
  wire \txeq_preset_reg_n_0_[14] ;
  wire \txeq_preset_reg_n_0_[15] ;
  wire \txeq_preset_reg_n_0_[16] ;
  wire \txeq_preset_reg_n_0_[17] ;
  wire \txeq_preset_reg_n_0_[1] ;
  wire \txeq_preset_reg_n_0_[2] ;
  wire \txeq_preset_reg_n_0_[3] ;
  wire \txeq_preset_reg_n_0_[7] ;
  wire \txeq_preset_reg_n_0_[8] ;
  wire \txeq_preset_reg_n_0_[9] ;
  wire txeq_txcoeff;
  wire \txeq_txcoeff[0]_i_1__2_n_0 ;
  wire \txeq_txcoeff[0]_i_2__2_n_0 ;
  wire \txeq_txcoeff[10]_i_1__2_n_0 ;
  wire \txeq_txcoeff[10]_i_2__2_n_0 ;
  wire \txeq_txcoeff[11]_i_1__2_n_0 ;
  wire \txeq_txcoeff[11]_i_2__2_n_0 ;
  wire \txeq_txcoeff[12]_i_1__2_n_0 ;
  wire \txeq_txcoeff[12]_i_2__2_n_0 ;
  wire \txeq_txcoeff[13]_i_1__2_n_0 ;
  wire \txeq_txcoeff[13]_i_2__2_n_0 ;
  wire \txeq_txcoeff[14]_i_1__2_n_0 ;
  wire \txeq_txcoeff[14]_i_2__2_n_0 ;
  wire \txeq_txcoeff[15]_i_1__2_n_0 ;
  wire \txeq_txcoeff[15]_i_2__2_n_0 ;
  wire \txeq_txcoeff[16]_i_1__2_n_0 ;
  wire \txeq_txcoeff[16]_i_2__2_n_0 ;
  wire \txeq_txcoeff[17]_i_1__2_n_0 ;
  wire \txeq_txcoeff[17]_i_2__2_n_0 ;
  wire \txeq_txcoeff[18]_i_2__2_n_0 ;
  wire \txeq_txcoeff[18]_i_3__2_n_0 ;
  wire \txeq_txcoeff[1]_i_1__2_n_0 ;
  wire \txeq_txcoeff[1]_i_2__2_n_0 ;
  wire \txeq_txcoeff[2]_i_1__2_n_0 ;
  wire \txeq_txcoeff[2]_i_2__2_n_0 ;
  wire \txeq_txcoeff[3]_i_1__2_n_0 ;
  wire \txeq_txcoeff[3]_i_2__2_n_0 ;
  wire \txeq_txcoeff[4]_i_1__2_n_0 ;
  wire \txeq_txcoeff[4]_i_2__2_n_0 ;
  wire \txeq_txcoeff[5]_i_1__2_n_0 ;
  wire \txeq_txcoeff[5]_i_2__2_n_0 ;
  wire \txeq_txcoeff[6]_i_1__2_n_0 ;
  wire \txeq_txcoeff[6]_i_2__2_n_0 ;
  wire \txeq_txcoeff[7]_i_1__2_n_0 ;
  wire \txeq_txcoeff[7]_i_2__2_n_0 ;
  wire \txeq_txcoeff[8]_i_1__2_n_0 ;
  wire \txeq_txcoeff[8]_i_2__2_n_0 ;
  wire \txeq_txcoeff[9]_i_1__2_n_0 ;
  wire \txeq_txcoeff[9]_i_2__2_n_0 ;
  wire [1:0]txeq_txcoeff_cnt;
  wire \txeq_txcoeff_cnt_reg_n_0_[0] ;
  wire \txeq_txcoeff_cnt_reg_n_0_[1] ;
  wire \txeq_txcoeff_reg_n_0_[0] ;
  wire \txeq_txcoeff_reg_n_0_[10] ;
  wire \txeq_txcoeff_reg_n_0_[11] ;
  wire \txeq_txcoeff_reg_n_0_[12] ;
  wire \txeq_txcoeff_reg_n_0_[13] ;
  wire \txeq_txcoeff_reg_n_0_[14] ;
  wire \txeq_txcoeff_reg_n_0_[15] ;
  wire \txeq_txcoeff_reg_n_0_[16] ;
  wire \txeq_txcoeff_reg_n_0_[17] ;
  wire \txeq_txcoeff_reg_n_0_[18] ;
  wire \txeq_txcoeff_reg_n_0_[1] ;
  wire \txeq_txcoeff_reg_n_0_[2] ;
  wire \txeq_txcoeff_reg_n_0_[3] ;
  wire \txeq_txcoeff_reg_n_0_[4] ;
  wire \txeq_txcoeff_reg_n_0_[5] ;
  wire \txeq_txcoeff_reg_n_0_[6] ;
  wire \txeq_txcoeff_reg_n_0_[7] ;
  wire \txeq_txcoeff_reg_n_0_[8] ;
  wire \txeq_txcoeff_reg_n_0_[9] ;

  LUT5 #(
    .INIT(32'hABABABAA)) 
    \FSM_onehot_fsm_rx[1]_i_1__2 
       (.I0(\FSM_onehot_fsm_rx[1]_i_2__2_n_0 ),
        .I1(rxeq_control_reg2[1]),
        .I2(rxeq_control_reg2[0]),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .O(\FSM_onehot_fsm_rx[1]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \FSM_onehot_fsm_rx[1]_i_2__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .O(\FSM_onehot_fsm_rx[1]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF8FF88888888)) 
    \FSM_onehot_fsm_rx[3]_i_1__2 
       (.I0(rxeq_control_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\rxeq_cnt_reg_n_0_[2] ),
        .I3(\rxeq_cnt_reg_n_0_[1] ),
        .I4(\rxeq_cnt_reg_n_0_[0] ),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm_rx[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT5 #(
    .INIT(32'h2ABA2AAA)) 
    \FSM_onehot_fsm_rx[4]_i_1__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(\rxeq_cnt_reg_n_0_[2] ),
        .I2(\rxeq_cnt_reg_n_0_[1] ),
        .I3(\rxeq_cnt_reg_n_0_[0] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm_rx[4]_i_1__2_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx[1]_i_1__2_n_0 ),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_2),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx[3]_i_1__2_n_0 ),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx[4]_i_1__2_n_0 ),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_1),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_RXEQ_PRESET:0000100,FSM_RXEQ_TXCOEFF:0001000,FSM_RXEQ_LF:0010000,FSM_RXEQ_NEW_TXCOEFF_REQ:0100000,FSM_RXEQ_DONE:1000000,FSM_RXEQ_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_rx_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_0),
        .Q(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hC04FC043C04FF04F)) 
    \FSM_sequential_fsm_tx[0]_i_1__2 
       (.I0(\FSM_sequential_fsm_tx[1]_i_2__2_n_0 ),
        .I1(fsm_tx[0]),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[2]),
        .I4(txeq_control_reg2[1]),
        .I5(txeq_control_reg2[0]),
        .O(\FSM_sequential_fsm_tx[0]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h3F703F7C3F7C0F70)) 
    \FSM_sequential_fsm_tx[1]_i_1__2 
       (.I0(\FSM_sequential_fsm_tx[1]_i_2__2_n_0 ),
        .I1(fsm_tx[0]),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[2]),
        .I4(txeq_control_reg2[1]),
        .I5(txeq_control_reg2[0]),
        .O(\FSM_sequential_fsm_tx[1]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_fsm_tx[1]_i_2__2 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .O(\FSM_sequential_fsm_tx[1]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h3A2A2A227F7F7F77)) 
    \FSM_sequential_fsm_tx[2]_i_1__2 
       (.I0(fsm_tx[2]),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[0]),
        .I3(txeq_control_reg2[1]),
        .I4(txeq_control_reg2[0]),
        .I5(\FSM_sequential_fsm_tx[2]_i_2__2_n_0 ),
        .O(\FSM_sequential_fsm_tx[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT5 #(
    .INIT(32'hD0FFDFFF)) 
    \FSM_sequential_fsm_tx[2]_i_2__2 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I2(fsm_tx[0]),
        .I3(fsm_tx[1]),
        .I4(txeq_preset_done),
        .O(\FSM_sequential_fsm_tx[2]_i_2__2_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_TXEQ_QUERY:101,FSM_TXEQ_PRESET:010,FSM_TXEQ_TXCOEFF:011,FSM_TXEQ_REMAP:100,FSM_TXEQ_DONE:110,FSM_TXEQ_IDLE:001,iSTATE:000" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_sequential_fsm_tx_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_sequential_fsm_tx[0]_i_1__2_n_0 ),
        .Q(fsm_tx[0]),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_TXEQ_QUERY:101,FSM_TXEQ_PRESET:010,FSM_TXEQ_TXCOEFF:011,FSM_TXEQ_REMAP:100,FSM_TXEQ_DONE:110,FSM_TXEQ_IDLE:001,iSTATE:000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_fsm_tx_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_sequential_fsm_tx[1]_i_1__2_n_0 ),
        .Q(fsm_tx[1]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_TXEQ_QUERY:101,FSM_TXEQ_PRESET:010,FSM_TXEQ_TXCOEFF:011,FSM_TXEQ_REMAP:100,FSM_TXEQ_DONE:110,FSM_TXEQ_IDLE:001,iSTATE:000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_fsm_tx_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_sequential_fsm_tx[2]_i_1__2_n_0 ),
        .Q(fsm_tx[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_gen3_3),
        .Q(gen3_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_reg1),
        .Q(gen3_reg2),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_23__2 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[17] ),
        .O(TXPOSTCURSOR[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_24__2 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[16] ),
        .O(TXPOSTCURSOR[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_25__2 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[15] ),
        .O(TXPOSTCURSOR[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_26__2 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[14] ),
        .O(TXPOSTCURSOR[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_27__2 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[13] ),
        .O(TXPOSTCURSOR[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_28__2 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[4] ),
        .O(TXPRECURSOR[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_29__2 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[3] ),
        .O(TXPRECURSOR[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_30__2 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[2] ),
        .O(TXPRECURSOR[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_31__2 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[1] ),
        .O(TXPRECURSOR[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_32__2 
       (.I0(\txeq_txcoeff_reg_n_0_[0] ),
        .I1(gen3_reg2),
        .O(TXPRECURSOR[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_33__2 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[12] ),
        .O(TXMAINCURSOR[6]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_34__2 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[11] ),
        .O(TXMAINCURSOR[5]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_35__2 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[10] ),
        .O(TXMAINCURSOR[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_36__2 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[9] ),
        .O(TXMAINCURSOR[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_37__2 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[8] ),
        .O(TXMAINCURSOR[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_38__2 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[7] ),
        .O(TXMAINCURSOR[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtx_channel.gtxe2_channel_i_i_39 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[6] ),
        .O(TXMAINCURSOR[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
    rxeq_adapt_done_i_2__2
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .O(rxeq_adapt_done_i_2__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_adapt_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_5),
        .Q(USER_RXEQ_ADAPT_DONE),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'h08)) 
    rxeq_adapt_done_reg_i_2__2
       (.I0(rxeq_control_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(rxeq_control_reg2[1]),
        .O(rxeq_adapt_done_reg_i_2__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_adapt_done_reg_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_scan_i_n_4),
        .Q(rxeq_adapt_done_reg_reg_n_0),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h8888FFF8)) 
    \rxeq_cnt[0]_i_1__2 
       (.I0(rxeq_control_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I4(\rxeq_cnt_reg_n_0_[0] ),
        .O(rxeq_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT4 #(
    .INIT(16'h6660)) 
    \rxeq_cnt[1]_i_1__2 
       (.I0(\rxeq_cnt_reg_n_0_[0] ),
        .I1(\rxeq_cnt_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(rxeq_cnt[1]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT5 #(
    .INIT(32'h78787800)) 
    \rxeq_cnt[2]_i_1__2 
       (.I0(\rxeq_cnt_reg_n_0_[1] ),
        .I1(\rxeq_cnt_reg_n_0_[0] ),
        .I2(\rxeq_cnt_reg_n_0_[2] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(rxeq_cnt[2]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_cnt[0]),
        .Q(\rxeq_cnt_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_cnt[1]),
        .Q(\rxeq_cnt_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_cnt[2]),
        .Q(\rxeq_cnt_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_control_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_control_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_control_reg1[0]),
        .Q(rxeq_control_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_control_reg1[1]),
        .Q(rxeq_control_reg2[1]),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[0]_i_1__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[0]),
        .O(rxeq_fs[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[1]_i_1__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[1]),
        .O(rxeq_fs[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[2]_i_1__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[2]),
        .O(rxeq_fs[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[3]_i_1__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[3]),
        .O(rxeq_fs[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[4]_i_1__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[4]),
        .O(rxeq_fs[4]));
  LUT3 #(
    .INIT(8'hF8)) 
    \rxeq_fs[5]_i_1__2 
       (.I0(rxeq_control_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_rx[1]_i_2__2_n_0 ),
        .O(\rxeq_fs[5]_i_1__2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_fs[5]_i_2__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(rxeq_lffs_reg2[5]),
        .O(rxeq_fs[5]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__2_n_0 ),
        .D(rxeq_fs[0]),
        .Q(\rxeq_fs_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__2_n_0 ),
        .D(rxeq_fs[1]),
        .Q(\rxeq_fs_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__2_n_0 ),
        .D(rxeq_fs[2]),
        .Q(\rxeq_fs_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__2_n_0 ),
        .D(rxeq_fs[3]),
        .Q(\rxeq_fs_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[4] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__2_n_0 ),
        .D(rxeq_fs[4]),
        .Q(\rxeq_fs_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[5] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_fs[5]_i_1__2_n_0 ),
        .D(rxeq_fs[5]),
        .Q(\rxeq_fs_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[0]_i_1__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[0]),
        .O(rxeq_lf[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[1]_i_1__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[1]),
        .O(rxeq_lf[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[2]_i_1__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[2]),
        .O(rxeq_lf[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[3]_i_1__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[3]),
        .O(rxeq_lf[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[4]_i_1__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[4]),
        .O(rxeq_lf[4]));
  LUT5 #(
    .INIT(32'hEAAAAAAA)) 
    \rxeq_lf[5]_i_1__2 
       (.I0(\FSM_onehot_fsm_rx[1]_i_2__2_n_0 ),
        .I1(\rxeq_cnt_reg_n_0_[2] ),
        .I2(\rxeq_cnt_reg_n_0_[0] ),
        .I3(\rxeq_cnt_reg_n_0_[1] ),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .O(\rxeq_lf[5]_i_1__2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rxeq_lf[5]_i_2__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I1(rxeq_lffs_reg2[5]),
        .O(rxeq_lf[5]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__2_n_0 ),
        .D(rxeq_lf[0]),
        .Q(\rxeq_lf_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__2_n_0 ),
        .D(rxeq_lf[1]),
        .Q(\rxeq_lf_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__2_n_0 ),
        .D(rxeq_lf[2]),
        .Q(\rxeq_lf_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__2_n_0 ),
        .D(rxeq_lf[3]),
        .Q(\rxeq_lf_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[4] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__2_n_0 ),
        .D(rxeq_lf[4]),
        .Q(\rxeq_lf_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[5] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_lf[5]_i_1__2_n_0 ),
        .D(rxeq_lf[5]),
        .Q(\rxeq_lf_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[0]),
        .Q(rxeq_lffs_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[1]),
        .Q(rxeq_lffs_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[2]),
        .Q(rxeq_lffs_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[3]),
        .Q(rxeq_lffs_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[4]),
        .Q(rxeq_lffs_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[5]),
        .Q(rxeq_lffs_reg2[5]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_new_txcoeff_req_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_new_txcoeff_req),
        .Q(rxeq_new_txcoeff_req_reg_n_0),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hA8FFA800)) 
    \rxeq_preset[0]_i_1__2 
       (.I0(rxeq_preset_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(\rxeq_preset[2]_i_2__2_n_0 ),
        .I4(\rxeq_preset_reg_n_0_[0] ),
        .O(\rxeq_preset[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hA8FFA800)) 
    \rxeq_preset[1]_i_1__2 
       (.I0(rxeq_preset_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(\rxeq_preset[2]_i_2__2_n_0 ),
        .I4(\rxeq_preset_reg_n_0_[1] ),
        .O(\rxeq_preset[1]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hA8FFA800)) 
    \rxeq_preset[2]_i_1__2 
       (.I0(rxeq_preset_reg2[2]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(\rxeq_preset[2]_i_2__2_n_0 ),
        .I4(\rxeq_preset_reg_n_0_[2] ),
        .O(\rxeq_preset[2]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0002)) 
    \rxeq_preset[2]_i_2__2 
       (.I0(\rxeq_preset[2]_i_3__2_n_0 ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I3(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .I4(rxeq_adapt_done_reg_i_2__2_n_0),
        .I5(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .O(\rxeq_preset[2]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \rxeq_preset[2]_i_3__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\rxeq_preset[2]_i_3__2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_preset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_preset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_preset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_reg1[0]),
        .Q(rxeq_preset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_reg1[1]),
        .Q(rxeq_preset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_reg1[2]),
        .Q(rxeq_preset_reg2[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_preset_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxeq_preset[0]_i_1__2_n_0 ),
        .Q(\rxeq_preset_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_preset_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxeq_preset[1]_i_1__2_n_0 ),
        .Q(\rxeq_preset_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_preset_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxeq_preset[2]_i_1__2_n_0 ),
        .Q(\rxeq_preset_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_preset_valid_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .Q(rxeq_preset_valid),
        .R(RST_CPLLRESET));
  pcie_7x_0_pcie_7x_0_rxeq_scan rxeq_scan_i
       (.D({rxeq_scan_i_n_0,rxeq_scan_i_n_1,rxeq_scan_i_n_2}),
        .\FSM_onehot_fsm_rx_reg[5] ({\rxeq_cnt_reg_n_0_[2] ,\rxeq_cnt_reg_n_0_[1] ,\rxeq_cnt_reg_n_0_[0] }),
        .Q({\FSM_onehot_fsm_rx_reg_n_0_[6] ,\FSM_onehot_fsm_rx_reg_n_0_[5] ,\FSM_onehot_fsm_rx_reg_n_0_[4] ,\FSM_onehot_fsm_rx_reg_n_0_[2] ,\FSM_onehot_fsm_rx_reg_n_0_[1] }),
        .RST_CPLLRESET(RST_CPLLRESET),
        .USER_RXEQ_ADAPT_DONE(USER_RXEQ_ADAPT_DONE),
        .adapt_done_reg_0(rxeq_scan_i_n_4),
        .\fs_reg1_reg[5]_0 ({\rxeq_fs_reg_n_0_[5] ,\rxeq_fs_reg_n_0_[4] ,\rxeq_fs_reg_n_0_[3] ,\rxeq_fs_reg_n_0_[2] ,\rxeq_fs_reg_n_0_[1] ,\rxeq_fs_reg_n_0_[0] }),
        .\lf_reg1_reg[5]_0 ({\rxeq_lf_reg_n_0_[5] ,\rxeq_lf_reg_n_0_[4] ,\rxeq_lf_reg_n_0_[3] ,\rxeq_lf_reg_n_0_[2] ,\rxeq_lf_reg_n_0_[1] ,\rxeq_lf_reg_n_0_[0] }),
        .new_txcoeff_done_reg_0(rxeq_scan_i_n_5),
        .new_txcoeff_req_reg1_reg_0(rxeq_new_txcoeff_req_reg_n_0),
        .out(rxeq_control_reg2),
        .pipe_pclk_in(pipe_pclk_in),
        .\preset_reg1_reg[2]_0 ({\rxeq_preset_reg_n_0_[2] ,\rxeq_preset_reg_n_0_[1] ,\rxeq_preset_reg_n_0_[0] }),
        .rxeq_adapt_done_reg(rxeq_adapt_done_i_2__2_n_0),
        .rxeq_adapt_done_reg_reg(\FSM_onehot_fsm_rx[1]_i_2__2_n_0 ),
        .rxeq_adapt_done_reg_reg_0(rxeq_adapt_done_reg_i_2__2_n_0),
        .rxeq_adapt_done_reg_reg_1(rxeq_adapt_done_reg_reg_n_0),
        .rxeq_new_txcoeff_req(rxeq_new_txcoeff_req),
        .rxeq_preset_valid(rxeq_preset_valid),
        .\txcoeff_reg1_reg[17]_0 ({\rxeq_txcoeff_reg_n_0_[17] ,\rxeq_txcoeff_reg_n_0_[16] ,\rxeq_txcoeff_reg_n_0_[15] ,\rxeq_txcoeff_reg_n_0_[14] ,\rxeq_txcoeff_reg_n_0_[13] ,\rxeq_txcoeff_reg_n_0_[12] ,\rxeq_txcoeff_reg_n_0_[11] ,\rxeq_txcoeff_reg_n_0_[10] ,\rxeq_txcoeff_reg_n_0_[9] ,\rxeq_txcoeff_reg_n_0_[8] ,\rxeq_txcoeff_reg_n_0_[7] ,\rxeq_txcoeff_reg_n_0_[6] ,\rxeq_txcoeff_reg_n_0_[5] ,\rxeq_txcoeff_reg_n_0_[4] ,\rxeq_txcoeff_reg_n_0_[3] ,\rxeq_txcoeff_reg_n_0_[2] ,\rxeq_txcoeff_reg_n_0_[1] ,\rxeq_txcoeff_reg_n_0_[0] }),
        .\txpreset_reg1_reg[3]_0 ({\rxeq_txpreset_reg_n_0_[3] ,\rxeq_txpreset_reg_n_0_[2] ,\rxeq_txpreset_reg_n_0_[1] ,\rxeq_txpreset_reg_n_0_[0] }));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[0]_i_1__2 
       (.I0(\rxeq_txcoeff_reg_n_0_[6] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[0]));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[10]_i_1__2 
       (.I0(\rxeq_txcoeff_reg_n_0_[16] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[10]));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[11]_i_1__2 
       (.I0(\rxeq_txcoeff_reg_n_0_[17] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[11]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[12]_i_1__2 
       (.I0(txeq_deemph_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[12]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[13]_i_1__2 
       (.I0(txeq_deemph_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[13]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[14]_i_1__2 
       (.I0(txeq_deemph_reg2[2]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[14]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[15]_i_1__2 
       (.I0(txeq_deemph_reg2[3]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[15]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[16]_i_1__2 
       (.I0(txeq_deemph_reg2[4]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[16]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[17]_i_1__2 
       (.I0(txeq_deemph_reg2[5]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[17]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[1]_i_1__2 
       (.I0(\rxeq_txcoeff_reg_n_0_[7] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[1]));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[2]_i_1__2 
       (.I0(\rxeq_txcoeff_reg_n_0_[8] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[2]));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[3]_i_1__2 
       (.I0(\rxeq_txcoeff_reg_n_0_[9] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[3]));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[4]_i_1__2 
       (.I0(\rxeq_txcoeff_reg_n_0_[10] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[4]));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[5]_i_1__2 
       (.I0(\rxeq_txcoeff_reg_n_0_[11] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[5]));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[6]_i_1__2 
       (.I0(\rxeq_txcoeff_reg_n_0_[12] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[6]));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[7]_i_1__2 
       (.I0(\rxeq_txcoeff_reg_n_0_[13] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[7]));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[8]_i_1__2 
       (.I0(\rxeq_txcoeff_reg_n_0_[14] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[8]));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txcoeff[9]_i_1__2 
       (.I0(\rxeq_txcoeff_reg_n_0_[15] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txcoeff[9]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[0]),
        .Q(\rxeq_txcoeff_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[10] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[10]),
        .Q(\rxeq_txcoeff_reg_n_0_[10] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[11] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[11]),
        .Q(\rxeq_txcoeff_reg_n_0_[11] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[12] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[12]),
        .Q(\rxeq_txcoeff_reg_n_0_[12] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[13] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[13]),
        .Q(\rxeq_txcoeff_reg_n_0_[13] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[14] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[14]),
        .Q(\rxeq_txcoeff_reg_n_0_[14] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[15] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[15]),
        .Q(\rxeq_txcoeff_reg_n_0_[15] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[16] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[16]),
        .Q(\rxeq_txcoeff_reg_n_0_[16] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[17] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[17]),
        .Q(\rxeq_txcoeff_reg_n_0_[17] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[1]),
        .Q(\rxeq_txcoeff_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[2]),
        .Q(\rxeq_txcoeff_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[3]),
        .Q(\rxeq_txcoeff_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[4] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[4]),
        .Q(\rxeq_txcoeff_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[5] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[5]),
        .Q(\rxeq_txcoeff_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[6] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[6]),
        .Q(\rxeq_txcoeff_reg_n_0_[6] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[7] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[7]),
        .Q(\rxeq_txcoeff_reg_n_0_[7] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[8] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[8]),
        .Q(\rxeq_txcoeff_reg_n_0_[8] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[9] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txcoeff[9]),
        .Q(\rxeq_txcoeff_reg_n_0_[9] ),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[0]_i_1__2 
       (.I0(rxeq_txpreset_reg2[0]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[0]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[1]_i_1__2 
       (.I0(rxeq_txpreset_reg2[1]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[1]));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[2]_i_1__2 
       (.I0(rxeq_txpreset_reg2[2]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[2]));
  LUT5 #(
    .INIT(32'hFFFFF404)) 
    \rxeq_txpreset[3]_i_1__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[6] ),
        .I1(\rxeq_txpreset[3]_i_3__2_n_0 ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .I3(rxeq_control_reg2[1]),
        .I4(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .O(\rxeq_txpreset[3]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \rxeq_txpreset[3]_i_2__2 
       (.I0(rxeq_txpreset_reg2[3]),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[3] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[1] ),
        .O(rxeq_txpreset[3]));
  LUT3 #(
    .INIT(8'h01)) 
    \rxeq_txpreset[3]_i_3__2 
       (.I0(\FSM_onehot_fsm_rx_reg_n_0_[2] ),
        .I1(\FSM_onehot_fsm_rx_reg_n_0_[4] ),
        .I2(\FSM_onehot_fsm_rx_reg_n_0_[5] ),
        .O(\rxeq_txpreset[3]_i_3__2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_txpreset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_txpreset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_txpreset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_txpreset_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[0]),
        .Q(rxeq_txpreset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[1]),
        .Q(rxeq_txpreset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[2]),
        .Q(rxeq_txpreset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[3]),
        .Q(rxeq_txpreset_reg2[3]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txpreset[0]),
        .Q(\rxeq_txpreset_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txpreset[1]),
        .Q(\rxeq_txpreset_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txpreset[2]),
        .Q(\rxeq_txpreset_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\rxeq_txpreset[3]_i_1__2_n_0 ),
        .D(rxeq_txpreset[3]),
        .Q(\rxeq_txpreset_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_en_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_en_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_en_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_en_reg1),
        .Q(rxeq_user_en_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_mode_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_mode_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_mode_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_mode_reg1),
        .Q(rxeq_user_mode_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[0]),
        .Q(rxeq_user_txcoeff_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[10]),
        .Q(rxeq_user_txcoeff_reg2[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[11]),
        .Q(rxeq_user_txcoeff_reg2[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[12]),
        .Q(rxeq_user_txcoeff_reg2[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[13]),
        .Q(rxeq_user_txcoeff_reg2[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[14]),
        .Q(rxeq_user_txcoeff_reg2[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[15]),
        .Q(rxeq_user_txcoeff_reg2[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[16]),
        .Q(rxeq_user_txcoeff_reg2[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[17]),
        .Q(rxeq_user_txcoeff_reg2[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[1]),
        .Q(rxeq_user_txcoeff_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[2]),
        .Q(rxeq_user_txcoeff_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[3]),
        .Q(rxeq_user_txcoeff_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[4]),
        .Q(rxeq_user_txcoeff_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[5]),
        .Q(rxeq_user_txcoeff_reg2[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[6]),
        .Q(rxeq_user_txcoeff_reg2[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[7]),
        .Q(rxeq_user_txcoeff_reg2[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[8]),
        .Q(rxeq_user_txcoeff_reg2[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[9]),
        .Q(rxeq_user_txcoeff_reg2[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_control_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_control_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_control_reg1[0]),
        .Q(txeq_control_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_control_reg1[1]),
        .Q(txeq_control_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \txeq_deemph_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[0]),
        .S(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \txeq_deemph_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[0]),
        .Q(txeq_deemph_reg2[0]),
        .S(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[1]),
        .Q(txeq_deemph_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[2]),
        .Q(txeq_deemph_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[3]),
        .Q(txeq_deemph_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[4]),
        .Q(txeq_deemph_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_deemph_reg1[5]),
        .Q(txeq_deemph_reg2[5]),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h00001000)) 
    \txeq_preset[0]_i_1__2 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[2]),
        .I2(txeq_preset_reg2[0]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[1]),
        .O(p_0_out[0]));
  LUT5 #(
    .INIT(32'hABEAABAF)) 
    \txeq_preset[10]_i_1__2 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[2]),
        .I2(txeq_preset_reg2[0]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[1]),
        .O(p_0_out[10]));
  LUT5 #(
    .INIT(32'hFFFF200D)) 
    \txeq_preset[11]_i_1__2 
       (.I0(txeq_preset_reg2[1]),
        .I1(txeq_preset_reg2[3]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[0]),
        .I4(RST_CPLLRESET),
        .O(p_0_out[11]));
  LUT5 #(
    .INIT(32'h01151110)) 
    \txeq_preset[12]_i_1__2 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[3]),
        .I2(txeq_preset_reg2[1]),
        .I3(txeq_preset_reg2[2]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[12]));
  LUT5 #(
    .INIT(32'h01000010)) 
    \txeq_preset[13]_i_1__2 
       (.I0(txeq_preset_reg2[2]),
        .I1(RST_CPLLRESET),
        .I2(txeq_preset_reg2[0]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[1]),
        .O(p_0_out[13]));
  LUT5 #(
    .INIT(32'h01000010)) 
    \txeq_preset[14]_i_1__2 
       (.I0(txeq_preset_reg2[2]),
        .I1(RST_CPLLRESET),
        .I2(txeq_preset_reg2[3]),
        .I3(txeq_preset_reg2[1]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[14]));
  LUT4 #(
    .INIT(16'hF0F1)) 
    \txeq_preset[15]_i_1__2 
       (.I0(txeq_preset_reg2[2]),
        .I1(txeq_preset_reg2[1]),
        .I2(RST_CPLLRESET),
        .I3(txeq_preset_reg2[3]),
        .O(p_0_out[15]));
  LUT4 #(
    .INIT(16'h0006)) 
    \txeq_preset[16]_i_1__2 
       (.I0(txeq_preset_reg2[3]),
        .I1(txeq_preset_reg2[0]),
        .I2(txeq_preset_reg2[2]),
        .I3(RST_CPLLRESET),
        .O(p_0_out[16]));
  LUT4 #(
    .INIT(16'hAABA)) 
    \txeq_preset[17]_i_1__2 
       (.I0(RST_CPLLRESET),
        .I1(fsm_tx[0]),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[2]),
        .O(\txeq_preset[17]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF400D)) 
    \txeq_preset[17]_i_2__2 
       (.I0(txeq_preset_reg2[3]),
        .I1(txeq_preset_reg2[1]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[0]),
        .I4(RST_CPLLRESET),
        .O(p_0_out[17]));
  LUT5 #(
    .INIT(32'h00001004)) 
    \txeq_preset[1]_i_1__2 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[3]),
        .I2(txeq_preset_reg2[1]),
        .I3(txeq_preset_reg2[2]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[1]));
  LUT4 #(
    .INIT(16'h0E00)) 
    \txeq_preset[2]_i_1__2 
       (.I0(txeq_preset_reg2[2]),
        .I1(txeq_preset_reg2[0]),
        .I2(RST_CPLLRESET),
        .I3(txeq_preset_reg2[3]),
        .O(p_0_out[2]));
  LUT5 #(
    .INIT(32'h01440140)) 
    \txeq_preset[3]_i_1__2 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[2]),
        .I2(txeq_preset_reg2[1]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[0]),
        .O(\txeq_preset[3]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h00001400)) 
    \txeq_preset[7]_i_1__2 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[0]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[1]),
        .I4(txeq_preset_reg2[3]),
        .O(\txeq_preset[7]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hAAAFBEAF)) 
    \txeq_preset[8]_i_1__2 
       (.I0(RST_CPLLRESET),
        .I1(txeq_preset_reg2[0]),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[1]),
        .I4(txeq_preset_reg2[3]),
        .O(p_0_out[8]));
  LUT5 #(
    .INIT(32'hCCFCCFCD)) 
    \txeq_preset[9]_i_1__2 
       (.I0(txeq_preset_reg2[1]),
        .I1(RST_CPLLRESET),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[0]),
        .O(p_0_out[9]));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT3 #(
    .INIT(8'h04)) 
    txeq_preset_done_i_1__2
       (.I0(fsm_tx[2]),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[0]),
        .O(txeq_preset_done_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txeq_preset_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_done_i_1__2_n_0),
        .Q(txeq_preset_done),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_preset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_preset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_preset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_preset_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[0]),
        .Q(txeq_preset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[1]),
        .Q(txeq_preset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[2]),
        .Q(txeq_preset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_preset_reg1[3]),
        .Q(txeq_preset_reg2[3]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[0] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(p_0_out[0]),
        .Q(\txeq_preset_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[10] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(p_0_out[10]),
        .Q(\txeq_preset_reg_n_0_[10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[11] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(p_0_out[11]),
        .Q(\txeq_preset_reg_n_0_[11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[12] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(p_0_out[12]),
        .Q(\txeq_preset_reg_n_0_[12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[13] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(p_0_out[13]),
        .Q(\txeq_preset_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[14] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(p_0_out[14]),
        .Q(\txeq_preset_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[15] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(p_0_out[15]),
        .Q(\txeq_preset_reg_n_0_[15] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[16] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(p_0_out[16]),
        .Q(\txeq_preset_reg_n_0_[16] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[17] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(p_0_out[17]),
        .Q(\txeq_preset_reg_n_0_[17] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[1] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(p_0_out[1]),
        .Q(\txeq_preset_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[2] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(p_0_out[2]),
        .Q(\txeq_preset_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[3] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(\txeq_preset[3]_i_1__2_n_0 ),
        .Q(\txeq_preset_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[7] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(\txeq_preset[7]_i_1__2_n_0 ),
        .Q(\txeq_preset_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[8] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(p_0_out[8]),
        .Q(\txeq_preset_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[9] 
       (.C(pipe_pclk_in),
        .CE(\txeq_preset[17]_i_1__2_n_0 ),
        .D(p_0_out[9]),
        .Q(\txeq_preset_reg_n_0_[9] ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h45404040)) 
    \txeq_txcoeff[0]_i_1__2 
       (.I0(fsm_tx[2]),
        .I1(\txeq_txcoeff[0]_i_2__2_n_0 ),
        .I2(fsm_tx[1]),
        .I3(fsm_tx[0]),
        .I4(\txeq_txcoeff_reg_n_0_[6] ),
        .O(\txeq_txcoeff[0]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[0]_i_2__2 
       (.I0(\txeq_txcoeff_reg_n_0_[6] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[7] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[0] ),
        .O(\txeq_txcoeff[0]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[10]_i_1__2 
       (.I0(\txeq_txcoeff_reg_n_0_[9] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[10]_i_2__2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[16] ),
        .O(\txeq_txcoeff[10]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[10]_i_2__2 
       (.I0(\txeq_txcoeff_reg_n_0_[16] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[17] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[10] ),
        .O(\txeq_txcoeff[10]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[11]_i_1__2 
       (.I0(\txeq_txcoeff_reg_n_0_[10] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[11]_i_2__2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[17] ),
        .O(\txeq_txcoeff[11]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[11]_i_2__2 
       (.I0(\txeq_txcoeff_reg_n_0_[17] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[18] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[11] ),
        .O(\txeq_txcoeff[11]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[12]_i_1__2 
       (.I0(\txeq_txcoeff_reg_n_0_[11] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[12]_i_2__2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[18] ),
        .O(\txeq_txcoeff[12]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[12]_i_2__2 
       (.I0(\txeq_txcoeff_reg_n_0_[18] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[0]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[12] ),
        .O(\txeq_txcoeff[12]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[13]_i_1__2 
       (.I0(\txeq_txcoeff_reg_n_0_[12] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[13]_i_2__2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[0]),
        .O(\txeq_txcoeff[13]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[13]_i_2__2 
       (.I0(txeq_deemph_reg2[0]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[13] ),
        .O(\txeq_txcoeff[13]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[14]_i_1__2 
       (.I0(\txeq_txcoeff_reg_n_0_[13] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[14]_i_2__2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[1]),
        .O(\txeq_txcoeff[14]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[14]_i_2__2 
       (.I0(txeq_deemph_reg2[1]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[2]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[14] ),
        .O(\txeq_txcoeff[14]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[15]_i_1__2 
       (.I0(\txeq_txcoeff_reg_n_0_[14] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[15]_i_2__2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[2]),
        .O(\txeq_txcoeff[15]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[15]_i_2__2 
       (.I0(txeq_deemph_reg2[2]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[3]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[15] ),
        .O(\txeq_txcoeff[15]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[16]_i_1__2 
       (.I0(\txeq_txcoeff_reg_n_0_[15] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[16]_i_2__2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[3]),
        .O(\txeq_txcoeff[16]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[16]_i_2__2 
       (.I0(txeq_deemph_reg2[3]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[4]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[16] ),
        .O(\txeq_txcoeff[16]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[17]_i_1__2 
       (.I0(\txeq_txcoeff_reg_n_0_[16] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[17]_i_2__2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(txeq_deemph_reg2[4]),
        .O(\txeq_txcoeff[17]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[17]_i_2__2 
       (.I0(txeq_deemph_reg2[4]),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(txeq_deemph_reg2[5]),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[17] ),
        .O(\txeq_txcoeff[17]_i_2__2_n_0 ));
  LUT5 #(
    .INIT(32'hFF040FFF)) 
    \txeq_txcoeff[18]_i_1__2 
       (.I0(txeq_control_reg2[0]),
        .I1(txeq_control_reg2[1]),
        .I2(fsm_tx[2]),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .O(txeq_txcoeff));
  LUT6 #(
    .INIT(64'h22F3220022002200)) 
    \txeq_txcoeff[18]_i_2__2 
       (.I0(\txeq_txcoeff_reg_n_0_[17] ),
        .I1(fsm_tx[1]),
        .I2(\txeq_txcoeff[18]_i_3__2_n_0 ),
        .I3(fsm_tx[2]),
        .I4(txeq_deemph_reg2[5]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[18]_i_2__2_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \txeq_txcoeff[18]_i_3__2 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .O(\txeq_txcoeff[18]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[1]_i_1__2 
       (.I0(\txeq_txcoeff_reg_n_0_[0] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[1]_i_2__2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[7] ),
        .O(\txeq_txcoeff[1]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[1]_i_2__2 
       (.I0(\txeq_txcoeff_reg_n_0_[7] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[8] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[1] ),
        .O(\txeq_txcoeff[1]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[2]_i_1__2 
       (.I0(\txeq_txcoeff_reg_n_0_[1] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[2]_i_2__2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[8] ),
        .O(\txeq_txcoeff[2]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[2]_i_2__2 
       (.I0(\txeq_txcoeff_reg_n_0_[8] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[9] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[2] ),
        .O(\txeq_txcoeff[2]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[3]_i_1__2 
       (.I0(\txeq_txcoeff_reg_n_0_[2] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[3]_i_2__2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[9] ),
        .O(\txeq_txcoeff[3]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[3]_i_2__2 
       (.I0(\txeq_txcoeff_reg_n_0_[9] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[10] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[3] ),
        .O(\txeq_txcoeff[3]_i_2__2_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \txeq_txcoeff[4]_i_1__2 
       (.I0(\txeq_txcoeff_reg_n_0_[3] ),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[2]),
        .I3(\txeq_txcoeff[4]_i_2__2_n_0 ),
        .O(\txeq_txcoeff[4]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hCACCCCCC00000000)) 
    \txeq_txcoeff[4]_i_2__2 
       (.I0(\txeq_txcoeff_reg_n_0_[11] ),
        .I1(\txeq_txcoeff_reg_n_0_[10] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I3(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I4(fsm_tx[1]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[4]_i_2__2_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \txeq_txcoeff[5]_i_1__2 
       (.I0(\txeq_txcoeff_reg_n_0_[4] ),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[2]),
        .I3(\txeq_txcoeff[5]_i_2__2_n_0 ),
        .O(\txeq_txcoeff[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hCACCCCCC00000000)) 
    \txeq_txcoeff[5]_i_2__2 
       (.I0(\txeq_txcoeff_reg_n_0_[12] ),
        .I1(\txeq_txcoeff_reg_n_0_[11] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I3(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I4(fsm_tx[1]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[5]_i_2__2_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \txeq_txcoeff[6]_i_1__2 
       (.I0(\txeq_txcoeff_reg_n_0_[5] ),
        .I1(fsm_tx[1]),
        .I2(fsm_tx[2]),
        .I3(\txeq_txcoeff[6]_i_2__2_n_0 ),
        .O(\txeq_txcoeff[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hCACCCCCC00000000)) 
    \txeq_txcoeff[6]_i_2__2 
       (.I0(\txeq_txcoeff_reg_n_0_[13] ),
        .I1(\txeq_txcoeff_reg_n_0_[12] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I3(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I4(fsm_tx[1]),
        .I5(fsm_tx[0]),
        .O(\txeq_txcoeff[6]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[7]_i_1__2 
       (.I0(\txeq_txcoeff_reg_n_0_[6] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[7]_i_2__2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[13] ),
        .O(\txeq_txcoeff[7]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[7]_i_2__2 
       (.I0(\txeq_txcoeff_reg_n_0_[13] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[14] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[7] ),
        .O(\txeq_txcoeff[7]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[8]_i_1__2 
       (.I0(\txeq_txcoeff_reg_n_0_[7] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[8]_i_2__2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[14] ),
        .O(\txeq_txcoeff[8]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[8]_i_2__2 
       (.I0(\txeq_txcoeff_reg_n_0_[14] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[15] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[8] ),
        .O(\txeq_txcoeff[8]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h30BB308830883088)) 
    \txeq_txcoeff[9]_i_1__2 
       (.I0(\txeq_txcoeff_reg_n_0_[8] ),
        .I1(fsm_tx[2]),
        .I2(\txeq_txcoeff[9]_i_2__2_n_0 ),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[0]),
        .I5(\txeq_txcoeff_reg_n_0_[15] ),
        .O(\txeq_txcoeff[9]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hBA8AFFFFBA8A0000)) 
    \txeq_txcoeff[9]_i_2__2 
       (.I0(\txeq_txcoeff_reg_n_0_[15] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_reg_n_0_[16] ),
        .I4(fsm_tx[0]),
        .I5(\txeq_preset_reg_n_0_[9] ),
        .O(\txeq_txcoeff[9]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h000004000F000400)) 
    \txeq_txcoeff_cnt[0]_i_1__2 
       (.I0(txeq_control_reg2[0]),
        .I1(txeq_control_reg2[1]),
        .I2(fsm_tx[2]),
        .I3(fsm_tx[0]),
        .I4(fsm_tx[1]),
        .I5(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .O(txeq_txcoeff_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT5 #(
    .INIT(32'h00006000)) 
    \txeq_txcoeff_cnt[1]_i_1__2 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I2(fsm_tx[0]),
        .I3(fsm_tx[1]),
        .I4(fsm_tx[2]),
        .O(txeq_txcoeff_cnt[1]));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_txcoeff_cnt[0]),
        .Q(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txeq_txcoeff_cnt[1]),
        .Q(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[0] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[0]_i_1__2_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[0] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[10] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[10]_i_1__2_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[10] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[11] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[11]_i_1__2_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[11] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[12] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[12]_i_1__2_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[12] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[13] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[13]_i_1__2_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[13] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[14] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[14]_i_1__2_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[14] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[15] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[15]_i_1__2_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[15] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[16] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[16]_i_1__2_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[16] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[17] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[17]_i_1__2_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[17] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[18] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[18]_i_2__2_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[18] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[1] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[1]_i_1__2_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[1] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[2] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[2]_i_1__2_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[3] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[3]_i_1__2_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[4] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[4]_i_1__2_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[5] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[5]_i_1__2_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[6] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[6]_i_1__2_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[6] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[7] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[7]_i_1__2_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[7] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[8] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[8]_i_1__2_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[8] ),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[9] 
       (.C(pipe_pclk_in),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[9]_i_1__2_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[9] ),
        .R(RST_CPLLRESET));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pipe_rate" *) 
module pcie_7x_0_pcie_7x_0_pipe_rate
   (SYNC_TXSYNC_START,
    rxchbonden_0,
    USER_RATE_GEN3,
    Q,
    RATE_DRP_START,
    RATE_DRP_X16X20_MODE,
    RXRATE,
    pipe_rate_fsm,
    rate_txpmareset_0,
    pipe_pclk_sel_out,
    QRST_QPLLPD_IN,
    QRST_QPLLRESET_IN,
    RXSYSCLKSEL,
    rate_cpllreset_0,
    rate_cpllpd_0,
    RST_TXSYNC_START,
    RST_CPLLRESET,
    pipe_pclk_in,
    RATE_PHYSTATUS,
    RATE_RXRATEDONE,
    RATE_TXRATEDONE,
    \rate_in_reg1_reg[0]_0 ,
    RATE_CPLLLOCK,
    RATE_QPLLLOCK,
    RATE_DRP_DONE,
    pipe_mmcm_lock_in,
    USER_TXRESETDONE,
    USER_RXRESETDONE,
    RATE_TXSYNC_DONE,
    RST_IDLE,
    user_active_lane,
    out,
    \FSM_onehot_fsm_reg[20]_0 );
  output SYNC_TXSYNC_START;
  output rxchbonden_0;
  output USER_RATE_GEN3;
  output [1:0]Q;
  output RATE_DRP_START;
  output RATE_DRP_X16X20_MODE;
  output [0:0]RXRATE;
  output [4:0]pipe_rate_fsm;
  output rate_txpmareset_0;
  output [0:0]pipe_pclk_sel_out;
  output [0:0]QRST_QPLLPD_IN;
  output [0:0]QRST_QPLLRESET_IN;
  output [0:0]RXSYSCLKSEL;
  output rate_cpllreset_0;
  output rate_cpllpd_0;
  input RST_TXSYNC_START;
  input RST_CPLLRESET;
  input pipe_pclk_in;
  input RATE_PHYSTATUS;
  input RATE_RXRATEDONE;
  input RATE_TXRATEDONE;
  input [0:0]\rate_in_reg1_reg[0]_0 ;
  input RATE_CPLLLOCK;
  input RATE_QPLLLOCK;
  input RATE_DRP_DONE;
  input pipe_mmcm_lock_in;
  input USER_TXRESETDONE;
  input USER_RXRESETDONE;
  input RATE_TXSYNC_DONE;
  input RST_IDLE;
  input [0:0]user_active_lane;
  input out;
  input \FSM_onehot_fsm_reg[20]_0 ;

  wire \FSM_onehot_fsm[0]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm[0]_i_2_n_0 ;
  wire \FSM_onehot_fsm[12]_i_1_n_0 ;
  wire \FSM_onehot_fsm[13]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm[13]_i_2_n_0 ;
  wire \FSM_onehot_fsm[14]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm[16]_i_1_n_0 ;
  wire \FSM_onehot_fsm[18]_i_1_n_0 ;
  wire \FSM_onehot_fsm[1]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm[20]_i_1_n_0 ;
  wire \FSM_onehot_fsm[21]_i_1_n_0 ;
  wire \FSM_onehot_fsm[23]_i_1_n_0 ;
  wire \FSM_onehot_fsm[25]_i_1_n_0 ;
  wire \FSM_onehot_fsm[25]_i_2_n_0 ;
  wire \FSM_onehot_fsm[27]_i_1_n_0 ;
  wire \FSM_onehot_fsm[28]_i_1_n_0 ;
  wire \FSM_onehot_fsm[29]_i_1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm[6]_i_1_n_0 ;
  wire \FSM_onehot_fsm[7]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm[7]_i_2_n_0 ;
  wire \FSM_onehot_fsm[7]_i_3_n_0 ;
  wire \FSM_onehot_fsm[8]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm_reg[20]_0 ;
  wire \FSM_onehot_fsm_reg_n_0_[12] ;
  wire \FSM_onehot_fsm_reg_n_0_[13] ;
  wire \FSM_onehot_fsm_reg_n_0_[14] ;
  wire \FSM_onehot_fsm_reg_n_0_[15] ;
  wire \FSM_onehot_fsm_reg_n_0_[16] ;
  wire \FSM_onehot_fsm_reg_n_0_[1] ;
  wire \FSM_onehot_fsm_reg_n_0_[20] ;
  wire \FSM_onehot_fsm_reg_n_0_[21] ;
  wire \FSM_onehot_fsm_reg_n_0_[23] ;
  wire \FSM_onehot_fsm_reg_n_0_[24] ;
  wire \FSM_onehot_fsm_reg_n_0_[25] ;
  wire \FSM_onehot_fsm_reg_n_0_[26] ;
  wire \FSM_onehot_fsm_reg_n_0_[27] ;
  wire \FSM_onehot_fsm_reg_n_0_[28] ;
  wire \FSM_onehot_fsm_reg_n_0_[29] ;
  wire \FSM_onehot_fsm_reg_n_0_[4] ;
  wire \FSM_onehot_fsm_reg_n_0_[5] ;
  wire \FSM_onehot_fsm_reg_n_0_[7] ;
  wire \FSM_onehot_fsm_reg_n_0_[8] ;
  wire [1:0]Q;
  wire [0:0]QRST_QPLLPD_IN;
  wire [0:0]QRST_QPLLRESET_IN;
  wire RATE_CPLLLOCK;
  wire RATE_DRP_DONE;
  wire RATE_DRP_START;
  wire RATE_DRP_X16X20_MODE;
  wire RATE_PHYSTATUS;
  wire RATE_QPLLLOCK;
  wire RATE_RXRATEDONE;
  wire RATE_TXRATEDONE;
  wire RATE_TXSYNC_DONE;
  wire RST_CPLLRESET;
  wire RST_IDLE;
  wire RST_TXSYNC_START;
  wire [0:0]RXRATE;
  wire [0:0]RXSYSCLKSEL;
  wire SYNC_TXSYNC_START;
  wire USER_RATE_GEN3;
  wire USER_RXRESETDONE;
  wire USER_TXRESETDONE;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire cplllock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire cplllock_reg2;
  wire cpllpd_i_1_n_0;
  wire cpllreset_i_1__0_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire drp_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire drp_done_reg2;
  wire drp_start;
  wire drp_x16x20_mode;
  wire fsm20_out;
  wire gen3_exit_i_1_n_0;
  wire gen3_exit_reg_n_0;
  wire gen3_i_1_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg2;
  wire out;
  wire [3:0]p_0_in__0;
  wire pclk_sel_i_1_n_0;
  wire phystatus_i_1_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire phystatus_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire phystatus_reg2;
  wire phystatus_reg_n_0;
  wire pipe_mmcm_lock_in;
  wire pipe_pclk_in;
  wire [0:0]pipe_pclk_sel_out;
  wire [4:0]pipe_rate_fsm;
  wire \pipe_rate_fsm[0]_INST_0_i_1_n_0 ;
  wire \pipe_rate_fsm[1]_INST_0_i_1_n_0 ;
  wire \pipe_rate_fsm[2]_INST_0_i_1_n_0 ;
  wire \pipe_rate_fsm[3]_INST_0_i_1_n_0 ;
  wire \pipe_rate_fsm[4]_INST_0_i_1_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire qplllock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire qplllock_reg2;
  wire qpllpd_i_1__0_n_0;
  wire qpllreset_i_1__0_n_0;
  wire rate_cpllpd_0;
  wire rate_cpllreset_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_in_reg1;
  wire [0:0]\rate_in_reg1_reg[0]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_in_reg2;
  wire \rate_out[0]_i_1_n_0 ;
  wire rate_txpmareset_0;
  wire rate_txsync_start_0;
  wire ratedone_i_1_n_0;
  wire ratedone_reg_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_done_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg2;
  wire rxchbonden_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxpmaresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxpmaresetdone_reg2;
  wire rxratedone_i_1_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxratedone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxratedone_reg2;
  wire rxratedone_reg_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_done_reg2;
  wire \sysclksel[0]_i_1_n_0 ;
  wire [3:0]txdata_wait_cnt_reg__0;
  wire txpmareset_i_1_n_0;
  wire txratedone_i_1_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txratedone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txratedone_reg2;
  wire txratedone_reg_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_done_reg2;
  wire [0:0]user_active_lane;

  LUT6 #(
    .INIT(64'hAEAEAEAEFFAEAEAE)) 
    \FSM_onehot_fsm[0]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\FSM_onehot_fsm[0]_i_2_n_0 ),
        .I3(fsm20_out),
        .I4(\FSM_onehot_fsm_reg_n_0_[25] ),
        .I5(rst_idle_reg2),
        .O(\FSM_onehot_fsm[0]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \FSM_onehot_fsm[0]_i_2 
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg1[1]),
        .I2(rate_in_reg2[0]),
        .I3(rate_in_reg1[0]),
        .O(\FSM_onehot_fsm[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h8A888088)) 
    \FSM_onehot_fsm[0]_i_3 
       (.I0(drp_done_reg2),
        .I1(cplllock_reg2),
        .I2(rate_in_reg2[0]),
        .I3(rate_in_reg2[1]),
        .I4(qplllock_reg2),
        .O(fsm20_out));
  LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
    \FSM_onehot_fsm[12]_i_1 
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(rst_idle_reg2),
        .I3(\FSM_onehot_fsm[13]_i_2_n_0 ),
        .I4(drp_done_reg2),
        .I5(\FSM_onehot_fsm_reg_n_0_[29] ),
        .O(\FSM_onehot_fsm[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFB000B000B000)) 
    \FSM_onehot_fsm[13]_i_1__0 
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(rst_idle_reg2),
        .I3(\FSM_onehot_fsm[13]_i_2_n_0 ),
        .I4(drp_done_reg2),
        .I5(\FSM_onehot_fsm_reg_n_0_[13] ),
        .O(\FSM_onehot_fsm[13]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hBA8A0000)) 
    \FSM_onehot_fsm[13]_i_2 
       (.I0(cplllock_reg2),
        .I1(rate_in_reg2[0]),
        .I2(rate_in_reg2[1]),
        .I3(qplllock_reg2),
        .I4(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00020000)) 
    \FSM_onehot_fsm[14]_i_1__0 
       (.I0(user_active_lane),
        .I1(ratedone_reg_n_0),
        .I2(\FSM_onehot_fsm[25]_i_2_n_0 ),
        .I3(gen3_exit_reg_n_0),
        .I4(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I5(\FSM_onehot_fsm_reg_n_0_[5] ),
        .O(\FSM_onehot_fsm[14]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'h0E)) 
    \FSM_onehot_fsm[16]_i_1 
       (.I0(rate_txsync_start_0),
        .I1(\FSM_onehot_fsm_reg_n_0_[16] ),
        .I2(txsync_done_reg2),
        .O(\FSM_onehot_fsm[16]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \FSM_onehot_fsm[18]_i_1 
       (.I0(txsync_done_reg2),
        .I1(rate_txsync_start_0),
        .I2(\FSM_onehot_fsm_reg_n_0_[24] ),
        .O(\FSM_onehot_fsm[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF04F70000)) 
    \FSM_onehot_fsm[1]_i_1__1 
       (.I0(qplllock_reg2),
        .I1(rate_in_reg2[1]),
        .I2(rate_in_reg2[0]),
        .I3(cplllock_reg2),
        .I4(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I5(\FSM_onehot_fsm_reg_n_0_[15] ),
        .O(\FSM_onehot_fsm[1]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAA8AAA8AAA8)) 
    \FSM_onehot_fsm[20]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I1(gen3_exit_reg_n_0),
        .I2(\FSM_onehot_fsm[25]_i_2_n_0 ),
        .I3(ratedone_reg_n_0),
        .I4(out),
        .I5(\FSM_onehot_fsm_reg[20]_0 ),
        .O(\FSM_onehot_fsm[20]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0808A208)) 
    \FSM_onehot_fsm[21]_i_1 
       (.I0(Q[0]),
        .I1(rate_in_reg2[1]),
        .I2(rate_in_reg2[0]),
        .I3(rate_in_reg1[1]),
        .I4(rate_in_reg1[0]),
        .O(\FSM_onehot_fsm[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8088800000000000)) 
    \FSM_onehot_fsm[23]_i_1 
       (.I0(rst_idle_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[25] ),
        .I2(qplllock_reg2),
        .I3(\FSM_onehot_fsm[25]_i_2_n_0 ),
        .I4(cplllock_reg2),
        .I5(drp_done_reg2),
        .O(\FSM_onehot_fsm[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h333FFF3F22222222)) 
    \FSM_onehot_fsm[25]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[28] ),
        .I1(drp_done_reg2),
        .I2(cplllock_reg2),
        .I3(\FSM_onehot_fsm[25]_i_2_n_0 ),
        .I4(qplllock_reg2),
        .I5(\FSM_onehot_fsm_reg_n_0_[25] ),
        .O(\FSM_onehot_fsm[25]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_onehot_fsm[25]_i_2 
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .O(\FSM_onehot_fsm[25]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFF8A)) 
    \FSM_onehot_fsm[27]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[27] ),
        .I1(rxpmaresetdone_reg2),
        .I2(mmcm_lock_reg2),
        .I3(\FSM_onehot_fsm_reg_n_0_[26] ),
        .O(\FSM_onehot_fsm[27]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF404040)) 
    \FSM_onehot_fsm[28]_i_1 
       (.I0(rxpmaresetdone_reg2),
        .I1(mmcm_lock_reg2),
        .I2(\FSM_onehot_fsm_reg_n_0_[27] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[28] ),
        .I4(drp_done_reg2),
        .O(\FSM_onehot_fsm[28]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h0E)) 
    \FSM_onehot_fsm[29]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[13] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[29] ),
        .I2(drp_done_reg2),
        .O(\FSM_onehot_fsm[29]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \FSM_onehot_fsm[4]_i_1__1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I1(txdata_wait_cnt_reg__0[0]),
        .I2(txdata_wait_cnt_reg__0[1]),
        .I3(txdata_wait_cnt_reg__0[2]),
        .I4(txdata_wait_cnt_reg__0[3]),
        .O(\FSM_onehot_fsm[4]_i_1__1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_fsm[6]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[16] ),
        .I1(txsync_done_reg2),
        .O(\FSM_onehot_fsm[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFAAEBEEAAAAAAAA)) 
    \FSM_onehot_fsm[7]_i_1__0 
       (.I0(\FSM_onehot_fsm[7]_i_2_n_0 ),
        .I1(rate_in_reg1[0]),
        .I2(rate_in_reg1[1]),
        .I3(rate_in_reg2[0]),
        .I4(rate_in_reg2[1]),
        .I5(Q[0]),
        .O(\FSM_onehot_fsm[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF08FF0000)) 
    \FSM_onehot_fsm[7]_i_2 
       (.I0(txresetdone_reg2),
        .I1(rxresetdone_reg2),
        .I2(phystatus_reg2),
        .I3(user_active_lane),
        .I4(\FSM_onehot_fsm_reg_n_0_[8] ),
        .I5(\FSM_onehot_fsm[7]_i_3_n_0 ),
        .O(\FSM_onehot_fsm[7]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT5 #(
    .INIT(32'h2AAAAAAA)) 
    \FSM_onehot_fsm[7]_i_3 
       (.I0(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I1(txdata_wait_cnt_reg__0[0]),
        .I2(txdata_wait_cnt_reg__0[1]),
        .I3(txdata_wait_cnt_reg__0[2]),
        .I4(txdata_wait_cnt_reg__0[3]),
        .O(\FSM_onehot_fsm[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFF7000000)) 
    \FSM_onehot_fsm[8]_i_1__0 
       (.I0(txresetdone_reg2),
        .I1(rxresetdone_reg2),
        .I2(phystatus_reg2),
        .I3(user_active_lane),
        .I4(\FSM_onehot_fsm_reg_n_0_[8] ),
        .I5(\FSM_onehot_fsm_reg_n_0_[23] ),
        .O(\FSM_onehot_fsm[8]_i_1__0_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_fsm_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[12]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[12] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[13]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[13] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[14]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[14] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_reg_n_0_[21] ),
        .Q(\FSM_onehot_fsm_reg_n_0_[15] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[16]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[16] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[18] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[18]_i_1_n_0 ),
        .Q(rate_txsync_start_0),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[1]_i_1__1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[1] ),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[20] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[20]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[20] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[21] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[21]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[21] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[23] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[23]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[23] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[24] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_reg_n_0_[20] ),
        .Q(\FSM_onehot_fsm_reg_n_0_[24] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[25] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[25]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[25] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[26] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_reg_n_0_[12] ),
        .Q(\FSM_onehot_fsm_reg_n_0_[26] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[27] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[27]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[27] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[28] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[28]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[28] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[29] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[29]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[29] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[4]_i_1__1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_reg_n_0_[4] ),
        .Q(\FSM_onehot_fsm_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[6]_i_1_n_0 ),
        .Q(Q[1]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[7]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[7] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[8]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[8] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE cplllock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_CPLLLOCK),
        .Q(cplllock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE cplllock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cplllock_reg1),
        .Q(cplllock_reg2),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h440F4400)) 
    cpllpd_i_1
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\FSM_onehot_fsm_reg_n_0_[21] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[24] ),
        .I4(rate_cpllpd_0),
        .O(cpllpd_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    cpllpd_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cpllpd_i_1_n_0),
        .Q(rate_cpllpd_0),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h440F4400)) 
    cpllreset_i_1__0
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\FSM_onehot_fsm_reg_n_0_[15] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[20] ),
        .I4(rate_cpllreset_0),
        .O(cpllreset_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    cpllreset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cpllreset_i_1__0_n_0),
        .Q(rate_cpllreset_0),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE drp_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_DRP_DONE),
        .Q(drp_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE drp_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_done_reg1),
        .Q(drp_done_reg2),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'hE)) 
    drp_start_i_1
       (.I0(\FSM_onehot_fsm_reg_n_0_[13] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[28] ),
        .O(drp_start));
  FDRE #(
    .INIT(1'b0)) 
    drp_start_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_start),
        .Q(RATE_DRP_START),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'hE)) 
    drp_x16x20_mode_i_1
       (.I0(\FSM_onehot_fsm_reg_n_0_[29] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[13] ),
        .O(drp_x16x20_mode));
  FDRE #(
    .INIT(1'b0)) 
    drp_x16x20_mode_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_x16x20_mode),
        .Q(RATE_DRP_X16X20_MODE),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hDF5F55D7080A0000)) 
    gen3_exit_i_1
       (.I0(Q[0]),
        .I1(rate_in_reg1[0]),
        .I2(rate_in_reg2[0]),
        .I3(rate_in_reg1[1]),
        .I4(rate_in_reg2[1]),
        .I5(gen3_exit_reg_n_0),
        .O(gen3_exit_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gen3_exit_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_exit_i_1_n_0),
        .Q(gen3_exit_reg_n_0),
        .R(RST_CPLLRESET));
  LUT4 #(
    .INIT(16'h4F40)) 
    gen3_i_1
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\FSM_onehot_fsm_reg_n_0_[28] ),
        .I3(USER_RATE_GEN3),
        .O(gen3_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gen3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_i_1_n_0),
        .Q(USER_RATE_GEN3),
        .R(RST_CPLLRESET));
  LUT1 #(
    .INIT(2'h1)) 
    \gtx_channel.gtxe2_channel_i_i_5 
       (.I0(USER_RATE_GEN3),
        .O(rxchbonden_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_mmcm_lock_in),
        .Q(mmcm_lock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(mmcm_lock_reg1),
        .Q(mmcm_lock_reg2),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h666F6660)) 
    pclk_sel_i_1
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[28] ),
        .I4(pipe_pclk_sel_out),
        .O(pclk_sel_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    pclk_sel_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pclk_sel_i_1_n_0),
        .Q(pipe_pclk_sel_out),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hC8)) 
    phystatus_i_1
       (.I0(phystatus_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I2(phystatus_reg_n_0),
        .O(phystatus_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    phystatus_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(phystatus_i_1_n_0),
        .Q(phystatus_reg_n_0),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE phystatus_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_PHYSTATUS),
        .Q(phystatus_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE phystatus_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(phystatus_reg1),
        .Q(phystatus_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \pipe_rate_fsm[0]_INST_0 
       (.I0(\pipe_rate_fsm[0]_INST_0_i_1_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[23] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[28] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[5] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I5(\FSM_onehot_fsm_reg_n_0_[21] ),
        .O(pipe_rate_fsm[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \pipe_rate_fsm[0]_INST_0_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[29] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[26] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[16] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[24] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I5(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\pipe_rate_fsm[0]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \pipe_rate_fsm[1]_INST_0 
       (.I0(\pipe_rate_fsm[1]_INST_0_i_1_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[26] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[23] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[15] ),
        .O(pipe_rate_fsm[1]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \pipe_rate_fsm[1]_INST_0_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[25] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[16] ),
        .I3(rate_txsync_start_0),
        .I4(\FSM_onehot_fsm_reg_n_0_[12] ),
        .O(\pipe_rate_fsm[1]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \pipe_rate_fsm[2]_INST_0 
       (.I0(\pipe_rate_fsm[2]_INST_0_i_1_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[12] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[29] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[13] ),
        .I5(\FSM_onehot_fsm_reg_n_0_[26] ),
        .O(pipe_rate_fsm[2]));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \pipe_rate_fsm[2]_INST_0_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(Q[1]),
        .I2(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[8] ),
        .O(\pipe_rate_fsm[2]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \pipe_rate_fsm[3]_INST_0 
       (.I0(\FSM_onehot_fsm_reg_n_0_[23] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[20] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[28] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[27] ),
        .I4(\pipe_rate_fsm[4]_INST_0_i_1_n_0 ),
        .I5(\pipe_rate_fsm[3]_INST_0_i_1_n_0 ),
        .O(pipe_rate_fsm[3]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \pipe_rate_fsm[3]_INST_0_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[24] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[25] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[8] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I4(Q[1]),
        .I5(\FSM_onehot_fsm_reg_n_0_[4] ),
        .O(\pipe_rate_fsm[3]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \pipe_rate_fsm[4]_INST_0 
       (.I0(\FSM_onehot_fsm_reg_n_0_[24] ),
        .I1(\pipe_rate_fsm[4]_INST_0_i_1_n_0 ),
        .I2(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[20] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[5] ),
        .I5(Q[1]),
        .O(pipe_rate_fsm[4]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \pipe_rate_fsm[4]_INST_0_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[16] ),
        .I1(rate_txsync_start_0),
        .O(\pipe_rate_fsm[4]_INST_0_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE qplllock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_QPLLLOCK),
        .Q(qplllock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE qplllock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qplllock_reg1),
        .Q(qplllock_reg2),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hBB0FBB00)) 
    qpllpd_i_1__0
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\FSM_onehot_fsm_reg_n_0_[21] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[24] ),
        .I4(QRST_QPLLPD_IN),
        .O(qpllpd_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    qpllpd_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllpd_i_1__0_n_0),
        .Q(QRST_QPLLPD_IN),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hBB0FBB00)) 
    qpllreset_i_1__0
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\FSM_onehot_fsm_reg_n_0_[15] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[20] ),
        .I4(QRST_QPLLRESET_IN),
        .O(qpllreset_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    qpllreset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllreset_i_1__0_n_0),
        .Q(QRST_QPLLRESET_IN),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rate_in_reg1_reg[0]_0 ),
        .Q(rate_in_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rate_in_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_in_reg1[0]),
        .Q(rate_in_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_in_reg1[1]),
        .Q(rate_in_reg2[1]),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0C0C4DFF0C0C0800)) 
    \rate_out[0]_i_1 
       (.I0(gen3_exit_reg_n_0),
        .I1(rate_in_reg2[0]),
        .I2(rate_in_reg2[1]),
        .I3(\FSM_onehot_fsm_reg_n_0_[28] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[5] ),
        .I5(RXRATE),
        .O(\rate_out[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rate_out_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rate_out[0]_i_1_n_0 ),
        .Q(RXRATE),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hFF008000)) 
    ratedone_i_1
       (.I0(rxratedone_reg_n_0),
        .I1(phystatus_reg_n_0),
        .I2(txratedone_reg_n_0),
        .I3(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I4(ratedone_reg_n_0),
        .O(ratedone_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    ratedone_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(ratedone_i_1_n_0),
        .Q(ratedone_reg_n_0),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b1),
        .Q(resetovrd_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(resetovrd_done_reg1),
        .Q(resetovrd_done_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_IDLE),
        .Q(rst_idle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rst_idle_reg1),
        .Q(rst_idle_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxpmaresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxpmaresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxpmaresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxpmaresetdone_reg1),
        .Q(rxpmaresetdone_reg2),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hC8)) 
    rxratedone_i_1
       (.I0(rxratedone_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I2(rxratedone_reg_n_0),
        .O(rxratedone_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxratedone_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxratedone_i_1_n_0),
        .Q(rxratedone_reg_n_0),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxratedone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_RXRATEDONE),
        .Q(rxratedone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxratedone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxratedone_reg1),
        .Q(rxratedone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_RXRESETDONE),
        .Q(rxresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxresetdone_reg1),
        .Q(rxresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxsync_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsync_done_reg1),
        .Q(rxsync_done_reg2),
        .R(RST_CPLLRESET));
  LUT4 #(
    .INIT(16'h4F40)) 
    \sysclksel[0]_i_1 
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\FSM_onehot_fsm_reg_n_0_[26] ),
        .I3(RXSYSCLKSEL),
        .O(\sysclksel[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sysclksel_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\sysclksel[0]_i_1_n_0 ),
        .Q(RXSYSCLKSEL),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT5 #(
    .INIT(32'hA2222222)) 
    \txdata_wait_cnt[0]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I1(txdata_wait_cnt_reg__0[0]),
        .I2(txdata_wait_cnt_reg__0[1]),
        .I3(txdata_wait_cnt_reg__0[2]),
        .I4(txdata_wait_cnt_reg__0[3]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT5 #(
    .INIT(32'hA8282828)) 
    \txdata_wait_cnt[1]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I1(txdata_wait_cnt_reg__0[0]),
        .I2(txdata_wait_cnt_reg__0[1]),
        .I3(txdata_wait_cnt_reg__0[2]),
        .I4(txdata_wait_cnt_reg__0[3]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT5 #(
    .INIT(32'hAA802A80)) 
    \txdata_wait_cnt[2]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I1(txdata_wait_cnt_reg__0[0]),
        .I2(txdata_wait_cnt_reg__0[1]),
        .I3(txdata_wait_cnt_reg__0[2]),
        .I4(txdata_wait_cnt_reg__0[3]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT5 #(
    .INIT(32'hAAAA8000)) 
    \txdata_wait_cnt[3]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I1(txdata_wait_cnt_reg__0[0]),
        .I2(txdata_wait_cnt_reg__0[1]),
        .I3(txdata_wait_cnt_reg__0[2]),
        .I4(txdata_wait_cnt_reg__0[3]),
        .O(p_0_in__0[3]));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(txdata_wait_cnt_reg__0[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(txdata_wait_cnt_reg__0[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(txdata_wait_cnt_reg__0[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(txdata_wait_cnt_reg__0[3]),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hF200F2FFF200F200)) 
    txpmareset_i_1
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(gen3_exit_reg_n_0),
        .I3(\FSM_onehot_fsm_reg_n_0_[12] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[23] ),
        .I5(rate_txpmareset_0),
        .O(txpmareset_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txpmareset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpmareset_i_1_n_0),
        .Q(rate_txpmareset_0),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hC8)) 
    txratedone_i_1
       (.I0(txratedone_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I2(txratedone_reg_n_0),
        .O(txratedone_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txratedone_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txratedone_i_1_n_0),
        .Q(txratedone_reg_n_0),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txratedone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_TXRATEDONE),
        .Q(txratedone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txratedone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txratedone_reg1),
        .Q(txratedone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_TXRESETDONE),
        .Q(txresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txresetdone_reg1),
        .Q(txresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_TXSYNC_DONE),
        .Q(txsync_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_done_reg1),
        .Q(txsync_done_reg2),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'hE)) 
    txsync_start_reg1_i_1
       (.I0(rate_txsync_start_0),
        .I1(RST_TXSYNC_START),
        .O(SYNC_TXSYNC_START));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pipe_rate" *) 
module pcie_7x_0_pcie_7x_0_pipe_rate_24
   (SYNC_TXSYNC_START,
    QPLL_DRP_GEN3,
    rate_gen3_1,
    rxchbonden_1,
    Q,
    RATE_DRP_START,
    RATE_DRP_X16X20_MODE,
    RXRATE,
    pipe_rate_fsm,
    rate_txpmareset_1,
    pipe_pclk_sel_out,
    QRST_QPLLPD_IN,
    QRST_QPLLRESET_IN,
    RXSYSCLKSEL,
    rate_cpllreset_1,
    rate_cpllpd_1,
    RST_TXSYNC_START,
    USER_RATE_GEN3,
    rate_gen3_3,
    rate_gen3_2,
    RST_CPLLRESET,
    pipe_pclk_in,
    RATE_PHYSTATUS,
    RATE_RXRATEDONE,
    RATE_TXRATEDONE,
    \rate_in_reg1_reg[0]_0 ,
    RATE_CPLLLOCK,
    RATE_QPLLLOCK,
    RATE_DRP_DONE,
    pipe_mmcm_lock_in,
    USER_TXRESETDONE,
    USER_RXRESETDONE,
    RATE_TXSYNC_DONE,
    RST_IDLE,
    user_active_lane,
    out,
    \FSM_onehot_fsm_reg[20]_0 );
  output SYNC_TXSYNC_START;
  output QPLL_DRP_GEN3;
  output rate_gen3_1;
  output rxchbonden_1;
  output [1:0]Q;
  output RATE_DRP_START;
  output RATE_DRP_X16X20_MODE;
  output [0:0]RXRATE;
  output [4:0]pipe_rate_fsm;
  output rate_txpmareset_1;
  output [0:0]pipe_pclk_sel_out;
  output [0:0]QRST_QPLLPD_IN;
  output [0:0]QRST_QPLLRESET_IN;
  output [0:0]RXSYSCLKSEL;
  output rate_cpllreset_1;
  output rate_cpllpd_1;
  input RST_TXSYNC_START;
  input USER_RATE_GEN3;
  input rate_gen3_3;
  input rate_gen3_2;
  input RST_CPLLRESET;
  input pipe_pclk_in;
  input RATE_PHYSTATUS;
  input RATE_RXRATEDONE;
  input RATE_TXRATEDONE;
  input [0:0]\rate_in_reg1_reg[0]_0 ;
  input RATE_CPLLLOCK;
  input RATE_QPLLLOCK;
  input RATE_DRP_DONE;
  input pipe_mmcm_lock_in;
  input USER_TXRESETDONE;
  input USER_RXRESETDONE;
  input RATE_TXSYNC_DONE;
  input RST_IDLE;
  input [0:0]user_active_lane;
  input out;
  input \FSM_onehot_fsm_reg[20]_0 ;

  wire \FSM_onehot_fsm[0]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm[0]_i_2__0_n_0 ;
  wire \FSM_onehot_fsm[12]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm[13]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm[13]_i_2__0_n_0 ;
  wire \FSM_onehot_fsm[14]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm[16]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm[18]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm[1]_i_1__3_n_0 ;
  wire \FSM_onehot_fsm[20]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm[21]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm[23]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm[25]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm[25]_i_2__0_n_0 ;
  wire \FSM_onehot_fsm[27]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm[28]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm[29]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm[4]_i_1__3_n_0 ;
  wire \FSM_onehot_fsm[6]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm[7]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm[7]_i_2__0_n_0 ;
  wire \FSM_onehot_fsm[7]_i_3__0_n_0 ;
  wire \FSM_onehot_fsm[8]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm_reg[20]_0 ;
  wire \FSM_onehot_fsm_reg_n_0_[12] ;
  wire \FSM_onehot_fsm_reg_n_0_[13] ;
  wire \FSM_onehot_fsm_reg_n_0_[14] ;
  wire \FSM_onehot_fsm_reg_n_0_[15] ;
  wire \FSM_onehot_fsm_reg_n_0_[16] ;
  wire \FSM_onehot_fsm_reg_n_0_[1] ;
  wire \FSM_onehot_fsm_reg_n_0_[20] ;
  wire \FSM_onehot_fsm_reg_n_0_[21] ;
  wire \FSM_onehot_fsm_reg_n_0_[23] ;
  wire \FSM_onehot_fsm_reg_n_0_[24] ;
  wire \FSM_onehot_fsm_reg_n_0_[25] ;
  wire \FSM_onehot_fsm_reg_n_0_[26] ;
  wire \FSM_onehot_fsm_reg_n_0_[27] ;
  wire \FSM_onehot_fsm_reg_n_0_[28] ;
  wire \FSM_onehot_fsm_reg_n_0_[29] ;
  wire \FSM_onehot_fsm_reg_n_0_[4] ;
  wire \FSM_onehot_fsm_reg_n_0_[5] ;
  wire \FSM_onehot_fsm_reg_n_0_[7] ;
  wire \FSM_onehot_fsm_reg_n_0_[8] ;
  wire [1:0]Q;
  wire QPLL_DRP_GEN3;
  wire [0:0]QRST_QPLLPD_IN;
  wire [0:0]QRST_QPLLRESET_IN;
  wire RATE_CPLLLOCK;
  wire RATE_DRP_DONE;
  wire RATE_DRP_START;
  wire RATE_DRP_X16X20_MODE;
  wire RATE_PHYSTATUS;
  wire RATE_QPLLLOCK;
  wire RATE_RXRATEDONE;
  wire RATE_TXRATEDONE;
  wire RATE_TXSYNC_DONE;
  wire RST_CPLLRESET;
  wire RST_IDLE;
  wire RST_TXSYNC_START;
  wire [0:0]RXRATE;
  wire [0:0]RXSYSCLKSEL;
  wire SYNC_TXSYNC_START;
  wire USER_RATE_GEN3;
  wire USER_RXRESETDONE;
  wire USER_TXRESETDONE;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire cplllock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire cplllock_reg2;
  wire cpllpd_i_1__0_n_0;
  wire cpllreset_i_1__1_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire drp_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire drp_done_reg2;
  wire drp_start;
  wire drp_x16x20_mode;
  wire fsm20_out;
  wire gen3_exit_i_1__0_n_0;
  wire gen3_exit_reg_n_0;
  wire gen3_i_1__0_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg2;
  wire out;
  wire [3:0]p_0_in__0;
  wire pclk_sel_i_1__0_n_0;
  wire phystatus_i_1__0_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire phystatus_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire phystatus_reg2;
  wire phystatus_reg_n_0;
  wire pipe_mmcm_lock_in;
  wire pipe_pclk_in;
  wire [0:0]pipe_pclk_sel_out;
  wire [4:0]pipe_rate_fsm;
  wire \pipe_rate_fsm[5]_INST_0_i_1_n_0 ;
  wire \pipe_rate_fsm[6]_INST_0_i_1_n_0 ;
  wire \pipe_rate_fsm[7]_INST_0_i_1_n_0 ;
  wire \pipe_rate_fsm[8]_INST_0_i_1_n_0 ;
  wire \pipe_rate_fsm[9]_INST_0_i_1_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire qplllock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire qplllock_reg2;
  wire qpllpd_i_1__1_n_0;
  wire qpllreset_i_1__1_n_0;
  wire rate_cpllpd_1;
  wire rate_cpllreset_1;
  wire rate_gen3_1;
  wire rate_gen3_2;
  wire rate_gen3_3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_in_reg1;
  wire [0:0]\rate_in_reg1_reg[0]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_in_reg2;
  wire \rate_out[0]_i_1__0_n_0 ;
  wire rate_txpmareset_1;
  wire rate_txsync_start_1;
  wire ratedone_i_1__0_n_0;
  wire ratedone_reg_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_done_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg2;
  wire rxchbonden_1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxpmaresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxpmaresetdone_reg2;
  wire rxratedone_i_1__0_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxratedone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxratedone_reg2;
  wire rxratedone_reg_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_done_reg2;
  wire \sysclksel[0]_i_1__0_n_0 ;
  wire [3:0]txdata_wait_cnt_reg__0__0;
  wire txpmareset_i_1__0_n_0;
  wire txratedone_i_1__0_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txratedone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txratedone_reg2;
  wire txratedone_reg_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_done_reg2;
  wire [0:0]user_active_lane;

  LUT6 #(
    .INIT(64'hAEAEAEAEFFAEAEAE)) 
    \FSM_onehot_fsm[0]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\FSM_onehot_fsm[0]_i_2__0_n_0 ),
        .I3(fsm20_out),
        .I4(\FSM_onehot_fsm_reg_n_0_[25] ),
        .I5(rst_idle_reg2),
        .O(\FSM_onehot_fsm[0]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \FSM_onehot_fsm[0]_i_2__0 
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg1[1]),
        .I2(rate_in_reg2[0]),
        .I3(rate_in_reg1[0]),
        .O(\FSM_onehot_fsm[0]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'h8A888088)) 
    \FSM_onehot_fsm[0]_i_3__0 
       (.I0(drp_done_reg2),
        .I1(cplllock_reg2),
        .I2(rate_in_reg2[0]),
        .I3(rate_in_reg2[1]),
        .I4(qplllock_reg2),
        .O(fsm20_out));
  LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
    \FSM_onehot_fsm[12]_i_1__0 
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(rst_idle_reg2),
        .I3(\FSM_onehot_fsm[13]_i_2__0_n_0 ),
        .I4(drp_done_reg2),
        .I5(\FSM_onehot_fsm_reg_n_0_[29] ),
        .O(\FSM_onehot_fsm[12]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFB000B000B000)) 
    \FSM_onehot_fsm[13]_i_1__1 
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(rst_idle_reg2),
        .I3(\FSM_onehot_fsm[13]_i_2__0_n_0 ),
        .I4(drp_done_reg2),
        .I5(\FSM_onehot_fsm_reg_n_0_[13] ),
        .O(\FSM_onehot_fsm[13]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hBA8A0000)) 
    \FSM_onehot_fsm[13]_i_2__0 
       (.I0(cplllock_reg2),
        .I1(rate_in_reg2[0]),
        .I2(rate_in_reg2[1]),
        .I3(qplllock_reg2),
        .I4(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[13]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00020000)) 
    \FSM_onehot_fsm[14]_i_1__1 
       (.I0(user_active_lane),
        .I1(ratedone_reg_n_0),
        .I2(\FSM_onehot_fsm[25]_i_2__0_n_0 ),
        .I3(gen3_exit_reg_n_0),
        .I4(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I5(\FSM_onehot_fsm_reg_n_0_[5] ),
        .O(\FSM_onehot_fsm[14]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'h0E)) 
    \FSM_onehot_fsm[16]_i_1__0 
       (.I0(rate_txsync_start_1),
        .I1(\FSM_onehot_fsm_reg_n_0_[16] ),
        .I2(txsync_done_reg2),
        .O(\FSM_onehot_fsm[16]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \FSM_onehot_fsm[18]_i_1__0 
       (.I0(txsync_done_reg2),
        .I1(rate_txsync_start_1),
        .I2(\FSM_onehot_fsm_reg_n_0_[24] ),
        .O(\FSM_onehot_fsm[18]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF04F70000)) 
    \FSM_onehot_fsm[1]_i_1__3 
       (.I0(qplllock_reg2),
        .I1(rate_in_reg2[1]),
        .I2(rate_in_reg2[0]),
        .I3(cplllock_reg2),
        .I4(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I5(\FSM_onehot_fsm_reg_n_0_[15] ),
        .O(\FSM_onehot_fsm[1]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAA8AAA8AAA8)) 
    \FSM_onehot_fsm[20]_i_1__0 
       (.I0(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I1(gen3_exit_reg_n_0),
        .I2(\FSM_onehot_fsm[25]_i_2__0_n_0 ),
        .I3(ratedone_reg_n_0),
        .I4(out),
        .I5(\FSM_onehot_fsm_reg[20]_0 ),
        .O(\FSM_onehot_fsm[20]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h0808A208)) 
    \FSM_onehot_fsm[21]_i_1__0 
       (.I0(Q[0]),
        .I1(rate_in_reg2[1]),
        .I2(rate_in_reg2[0]),
        .I3(rate_in_reg1[1]),
        .I4(rate_in_reg1[0]),
        .O(\FSM_onehot_fsm[21]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8088800000000000)) 
    \FSM_onehot_fsm[23]_i_1__0 
       (.I0(rst_idle_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[25] ),
        .I2(qplllock_reg2),
        .I3(\FSM_onehot_fsm[25]_i_2__0_n_0 ),
        .I4(cplllock_reg2),
        .I5(drp_done_reg2),
        .O(\FSM_onehot_fsm[23]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h333FFF3F22222222)) 
    \FSM_onehot_fsm[25]_i_1__0 
       (.I0(\FSM_onehot_fsm_reg_n_0_[28] ),
        .I1(drp_done_reg2),
        .I2(cplllock_reg2),
        .I3(\FSM_onehot_fsm[25]_i_2__0_n_0 ),
        .I4(qplllock_reg2),
        .I5(\FSM_onehot_fsm_reg_n_0_[25] ),
        .O(\FSM_onehot_fsm[25]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_onehot_fsm[25]_i_2__0 
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .O(\FSM_onehot_fsm[25]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'hFF8A)) 
    \FSM_onehot_fsm[27]_i_1__0 
       (.I0(\FSM_onehot_fsm_reg_n_0_[27] ),
        .I1(rxpmaresetdone_reg2),
        .I2(mmcm_lock_reg2),
        .I3(\FSM_onehot_fsm_reg_n_0_[26] ),
        .O(\FSM_onehot_fsm[27]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hFF404040)) 
    \FSM_onehot_fsm[28]_i_1__0 
       (.I0(rxpmaresetdone_reg2),
        .I1(mmcm_lock_reg2),
        .I2(\FSM_onehot_fsm_reg_n_0_[27] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[28] ),
        .I4(drp_done_reg2),
        .O(\FSM_onehot_fsm[28]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'h0E)) 
    \FSM_onehot_fsm[29]_i_1__0 
       (.I0(\FSM_onehot_fsm_reg_n_0_[13] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[29] ),
        .I2(drp_done_reg2),
        .O(\FSM_onehot_fsm[29]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \FSM_onehot_fsm[4]_i_1__3 
       (.I0(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I1(txdata_wait_cnt_reg__0__0[0]),
        .I2(txdata_wait_cnt_reg__0__0[1]),
        .I3(txdata_wait_cnt_reg__0__0[2]),
        .I4(txdata_wait_cnt_reg__0__0[3]),
        .O(\FSM_onehot_fsm[4]_i_1__3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_fsm[6]_i_1__0 
       (.I0(\FSM_onehot_fsm_reg_n_0_[16] ),
        .I1(txsync_done_reg2),
        .O(\FSM_onehot_fsm[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFAAEBEEAAAAAAAA)) 
    \FSM_onehot_fsm[7]_i_1__1 
       (.I0(\FSM_onehot_fsm[7]_i_2__0_n_0 ),
        .I1(rate_in_reg1[0]),
        .I2(rate_in_reg1[1]),
        .I3(rate_in_reg2[0]),
        .I4(rate_in_reg2[1]),
        .I5(Q[0]),
        .O(\FSM_onehot_fsm[7]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF08FF0000)) 
    \FSM_onehot_fsm[7]_i_2__0 
       (.I0(txresetdone_reg2),
        .I1(rxresetdone_reg2),
        .I2(phystatus_reg2),
        .I3(user_active_lane),
        .I4(\FSM_onehot_fsm_reg_n_0_[8] ),
        .I5(\FSM_onehot_fsm[7]_i_3__0_n_0 ),
        .O(\FSM_onehot_fsm[7]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT5 #(
    .INIT(32'h2AAAAAAA)) 
    \FSM_onehot_fsm[7]_i_3__0 
       (.I0(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I1(txdata_wait_cnt_reg__0__0[0]),
        .I2(txdata_wait_cnt_reg__0__0[1]),
        .I3(txdata_wait_cnt_reg__0__0[2]),
        .I4(txdata_wait_cnt_reg__0__0[3]),
        .O(\FSM_onehot_fsm[7]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFF7000000)) 
    \FSM_onehot_fsm[8]_i_1__1 
       (.I0(txresetdone_reg2),
        .I1(rxresetdone_reg2),
        .I2(phystatus_reg2),
        .I3(user_active_lane),
        .I4(\FSM_onehot_fsm_reg_n_0_[8] ),
        .I5(\FSM_onehot_fsm_reg_n_0_[23] ),
        .O(\FSM_onehot_fsm[8]_i_1__1_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_fsm_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[12]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[12] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[13]_i_1__1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[13] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[14]_i_1__1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[14] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_reg_n_0_[21] ),
        .Q(\FSM_onehot_fsm_reg_n_0_[15] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[16]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[16] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[18] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[18]_i_1__0_n_0 ),
        .Q(rate_txsync_start_1),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[1]_i_1__3_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[1] ),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[20] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[20]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[20] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[21] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[21]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[21] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[23] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[23]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[23] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[24] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_reg_n_0_[20] ),
        .Q(\FSM_onehot_fsm_reg_n_0_[24] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[25] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[25]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[25] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[26] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_reg_n_0_[12] ),
        .Q(\FSM_onehot_fsm_reg_n_0_[26] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[27] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[27]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[27] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[28] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[28]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[28] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[29] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[29]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[29] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[4]_i_1__3_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_reg_n_0_[4] ),
        .Q(\FSM_onehot_fsm_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[6]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[7]_i_1__1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[7] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[8]_i_1__1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[8] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE cplllock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_CPLLLOCK),
        .Q(cplllock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE cplllock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cplllock_reg1),
        .Q(cplllock_reg2),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h440F4400)) 
    cpllpd_i_1__0
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\FSM_onehot_fsm_reg_n_0_[21] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[24] ),
        .I4(rate_cpllpd_1),
        .O(cpllpd_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    cpllpd_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cpllpd_i_1__0_n_0),
        .Q(rate_cpllpd_1),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h440F4400)) 
    cpllreset_i_1__1
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\FSM_onehot_fsm_reg_n_0_[15] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[20] ),
        .I4(rate_cpllreset_1),
        .O(cpllreset_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    cpllreset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cpllreset_i_1__1_n_0),
        .Q(rate_cpllreset_1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE drp_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_DRP_DONE),
        .Q(drp_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE drp_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_done_reg1),
        .Q(drp_done_reg2),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'hE)) 
    drp_start_i_1__0
       (.I0(\FSM_onehot_fsm_reg_n_0_[13] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[28] ),
        .O(drp_start));
  FDRE #(
    .INIT(1'b0)) 
    drp_start_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_start),
        .Q(RATE_DRP_START),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'hE)) 
    drp_x16x20_mode_i_1__0
       (.I0(\FSM_onehot_fsm_reg_n_0_[29] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[13] ),
        .O(drp_x16x20_mode));
  FDRE #(
    .INIT(1'b0)) 
    drp_x16x20_mode_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_x16x20_mode),
        .Q(RATE_DRP_X16X20_MODE),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hDF5F55D7080A0000)) 
    gen3_exit_i_1__0
       (.I0(Q[0]),
        .I1(rate_in_reg1[0]),
        .I2(rate_in_reg2[0]),
        .I3(rate_in_reg1[1]),
        .I4(rate_in_reg2[1]),
        .I5(gen3_exit_reg_n_0),
        .O(gen3_exit_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gen3_exit_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_exit_i_1__0_n_0),
        .Q(gen3_exit_reg_n_0),
        .R(RST_CPLLRESET));
  LUT4 #(
    .INIT(16'h4F40)) 
    gen3_i_1__0
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\FSM_onehot_fsm_reg_n_0_[28] ),
        .I3(rate_gen3_1),
        .O(gen3_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gen3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_i_1__0_n_0),
        .Q(rate_gen3_1),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    gen3_reg1_i_1
       (.I0(rate_gen3_1),
        .I1(USER_RATE_GEN3),
        .I2(rate_gen3_3),
        .I3(rate_gen3_2),
        .O(QPLL_DRP_GEN3));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gtx_channel.gtxe2_channel_i_i_5__0 
       (.I0(rate_gen3_1),
        .O(rxchbonden_1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_mmcm_lock_in),
        .Q(mmcm_lock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(mmcm_lock_reg1),
        .Q(mmcm_lock_reg2),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h666F6660)) 
    pclk_sel_i_1__0
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[28] ),
        .I4(pipe_pclk_sel_out),
        .O(pclk_sel_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    pclk_sel_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pclk_sel_i_1__0_n_0),
        .Q(pipe_pclk_sel_out),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hC8)) 
    phystatus_i_1__0
       (.I0(phystatus_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I2(phystatus_reg_n_0),
        .O(phystatus_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    phystatus_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(phystatus_i_1__0_n_0),
        .Q(phystatus_reg_n_0),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE phystatus_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_PHYSTATUS),
        .Q(phystatus_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE phystatus_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(phystatus_reg1),
        .Q(phystatus_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \pipe_rate_fsm[5]_INST_0 
       (.I0(\pipe_rate_fsm[5]_INST_0_i_1_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[23] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[28] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[5] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I5(\FSM_onehot_fsm_reg_n_0_[21] ),
        .O(pipe_rate_fsm[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \pipe_rate_fsm[5]_INST_0_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[29] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[26] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[16] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[24] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I5(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\pipe_rate_fsm[5]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \pipe_rate_fsm[6]_INST_0 
       (.I0(\pipe_rate_fsm[6]_INST_0_i_1_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[26] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[23] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[15] ),
        .O(pipe_rate_fsm[1]));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \pipe_rate_fsm[6]_INST_0_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[25] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[16] ),
        .I3(rate_txsync_start_1),
        .I4(\FSM_onehot_fsm_reg_n_0_[12] ),
        .O(\pipe_rate_fsm[6]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \pipe_rate_fsm[7]_INST_0 
       (.I0(\pipe_rate_fsm[7]_INST_0_i_1_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[12] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[29] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[13] ),
        .I5(\FSM_onehot_fsm_reg_n_0_[26] ),
        .O(pipe_rate_fsm[2]));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \pipe_rate_fsm[7]_INST_0_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(Q[1]),
        .I2(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[8] ),
        .O(\pipe_rate_fsm[7]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \pipe_rate_fsm[8]_INST_0 
       (.I0(\FSM_onehot_fsm_reg_n_0_[23] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[20] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[28] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[27] ),
        .I4(\pipe_rate_fsm[9]_INST_0_i_1_n_0 ),
        .I5(\pipe_rate_fsm[8]_INST_0_i_1_n_0 ),
        .O(pipe_rate_fsm[3]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \pipe_rate_fsm[8]_INST_0_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[24] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[25] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[8] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I4(Q[1]),
        .I5(\FSM_onehot_fsm_reg_n_0_[4] ),
        .O(\pipe_rate_fsm[8]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \pipe_rate_fsm[9]_INST_0 
       (.I0(\FSM_onehot_fsm_reg_n_0_[24] ),
        .I1(\pipe_rate_fsm[9]_INST_0_i_1_n_0 ),
        .I2(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[20] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[5] ),
        .I5(Q[1]),
        .O(pipe_rate_fsm[4]));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \pipe_rate_fsm[9]_INST_0_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[16] ),
        .I1(rate_txsync_start_1),
        .O(\pipe_rate_fsm[9]_INST_0_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE qplllock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_QPLLLOCK),
        .Q(qplllock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE qplllock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qplllock_reg1),
        .Q(qplllock_reg2),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hBB0FBB00)) 
    qpllpd_i_1__1
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\FSM_onehot_fsm_reg_n_0_[21] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[24] ),
        .I4(QRST_QPLLPD_IN),
        .O(qpllpd_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    qpllpd_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllpd_i_1__1_n_0),
        .Q(QRST_QPLLPD_IN),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hBB0FBB00)) 
    qpllreset_i_1__1
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\FSM_onehot_fsm_reg_n_0_[15] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[20] ),
        .I4(QRST_QPLLRESET_IN),
        .O(qpllreset_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    qpllreset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllreset_i_1__1_n_0),
        .Q(QRST_QPLLRESET_IN),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rate_in_reg1_reg[0]_0 ),
        .Q(rate_in_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rate_in_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_in_reg1[0]),
        .Q(rate_in_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_in_reg1[1]),
        .Q(rate_in_reg2[1]),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0C0C4DFF0C0C0800)) 
    \rate_out[0]_i_1__0 
       (.I0(gen3_exit_reg_n_0),
        .I1(rate_in_reg2[0]),
        .I2(rate_in_reg2[1]),
        .I3(\FSM_onehot_fsm_reg_n_0_[28] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[5] ),
        .I5(RXRATE),
        .O(\rate_out[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rate_out_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rate_out[0]_i_1__0_n_0 ),
        .Q(RXRATE),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hFF008000)) 
    ratedone_i_1__0
       (.I0(rxratedone_reg_n_0),
        .I1(phystatus_reg_n_0),
        .I2(txratedone_reg_n_0),
        .I3(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I4(ratedone_reg_n_0),
        .O(ratedone_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    ratedone_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(ratedone_i_1__0_n_0),
        .Q(ratedone_reg_n_0),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b1),
        .Q(resetovrd_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(resetovrd_done_reg1),
        .Q(resetovrd_done_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_IDLE),
        .Q(rst_idle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rst_idle_reg1),
        .Q(rst_idle_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxpmaresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxpmaresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxpmaresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxpmaresetdone_reg1),
        .Q(rxpmaresetdone_reg2),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hC8)) 
    rxratedone_i_1__0
       (.I0(rxratedone_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I2(rxratedone_reg_n_0),
        .O(rxratedone_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxratedone_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxratedone_i_1__0_n_0),
        .Q(rxratedone_reg_n_0),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxratedone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_RXRATEDONE),
        .Q(rxratedone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxratedone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxratedone_reg1),
        .Q(rxratedone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_RXRESETDONE),
        .Q(rxresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxresetdone_reg1),
        .Q(rxresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxsync_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsync_done_reg1),
        .Q(rxsync_done_reg2),
        .R(RST_CPLLRESET));
  LUT4 #(
    .INIT(16'h4F40)) 
    \sysclksel[0]_i_1__0 
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\FSM_onehot_fsm_reg_n_0_[26] ),
        .I3(RXSYSCLKSEL),
        .O(\sysclksel[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sysclksel_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\sysclksel[0]_i_1__0_n_0 ),
        .Q(RXSYSCLKSEL),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT5 #(
    .INIT(32'hA2222222)) 
    \txdata_wait_cnt[0]_i_1__0 
       (.I0(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I1(txdata_wait_cnt_reg__0__0[0]),
        .I2(txdata_wait_cnt_reg__0__0[1]),
        .I3(txdata_wait_cnt_reg__0__0[2]),
        .I4(txdata_wait_cnt_reg__0__0[3]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT5 #(
    .INIT(32'hA8282828)) 
    \txdata_wait_cnt[1]_i_1__0 
       (.I0(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I1(txdata_wait_cnt_reg__0__0[0]),
        .I2(txdata_wait_cnt_reg__0__0[1]),
        .I3(txdata_wait_cnt_reg__0__0[2]),
        .I4(txdata_wait_cnt_reg__0__0[3]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT5 #(
    .INIT(32'hAA802A80)) 
    \txdata_wait_cnt[2]_i_1__0 
       (.I0(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I1(txdata_wait_cnt_reg__0__0[0]),
        .I2(txdata_wait_cnt_reg__0__0[1]),
        .I3(txdata_wait_cnt_reg__0__0[2]),
        .I4(txdata_wait_cnt_reg__0__0[3]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT5 #(
    .INIT(32'hAAAA8000)) 
    \txdata_wait_cnt[3]_i_1__0 
       (.I0(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I1(txdata_wait_cnt_reg__0__0[0]),
        .I2(txdata_wait_cnt_reg__0__0[1]),
        .I3(txdata_wait_cnt_reg__0__0[2]),
        .I4(txdata_wait_cnt_reg__0__0[3]),
        .O(p_0_in__0[3]));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(txdata_wait_cnt_reg__0__0[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(txdata_wait_cnt_reg__0__0[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(txdata_wait_cnt_reg__0__0[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(txdata_wait_cnt_reg__0__0[3]),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hF200F2FFF200F200)) 
    txpmareset_i_1__0
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(gen3_exit_reg_n_0),
        .I3(\FSM_onehot_fsm_reg_n_0_[12] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[23] ),
        .I5(rate_txpmareset_1),
        .O(txpmareset_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txpmareset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpmareset_i_1__0_n_0),
        .Q(rate_txpmareset_1),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hC8)) 
    txratedone_i_1__0
       (.I0(txratedone_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I2(txratedone_reg_n_0),
        .O(txratedone_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txratedone_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txratedone_i_1__0_n_0),
        .Q(txratedone_reg_n_0),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txratedone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_TXRATEDONE),
        .Q(txratedone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txratedone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txratedone_reg1),
        .Q(txratedone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_TXRESETDONE),
        .Q(txresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txresetdone_reg1),
        .Q(txresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_TXSYNC_DONE),
        .Q(txsync_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_done_reg1),
        .Q(txsync_done_reg2),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'hE)) 
    txsync_start_reg1_i_1__0
       (.I0(rate_txsync_start_1),
        .I1(RST_TXSYNC_START),
        .O(SYNC_TXSYNC_START));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pipe_rate" *) 
module pcie_7x_0_pcie_7x_0_pipe_rate_30
   (SYNC_TXSYNC_START,
    rxchbonden_2,
    rate_gen3_2,
    Q,
    RATE_DRP_START,
    RATE_DRP_X16X20_MODE,
    RXRATE,
    pipe_rate_fsm,
    rate_txpmareset_2,
    pipe_pclk_sel_out,
    QRST_QPLLPD_IN,
    QRST_QPLLRESET_IN,
    RXSYSCLKSEL,
    rate_cpllreset_2,
    rate_cpllpd_2,
    RST_TXSYNC_START,
    RST_CPLLRESET,
    pipe_pclk_in,
    RATE_PHYSTATUS,
    RATE_RXRATEDONE,
    RATE_TXRATEDONE,
    \rate_in_reg1_reg[0]_0 ,
    RATE_CPLLLOCK,
    RATE_QPLLLOCK,
    RATE_DRP_DONE,
    pipe_mmcm_lock_in,
    USER_TXRESETDONE,
    USER_RXRESETDONE,
    RATE_TXSYNC_DONE,
    RST_IDLE,
    user_active_lane,
    out,
    \FSM_onehot_fsm_reg[20]_0 );
  output SYNC_TXSYNC_START;
  output rxchbonden_2;
  output rate_gen3_2;
  output [1:0]Q;
  output RATE_DRP_START;
  output RATE_DRP_X16X20_MODE;
  output [0:0]RXRATE;
  output [4:0]pipe_rate_fsm;
  output rate_txpmareset_2;
  output [0:0]pipe_pclk_sel_out;
  output [0:0]QRST_QPLLPD_IN;
  output [0:0]QRST_QPLLRESET_IN;
  output [0:0]RXSYSCLKSEL;
  output rate_cpllreset_2;
  output rate_cpllpd_2;
  input RST_TXSYNC_START;
  input RST_CPLLRESET;
  input pipe_pclk_in;
  input RATE_PHYSTATUS;
  input RATE_RXRATEDONE;
  input RATE_TXRATEDONE;
  input [0:0]\rate_in_reg1_reg[0]_0 ;
  input RATE_CPLLLOCK;
  input RATE_QPLLLOCK;
  input RATE_DRP_DONE;
  input pipe_mmcm_lock_in;
  input USER_TXRESETDONE;
  input USER_RXRESETDONE;
  input RATE_TXSYNC_DONE;
  input RST_IDLE;
  input [0:0]user_active_lane;
  input out;
  input \FSM_onehot_fsm_reg[20]_0 ;

  wire \FSM_onehot_fsm[0]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm[0]_i_2__1_n_0 ;
  wire \FSM_onehot_fsm[12]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm[13]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm[13]_i_2__1_n_0 ;
  wire \FSM_onehot_fsm[14]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm[16]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm[18]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm[1]_i_1__5_n_0 ;
  wire \FSM_onehot_fsm[20]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm[21]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm[23]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm[25]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm[25]_i_2__1_n_0 ;
  wire \FSM_onehot_fsm[27]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm[28]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm[29]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_1__5_n_0 ;
  wire \FSM_onehot_fsm[6]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm[7]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm[7]_i_2__1_n_0 ;
  wire \FSM_onehot_fsm[7]_i_3__1_n_0 ;
  wire \FSM_onehot_fsm[8]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm_reg[20]_0 ;
  wire \FSM_onehot_fsm_reg_n_0_[12] ;
  wire \FSM_onehot_fsm_reg_n_0_[13] ;
  wire \FSM_onehot_fsm_reg_n_0_[14] ;
  wire \FSM_onehot_fsm_reg_n_0_[15] ;
  wire \FSM_onehot_fsm_reg_n_0_[16] ;
  wire \FSM_onehot_fsm_reg_n_0_[1] ;
  wire \FSM_onehot_fsm_reg_n_0_[20] ;
  wire \FSM_onehot_fsm_reg_n_0_[21] ;
  wire \FSM_onehot_fsm_reg_n_0_[23] ;
  wire \FSM_onehot_fsm_reg_n_0_[24] ;
  wire \FSM_onehot_fsm_reg_n_0_[25] ;
  wire \FSM_onehot_fsm_reg_n_0_[26] ;
  wire \FSM_onehot_fsm_reg_n_0_[27] ;
  wire \FSM_onehot_fsm_reg_n_0_[28] ;
  wire \FSM_onehot_fsm_reg_n_0_[29] ;
  wire \FSM_onehot_fsm_reg_n_0_[4] ;
  wire \FSM_onehot_fsm_reg_n_0_[5] ;
  wire \FSM_onehot_fsm_reg_n_0_[7] ;
  wire \FSM_onehot_fsm_reg_n_0_[8] ;
  wire [1:0]Q;
  wire [0:0]QRST_QPLLPD_IN;
  wire [0:0]QRST_QPLLRESET_IN;
  wire RATE_CPLLLOCK;
  wire RATE_DRP_DONE;
  wire RATE_DRP_START;
  wire RATE_DRP_X16X20_MODE;
  wire RATE_PHYSTATUS;
  wire RATE_QPLLLOCK;
  wire RATE_RXRATEDONE;
  wire RATE_TXRATEDONE;
  wire RATE_TXSYNC_DONE;
  wire RST_CPLLRESET;
  wire RST_IDLE;
  wire RST_TXSYNC_START;
  wire [0:0]RXRATE;
  wire [0:0]RXSYSCLKSEL;
  wire SYNC_TXSYNC_START;
  wire USER_RXRESETDONE;
  wire USER_TXRESETDONE;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire cplllock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire cplllock_reg2;
  wire cpllpd_i_1__1_n_0;
  wire cpllreset_i_1__2_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire drp_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire drp_done_reg2;
  wire drp_start;
  wire drp_x16x20_mode;
  wire fsm20_out;
  wire gen3_exit_i_1__1_n_0;
  wire gen3_exit_reg_n_0;
  wire gen3_i_1__1_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg2;
  wire out;
  wire [3:0]p_0_in__0;
  wire pclk_sel_i_1__1_n_0;
  wire phystatus_i_1__1_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire phystatus_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire phystatus_reg2;
  wire phystatus_reg_n_0;
  wire pipe_mmcm_lock_in;
  wire pipe_pclk_in;
  wire [0:0]pipe_pclk_sel_out;
  wire [4:0]pipe_rate_fsm;
  wire \pipe_rate_fsm[10]_INST_0_i_1_n_0 ;
  wire \pipe_rate_fsm[11]_INST_0_i_1_n_0 ;
  wire \pipe_rate_fsm[12]_INST_0_i_1_n_0 ;
  wire \pipe_rate_fsm[13]_INST_0_i_1_n_0 ;
  wire \pipe_rate_fsm[14]_INST_0_i_1_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire qplllock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire qplllock_reg2;
  wire qpllpd_i_1__2_n_0;
  wire qpllreset_i_1__2_n_0;
  wire rate_cpllpd_2;
  wire rate_cpllreset_2;
  wire rate_gen3_2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_in_reg1;
  wire [0:0]\rate_in_reg1_reg[0]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_in_reg2;
  wire \rate_out[0]_i_1__1_n_0 ;
  wire rate_txpmareset_2;
  wire rate_txsync_start_2;
  wire ratedone_i_1__1_n_0;
  wire ratedone_reg_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_done_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg2;
  wire rxchbonden_2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxpmaresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxpmaresetdone_reg2;
  wire rxratedone_i_1__1_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxratedone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxratedone_reg2;
  wire rxratedone_reg_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_done_reg2;
  wire \sysclksel[0]_i_1__1_n_0 ;
  wire [3:0]txdata_wait_cnt_reg__0;
  wire txpmareset_i_1__1_n_0;
  wire txratedone_i_1__1_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txratedone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txratedone_reg2;
  wire txratedone_reg_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_done_reg2;
  wire [0:0]user_active_lane;

  LUT6 #(
    .INIT(64'hAEAEAEAEFFAEAEAE)) 
    \FSM_onehot_fsm[0]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\FSM_onehot_fsm[0]_i_2__1_n_0 ),
        .I3(fsm20_out),
        .I4(\FSM_onehot_fsm_reg_n_0_[25] ),
        .I5(rst_idle_reg2),
        .O(\FSM_onehot_fsm[0]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \FSM_onehot_fsm[0]_i_2__1 
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg1[1]),
        .I2(rate_in_reg2[0]),
        .I3(rate_in_reg1[0]),
        .O(\FSM_onehot_fsm[0]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'h8A888088)) 
    \FSM_onehot_fsm[0]_i_3__1 
       (.I0(drp_done_reg2),
        .I1(cplllock_reg2),
        .I2(rate_in_reg2[0]),
        .I3(rate_in_reg2[1]),
        .I4(qplllock_reg2),
        .O(fsm20_out));
  LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
    \FSM_onehot_fsm[12]_i_1__1 
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(rst_idle_reg2),
        .I3(\FSM_onehot_fsm[13]_i_2__1_n_0 ),
        .I4(drp_done_reg2),
        .I5(\FSM_onehot_fsm_reg_n_0_[29] ),
        .O(\FSM_onehot_fsm[12]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFB000B000B000)) 
    \FSM_onehot_fsm[13]_i_1__2 
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(rst_idle_reg2),
        .I3(\FSM_onehot_fsm[13]_i_2__1_n_0 ),
        .I4(drp_done_reg2),
        .I5(\FSM_onehot_fsm_reg_n_0_[13] ),
        .O(\FSM_onehot_fsm[13]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hBA8A0000)) 
    \FSM_onehot_fsm[13]_i_2__1 
       (.I0(cplllock_reg2),
        .I1(rate_in_reg2[0]),
        .I2(rate_in_reg2[1]),
        .I3(qplllock_reg2),
        .I4(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[13]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00020000)) 
    \FSM_onehot_fsm[14]_i_1__2 
       (.I0(user_active_lane),
        .I1(ratedone_reg_n_0),
        .I2(\FSM_onehot_fsm[25]_i_2__1_n_0 ),
        .I3(gen3_exit_reg_n_0),
        .I4(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I5(\FSM_onehot_fsm_reg_n_0_[5] ),
        .O(\FSM_onehot_fsm[14]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'h0E)) 
    \FSM_onehot_fsm[16]_i_1__1 
       (.I0(rate_txsync_start_2),
        .I1(\FSM_onehot_fsm_reg_n_0_[16] ),
        .I2(txsync_done_reg2),
        .O(\FSM_onehot_fsm[16]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \FSM_onehot_fsm[18]_i_1__1 
       (.I0(txsync_done_reg2),
        .I1(rate_txsync_start_2),
        .I2(\FSM_onehot_fsm_reg_n_0_[24] ),
        .O(\FSM_onehot_fsm[18]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF04F70000)) 
    \FSM_onehot_fsm[1]_i_1__5 
       (.I0(qplllock_reg2),
        .I1(rate_in_reg2[1]),
        .I2(rate_in_reg2[0]),
        .I3(cplllock_reg2),
        .I4(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I5(\FSM_onehot_fsm_reg_n_0_[15] ),
        .O(\FSM_onehot_fsm[1]_i_1__5_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAA8AAA8AAA8)) 
    \FSM_onehot_fsm[20]_i_1__1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I1(gen3_exit_reg_n_0),
        .I2(\FSM_onehot_fsm[25]_i_2__1_n_0 ),
        .I3(ratedone_reg_n_0),
        .I4(out),
        .I5(\FSM_onehot_fsm_reg[20]_0 ),
        .O(\FSM_onehot_fsm[20]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h0808A208)) 
    \FSM_onehot_fsm[21]_i_1__1 
       (.I0(Q[0]),
        .I1(rate_in_reg2[1]),
        .I2(rate_in_reg2[0]),
        .I3(rate_in_reg1[1]),
        .I4(rate_in_reg1[0]),
        .O(\FSM_onehot_fsm[21]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h8088800000000000)) 
    \FSM_onehot_fsm[23]_i_1__1 
       (.I0(rst_idle_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[25] ),
        .I2(qplllock_reg2),
        .I3(\FSM_onehot_fsm[25]_i_2__1_n_0 ),
        .I4(cplllock_reg2),
        .I5(drp_done_reg2),
        .O(\FSM_onehot_fsm[23]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h333FFF3F22222222)) 
    \FSM_onehot_fsm[25]_i_1__1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[28] ),
        .I1(drp_done_reg2),
        .I2(cplllock_reg2),
        .I3(\FSM_onehot_fsm[25]_i_2__1_n_0 ),
        .I4(qplllock_reg2),
        .I5(\FSM_onehot_fsm_reg_n_0_[25] ),
        .O(\FSM_onehot_fsm[25]_i_1__1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_onehot_fsm[25]_i_2__1 
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .O(\FSM_onehot_fsm[25]_i_2__1_n_0 ));
  LUT4 #(
    .INIT(16'hFF8A)) 
    \FSM_onehot_fsm[27]_i_1__1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[27] ),
        .I1(rxpmaresetdone_reg2),
        .I2(mmcm_lock_reg2),
        .I3(\FSM_onehot_fsm_reg_n_0_[26] ),
        .O(\FSM_onehot_fsm[27]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hFF404040)) 
    \FSM_onehot_fsm[28]_i_1__1 
       (.I0(rxpmaresetdone_reg2),
        .I1(mmcm_lock_reg2),
        .I2(\FSM_onehot_fsm_reg_n_0_[27] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[28] ),
        .I4(drp_done_reg2),
        .O(\FSM_onehot_fsm[28]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'h0E)) 
    \FSM_onehot_fsm[29]_i_1__1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[13] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[29] ),
        .I2(drp_done_reg2),
        .O(\FSM_onehot_fsm[29]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \FSM_onehot_fsm[4]_i_1__5 
       (.I0(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I1(txdata_wait_cnt_reg__0[0]),
        .I2(txdata_wait_cnt_reg__0[1]),
        .I3(txdata_wait_cnt_reg__0[2]),
        .I4(txdata_wait_cnt_reg__0[3]),
        .O(\FSM_onehot_fsm[4]_i_1__5_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_fsm[6]_i_1__1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[16] ),
        .I1(txsync_done_reg2),
        .O(\FSM_onehot_fsm[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hAFAAEBEEAAAAAAAA)) 
    \FSM_onehot_fsm[7]_i_1__2 
       (.I0(\FSM_onehot_fsm[7]_i_2__1_n_0 ),
        .I1(rate_in_reg1[0]),
        .I2(rate_in_reg1[1]),
        .I3(rate_in_reg2[0]),
        .I4(rate_in_reg2[1]),
        .I5(Q[0]),
        .O(\FSM_onehot_fsm[7]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF08FF0000)) 
    \FSM_onehot_fsm[7]_i_2__1 
       (.I0(txresetdone_reg2),
        .I1(rxresetdone_reg2),
        .I2(phystatus_reg2),
        .I3(user_active_lane),
        .I4(\FSM_onehot_fsm_reg_n_0_[8] ),
        .I5(\FSM_onehot_fsm[7]_i_3__1_n_0 ),
        .O(\FSM_onehot_fsm[7]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT5 #(
    .INIT(32'h2AAAAAAA)) 
    \FSM_onehot_fsm[7]_i_3__1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I1(txdata_wait_cnt_reg__0[0]),
        .I2(txdata_wait_cnt_reg__0[1]),
        .I3(txdata_wait_cnt_reg__0[2]),
        .I4(txdata_wait_cnt_reg__0[3]),
        .O(\FSM_onehot_fsm[7]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFF7000000)) 
    \FSM_onehot_fsm[8]_i_1__2 
       (.I0(txresetdone_reg2),
        .I1(rxresetdone_reg2),
        .I2(phystatus_reg2),
        .I3(user_active_lane),
        .I4(\FSM_onehot_fsm_reg_n_0_[8] ),
        .I5(\FSM_onehot_fsm_reg_n_0_[23] ),
        .O(\FSM_onehot_fsm[8]_i_1__2_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_fsm_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[12]_i_1__1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[12] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[13]_i_1__2_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[13] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[14]_i_1__2_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[14] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_reg_n_0_[21] ),
        .Q(\FSM_onehot_fsm_reg_n_0_[15] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[16]_i_1__1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[16] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[18] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[18]_i_1__1_n_0 ),
        .Q(rate_txsync_start_2),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[1]_i_1__5_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[1] ),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[20] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[20]_i_1__1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[20] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[21] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[21]_i_1__1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[21] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[23] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[23]_i_1__1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[23] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[24] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_reg_n_0_[20] ),
        .Q(\FSM_onehot_fsm_reg_n_0_[24] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[25] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[25]_i_1__1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[25] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[26] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_reg_n_0_[12] ),
        .Q(\FSM_onehot_fsm_reg_n_0_[26] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[27] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[27]_i_1__1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[27] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[28] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[28]_i_1__1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[28] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[29] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[29]_i_1__1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[29] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[4]_i_1__5_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_reg_n_0_[4] ),
        .Q(\FSM_onehot_fsm_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[6]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[7]_i_1__2_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[7] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[8]_i_1__2_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[8] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE cplllock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_CPLLLOCK),
        .Q(cplllock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE cplllock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cplllock_reg1),
        .Q(cplllock_reg2),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h440F4400)) 
    cpllpd_i_1__1
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\FSM_onehot_fsm_reg_n_0_[21] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[24] ),
        .I4(rate_cpllpd_2),
        .O(cpllpd_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    cpllpd_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cpllpd_i_1__1_n_0),
        .Q(rate_cpllpd_2),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h440F4400)) 
    cpllreset_i_1__2
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\FSM_onehot_fsm_reg_n_0_[15] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[20] ),
        .I4(rate_cpllreset_2),
        .O(cpllreset_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    cpllreset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cpllreset_i_1__2_n_0),
        .Q(rate_cpllreset_2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE drp_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_DRP_DONE),
        .Q(drp_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE drp_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_done_reg1),
        .Q(drp_done_reg2),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT2 #(
    .INIT(4'hE)) 
    drp_start_i_1__1
       (.I0(\FSM_onehot_fsm_reg_n_0_[13] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[28] ),
        .O(drp_start));
  FDRE #(
    .INIT(1'b0)) 
    drp_start_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_start),
        .Q(RATE_DRP_START),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT2 #(
    .INIT(4'hE)) 
    drp_x16x20_mode_i_1__1
       (.I0(\FSM_onehot_fsm_reg_n_0_[29] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[13] ),
        .O(drp_x16x20_mode));
  FDRE #(
    .INIT(1'b0)) 
    drp_x16x20_mode_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_x16x20_mode),
        .Q(RATE_DRP_X16X20_MODE),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hDF5F55D7080A0000)) 
    gen3_exit_i_1__1
       (.I0(Q[0]),
        .I1(rate_in_reg1[0]),
        .I2(rate_in_reg2[0]),
        .I3(rate_in_reg1[1]),
        .I4(rate_in_reg2[1]),
        .I5(gen3_exit_reg_n_0),
        .O(gen3_exit_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gen3_exit_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_exit_i_1__1_n_0),
        .Q(gen3_exit_reg_n_0),
        .R(RST_CPLLRESET));
  LUT4 #(
    .INIT(16'h4F40)) 
    gen3_i_1__1
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\FSM_onehot_fsm_reg_n_0_[28] ),
        .I3(rate_gen3_2),
        .O(gen3_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gen3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_i_1__1_n_0),
        .Q(rate_gen3_2),
        .R(RST_CPLLRESET));
  LUT1 #(
    .INIT(2'h1)) 
    \gtx_channel.gtxe2_channel_i_i_5__1 
       (.I0(rate_gen3_2),
        .O(rxchbonden_2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_mmcm_lock_in),
        .Q(mmcm_lock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(mmcm_lock_reg1),
        .Q(mmcm_lock_reg2),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h666F6660)) 
    pclk_sel_i_1__1
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[28] ),
        .I4(pipe_pclk_sel_out),
        .O(pclk_sel_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    pclk_sel_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pclk_sel_i_1__1_n_0),
        .Q(pipe_pclk_sel_out),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hC8)) 
    phystatus_i_1__1
       (.I0(phystatus_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I2(phystatus_reg_n_0),
        .O(phystatus_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    phystatus_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(phystatus_i_1__1_n_0),
        .Q(phystatus_reg_n_0),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE phystatus_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_PHYSTATUS),
        .Q(phystatus_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE phystatus_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(phystatus_reg1),
        .Q(phystatus_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \pipe_rate_fsm[10]_INST_0 
       (.I0(\pipe_rate_fsm[10]_INST_0_i_1_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[23] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[28] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[5] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I5(\FSM_onehot_fsm_reg_n_0_[21] ),
        .O(pipe_rate_fsm[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \pipe_rate_fsm[10]_INST_0_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[29] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[26] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[16] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[24] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I5(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\pipe_rate_fsm[10]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \pipe_rate_fsm[11]_INST_0 
       (.I0(\pipe_rate_fsm[11]_INST_0_i_1_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[26] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[23] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[15] ),
        .O(pipe_rate_fsm[1]));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \pipe_rate_fsm[11]_INST_0_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[25] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[16] ),
        .I3(rate_txsync_start_2),
        .I4(\FSM_onehot_fsm_reg_n_0_[12] ),
        .O(\pipe_rate_fsm[11]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \pipe_rate_fsm[12]_INST_0 
       (.I0(\pipe_rate_fsm[12]_INST_0_i_1_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[12] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[29] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[13] ),
        .I5(\FSM_onehot_fsm_reg_n_0_[26] ),
        .O(pipe_rate_fsm[2]));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \pipe_rate_fsm[12]_INST_0_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(Q[1]),
        .I2(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[8] ),
        .O(\pipe_rate_fsm[12]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \pipe_rate_fsm[13]_INST_0 
       (.I0(\FSM_onehot_fsm_reg_n_0_[23] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[20] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[28] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[27] ),
        .I4(\pipe_rate_fsm[14]_INST_0_i_1_n_0 ),
        .I5(\pipe_rate_fsm[13]_INST_0_i_1_n_0 ),
        .O(pipe_rate_fsm[3]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \pipe_rate_fsm[13]_INST_0_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[24] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[25] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[8] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I4(Q[1]),
        .I5(\FSM_onehot_fsm_reg_n_0_[4] ),
        .O(\pipe_rate_fsm[13]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \pipe_rate_fsm[14]_INST_0 
       (.I0(\FSM_onehot_fsm_reg_n_0_[24] ),
        .I1(\pipe_rate_fsm[14]_INST_0_i_1_n_0 ),
        .I2(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[20] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[5] ),
        .I5(Q[1]),
        .O(pipe_rate_fsm[4]));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \pipe_rate_fsm[14]_INST_0_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[16] ),
        .I1(rate_txsync_start_2),
        .O(\pipe_rate_fsm[14]_INST_0_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE qplllock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_QPLLLOCK),
        .Q(qplllock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE qplllock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qplllock_reg1),
        .Q(qplllock_reg2),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hBB0FBB00)) 
    qpllpd_i_1__2
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\FSM_onehot_fsm_reg_n_0_[21] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[24] ),
        .I4(QRST_QPLLPD_IN),
        .O(qpllpd_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    qpllpd_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllpd_i_1__2_n_0),
        .Q(QRST_QPLLPD_IN),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hBB0FBB00)) 
    qpllreset_i_1__2
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\FSM_onehot_fsm_reg_n_0_[15] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[20] ),
        .I4(QRST_QPLLRESET_IN),
        .O(qpllreset_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    qpllreset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllreset_i_1__2_n_0),
        .Q(QRST_QPLLRESET_IN),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rate_in_reg1_reg[0]_0 ),
        .Q(rate_in_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rate_in_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_in_reg1[0]),
        .Q(rate_in_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_in_reg1[1]),
        .Q(rate_in_reg2[1]),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0C0C4DFF0C0C0800)) 
    \rate_out[0]_i_1__1 
       (.I0(gen3_exit_reg_n_0),
        .I1(rate_in_reg2[0]),
        .I2(rate_in_reg2[1]),
        .I3(\FSM_onehot_fsm_reg_n_0_[28] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[5] ),
        .I5(RXRATE),
        .O(\rate_out[0]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rate_out_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rate_out[0]_i_1__1_n_0 ),
        .Q(RXRATE),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hFF008000)) 
    ratedone_i_1__1
       (.I0(rxratedone_reg_n_0),
        .I1(phystatus_reg_n_0),
        .I2(txratedone_reg_n_0),
        .I3(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I4(ratedone_reg_n_0),
        .O(ratedone_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    ratedone_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(ratedone_i_1__1_n_0),
        .Q(ratedone_reg_n_0),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b1),
        .Q(resetovrd_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(resetovrd_done_reg1),
        .Q(resetovrd_done_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_IDLE),
        .Q(rst_idle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rst_idle_reg1),
        .Q(rst_idle_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxpmaresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxpmaresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxpmaresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxpmaresetdone_reg1),
        .Q(rxpmaresetdone_reg2),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hC8)) 
    rxratedone_i_1__1
       (.I0(rxratedone_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I2(rxratedone_reg_n_0),
        .O(rxratedone_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxratedone_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxratedone_i_1__1_n_0),
        .Q(rxratedone_reg_n_0),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxratedone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_RXRATEDONE),
        .Q(rxratedone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxratedone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxratedone_reg1),
        .Q(rxratedone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_RXRESETDONE),
        .Q(rxresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxresetdone_reg1),
        .Q(rxresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxsync_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsync_done_reg1),
        .Q(rxsync_done_reg2),
        .R(RST_CPLLRESET));
  LUT4 #(
    .INIT(16'h4F40)) 
    \sysclksel[0]_i_1__1 
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\FSM_onehot_fsm_reg_n_0_[26] ),
        .I3(RXSYSCLKSEL),
        .O(\sysclksel[0]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sysclksel_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\sysclksel[0]_i_1__1_n_0 ),
        .Q(RXSYSCLKSEL),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT5 #(
    .INIT(32'hA2222222)) 
    \txdata_wait_cnt[0]_i_1__1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I1(txdata_wait_cnt_reg__0[0]),
        .I2(txdata_wait_cnt_reg__0[1]),
        .I3(txdata_wait_cnt_reg__0[2]),
        .I4(txdata_wait_cnt_reg__0[3]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT5 #(
    .INIT(32'hA8282828)) 
    \txdata_wait_cnt[1]_i_1__1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I1(txdata_wait_cnt_reg__0[0]),
        .I2(txdata_wait_cnt_reg__0[1]),
        .I3(txdata_wait_cnt_reg__0[2]),
        .I4(txdata_wait_cnt_reg__0[3]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT5 #(
    .INIT(32'hAA802A80)) 
    \txdata_wait_cnt[2]_i_1__1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I1(txdata_wait_cnt_reg__0[0]),
        .I2(txdata_wait_cnt_reg__0[1]),
        .I3(txdata_wait_cnt_reg__0[2]),
        .I4(txdata_wait_cnt_reg__0[3]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT5 #(
    .INIT(32'hAAAA8000)) 
    \txdata_wait_cnt[3]_i_1__1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I1(txdata_wait_cnt_reg__0[0]),
        .I2(txdata_wait_cnt_reg__0[1]),
        .I3(txdata_wait_cnt_reg__0[2]),
        .I4(txdata_wait_cnt_reg__0[3]),
        .O(p_0_in__0[3]));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(txdata_wait_cnt_reg__0[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(txdata_wait_cnt_reg__0[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(txdata_wait_cnt_reg__0[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(txdata_wait_cnt_reg__0[3]),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hF200F2FFF200F200)) 
    txpmareset_i_1__1
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(gen3_exit_reg_n_0),
        .I3(\FSM_onehot_fsm_reg_n_0_[12] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[23] ),
        .I5(rate_txpmareset_2),
        .O(txpmareset_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txpmareset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpmareset_i_1__1_n_0),
        .Q(rate_txpmareset_2),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hC8)) 
    txratedone_i_1__1
       (.I0(txratedone_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I2(txratedone_reg_n_0),
        .O(txratedone_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txratedone_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txratedone_i_1__1_n_0),
        .Q(txratedone_reg_n_0),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txratedone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_TXRATEDONE),
        .Q(txratedone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txratedone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txratedone_reg1),
        .Q(txratedone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_TXRESETDONE),
        .Q(txresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txresetdone_reg1),
        .Q(txresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_TXSYNC_DONE),
        .Q(txsync_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_done_reg1),
        .Q(txsync_done_reg2),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'hE)) 
    txsync_start_reg1_i_1__1
       (.I0(rate_txsync_start_2),
        .I1(RST_TXSYNC_START),
        .O(SYNC_TXSYNC_START));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pipe_rate" *) 
module pcie_7x_0_pcie_7x_0_pipe_rate_36
   (SYNC_TXSYNC_START,
    rxchbonden_3,
    rate_gen3_3,
    Q,
    RATE_DRP_START,
    RATE_DRP_X16X20_MODE,
    RXRATE,
    pipe_rate_fsm,
    rate_txpmareset_3,
    pipe_pclk_sel_out,
    QRST_QPLLPD_IN,
    QRST_QPLLRESET_IN,
    RXSYSCLKSEL,
    rate_cpllreset_3,
    rate_cpllpd_3,
    RST_TXSYNC_START,
    RST_CPLLRESET,
    pipe_pclk_in,
    RATE_PHYSTATUS,
    RATE_RXRATEDONE,
    RATE_TXRATEDONE,
    \rate_in_reg1_reg[0]_0 ,
    RATE_CPLLLOCK,
    QPLL_QPLLLOCK,
    RATE_DRP_DONE,
    pipe_mmcm_lock_in,
    USER_TXRESETDONE,
    USER_RXRESETDONE,
    RATE_TXSYNC_DONE,
    RST_IDLE,
    user_active_lane,
    out,
    \FSM_onehot_fsm_reg[20]_0 );
  output SYNC_TXSYNC_START;
  output rxchbonden_3;
  output rate_gen3_3;
  output [1:0]Q;
  output RATE_DRP_START;
  output RATE_DRP_X16X20_MODE;
  output [0:0]RXRATE;
  output [4:0]pipe_rate_fsm;
  output rate_txpmareset_3;
  output [0:0]pipe_pclk_sel_out;
  output [0:0]QRST_QPLLPD_IN;
  output [0:0]QRST_QPLLRESET_IN;
  output [0:0]RXSYSCLKSEL;
  output rate_cpllreset_3;
  output rate_cpllpd_3;
  input RST_TXSYNC_START;
  input RST_CPLLRESET;
  input pipe_pclk_in;
  input RATE_PHYSTATUS;
  input RATE_RXRATEDONE;
  input RATE_TXRATEDONE;
  input [0:0]\rate_in_reg1_reg[0]_0 ;
  input RATE_CPLLLOCK;
  input QPLL_QPLLLOCK;
  input RATE_DRP_DONE;
  input pipe_mmcm_lock_in;
  input USER_TXRESETDONE;
  input USER_RXRESETDONE;
  input RATE_TXSYNC_DONE;
  input RST_IDLE;
  input [0:0]user_active_lane;
  input out;
  input \FSM_onehot_fsm_reg[20]_0 ;

  wire \FSM_onehot_fsm[0]_i_1__3_n_0 ;
  wire \FSM_onehot_fsm[0]_i_2__2_n_0 ;
  wire \FSM_onehot_fsm[12]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm[13]_i_1__3_n_0 ;
  wire \FSM_onehot_fsm[13]_i_2__2_n_0 ;
  wire \FSM_onehot_fsm[14]_i_1__3_n_0 ;
  wire \FSM_onehot_fsm[16]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm[18]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm[1]_i_1__7_n_0 ;
  wire \FSM_onehot_fsm[20]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm[21]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm[23]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm[25]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm[25]_i_2__2_n_0 ;
  wire \FSM_onehot_fsm[27]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm[28]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm[29]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_1__7_n_0 ;
  wire \FSM_onehot_fsm[6]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm[7]_i_1__3_n_0 ;
  wire \FSM_onehot_fsm[7]_i_2__2_n_0 ;
  wire \FSM_onehot_fsm[7]_i_3__2_n_0 ;
  wire \FSM_onehot_fsm[8]_i_1__3_n_0 ;
  wire \FSM_onehot_fsm_reg[20]_0 ;
  wire \FSM_onehot_fsm_reg_n_0_[12] ;
  wire \FSM_onehot_fsm_reg_n_0_[13] ;
  wire \FSM_onehot_fsm_reg_n_0_[14] ;
  wire \FSM_onehot_fsm_reg_n_0_[15] ;
  wire \FSM_onehot_fsm_reg_n_0_[16] ;
  wire \FSM_onehot_fsm_reg_n_0_[1] ;
  wire \FSM_onehot_fsm_reg_n_0_[20] ;
  wire \FSM_onehot_fsm_reg_n_0_[21] ;
  wire \FSM_onehot_fsm_reg_n_0_[23] ;
  wire \FSM_onehot_fsm_reg_n_0_[24] ;
  wire \FSM_onehot_fsm_reg_n_0_[25] ;
  wire \FSM_onehot_fsm_reg_n_0_[26] ;
  wire \FSM_onehot_fsm_reg_n_0_[27] ;
  wire \FSM_onehot_fsm_reg_n_0_[28] ;
  wire \FSM_onehot_fsm_reg_n_0_[29] ;
  wire \FSM_onehot_fsm_reg_n_0_[4] ;
  wire \FSM_onehot_fsm_reg_n_0_[5] ;
  wire \FSM_onehot_fsm_reg_n_0_[7] ;
  wire \FSM_onehot_fsm_reg_n_0_[8] ;
  wire [1:0]Q;
  wire QPLL_QPLLLOCK;
  wire [0:0]QRST_QPLLPD_IN;
  wire [0:0]QRST_QPLLRESET_IN;
  wire RATE_CPLLLOCK;
  wire RATE_DRP_DONE;
  wire RATE_DRP_START;
  wire RATE_DRP_X16X20_MODE;
  wire RATE_PHYSTATUS;
  wire RATE_RXRATEDONE;
  wire RATE_TXRATEDONE;
  wire RATE_TXSYNC_DONE;
  wire RST_CPLLRESET;
  wire RST_IDLE;
  wire RST_TXSYNC_START;
  wire [0:0]RXRATE;
  wire [0:0]RXSYSCLKSEL;
  wire SYNC_TXSYNC_START;
  wire USER_RXRESETDONE;
  wire USER_TXRESETDONE;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire cplllock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire cplllock_reg2;
  wire cpllpd_i_1__2_n_0;
  wire cpllreset_i_1__3_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire drp_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire drp_done_reg2;
  wire drp_start;
  wire drp_x16x20_mode;
  wire fsm20_out;
  wire gen3_exit_i_1__2_n_0;
  wire gen3_exit_reg_n_0;
  wire gen3_i_1__2_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg2;
  wire out;
  wire [3:0]p_0_in__0;
  wire pclk_sel_i_1__2_n_0;
  wire phystatus_i_1__2_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire phystatus_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire phystatus_reg2;
  wire phystatus_reg_n_0;
  wire pipe_mmcm_lock_in;
  wire pipe_pclk_in;
  wire [0:0]pipe_pclk_sel_out;
  wire [4:0]pipe_rate_fsm;
  wire \pipe_rate_fsm[15]_INST_0_i_1_n_0 ;
  wire \pipe_rate_fsm[16]_INST_0_i_1_n_0 ;
  wire \pipe_rate_fsm[17]_INST_0_i_1_n_0 ;
  wire \pipe_rate_fsm[18]_INST_0_i_1_n_0 ;
  wire \pipe_rate_fsm[19]_INST_0_i_1_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire qplllock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire qplllock_reg2;
  wire qpllpd_i_1__3_n_0;
  wire qpllreset_i_1__3_n_0;
  wire rate_cpllpd_3;
  wire rate_cpllreset_3;
  wire rate_gen3_3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_in_reg1;
  wire [0:0]\rate_in_reg1_reg[0]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_in_reg2;
  wire \rate_out[0]_i_1__2_n_0 ;
  wire rate_txpmareset_3;
  wire rate_txsync_start_3;
  wire ratedone_i_1__2_n_0;
  wire ratedone_reg_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_done_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg2;
  wire rxchbonden_3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxpmaresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxpmaresetdone_reg2;
  wire rxratedone_i_1__2_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxratedone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxratedone_reg2;
  wire rxratedone_reg_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_done_reg2;
  wire \sysclksel[0]_i_1__2_n_0 ;
  wire [3:0]txdata_wait_cnt_reg__0;
  wire txpmareset_i_1__2_n_0;
  wire txratedone_i_1__2_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txratedone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txratedone_reg2;
  wire txratedone_reg_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_done_reg2;
  wire [0:0]user_active_lane;

  LUT6 #(
    .INIT(64'hAEAEAEAEFFAEAEAE)) 
    \FSM_onehot_fsm[0]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\FSM_onehot_fsm[0]_i_2__2_n_0 ),
        .I3(fsm20_out),
        .I4(\FSM_onehot_fsm_reg_n_0_[25] ),
        .I5(rst_idle_reg2),
        .O(\FSM_onehot_fsm[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \FSM_onehot_fsm[0]_i_2__2 
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg1[1]),
        .I2(rate_in_reg2[0]),
        .I3(rate_in_reg1[0]),
        .O(\FSM_onehot_fsm[0]_i_2__2_n_0 ));
  LUT5 #(
    .INIT(32'h8A888088)) 
    \FSM_onehot_fsm[0]_i_3__2 
       (.I0(drp_done_reg2),
        .I1(cplllock_reg2),
        .I2(rate_in_reg2[0]),
        .I3(rate_in_reg2[1]),
        .I4(qplllock_reg2),
        .O(fsm20_out));
  LUT6 #(
    .INIT(64'hFFFF4F004F004F00)) 
    \FSM_onehot_fsm[12]_i_1__2 
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(rst_idle_reg2),
        .I3(\FSM_onehot_fsm[13]_i_2__2_n_0 ),
        .I4(drp_done_reg2),
        .I5(\FSM_onehot_fsm_reg_n_0_[29] ),
        .O(\FSM_onehot_fsm[12]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFB000B000B000)) 
    \FSM_onehot_fsm[13]_i_1__3 
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(rst_idle_reg2),
        .I3(\FSM_onehot_fsm[13]_i_2__2_n_0 ),
        .I4(drp_done_reg2),
        .I5(\FSM_onehot_fsm_reg_n_0_[13] ),
        .O(\FSM_onehot_fsm[13]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'hBA8A0000)) 
    \FSM_onehot_fsm[13]_i_2__2 
       (.I0(cplllock_reg2),
        .I1(rate_in_reg2[0]),
        .I2(rate_in_reg2[1]),
        .I3(qplllock_reg2),
        .I4(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[13]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00020000)) 
    \FSM_onehot_fsm[14]_i_1__3 
       (.I0(user_active_lane),
        .I1(ratedone_reg_n_0),
        .I2(\FSM_onehot_fsm[25]_i_2__2_n_0 ),
        .I3(gen3_exit_reg_n_0),
        .I4(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I5(\FSM_onehot_fsm_reg_n_0_[5] ),
        .O(\FSM_onehot_fsm[14]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h0E)) 
    \FSM_onehot_fsm[16]_i_1__2 
       (.I0(rate_txsync_start_3),
        .I1(\FSM_onehot_fsm_reg_n_0_[16] ),
        .I2(txsync_done_reg2),
        .O(\FSM_onehot_fsm[16]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \FSM_onehot_fsm[18]_i_1__2 
       (.I0(txsync_done_reg2),
        .I1(rate_txsync_start_3),
        .I2(\FSM_onehot_fsm_reg_n_0_[24] ),
        .O(\FSM_onehot_fsm[18]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF04F70000)) 
    \FSM_onehot_fsm[1]_i_1__7 
       (.I0(qplllock_reg2),
        .I1(rate_in_reg2[1]),
        .I2(rate_in_reg2[0]),
        .I3(cplllock_reg2),
        .I4(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I5(\FSM_onehot_fsm_reg_n_0_[15] ),
        .O(\FSM_onehot_fsm[1]_i_1__7_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAA8AAA8AAA8)) 
    \FSM_onehot_fsm[20]_i_1__2 
       (.I0(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I1(gen3_exit_reg_n_0),
        .I2(\FSM_onehot_fsm[25]_i_2__2_n_0 ),
        .I3(ratedone_reg_n_0),
        .I4(out),
        .I5(\FSM_onehot_fsm_reg[20]_0 ),
        .O(\FSM_onehot_fsm[20]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h0808A208)) 
    \FSM_onehot_fsm[21]_i_1__2 
       (.I0(Q[0]),
        .I1(rate_in_reg2[1]),
        .I2(rate_in_reg2[0]),
        .I3(rate_in_reg1[1]),
        .I4(rate_in_reg1[0]),
        .O(\FSM_onehot_fsm[21]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h8088800000000000)) 
    \FSM_onehot_fsm[23]_i_1__2 
       (.I0(rst_idle_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[25] ),
        .I2(qplllock_reg2),
        .I3(\FSM_onehot_fsm[25]_i_2__2_n_0 ),
        .I4(cplllock_reg2),
        .I5(drp_done_reg2),
        .O(\FSM_onehot_fsm[23]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h333FFF3F22222222)) 
    \FSM_onehot_fsm[25]_i_1__2 
       (.I0(\FSM_onehot_fsm_reg_n_0_[28] ),
        .I1(drp_done_reg2),
        .I2(cplllock_reg2),
        .I3(\FSM_onehot_fsm[25]_i_2__2_n_0 ),
        .I4(qplllock_reg2),
        .I5(\FSM_onehot_fsm_reg_n_0_[25] ),
        .O(\FSM_onehot_fsm[25]_i_1__2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_onehot_fsm[25]_i_2__2 
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .O(\FSM_onehot_fsm[25]_i_2__2_n_0 ));
  LUT4 #(
    .INIT(16'hFF8A)) 
    \FSM_onehot_fsm[27]_i_1__2 
       (.I0(\FSM_onehot_fsm_reg_n_0_[27] ),
        .I1(rxpmaresetdone_reg2),
        .I2(mmcm_lock_reg2),
        .I3(\FSM_onehot_fsm_reg_n_0_[26] ),
        .O(\FSM_onehot_fsm[27]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hFF404040)) 
    \FSM_onehot_fsm[28]_i_1__2 
       (.I0(rxpmaresetdone_reg2),
        .I1(mmcm_lock_reg2),
        .I2(\FSM_onehot_fsm_reg_n_0_[27] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[28] ),
        .I4(drp_done_reg2),
        .O(\FSM_onehot_fsm[28]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'h0E)) 
    \FSM_onehot_fsm[29]_i_1__2 
       (.I0(\FSM_onehot_fsm_reg_n_0_[13] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[29] ),
        .I2(drp_done_reg2),
        .O(\FSM_onehot_fsm[29]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \FSM_onehot_fsm[4]_i_1__7 
       (.I0(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I1(txdata_wait_cnt_reg__0[0]),
        .I2(txdata_wait_cnt_reg__0[1]),
        .I3(txdata_wait_cnt_reg__0[2]),
        .I4(txdata_wait_cnt_reg__0[3]),
        .O(\FSM_onehot_fsm[4]_i_1__7_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_fsm[6]_i_1__2 
       (.I0(\FSM_onehot_fsm_reg_n_0_[16] ),
        .I1(txsync_done_reg2),
        .O(\FSM_onehot_fsm[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hAFAAEBEEAAAAAAAA)) 
    \FSM_onehot_fsm[7]_i_1__3 
       (.I0(\FSM_onehot_fsm[7]_i_2__2_n_0 ),
        .I1(rate_in_reg1[0]),
        .I2(rate_in_reg1[1]),
        .I3(rate_in_reg2[0]),
        .I4(rate_in_reg2[1]),
        .I5(Q[0]),
        .O(\FSM_onehot_fsm[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF08FF0000)) 
    \FSM_onehot_fsm[7]_i_2__2 
       (.I0(txresetdone_reg2),
        .I1(rxresetdone_reg2),
        .I2(phystatus_reg2),
        .I3(user_active_lane),
        .I4(\FSM_onehot_fsm_reg_n_0_[8] ),
        .I5(\FSM_onehot_fsm[7]_i_3__2_n_0 ),
        .O(\FSM_onehot_fsm[7]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT5 #(
    .INIT(32'h2AAAAAAA)) 
    \FSM_onehot_fsm[7]_i_3__2 
       (.I0(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I1(txdata_wait_cnt_reg__0[0]),
        .I2(txdata_wait_cnt_reg__0[1]),
        .I3(txdata_wait_cnt_reg__0[2]),
        .I4(txdata_wait_cnt_reg__0[3]),
        .O(\FSM_onehot_fsm[7]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFF7000000)) 
    \FSM_onehot_fsm[8]_i_1__3 
       (.I0(txresetdone_reg2),
        .I1(rxresetdone_reg2),
        .I2(phystatus_reg2),
        .I3(user_active_lane),
        .I4(\FSM_onehot_fsm_reg_n_0_[8] ),
        .I5(\FSM_onehot_fsm_reg_n_0_[23] ),
        .O(\FSM_onehot_fsm[8]_i_1__3_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_fsm_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[12]_i_1__2_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[12] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[13]_i_1__3_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[13] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[14]_i_1__3_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[14] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_reg_n_0_[21] ),
        .Q(\FSM_onehot_fsm_reg_n_0_[15] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[16]_i_1__2_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[16] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[18] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[18]_i_1__2_n_0 ),
        .Q(rate_txsync_start_3),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[1]_i_1__7_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[1] ),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[20] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[20]_i_1__2_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[20] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[21] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[21]_i_1__2_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[21] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[23] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[23]_i_1__2_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[23] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[24] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_reg_n_0_[20] ),
        .Q(\FSM_onehot_fsm_reg_n_0_[24] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[25] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[25]_i_1__2_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[25] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[26] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_reg_n_0_[12] ),
        .Q(\FSM_onehot_fsm_reg_n_0_[26] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[27] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[27]_i_1__2_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[27] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[28] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[28]_i_1__2_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[28] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[29] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[29]_i_1__2_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[29] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[4]_i_1__7_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_reg_n_0_[4] ),
        .Q(\FSM_onehot_fsm_reg_n_0_[5] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[6]_i_1__2_n_0 ),
        .Q(Q[1]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[7]_i_1__3_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[7] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PCLK_SEL:0000000000000000000000000010000,FSM_RXSYNC_START:0000000000000000000000000000100,FSM_DONE:0000000000000000000000001000000,FSM_TXDATA_WAIT:0000000000000000000000010000000,FSM_PMARESET_DONE:0000000000000000000000100000000,FSM_DRP_X20_START:0000000000000000000001000000000,FSM_RXPMARESETDONE:0000000000000000000100000000000,FSM_PLL_LOCK:0000000000000000000000000000010,FSM_PLL_PURESET:0000000000000001000000000000000,FSM_RATE_SEL:0000000000000000000000000100000,FSM_DRP_X16_DONE:0000000000000100000000000000000,FSM_TXSYNC_DONE:0000000000000010000000000000000,FSM_TXSYNC_START:0000000000001000000000000000000,FSM_PLL_PU:0000000001000000000000000000000,FSM_RESETOVRD_DONE:0000000000010000000000000000000,FSM_PMARESET_RELEASE:0000000100000000000000000000000,FSM_RESETOVRD_START:0000000010000000000000000000000,FSM_IDLE:0000000000000000000000000000001,FSM_PLL_PD:0000001000000000000000000000000,FSM_DRP_DONE:0000010000000000000000000000000,FSM_PLL_SEL:0000100000000000000000000000000,FSM_PLL_PDRESET:0000000000100000000000000000000,FSM_RATE_DONE:0000000000000000100000000000000,FSM_PMARESET_HOLD:0000000000000000001000000000000,FSM_DRP_X20_DONE:0000000000000000000010000000000,FSM_DRP_START:0010000000000000000000000000000,FSM_MMCM_LOCK:0001000000000000000000000000000,FSM_RXSYNC_DONE:0000000000000000000000000001000,FSM_DRP_X16_GEN3_DONE:0100000000000000000000000000000,FSM_DRP_X16_START:1000000000000000000000000000000,FSM_DRP_X16_GEN3_START:0000000000000000010000000000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[8]_i_1__3_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[8] ),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE cplllock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_CPLLLOCK),
        .Q(cplllock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE cplllock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cplllock_reg1),
        .Q(cplllock_reg2),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h440F4400)) 
    cpllpd_i_1__2
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\FSM_onehot_fsm_reg_n_0_[21] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[24] ),
        .I4(rate_cpllpd_3),
        .O(cpllpd_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    cpllpd_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cpllpd_i_1__2_n_0),
        .Q(rate_cpllpd_3),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h440F4400)) 
    cpllreset_i_1__3
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\FSM_onehot_fsm_reg_n_0_[15] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[20] ),
        .I4(rate_cpllreset_3),
        .O(cpllreset_i_1__3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    cpllreset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cpllreset_i_1__3_n_0),
        .Q(rate_cpllreset_3),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE drp_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_DRP_DONE),
        .Q(drp_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE drp_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_done_reg1),
        .Q(drp_done_reg2),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT2 #(
    .INIT(4'hE)) 
    drp_start_i_1__2
       (.I0(\FSM_onehot_fsm_reg_n_0_[13] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[28] ),
        .O(drp_start));
  FDRE #(
    .INIT(1'b0)) 
    drp_start_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_start),
        .Q(RATE_DRP_START),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT2 #(
    .INIT(4'hE)) 
    drp_x16x20_mode_i_1__2
       (.I0(\FSM_onehot_fsm_reg_n_0_[29] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[13] ),
        .O(drp_x16x20_mode));
  FDRE #(
    .INIT(1'b0)) 
    drp_x16x20_mode_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_x16x20_mode),
        .Q(RATE_DRP_X16X20_MODE),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hDF5F55D7080A0000)) 
    gen3_exit_i_1__2
       (.I0(Q[0]),
        .I1(rate_in_reg1[0]),
        .I2(rate_in_reg2[0]),
        .I3(rate_in_reg1[1]),
        .I4(rate_in_reg2[1]),
        .I5(gen3_exit_reg_n_0),
        .O(gen3_exit_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gen3_exit_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_exit_i_1__2_n_0),
        .Q(gen3_exit_reg_n_0),
        .R(RST_CPLLRESET));
  LUT4 #(
    .INIT(16'h4F40)) 
    gen3_i_1__2
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\FSM_onehot_fsm_reg_n_0_[28] ),
        .I3(rate_gen3_3),
        .O(gen3_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gen3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_i_1__2_n_0),
        .Q(rate_gen3_3),
        .R(RST_CPLLRESET));
  LUT1 #(
    .INIT(2'h1)) 
    \gtx_channel.gtxe2_channel_i_i_5__2 
       (.I0(rate_gen3_3),
        .O(rxchbonden_3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_mmcm_lock_in),
        .Q(mmcm_lock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(mmcm_lock_reg1),
        .Q(mmcm_lock_reg2),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h666F6660)) 
    pclk_sel_i_1__2
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[28] ),
        .I4(pipe_pclk_sel_out),
        .O(pclk_sel_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    pclk_sel_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pclk_sel_i_1__2_n_0),
        .Q(pipe_pclk_sel_out),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hC8)) 
    phystatus_i_1__2
       (.I0(phystatus_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I2(phystatus_reg_n_0),
        .O(phystatus_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    phystatus_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(phystatus_i_1__2_n_0),
        .Q(phystatus_reg_n_0),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE phystatus_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_PHYSTATUS),
        .Q(phystatus_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE phystatus_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(phystatus_reg1),
        .Q(phystatus_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \pipe_rate_fsm[15]_INST_0 
       (.I0(\pipe_rate_fsm[15]_INST_0_i_1_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[23] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[28] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[5] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I5(\FSM_onehot_fsm_reg_n_0_[21] ),
        .O(pipe_rate_fsm[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \pipe_rate_fsm[15]_INST_0_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[29] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[26] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[16] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[24] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I5(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\pipe_rate_fsm[15]_INST_0_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \pipe_rate_fsm[16]_INST_0 
       (.I0(\pipe_rate_fsm[16]_INST_0_i_1_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[26] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[23] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[15] ),
        .O(pipe_rate_fsm[1]));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \pipe_rate_fsm[16]_INST_0_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[25] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[16] ),
        .I3(rate_txsync_start_3),
        .I4(\FSM_onehot_fsm_reg_n_0_[12] ),
        .O(\pipe_rate_fsm[16]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \pipe_rate_fsm[17]_INST_0 
       (.I0(\pipe_rate_fsm[17]_INST_0_i_1_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[12] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[29] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[13] ),
        .I5(\FSM_onehot_fsm_reg_n_0_[26] ),
        .O(pipe_rate_fsm[2]));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \pipe_rate_fsm[17]_INST_0_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(Q[1]),
        .I2(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[8] ),
        .O(\pipe_rate_fsm[17]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \pipe_rate_fsm[18]_INST_0 
       (.I0(\FSM_onehot_fsm_reg_n_0_[23] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[20] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[28] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[27] ),
        .I4(\pipe_rate_fsm[19]_INST_0_i_1_n_0 ),
        .I5(\pipe_rate_fsm[18]_INST_0_i_1_n_0 ),
        .O(pipe_rate_fsm[3]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \pipe_rate_fsm[18]_INST_0_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[24] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[25] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[8] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I4(Q[1]),
        .I5(\FSM_onehot_fsm_reg_n_0_[4] ),
        .O(\pipe_rate_fsm[18]_INST_0_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \pipe_rate_fsm[19]_INST_0 
       (.I0(\FSM_onehot_fsm_reg_n_0_[24] ),
        .I1(\pipe_rate_fsm[19]_INST_0_i_1_n_0 ),
        .I2(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[20] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[5] ),
        .I5(Q[1]),
        .O(pipe_rate_fsm[4]));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \pipe_rate_fsm[19]_INST_0_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[16] ),
        .I1(rate_txsync_start_3),
        .O(\pipe_rate_fsm[19]_INST_0_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE qplllock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(QPLL_QPLLLOCK),
        .Q(qplllock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE qplllock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qplllock_reg1),
        .Q(qplllock_reg2),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hBB0FBB00)) 
    qpllpd_i_1__3
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\FSM_onehot_fsm_reg_n_0_[21] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[24] ),
        .I4(QRST_QPLLPD_IN),
        .O(qpllpd_i_1__3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    qpllpd_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllpd_i_1__3_n_0),
        .Q(QRST_QPLLPD_IN),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hBB0FBB00)) 
    qpllreset_i_1__3
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\FSM_onehot_fsm_reg_n_0_[15] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[20] ),
        .I4(QRST_QPLLRESET_IN),
        .O(qpllreset_i_1__3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    qpllreset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllreset_i_1__3_n_0),
        .Q(QRST_QPLLRESET_IN),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rate_in_reg1_reg[0]_0 ),
        .Q(rate_in_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rate_in_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_in_reg1[0]),
        .Q(rate_in_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_in_reg1[1]),
        .Q(rate_in_reg2[1]),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0C0C4DFF0C0C0800)) 
    \rate_out[0]_i_1__2 
       (.I0(gen3_exit_reg_n_0),
        .I1(rate_in_reg2[0]),
        .I2(rate_in_reg2[1]),
        .I3(\FSM_onehot_fsm_reg_n_0_[28] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[5] ),
        .I5(RXRATE),
        .O(\rate_out[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rate_out_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rate_out[0]_i_1__2_n_0 ),
        .Q(RXRATE),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hFF008000)) 
    ratedone_i_1__2
       (.I0(rxratedone_reg_n_0),
        .I1(phystatus_reg_n_0),
        .I2(txratedone_reg_n_0),
        .I3(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I4(ratedone_reg_n_0),
        .O(ratedone_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    ratedone_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(ratedone_i_1__2_n_0),
        .Q(ratedone_reg_n_0),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b1),
        .Q(resetovrd_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(resetovrd_done_reg1),
        .Q(resetovrd_done_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RST_IDLE),
        .Q(rst_idle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rst_idle_reg1),
        .Q(rst_idle_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxpmaresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxpmaresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxpmaresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxpmaresetdone_reg1),
        .Q(rxpmaresetdone_reg2),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hC8)) 
    rxratedone_i_1__2
       (.I0(rxratedone_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I2(rxratedone_reg_n_0),
        .O(rxratedone_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxratedone_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxratedone_i_1__2_n_0),
        .Q(rxratedone_reg_n_0),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxratedone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_RXRATEDONE),
        .Q(rxratedone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxratedone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxratedone_reg1),
        .Q(rxratedone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_RXRESETDONE),
        .Q(rxresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxresetdone_reg1),
        .Q(rxresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxsync_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsync_done_reg1),
        .Q(rxsync_done_reg2),
        .R(RST_CPLLRESET));
  LUT4 #(
    .INIT(16'h4F40)) 
    \sysclksel[0]_i_1__2 
       (.I0(rate_in_reg2[0]),
        .I1(rate_in_reg2[1]),
        .I2(\FSM_onehot_fsm_reg_n_0_[26] ),
        .I3(RXSYSCLKSEL),
        .O(\sysclksel[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sysclksel_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\sysclksel[0]_i_1__2_n_0 ),
        .Q(RXSYSCLKSEL),
        .R(RST_CPLLRESET));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT5 #(
    .INIT(32'hA2222222)) 
    \txdata_wait_cnt[0]_i_1__2 
       (.I0(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I1(txdata_wait_cnt_reg__0[0]),
        .I2(txdata_wait_cnt_reg__0[1]),
        .I3(txdata_wait_cnt_reg__0[2]),
        .I4(txdata_wait_cnt_reg__0[3]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT5 #(
    .INIT(32'hA8282828)) 
    \txdata_wait_cnt[1]_i_1__2 
       (.I0(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I1(txdata_wait_cnt_reg__0[0]),
        .I2(txdata_wait_cnt_reg__0[1]),
        .I3(txdata_wait_cnt_reg__0[2]),
        .I4(txdata_wait_cnt_reg__0[3]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT5 #(
    .INIT(32'hAA802A80)) 
    \txdata_wait_cnt[2]_i_1__2 
       (.I0(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I1(txdata_wait_cnt_reg__0[0]),
        .I2(txdata_wait_cnt_reg__0[1]),
        .I3(txdata_wait_cnt_reg__0[2]),
        .I4(txdata_wait_cnt_reg__0[3]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT5 #(
    .INIT(32'hAAAA8000)) 
    \txdata_wait_cnt[3]_i_1__2 
       (.I0(\FSM_onehot_fsm_reg_n_0_[7] ),
        .I1(txdata_wait_cnt_reg__0[0]),
        .I2(txdata_wait_cnt_reg__0[1]),
        .I3(txdata_wait_cnt_reg__0[2]),
        .I4(txdata_wait_cnt_reg__0[3]),
        .O(p_0_in__0[3]));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(txdata_wait_cnt_reg__0[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(txdata_wait_cnt_reg__0[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(txdata_wait_cnt_reg__0[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(txdata_wait_cnt_reg__0[3]),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hF200F2FFF200F200)) 
    txpmareset_i_1__2
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(gen3_exit_reg_n_0),
        .I3(\FSM_onehot_fsm_reg_n_0_[12] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[23] ),
        .I5(rate_txpmareset_3),
        .O(txpmareset_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txpmareset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpmareset_i_1__2_n_0),
        .Q(rate_txpmareset_3),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hC8)) 
    txratedone_i_1__2
       (.I0(txratedone_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I2(txratedone_reg_n_0),
        .O(txratedone_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txratedone_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txratedone_i_1__2_n_0),
        .Q(txratedone_reg_n_0),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txratedone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_TXRATEDONE),
        .Q(txratedone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txratedone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txratedone_reg1),
        .Q(txratedone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_TXRESETDONE),
        .Q(txresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txresetdone_reg1),
        .Q(txresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(RATE_TXSYNC_DONE),
        .Q(txsync_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_done_reg1),
        .Q(txsync_done_reg2),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'hE)) 
    txsync_start_reg1_i_1__2
       (.I0(rate_txsync_start_3),
        .I1(RST_TXSYNC_START),
        .O(SYNC_TXSYNC_START));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pipe_reset" *) 
module pcie_7x_0_pcie_7x_0_pipe_reset
   (SS,
    Q,
    RST_CPLLRESET,
    RST_RXUSRCLK_RESET,
    RST_DCLK_RESET,
    pipe_rst_fsm,
    DRP_GTXRESET,
    rst_userrdy,
    pipe_pclk_in,
    pipe_mmcm_lock_in,
    D,
    \cplllock_reg1_reg[3]_0 ,
    rate_idle,
    \drp_done_reg1_reg[3]_0 ,
    \phystatus_reg1_reg[3]_0 ,
    \txsync_done_reg1_reg[3]_0 ,
    pipe_rxusrclk_in,
    pipe_dclk_in,
    QRST_IDLE,
    \rxcdrlock_reg1_reg[3]_0 ,
    out);
  output [0:0]SS;
  output [2:0]Q;
  output RST_CPLLRESET;
  output RST_RXUSRCLK_RESET;
  output RST_DCLK_RESET;
  output [3:0]pipe_rst_fsm;
  output DRP_GTXRESET;
  output rst_userrdy;
  input pipe_pclk_in;
  input pipe_mmcm_lock_in;
  input [3:0]D;
  input [3:0]\cplllock_reg1_reg[3]_0 ;
  input [3:0]rate_idle;
  input [3:0]\drp_done_reg1_reg[3]_0 ;
  input [3:0]\phystatus_reg1_reg[3]_0 ;
  input [3:0]\txsync_done_reg1_reg[3]_0 ;
  input pipe_rxusrclk_in;
  input pipe_dclk_in;
  input QRST_IDLE;
  input [3:0]\rxcdrlock_reg1_reg[3]_0 ;
  input out;

  wire [3:0]D;
  wire DRP_GTXRESET;
  wire \FSM_onehot_fsm[0]_i_1_n_0 ;
  wire \FSM_onehot_fsm[10]_i_1_n_0 ;
  wire \FSM_onehot_fsm[13]_i_1_n_0 ;
  wire \FSM_onehot_fsm[14]_i_1_n_0 ;
  wire \FSM_onehot_fsm[14]_i_2_n_0 ;
  wire \FSM_onehot_fsm[14]_i_3_n_0 ;
  wire \FSM_onehot_fsm[1]_i_1_n_0 ;
  wire \FSM_onehot_fsm[1]_i_2_n_0 ;
  wire \FSM_onehot_fsm[2]_i_1_n_0 ;
  wire \FSM_onehot_fsm[2]_i_2_n_0 ;
  wire \FSM_onehot_fsm[3]_i_1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_2_n_0 ;
  wire \FSM_onehot_fsm[5]_i_1_n_0 ;
  wire \FSM_onehot_fsm[8]_i_1_n_0 ;
  wire \FSM_onehot_fsm[8]_i_2_n_0 ;
  wire \FSM_onehot_fsm[8]_i_3_n_0 ;
  wire \FSM_onehot_fsm[9]_i_2_n_0 ;
  wire \FSM_onehot_fsm_reg_n_0_[0] ;
  wire \FSM_onehot_fsm_reg_n_0_[13] ;
  wire \FSM_onehot_fsm_reg_n_0_[14] ;
  wire \FSM_onehot_fsm_reg_n_0_[1] ;
  wire \FSM_onehot_fsm_reg_n_0_[4] ;
  wire \FSM_onehot_fsm_reg_n_0_[8] ;
  wire [2:0]Q;
  wire QRST_IDLE;
  wire [0:0]SS;
  wire \cfg_wait_cnt[3]_i_2_n_0 ;
  wire [5:0]cfg_wait_cnt_reg__0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]cplllock_reg1;
  wire [3:0]\cplllock_reg1_reg[3]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]cplllock_reg2;
  wire cpllpd;
  wire cpllreset;
  wire cpllreset_i_1_n_0;
  wire dclk_rst;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire dclk_rst_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire dclk_rst_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]drp_done_reg1;
  wire [3:0]\drp_done_reg1_reg[3]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]drp_done_reg2;
  wire gtreset_i_1_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg2;
  wire out;
  wire [5:0]p_0_in__0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]phystatus_reg1;
  wire [3:0]\phystatus_reg1_reg[3]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]phystatus_reg2;
  wire pipe_dclk_in;
  wire pipe_mmcm_lock_in;
  wire pipe_pclk_in;
  wire [3:0]pipe_rst_fsm;
  wire \pipe_rst_fsm[2]_INST_0_i_1_n_0 ;
  wire pipe_rxusrclk_in;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire qpll_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire qpll_idle_reg2;
  wire [3:0]rate_idle;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]rate_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]rate_idle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]resetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]resetdone_reg2;
  wire rst_userrdy;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]rxcdrlock_reg1;
  wire [3:0]\rxcdrlock_reg1_reg[3]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]rxcdrlock_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]rxpmaresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]rxpmaresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxusrclk_rst_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxusrclk_rst_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txsync_done_reg1;
  wire [3:0]\txsync_done_reg1_reg[3]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txsync_done_reg2;
  wire userrdy;
  wire userrdy_i_1_n_0;

  assign RST_CPLLRESET = cpllreset;
  assign RST_DCLK_RESET = dclk_rst_reg2;
  assign RST_RXUSRCLK_RESET = rxusrclk_rst_reg2;
  LUT6 #(
    .INIT(64'h8F88888888888888)) 
    \FSM_onehot_fsm[0]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[0] ),
        .I1(\FSM_onehot_fsm[8]_i_2_n_0 ),
        .I2(\FSM_onehot_fsm[1]_i_2_n_0 ),
        .I3(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I4(cfg_wait_cnt_reg__0[5]),
        .I5(cfg_wait_cnt_reg__0[4]),
        .O(\FSM_onehot_fsm[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF80000000)) 
    \FSM_onehot_fsm[10]_i_1 
       (.I0(txsync_done_reg2[1]),
        .I1(txsync_done_reg2[0]),
        .I2(txsync_done_reg2[3]),
        .I3(txsync_done_reg2[2]),
        .I4(Q[1]),
        .I5(Q[2]),
        .O(\FSM_onehot_fsm[10]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \FSM_onehot_fsm[13]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I1(rate_idle_reg2[2]),
        .I2(rate_idle_reg2[3]),
        .I3(rate_idle_reg2[0]),
        .I4(rate_idle_reg2[1]),
        .O(\FSM_onehot_fsm[13]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF444)) 
    \FSM_onehot_fsm[14]_i_1 
       (.I0(\FSM_onehot_fsm[14]_i_2_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[8] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I3(\FSM_onehot_fsm[14]_i_3_n_0 ),
        .O(\FSM_onehot_fsm[14]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \FSM_onehot_fsm[14]_i_2 
       (.I0(cplllock_reg2[1]),
        .I1(cplllock_reg2[0]),
        .I2(cplllock_reg2[3]),
        .I3(cplllock_reg2[2]),
        .O(\FSM_onehot_fsm[14]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \FSM_onehot_fsm[14]_i_3 
       (.I0(rate_idle_reg2[1]),
        .I1(rate_idle_reg2[0]),
        .I2(rate_idle_reg2[3]),
        .I3(rate_idle_reg2[2]),
        .O(\FSM_onehot_fsm[14]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT4 #(
    .INIT(16'h8CCC)) 
    \FSM_onehot_fsm[1]_i_1 
       (.I0(\FSM_onehot_fsm[1]_i_2_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I2(cfg_wait_cnt_reg__0[4]),
        .I3(cfg_wait_cnt_reg__0[5]),
        .O(\FSM_onehot_fsm[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \FSM_onehot_fsm[1]_i_2 
       (.I0(cfg_wait_cnt_reg__0[2]),
        .I1(cfg_wait_cnt_reg__0[0]),
        .I2(cfg_wait_cnt_reg__0[1]),
        .I3(cfg_wait_cnt_reg__0[3]),
        .O(\FSM_onehot_fsm[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \FSM_onehot_fsm[2]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(\FSM_onehot_fsm[2]_i_2_n_0 ),
        .I2(phystatus_reg2[1]),
        .I3(phystatus_reg2[0]),
        .I4(phystatus_reg2[3]),
        .I5(phystatus_reg2[2]),
        .O(\FSM_onehot_fsm[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \FSM_onehot_fsm[2]_i_2 
       (.I0(resetdone_reg2[1]),
        .I1(resetdone_reg2[0]),
        .I2(resetdone_reg2[3]),
        .I3(resetdone_reg2[2]),
        .O(\FSM_onehot_fsm[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAAAAA8)) 
    \FSM_onehot_fsm[3]_i_1 
       (.I0(Q[0]),
        .I1(txsync_done_reg2[1]),
        .I2(txsync_done_reg2[0]),
        .I3(txsync_done_reg2[3]),
        .I4(txsync_done_reg2[2]),
        .I5(cpllpd),
        .O(\FSM_onehot_fsm[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \FSM_onehot_fsm[4]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(\FSM_onehot_fsm[4]_i_2_n_0 ),
        .I2(userrdy),
        .I3(mmcm_lock_reg2),
        .O(\FSM_onehot_fsm[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \FSM_onehot_fsm[4]_i_2 
       (.I0(phystatus_reg2[2]),
        .I1(phystatus_reg2[3]),
        .I2(phystatus_reg2[0]),
        .I3(phystatus_reg2[1]),
        .I4(\FSM_onehot_fsm[2]_i_2_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF4)) 
    \FSM_onehot_fsm[5]_i_1 
       (.I0(mmcm_lock_reg2),
        .I1(userrdy),
        .I2(\FSM_onehot_fsm_reg_n_0_[13] ),
        .O(\FSM_onehot_fsm[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT4 #(
    .INIT(16'hF444)) 
    \FSM_onehot_fsm[8]_i_1 
       (.I0(\FSM_onehot_fsm[8]_i_2_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[0] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[8] ),
        .I3(\FSM_onehot_fsm[14]_i_2_n_0 ),
        .O(\FSM_onehot_fsm[8]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \FSM_onehot_fsm[8]_i_2 
       (.I0(cplllock_reg2[2]),
        .I1(cplllock_reg2[3]),
        .I2(cplllock_reg2[0]),
        .I3(cplllock_reg2[1]),
        .I4(\FSM_onehot_fsm[8]_i_3_n_0 ),
        .O(\FSM_onehot_fsm[8]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \FSM_onehot_fsm[8]_i_3 
       (.I0(resetdone_reg2[1]),
        .I1(resetdone_reg2[0]),
        .I2(resetdone_reg2[3]),
        .I3(resetdone_reg2[2]),
        .O(\FSM_onehot_fsm[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_fsm[9]_i_1 
       (.I0(out),
        .O(SS));
  LUT6 #(
    .INIT(64'h0CCCCCCCCCCCCCCE)) 
    \FSM_onehot_fsm[9]_i_2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(txsync_done_reg2[1]),
        .I3(txsync_done_reg2[0]),
        .I4(txsync_done_reg2[3]),
        .I5(txsync_done_reg2[2]),
        .O(\FSM_onehot_fsm[9]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_CPLL_PD:00000000000000100,FSM_RESETDONE:00000000000010000,FSM_MMCM_LOCK:00000000000100000,FSM_DRP_X16_START:00000000001000000,FSM_CPLLRESET:00000000000000001,FSM_TXSYNC_DONE:00000001000000000,FSM_CFG_WAIT:00000000000000010,FSM_DRP_X20_DONE:00000100000000000,FSM_IDLE:00000010000000000,FSM_DRP_X20_START:00001000000000000,FSM_GTRESET:00010000000000000,FSM_DRP:00100000000000000,FSM_RXPMARESETDONE_2:01000000000000000,FSM_RXPMARESETDONE_1:10000000000000000,FSM_CPLLLOCK:00000000100000000,FSM_DRP_X16_DONE:00000000010000000,FSM_TXSYNC_START:00000000000001000" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_fsm_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[0]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[0] ),
        .R(SS));
  (* FSM_ENCODED_STATES = "FSM_CPLL_PD:00000000000000100,FSM_RESETDONE:00000000000010000,FSM_MMCM_LOCK:00000000000100000,FSM_DRP_X16_START:00000000001000000,FSM_CPLLRESET:00000000000000001,FSM_TXSYNC_DONE:00000001000000000,FSM_CFG_WAIT:00000000000000010,FSM_DRP_X20_DONE:00000100000000000,FSM_IDLE:00000010000000000,FSM_DRP_X20_START:00001000000000000,FSM_GTRESET:00010000000000000,FSM_DRP:00100000000000000,FSM_RXPMARESETDONE_2:01000000000000000,FSM_RXPMARESETDONE_1:10000000000000000,FSM_CPLLLOCK:00000000100000000,FSM_DRP_X16_DONE:00000000010000000,FSM_TXSYNC_START:00000000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[10]_i_1_n_0 ),
        .Q(Q[2]),
        .R(SS));
  (* FSM_ENCODED_STATES = "FSM_CPLL_PD:00000000000000100,FSM_RESETDONE:00000000000010000,FSM_MMCM_LOCK:00000000000100000,FSM_DRP_X16_START:00000000001000000,FSM_CPLLRESET:00000000000000001,FSM_TXSYNC_DONE:00000001000000000,FSM_CFG_WAIT:00000000000000010,FSM_DRP_X20_DONE:00000100000000000,FSM_IDLE:00000010000000000,FSM_DRP_X20_START:00001000000000000,FSM_GTRESET:00010000000000000,FSM_DRP:00100000000000000,FSM_RXPMARESETDONE_2:01000000000000000,FSM_RXPMARESETDONE_1:10000000000000000,FSM_CPLLLOCK:00000000100000000,FSM_DRP_X16_DONE:00000000010000000,FSM_TXSYNC_START:00000000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[13]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[13] ),
        .R(SS));
  (* FSM_ENCODED_STATES = "FSM_CPLL_PD:00000000000000100,FSM_RESETDONE:00000000000010000,FSM_MMCM_LOCK:00000000000100000,FSM_DRP_X16_START:00000000001000000,FSM_CPLLRESET:00000000000000001,FSM_TXSYNC_DONE:00000001000000000,FSM_CFG_WAIT:00000000000000010,FSM_DRP_X20_DONE:00000100000000000,FSM_IDLE:00000010000000000,FSM_DRP_X20_START:00001000000000000,FSM_GTRESET:00010000000000000,FSM_DRP:00100000000000000,FSM_RXPMARESETDONE_2:01000000000000000,FSM_RXPMARESETDONE_1:10000000000000000,FSM_CPLLLOCK:00000000100000000,FSM_DRP_X16_DONE:00000000010000000,FSM_TXSYNC_START:00000000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[14]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[14] ),
        .R(SS));
  (* FSM_ENCODED_STATES = "FSM_CPLL_PD:00000000000000100,FSM_RESETDONE:00000000000010000,FSM_MMCM_LOCK:00000000000100000,FSM_DRP_X16_START:00000000001000000,FSM_CPLLRESET:00000000000000001,FSM_TXSYNC_DONE:00000001000000000,FSM_CFG_WAIT:00000000000000010,FSM_DRP_X20_DONE:00000100000000000,FSM_IDLE:00000010000000000,FSM_DRP_X20_START:00001000000000000,FSM_GTRESET:00010000000000000,FSM_DRP:00100000000000000,FSM_RXPMARESETDONE_2:01000000000000000,FSM_RXPMARESETDONE_1:10000000000000000,FSM_CPLLLOCK:00000000100000000,FSM_DRP_X16_DONE:00000000010000000,FSM_TXSYNC_START:00000000000001000" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[1]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[1] ),
        .S(SS));
  (* FSM_ENCODED_STATES = "FSM_CPLL_PD:00000000000000100,FSM_RESETDONE:00000000000010000,FSM_MMCM_LOCK:00000000000100000,FSM_DRP_X16_START:00000000001000000,FSM_CPLLRESET:00000000000000001,FSM_TXSYNC_DONE:00000001000000000,FSM_CFG_WAIT:00000000000000010,FSM_DRP_X20_DONE:00000100000000000,FSM_IDLE:00000010000000000,FSM_DRP_X20_START:00001000000000000,FSM_GTRESET:00010000000000000,FSM_DRP:00100000000000000,FSM_RXPMARESETDONE_2:01000000000000000,FSM_RXPMARESETDONE_1:10000000000000000,FSM_CPLLLOCK:00000000100000000,FSM_DRP_X16_DONE:00000000010000000,FSM_TXSYNC_START:00000000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[2]_i_1_n_0 ),
        .Q(cpllpd),
        .R(SS));
  (* FSM_ENCODED_STATES = "FSM_CPLL_PD:00000000000000100,FSM_RESETDONE:00000000000010000,FSM_MMCM_LOCK:00000000000100000,FSM_DRP_X16_START:00000000001000000,FSM_CPLLRESET:00000000000000001,FSM_TXSYNC_DONE:00000001000000000,FSM_CFG_WAIT:00000000000000010,FSM_DRP_X20_DONE:00000100000000000,FSM_IDLE:00000010000000000,FSM_DRP_X20_START:00001000000000000,FSM_GTRESET:00010000000000000,FSM_DRP:00100000000000000,FSM_RXPMARESETDONE_2:01000000000000000,FSM_RXPMARESETDONE_1:10000000000000000,FSM_CPLLLOCK:00000000100000000,FSM_DRP_X16_DONE:00000000010000000,FSM_TXSYNC_START:00000000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[3]_i_1_n_0 ),
        .Q(Q[0]),
        .R(SS));
  (* FSM_ENCODED_STATES = "FSM_CPLL_PD:00000000000000100,FSM_RESETDONE:00000000000010000,FSM_MMCM_LOCK:00000000000100000,FSM_DRP_X16_START:00000000001000000,FSM_CPLLRESET:00000000000000001,FSM_TXSYNC_DONE:00000001000000000,FSM_CFG_WAIT:00000000000000010,FSM_DRP_X20_DONE:00000100000000000,FSM_IDLE:00000010000000000,FSM_DRP_X20_START:00001000000000000,FSM_GTRESET:00010000000000000,FSM_DRP:00100000000000000,FSM_RXPMARESETDONE_2:01000000000000000,FSM_RXPMARESETDONE_1:10000000000000000,FSM_CPLLLOCK:00000000100000000,FSM_DRP_X16_DONE:00000000010000000,FSM_TXSYNC_START:00000000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[4]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[4] ),
        .R(SS));
  (* FSM_ENCODED_STATES = "FSM_CPLL_PD:00000000000000100,FSM_RESETDONE:00000000000010000,FSM_MMCM_LOCK:00000000000100000,FSM_DRP_X16_START:00000000001000000,FSM_CPLLRESET:00000000000000001,FSM_TXSYNC_DONE:00000001000000000,FSM_CFG_WAIT:00000000000000010,FSM_DRP_X20_DONE:00000100000000000,FSM_IDLE:00000010000000000,FSM_DRP_X20_START:00001000000000000,FSM_GTRESET:00010000000000000,FSM_DRP:00100000000000000,FSM_RXPMARESETDONE_2:01000000000000000,FSM_RXPMARESETDONE_1:10000000000000000,FSM_CPLLLOCK:00000000100000000,FSM_DRP_X16_DONE:00000000010000000,FSM_TXSYNC_START:00000000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[5]_i_1_n_0 ),
        .Q(userrdy),
        .R(SS));
  (* FSM_ENCODED_STATES = "FSM_CPLL_PD:00000000000000100,FSM_RESETDONE:00000000000010000,FSM_MMCM_LOCK:00000000000100000,FSM_DRP_X16_START:00000000001000000,FSM_CPLLRESET:00000000000000001,FSM_TXSYNC_DONE:00000001000000000,FSM_CFG_WAIT:00000000000000010,FSM_DRP_X20_DONE:00000100000000000,FSM_IDLE:00000010000000000,FSM_DRP_X20_START:00001000000000000,FSM_GTRESET:00010000000000000,FSM_DRP:00100000000000000,FSM_RXPMARESETDONE_2:01000000000000000,FSM_RXPMARESETDONE_1:10000000000000000,FSM_CPLLLOCK:00000000100000000,FSM_DRP_X16_DONE:00000000010000000,FSM_TXSYNC_START:00000000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[8]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[8] ),
        .R(SS));
  (* FSM_ENCODED_STATES = "FSM_CPLL_PD:00000000000000100,FSM_RESETDONE:00000000000010000,FSM_MMCM_LOCK:00000000000100000,FSM_DRP_X16_START:00000000001000000,FSM_CPLLRESET:00000000000000001,FSM_TXSYNC_DONE:00000001000000000,FSM_CFG_WAIT:00000000000000010,FSM_DRP_X20_DONE:00000100000000000,FSM_IDLE:00000010000000000,FSM_DRP_X20_START:00001000000000000,FSM_GTRESET:00010000000000000,FSM_DRP:00100000000000000,FSM_RXPMARESETDONE_2:01000000000000000,FSM_RXPMARESETDONE_1:10000000000000000,FSM_CPLLLOCK:00000000100000000,FSM_DRP_X16_DONE:00000000010000000,FSM_TXSYNC_START:00000000000001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[9]_i_2_n_0 ),
        .Q(Q[1]),
        .R(SS));
  LUT6 #(
    .INIT(64'hF444444444444444)) 
    \cfg_wait_cnt[0]_i_1 
       (.I0(cfg_wait_cnt_reg__0[0]),
        .I1(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I2(\cfg_wait_cnt[3]_i_2_n_0 ),
        .I3(cfg_wait_cnt_reg__0[3]),
        .I4(cfg_wait_cnt_reg__0[2]),
        .I5(cfg_wait_cnt_reg__0[1]),
        .O(p_0_in__0[0]));
  LUT6 #(
    .INIT(64'h80FFFF0080008000)) 
    \cfg_wait_cnt[1]_i_1 
       (.I0(cfg_wait_cnt_reg__0[2]),
        .I1(cfg_wait_cnt_reg__0[3]),
        .I2(\cfg_wait_cnt[3]_i_2_n_0 ),
        .I3(cfg_wait_cnt_reg__0[0]),
        .I4(cfg_wait_cnt_reg__0[1]),
        .I5(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(p_0_in__0[1]));
  LUT6 #(
    .INIT(64'h8FFFF00080008000)) 
    \cfg_wait_cnt[2]_i_1 
       (.I0(cfg_wait_cnt_reg__0[3]),
        .I1(\cfg_wait_cnt[3]_i_2_n_0 ),
        .I2(cfg_wait_cnt_reg__0[0]),
        .I3(cfg_wait_cnt_reg__0[1]),
        .I4(cfg_wait_cnt_reg__0[2]),
        .I5(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(p_0_in__0[2]));
  LUT6 #(
    .INIT(64'hBFFFC00080008000)) 
    \cfg_wait_cnt[3]_i_1 
       (.I0(\cfg_wait_cnt[3]_i_2_n_0 ),
        .I1(cfg_wait_cnt_reg__0[1]),
        .I2(cfg_wait_cnt_reg__0[0]),
        .I3(cfg_wait_cnt_reg__0[2]),
        .I4(cfg_wait_cnt_reg__0[3]),
        .I5(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \cfg_wait_cnt[3]_i_2 
       (.I0(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I1(cfg_wait_cnt_reg__0[5]),
        .I2(cfg_wait_cnt_reg__0[4]),
        .O(\cfg_wait_cnt[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT4 #(
    .INIT(16'hD900)) 
    \cfg_wait_cnt[4]_i_1 
       (.I0(\FSM_onehot_fsm[1]_i_2_n_0 ),
        .I1(cfg_wait_cnt_reg__0[4]),
        .I2(cfg_wait_cnt_reg__0[5]),
        .I3(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(p_0_in__0[4]));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT4 #(
    .INIT(16'hF040)) 
    \cfg_wait_cnt[5]_i_1 
       (.I0(\FSM_onehot_fsm[1]_i_2_n_0 ),
        .I1(cfg_wait_cnt_reg__0[4]),
        .I2(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I3(cfg_wait_cnt_reg__0[5]),
        .O(p_0_in__0[5]));
  FDRE #(
    .INIT(1'b0)) 
    \cfg_wait_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(cfg_wait_cnt_reg__0[0]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \cfg_wait_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(cfg_wait_cnt_reg__0[1]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \cfg_wait_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(cfg_wait_cnt_reg__0[2]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \cfg_wait_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(cfg_wait_cnt_reg__0[3]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \cfg_wait_cnt_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[4]),
        .Q(cfg_wait_cnt_reg__0[4]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    \cfg_wait_cnt_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[5]),
        .Q(cfg_wait_cnt_reg__0[5]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \cplllock_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\cplllock_reg1_reg[3]_0 [0]),
        .Q(cplllock_reg1[0]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \cplllock_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\cplllock_reg1_reg[3]_0 [1]),
        .Q(cplllock_reg1[1]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \cplllock_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\cplllock_reg1_reg[3]_0 [2]),
        .Q(cplllock_reg1[2]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \cplllock_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\cplllock_reg1_reg[3]_0 [3]),
        .Q(cplllock_reg1[3]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \cplllock_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cplllock_reg1[0]),
        .Q(cplllock_reg2[0]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \cplllock_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cplllock_reg1[1]),
        .Q(cplllock_reg2[1]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \cplllock_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cplllock_reg1[2]),
        .Q(cplllock_reg2[2]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \cplllock_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cplllock_reg1[3]),
        .Q(cplllock_reg2[3]),
        .R(SS));
  LUT6 #(
    .INIT(64'hFFF0FFF0FFF0FEF0)) 
    cpllreset_i_1
       (.I0(\pipe_rst_fsm[2]_INST_0_i_1_n_0 ),
        .I1(Q[2]),
        .I2(\FSM_onehot_fsm_reg_n_0_[0] ),
        .I3(cpllreset),
        .I4(Q[1]),
        .I5(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(cpllreset_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    cpllreset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cpllreset_i_1_n_0),
        .Q(cpllreset),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    dclk_rst_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_reg_n_0_[1] ),
        .Q(dclk_rst),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    dclk_rst_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(dclk_rst),
        .Q(dclk_rst_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    dclk_rst_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(dclk_rst_reg1),
        .Q(dclk_rst_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \drp_done_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\drp_done_reg1_reg[3]_0 [0]),
        .Q(drp_done_reg1[0]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \drp_done_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\drp_done_reg1_reg[3]_0 [1]),
        .Q(drp_done_reg1[1]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \drp_done_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\drp_done_reg1_reg[3]_0 [2]),
        .Q(drp_done_reg1[2]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \drp_done_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\drp_done_reg1_reg[3]_0 [3]),
        .Q(drp_done_reg1[3]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \drp_done_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_done_reg1[0]),
        .Q(drp_done_reg2[0]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \drp_done_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_done_reg1[1]),
        .Q(drp_done_reg2[1]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \drp_done_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_done_reg1[2]),
        .Q(drp_done_reg2[2]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \drp_done_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_done_reg1[3]),
        .Q(drp_done_reg2[3]),
        .R(SS));
  LUT3 #(
    .INIT(8'hBA)) 
    gtreset_i_1
       (.I0(\FSM_onehot_fsm_reg_n_0_[0] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[13] ),
        .I2(DRP_GTXRESET),
        .O(gtreset_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gtreset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gtreset_i_1_n_0),
        .Q(DRP_GTXRESET),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_mmcm_lock_in),
        .Q(mmcm_lock_reg1),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(mmcm_lock_reg1),
        .Q(mmcm_lock_reg2),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \phystatus_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\phystatus_reg1_reg[3]_0 [0]),
        .Q(phystatus_reg1[0]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \phystatus_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\phystatus_reg1_reg[3]_0 [1]),
        .Q(phystatus_reg1[1]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \phystatus_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\phystatus_reg1_reg[3]_0 [2]),
        .Q(phystatus_reg1[2]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \phystatus_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\phystatus_reg1_reg[3]_0 [3]),
        .Q(phystatus_reg1[3]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \phystatus_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(phystatus_reg1[0]),
        .Q(phystatus_reg2[0]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \phystatus_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(phystatus_reg1[1]),
        .Q(phystatus_reg2[1]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \phystatus_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(phystatus_reg1[2]),
        .Q(phystatus_reg2[2]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \phystatus_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(phystatus_reg1[3]),
        .Q(phystatus_reg2[3]),
        .R(SS));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \pipe_rst_fsm[0]_INST_0 
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I2(Q[0]),
        .I3(\FSM_onehot_fsm_reg_n_0_[13] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[8] ),
        .O(pipe_rst_fsm[0]));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \pipe_rst_fsm[1]_INST_0 
       (.I0(Q[0]),
        .I1(\FSM_onehot_fsm_reg_n_0_[13] ),
        .I2(cpllpd),
        .I3(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I4(\FSM_onehot_fsm_reg_n_0_[0] ),
        .O(pipe_rst_fsm[1]));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \pipe_rst_fsm[2]_INST_0 
       (.I0(\pipe_rst_fsm[2]_INST_0_i_1_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[8] ),
        .O(pipe_rst_fsm[2]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \pipe_rst_fsm[2]_INST_0_i_1 
       (.I0(Q[0]),
        .I1(\FSM_onehot_fsm_reg_n_0_[13] ),
        .I2(cpllpd),
        .I3(\FSM_onehot_fsm_reg_n_0_[14] ),
        .I4(userrdy),
        .I5(\FSM_onehot_fsm_reg_n_0_[4] ),
        .O(\pipe_rst_fsm[2]_INST_0_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \pipe_rst_fsm[3]_INST_0 
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(userrdy),
        .I2(Q[0]),
        .I3(cpllpd),
        .O(pipe_rst_fsm[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE qpll_idle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(QRST_IDLE),
        .Q(qpll_idle_reg1),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE qpll_idle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpll_idle_reg1),
        .Q(qpll_idle_reg2),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_idle_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_idle[0]),
        .Q(rate_idle_reg1[0]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_idle_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_idle[1]),
        .Q(rate_idle_reg1[1]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_idle_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_idle[2]),
        .Q(rate_idle_reg1[2]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_idle_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_idle[3]),
        .Q(rate_idle_reg1[3]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_idle_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_idle_reg1[0]),
        .Q(rate_idle_reg2[0]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_idle_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_idle_reg1[1]),
        .Q(rate_idle_reg2[1]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_idle_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_idle_reg1[2]),
        .Q(rate_idle_reg2[2]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_idle_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_idle_reg1[3]),
        .Q(rate_idle_reg2[3]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \resetdone_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D[0]),
        .Q(resetdone_reg1[0]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \resetdone_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D[1]),
        .Q(resetdone_reg1[1]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \resetdone_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D[2]),
        .Q(resetdone_reg1[2]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \resetdone_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D[3]),
        .Q(resetdone_reg1[3]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \resetdone_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(resetdone_reg1[0]),
        .Q(resetdone_reg2[0]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \resetdone_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(resetdone_reg1[1]),
        .Q(resetdone_reg2[1]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \resetdone_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(resetdone_reg1[2]),
        .Q(resetdone_reg2[2]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \resetdone_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(resetdone_reg1[3]),
        .Q(resetdone_reg2[3]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxcdrlock_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxcdrlock_reg1_reg[3]_0 [0]),
        .Q(rxcdrlock_reg1[0]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxcdrlock_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxcdrlock_reg1_reg[3]_0 [1]),
        .Q(rxcdrlock_reg1[1]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxcdrlock_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxcdrlock_reg1_reg[3]_0 [2]),
        .Q(rxcdrlock_reg1[2]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxcdrlock_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rxcdrlock_reg1_reg[3]_0 [3]),
        .Q(rxcdrlock_reg1[3]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxcdrlock_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxcdrlock_reg1[0]),
        .Q(rxcdrlock_reg2[0]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxcdrlock_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxcdrlock_reg1[1]),
        .Q(rxcdrlock_reg2[1]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxcdrlock_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxcdrlock_reg1[2]),
        .Q(rxcdrlock_reg2[2]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxcdrlock_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxcdrlock_reg1[3]),
        .Q(rxcdrlock_reg2[3]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxpmaresetdone_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxpmaresetdone_reg1[0]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxpmaresetdone_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxpmaresetdone_reg1[1]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxpmaresetdone_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxpmaresetdone_reg1[2]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxpmaresetdone_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxpmaresetdone_reg1[3]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxpmaresetdone_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxpmaresetdone_reg1[0]),
        .Q(rxpmaresetdone_reg2[0]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxpmaresetdone_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxpmaresetdone_reg1[1]),
        .Q(rxpmaresetdone_reg2[1]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxpmaresetdone_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxpmaresetdone_reg1[2]),
        .Q(rxpmaresetdone_reg2[2]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxpmaresetdone_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxpmaresetdone_reg1[3]),
        .Q(rxpmaresetdone_reg2[3]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    rxusrclk_rst_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(cpllreset),
        .Q(rxusrclk_rst_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    rxusrclk_rst_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rxusrclk_rst_reg1),
        .Q(rxusrclk_rst_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txsync_done_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txsync_done_reg1_reg[3]_0 [0]),
        .Q(txsync_done_reg1[0]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txsync_done_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txsync_done_reg1_reg[3]_0 [1]),
        .Q(txsync_done_reg1[1]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txsync_done_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txsync_done_reg1_reg[3]_0 [2]),
        .Q(txsync_done_reg1[2]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txsync_done_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txsync_done_reg1_reg[3]_0 [3]),
        .Q(txsync_done_reg1[3]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txsync_done_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_done_reg1[0]),
        .Q(txsync_done_reg2[0]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txsync_done_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_done_reg1[1]),
        .Q(txsync_done_reg2[1]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txsync_done_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_done_reg1[2]),
        .Q(txsync_done_reg2[2]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txsync_done_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_done_reg1[3]),
        .Q(txsync_done_reg2[3]),
        .R(SS));
  LUT3 #(
    .INIT(8'hB8)) 
    userrdy_i_1
       (.I0(mmcm_lock_reg2),
        .I1(userrdy),
        .I2(rst_userrdy),
        .O(userrdy_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    userrdy_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(userrdy_i_1_n_0),
        .Q(rst_userrdy),
        .R(SS));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pipe_sync" *) 
module pcie_7x_0_pcie_7x_0_pipe_sync
   (out,
    txphaligndone_reg3_reg_0,
    pipe_sync_fsm_rx,
    sync_txdlyen_0,
    RST_TXSYNC_DONE,
    Q,
    RST_CPLLRESET,
    SYNC_TXPHALIGNDONE,
    pipe_pclk_in,
    SYNC_TXSYNC_START,
    pipe_mmcm_lock_in,
    SYNC_TXDLYSRESETDONE,
    SYNC_TXPHINITDONE,
    USER_RATE_GEN3,
    SYNC_RATE_IDLE,
    SYNC_RXELECIDLE,
    SYNC_RXCDRLOCK,
    SYNC_RXDLYSRESETDONE,
    SYNC_RXPHALIGNDONE_M,
    SYNC_RXPHALIGNDONE_S,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ,
    user_active_lane,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_1 );
  output out;
  output txphaligndone_reg3_reg_0;
  output [0:0]pipe_sync_fsm_rx;
  output sync_txdlyen_0;
  output [0:0]RST_TXSYNC_DONE;
  output [5:0]Q;
  input RST_CPLLRESET;
  input SYNC_TXPHALIGNDONE;
  input pipe_pclk_in;
  input SYNC_TXSYNC_START;
  input pipe_mmcm_lock_in;
  input SYNC_TXDLYSRESETDONE;
  input SYNC_TXPHINITDONE;
  input USER_RATE_GEN3;
  input SYNC_RATE_IDLE;
  input SYNC_RXELECIDLE;
  input SYNC_RXCDRLOCK;
  input SYNC_RXDLYSRESETDONE;
  input SYNC_RXPHALIGNDONE_M;
  input SYNC_RXPHALIGNDONE_S;
  input \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ;
  input [0:0]user_active_lane;
  input \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ;
  input \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_1 ;

  wire \FSM_onehot_txsync_fsm.fsm_tx[1]_i_1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[1]_i_2_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[2]_i_1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[3]_i_1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[4]_i_1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[4]_i_2_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[5]_i_1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[6]_i_1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_1 ;
  wire [5:0]Q;
  wire RST_CPLLRESET;
  wire [0:0]RST_TXSYNC_DONE;
  wire SYNC_RATE_IDLE;
  wire SYNC_RXCDRLOCK;
  wire SYNC_RXDLYSRESETDONE;
  wire SYNC_RXELECIDLE;
  wire SYNC_RXPHALIGNDONE_M;
  wire SYNC_RXPHALIGNDONE_S;
  wire SYNC_TXDLYSRESETDONE;
  wire SYNC_TXPHALIGNDONE;
  wire SYNC_TXPHINITDONE;
  wire SYNC_TXSYNC_START;
  wire USER_RATE_GEN3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg2;
  wire pipe_mmcm_lock_in;
  wire pipe_pclk_in;
  wire [0:0]pipe_sync_fsm_rx;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxdlysresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxdlysresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxelecidle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxelecidle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_m_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_m_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_s_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_s_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_donem_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_donem_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsyncdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsyncdone_reg2;
  wire sync_txdlyen_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txdlysresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txdlysresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txdlysresetdone_reg3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphaligndone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphaligndone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphaligndone_reg3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphinitdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphinitdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphinitdone_reg3;
  wire \txsync_fsm.txdlyen_i_1_n_0 ;
  wire \txsync_fsm.txsync_done_i_1_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_start_reg3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsyncdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsyncdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsyncdone_reg3;
  wire [0:0]user_active_lane;

  assign out = txphaligndone_reg2;
  assign txphaligndone_reg3_reg_0 = txphaligndone_reg3;
  LUT5 #(
    .INIT(32'h1D1DFF1D)) 
    \FSM_onehot_txsync_fsm.fsm_tx[1]_i_1 
       (.I0(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_2_n_0 ),
        .I1(Q[0]),
        .I2(txsync_start_reg2),
        .I3(Q[5]),
        .I4(\FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \FSM_onehot_txsync_fsm.fsm_tx[1]_i_2 
       (.I0(Q[3]),
        .I1(Q[5]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[4]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hF444)) 
    \FSM_onehot_txsync_fsm.fsm_tx[2]_i_1 
       (.I0(mmcm_lock_reg2),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(txsync_start_reg2),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFD0D0D0)) 
    \FSM_onehot_txsync_fsm.fsm_tx[3]_i_1 
       (.I0(txdlysresetdone_reg2),
        .I1(txdlysresetdone_reg3),
        .I2(Q[2]),
        .I3(mmcm_lock_reg2),
        .I4(Q[1]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h44F44444)) 
    \FSM_onehot_txsync_fsm.fsm_tx[4]_i_1 
       (.I0(\FSM_onehot_txsync_fsm.fsm_tx[4]_i_2_n_0 ),
        .I1(Q[3]),
        .I2(txdlysresetdone_reg2),
        .I3(txdlysresetdone_reg3),
        .I4(Q[2]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF444)) 
    \FSM_onehot_txsync_fsm.fsm_tx[4]_i_2 
       (.I0(txphinitdone_reg3),
        .I1(txphinitdone_reg2),
        .I2(\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ),
        .I3(\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_1 ),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8F88FFFF88888888)) 
    \FSM_onehot_txsync_fsm.fsm_tx[5]_i_1 
       (.I0(\FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ),
        .I1(Q[4]),
        .I2(txphinitdone_reg3),
        .I3(txphinitdone_reg2),
        .I4(user_active_lane),
        .I5(Q[3]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEAFFEAEA2A002A2A)) 
    \FSM_onehot_txsync_fsm.fsm_tx[6]_i_1 
       (.I0(Q[5]),
        .I1(\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ),
        .I2(\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_1 ),
        .I3(txphaligndone_reg3),
        .I4(txphaligndone_reg2),
        .I5(Q[4]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[6]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_1_n_0 ),
        .Q(Q[0]),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[2]_i_1_n_0 ),
        .Q(Q[1]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[3]_i_1_n_0 ),
        .Q(Q[2]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[4]_i_1_n_0 ),
        .Q(Q[3]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_1_n_0 ),
        .Q(Q[4]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[6]_i_1_n_0 ),
        .Q(Q[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_RATE_GEN3),
        .Q(gen3_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_reg1),
        .Q(gen3_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_mmcm_lock_in),
        .Q(mmcm_lock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(mmcm_lock_reg1),
        .Q(mmcm_lock_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RATE_IDLE),
        .Q(rate_idle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_idle_reg1),
        .Q(rate_idle_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXCDRLOCK),
        .Q(rxcdrlock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxcdrlock_reg1),
        .Q(rxcdrlock_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxdlysresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXDLYSRESETDONE),
        .Q(rxdlysresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxdlysresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxdlysresetdone_reg1),
        .Q(rxdlysresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxelecidle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXELECIDLE),
        .Q(rxelecidle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxelecidle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxelecidle_reg1),
        .Q(rxelecidle_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_m_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXPHALIGNDONE_M),
        .Q(rxphaligndone_m_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_m_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxphaligndone_m_reg1),
        .Q(rxphaligndone_m_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_s_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXPHALIGNDONE_S),
        .Q(rxphaligndone_s_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_s_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxphaligndone_s_reg1),
        .Q(rxphaligndone_s_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_donem_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxsync_donem_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_donem_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsync_donem_reg1),
        .Q(rxsync_donem_reg2),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxsync_fsm_disable.fsm_rx_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b1),
        .Q(pipe_sync_fsm_rx),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_start_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxsync_start_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_start_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsync_start_reg1),
        .Q(rxsync_start_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsyncdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxsyncdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsyncdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsyncdone_reg1),
        .Q(rxsyncdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txdlysresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXDLYSRESETDONE),
        .Q(txdlysresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txdlysresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txdlysresetdone_reg1),
        .Q(txdlysresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txdlysresetdone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txdlysresetdone_reg2),
        .Q(txdlysresetdone_reg3),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphaligndone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXPHALIGNDONE),
        .Q(txphaligndone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphaligndone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphaligndone_reg1),
        .Q(txphaligndone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphaligndone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphaligndone_reg2),
        .Q(txphaligndone_reg3),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphinitdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXPHINITDONE),
        .Q(txphinitdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphinitdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphinitdone_reg1),
        .Q(txphinitdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphinitdone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphinitdone_reg2),
        .Q(txphinitdone_reg3),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hABAAA8AA)) 
    \txsync_fsm.txdlyen_i_1 
       (.I0(Q[5]),
        .I1(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_2_n_0 ),
        .I2(txsync_start_reg2),
        .I3(Q[0]),
        .I4(sync_txdlyen_0),
        .O(\txsync_fsm.txdlyen_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txsync_fsm.txdlyen_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txsync_fsm.txdlyen_i_1_n_0 ),
        .Q(sync_txdlyen_0),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h222F222222202222)) 
    \txsync_fsm.txsync_done_i_1 
       (.I0(Q[5]),
        .I1(\FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ),
        .I2(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_2_n_0 ),
        .I3(txsync_start_reg2),
        .I4(Q[0]),
        .I5(RST_TXSYNC_DONE),
        .O(\txsync_fsm.txsync_done_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txsync_fsm.txsync_done_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txsync_fsm.txsync_done_i_1_n_0 ),
        .Q(RST_TXSYNC_DONE),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_start_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXSYNC_START),
        .Q(txsync_start_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_start_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_start_reg1),
        .Q(txsync_start_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_start_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_start_reg2),
        .Q(txsync_start_reg3),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsyncdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txsyncdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsyncdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsyncdone_reg1),
        .Q(txsyncdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsyncdone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsyncdone_reg2),
        .Q(txsyncdone_reg3),
        .R(RST_CPLLRESET));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pipe_sync" *) 
module pcie_7x_0_pcie_7x_0_pipe_sync_25
   (Q,
    pipe_sync_fsm_rx,
    RST_TXSYNC_DONE,
    out,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ,
    RST_CPLLRESET,
    pipe_pclk_in,
    SYNC_TXPHALIGNDONE,
    SYNC_TXSYNC_START,
    pipe_mmcm_lock_in,
    SYNC_TXDLYSRESETDONE,
    SYNC_TXPHINITDONE,
    SYNC_GEN3,
    SYNC_RATE_IDLE,
    rxelecidle_reg1_reg_0,
    SYNC_RXCDRLOCK,
    SYNC_RXDLYSRESETDONE,
    SYNC_RXPHALIGNDONE_M,
    SYNC_RXPHALIGNDONE_S,
    user_active_lane);
  output [5:0]Q;
  output [0:0]pipe_sync_fsm_rx;
  output [0:0]RST_TXSYNC_DONE;
  input out;
  input \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ;
  input RST_CPLLRESET;
  input pipe_pclk_in;
  input SYNC_TXPHALIGNDONE;
  input SYNC_TXSYNC_START;
  input pipe_mmcm_lock_in;
  input SYNC_TXDLYSRESETDONE;
  input SYNC_TXPHINITDONE;
  input SYNC_GEN3;
  input SYNC_RATE_IDLE;
  input rxelecidle_reg1_reg_0;
  input SYNC_RXCDRLOCK;
  input SYNC_RXDLYSRESETDONE;
  input SYNC_RXPHALIGNDONE_M;
  input SYNC_RXPHALIGNDONE_S;
  input [0:0]user_active_lane;

  wire \FSM_onehot_txsync_fsm.fsm_tx[1]_i_1__0_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__0_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[2]_i_1__0_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[3]_i_1__0_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[4]_i_1__0_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[5]_i_1__0_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[5]_i_3__0_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[6]_i_1__0_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ;
  wire [5:0]Q;
  wire RST_CPLLRESET;
  wire [0:0]RST_TXSYNC_DONE;
  wire SYNC_GEN3;
  wire SYNC_RATE_IDLE;
  wire SYNC_RXCDRLOCK;
  wire SYNC_RXDLYSRESETDONE;
  wire SYNC_RXPHALIGNDONE_M;
  wire SYNC_RXPHALIGNDONE_S;
  wire SYNC_TXDLYSRESETDONE;
  wire SYNC_TXPHALIGNDONE;
  wire SYNC_TXPHINITDONE;
  wire SYNC_TXSYNC_START;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg2;
  wire out;
  wire pipe_mmcm_lock_in;
  wire pipe_pclk_in;
  wire [0:0]pipe_sync_fsm_rx;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxdlysresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxdlysresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxelecidle_reg1;
  wire rxelecidle_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxelecidle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_m_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_m_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_s_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_s_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_donem_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_donem_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsyncdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsyncdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txdlysresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txdlysresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txdlysresetdone_reg3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphaligndone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphaligndone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphaligndone_reg3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphinitdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphinitdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphinitdone_reg3;
  wire \txsync_fsm.txsync_done_i_1__0_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_start_reg3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsyncdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsyncdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsyncdone_reg3;
  wire [0:0]user_active_lane;

  LUT4 #(
    .INIT(16'hFF1D)) 
    \FSM_onehot_txsync_fsm.fsm_tx[1]_i_1__0 
       (.I0(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__0_n_0 ),
        .I1(Q[0]),
        .I2(txsync_start_reg2),
        .I3(Q[5]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(Q[5]),
        .I4(Q[1]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'hF444)) 
    \FSM_onehot_txsync_fsm.fsm_tx[2]_i_1__0 
       (.I0(mmcm_lock_reg2),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(txsync_start_reg2),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[2]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFD0D0D0)) 
    \FSM_onehot_txsync_fsm.fsm_tx[3]_i_1__0 
       (.I0(txdlysresetdone_reg2),
        .I1(txdlysresetdone_reg3),
        .I2(Q[2]),
        .I3(mmcm_lock_reg2),
        .I4(Q[1]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[3]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h44F44444)) 
    \FSM_onehot_txsync_fsm.fsm_tx[4]_i_1__0 
       (.I0(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_3__0_n_0 ),
        .I1(Q[3]),
        .I2(txdlysresetdone_reg2),
        .I3(txdlysresetdone_reg3),
        .I4(Q[2]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[4]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFB000B000B000)) 
    \FSM_onehot_txsync_fsm.fsm_tx[5]_i_1__0 
       (.I0(txphaligndone_reg3),
        .I1(txphaligndone_reg2),
        .I2(user_active_lane),
        .I3(Q[4]),
        .I4(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_3__0_n_0 ),
        .I5(Q[3]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hF444)) 
    \FSM_onehot_txsync_fsm.fsm_tx[5]_i_3__0 
       (.I0(txphinitdone_reg3),
        .I1(txphinitdone_reg2),
        .I2(out),
        .I3(\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'h8080AA80)) 
    \FSM_onehot_txsync_fsm.fsm_tx[6]_i_1__0 
       (.I0(Q[4]),
        .I1(\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ),
        .I2(out),
        .I3(txphaligndone_reg2),
        .I4(txphaligndone_reg3),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[6]_i_1__0_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[2]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[3]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[4]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[6]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_GEN3),
        .Q(gen3_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_reg1),
        .Q(gen3_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_mmcm_lock_in),
        .Q(mmcm_lock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(mmcm_lock_reg1),
        .Q(mmcm_lock_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RATE_IDLE),
        .Q(rate_idle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_idle_reg1),
        .Q(rate_idle_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXCDRLOCK),
        .Q(rxcdrlock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxcdrlock_reg1),
        .Q(rxcdrlock_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxdlysresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXDLYSRESETDONE),
        .Q(rxdlysresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxdlysresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxdlysresetdone_reg1),
        .Q(rxdlysresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxelecidle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxelecidle_reg1_reg_0),
        .Q(rxelecidle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxelecidle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxelecidle_reg1),
        .Q(rxelecidle_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_m_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXPHALIGNDONE_M),
        .Q(rxphaligndone_m_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_m_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxphaligndone_m_reg1),
        .Q(rxphaligndone_m_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_s_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXPHALIGNDONE_S),
        .Q(rxphaligndone_s_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_s_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxphaligndone_s_reg1),
        .Q(rxphaligndone_s_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_donem_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxsync_donem_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_donem_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsync_donem_reg1),
        .Q(rxsync_donem_reg2),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxsync_fsm_disable.fsm_rx_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b1),
        .Q(pipe_sync_fsm_rx),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_start_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxsync_start_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_start_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsync_start_reg1),
        .Q(rxsync_start_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsyncdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxsyncdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsyncdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsyncdone_reg1),
        .Q(rxsyncdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txdlysresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXDLYSRESETDONE),
        .Q(txdlysresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txdlysresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txdlysresetdone_reg1),
        .Q(txdlysresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txdlysresetdone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txdlysresetdone_reg2),
        .Q(txdlysresetdone_reg3),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphaligndone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXPHALIGNDONE),
        .Q(txphaligndone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphaligndone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphaligndone_reg1),
        .Q(txphaligndone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphaligndone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphaligndone_reg2),
        .Q(txphaligndone_reg3),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphinitdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXPHINITDONE),
        .Q(txphinitdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphinitdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphinitdone_reg1),
        .Q(txphinitdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphinitdone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphinitdone_reg2),
        .Q(txphinitdone_reg3),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hABAAA8AA)) 
    \txsync_fsm.txsync_done_i_1__0 
       (.I0(Q[5]),
        .I1(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__0_n_0 ),
        .I2(txsync_start_reg2),
        .I3(Q[0]),
        .I4(RST_TXSYNC_DONE),
        .O(\txsync_fsm.txsync_done_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txsync_fsm.txsync_done_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txsync_fsm.txsync_done_i_1__0_n_0 ),
        .Q(RST_TXSYNC_DONE),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_start_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXSYNC_START),
        .Q(txsync_start_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_start_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_start_reg1),
        .Q(txsync_start_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_start_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_start_reg2),
        .Q(txsync_start_reg3),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsyncdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txsyncdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsyncdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsyncdone_reg1),
        .Q(txsyncdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsyncdone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsyncdone_reg2),
        .Q(txsyncdone_reg3),
        .R(RST_CPLLRESET));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pipe_sync" *) 
module pcie_7x_0_pcie_7x_0_pipe_sync_31
   (Q,
    pipe_sync_fsm_rx,
    RST_TXSYNC_DONE,
    out,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ,
    RST_CPLLRESET,
    pipe_pclk_in,
    SYNC_TXPHALIGNDONE,
    SYNC_TXSYNC_START,
    pipe_mmcm_lock_in,
    SYNC_TXDLYSRESETDONE,
    SYNC_TXPHINITDONE,
    SYNC_GEN3,
    SYNC_RATE_IDLE,
    rxelecidle_reg1_reg_0,
    SYNC_RXCDRLOCK,
    SYNC_RXDLYSRESETDONE,
    SYNC_RXPHALIGNDONE_M,
    SYNC_RXPHALIGNDONE_S,
    user_active_lane);
  output [5:0]Q;
  output [0:0]pipe_sync_fsm_rx;
  output [0:0]RST_TXSYNC_DONE;
  input out;
  input \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ;
  input RST_CPLLRESET;
  input pipe_pclk_in;
  input SYNC_TXPHALIGNDONE;
  input SYNC_TXSYNC_START;
  input pipe_mmcm_lock_in;
  input SYNC_TXDLYSRESETDONE;
  input SYNC_TXPHINITDONE;
  input SYNC_GEN3;
  input SYNC_RATE_IDLE;
  input rxelecidle_reg1_reg_0;
  input SYNC_RXCDRLOCK;
  input SYNC_RXDLYSRESETDONE;
  input SYNC_RXPHALIGNDONE_M;
  input SYNC_RXPHALIGNDONE_S;
  input [0:0]user_active_lane;

  wire \FSM_onehot_txsync_fsm.fsm_tx[1]_i_1__1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[2]_i_1__1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[3]_i_1__1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[4]_i_1__1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[5]_i_1__1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[5]_i_3__1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[6]_i_1__1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ;
  wire [5:0]Q;
  wire RST_CPLLRESET;
  wire [0:0]RST_TXSYNC_DONE;
  wire SYNC_GEN3;
  wire SYNC_RATE_IDLE;
  wire SYNC_RXCDRLOCK;
  wire SYNC_RXDLYSRESETDONE;
  wire SYNC_RXPHALIGNDONE_M;
  wire SYNC_RXPHALIGNDONE_S;
  wire SYNC_TXDLYSRESETDONE;
  wire SYNC_TXPHALIGNDONE;
  wire SYNC_TXPHINITDONE;
  wire SYNC_TXSYNC_START;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg2;
  wire out;
  wire pipe_mmcm_lock_in;
  wire pipe_pclk_in;
  wire [0:0]pipe_sync_fsm_rx;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxdlysresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxdlysresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxelecidle_reg1;
  wire rxelecidle_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxelecidle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_m_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_m_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_s_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_s_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_donem_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_donem_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsyncdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsyncdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txdlysresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txdlysresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txdlysresetdone_reg3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphaligndone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphaligndone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphaligndone_reg3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphinitdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphinitdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphinitdone_reg3;
  wire \txsync_fsm.txsync_done_i_1__1_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_start_reg3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsyncdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsyncdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsyncdone_reg3;
  wire [0:0]user_active_lane;

  LUT4 #(
    .INIT(16'hFF1D)) 
    \FSM_onehot_txsync_fsm.fsm_tx[1]_i_1__1 
       (.I0(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__1_n_0 ),
        .I1(Q[0]),
        .I2(txsync_start_reg2),
        .I3(Q[5]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__1 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(Q[5]),
        .I4(Q[1]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__1_n_0 ));
  LUT4 #(
    .INIT(16'hF444)) 
    \FSM_onehot_txsync_fsm.fsm_tx[2]_i_1__1 
       (.I0(mmcm_lock_reg2),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(txsync_start_reg2),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[2]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFD0D0D0)) 
    \FSM_onehot_txsync_fsm.fsm_tx[3]_i_1__1 
       (.I0(txdlysresetdone_reg2),
        .I1(txdlysresetdone_reg3),
        .I2(Q[2]),
        .I3(mmcm_lock_reg2),
        .I4(Q[1]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[3]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h44F44444)) 
    \FSM_onehot_txsync_fsm.fsm_tx[4]_i_1__1 
       (.I0(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_3__1_n_0 ),
        .I1(Q[3]),
        .I2(txdlysresetdone_reg2),
        .I3(txdlysresetdone_reg3),
        .I4(Q[2]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[4]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFB000B000B000)) 
    \FSM_onehot_txsync_fsm.fsm_tx[5]_i_1__1 
       (.I0(txphaligndone_reg3),
        .I1(txphaligndone_reg2),
        .I2(user_active_lane),
        .I3(Q[4]),
        .I4(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_3__1_n_0 ),
        .I5(Q[3]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hF444)) 
    \FSM_onehot_txsync_fsm.fsm_tx[5]_i_3__1 
       (.I0(txphinitdone_reg3),
        .I1(txphinitdone_reg2),
        .I2(out),
        .I3(\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_3__1_n_0 ));
  LUT5 #(
    .INIT(32'h8080AA80)) 
    \FSM_onehot_txsync_fsm.fsm_tx[6]_i_1__1 
       (.I0(Q[4]),
        .I1(\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ),
        .I2(out),
        .I3(txphaligndone_reg2),
        .I4(txphaligndone_reg3),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[6]_i_1__1_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_1__1_n_0 ),
        .Q(Q[0]),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[2]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[3]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[4]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[6]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_GEN3),
        .Q(gen3_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_reg1),
        .Q(gen3_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_mmcm_lock_in),
        .Q(mmcm_lock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(mmcm_lock_reg1),
        .Q(mmcm_lock_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RATE_IDLE),
        .Q(rate_idle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_idle_reg1),
        .Q(rate_idle_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXCDRLOCK),
        .Q(rxcdrlock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxcdrlock_reg1),
        .Q(rxcdrlock_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxdlysresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXDLYSRESETDONE),
        .Q(rxdlysresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxdlysresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxdlysresetdone_reg1),
        .Q(rxdlysresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxelecidle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxelecidle_reg1_reg_0),
        .Q(rxelecidle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxelecidle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxelecidle_reg1),
        .Q(rxelecidle_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_m_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXPHALIGNDONE_M),
        .Q(rxphaligndone_m_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_m_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxphaligndone_m_reg1),
        .Q(rxphaligndone_m_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_s_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXPHALIGNDONE_S),
        .Q(rxphaligndone_s_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_s_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxphaligndone_s_reg1),
        .Q(rxphaligndone_s_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_donem_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxsync_donem_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_donem_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsync_donem_reg1),
        .Q(rxsync_donem_reg2),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxsync_fsm_disable.fsm_rx_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b1),
        .Q(pipe_sync_fsm_rx),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_start_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxsync_start_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_start_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsync_start_reg1),
        .Q(rxsync_start_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsyncdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxsyncdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsyncdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsyncdone_reg1),
        .Q(rxsyncdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txdlysresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXDLYSRESETDONE),
        .Q(txdlysresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txdlysresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txdlysresetdone_reg1),
        .Q(txdlysresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txdlysresetdone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txdlysresetdone_reg2),
        .Q(txdlysresetdone_reg3),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphaligndone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXPHALIGNDONE),
        .Q(txphaligndone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphaligndone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphaligndone_reg1),
        .Q(txphaligndone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphaligndone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphaligndone_reg2),
        .Q(txphaligndone_reg3),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphinitdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXPHINITDONE),
        .Q(txphinitdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphinitdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphinitdone_reg1),
        .Q(txphinitdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphinitdone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphinitdone_reg2),
        .Q(txphinitdone_reg3),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hABAAA8AA)) 
    \txsync_fsm.txsync_done_i_1__1 
       (.I0(Q[5]),
        .I1(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__1_n_0 ),
        .I2(txsync_start_reg2),
        .I3(Q[0]),
        .I4(RST_TXSYNC_DONE),
        .O(\txsync_fsm.txsync_done_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txsync_fsm.txsync_done_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txsync_fsm.txsync_done_i_1__1_n_0 ),
        .Q(RST_TXSYNC_DONE),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_start_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXSYNC_START),
        .Q(txsync_start_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_start_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_start_reg1),
        .Q(txsync_start_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_start_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_start_reg2),
        .Q(txsync_start_reg3),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsyncdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txsyncdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsyncdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsyncdone_reg1),
        .Q(txsyncdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsyncdone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsyncdone_reg2),
        .Q(txsyncdone_reg3),
        .R(RST_CPLLRESET));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pipe_sync" *) 
module pcie_7x_0_pcie_7x_0_pipe_sync_37
   (Q,
    pipe_sync_fsm_rx,
    RST_TXSYNC_DONE,
    out,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ,
    RST_CPLLRESET,
    pipe_pclk_in,
    SYNC_TXPHALIGNDONE,
    SYNC_TXSYNC_START,
    pipe_mmcm_lock_in,
    SYNC_TXDLYSRESETDONE,
    SYNC_TXPHINITDONE,
    SYNC_GEN3,
    SYNC_RATE_IDLE,
    rxelecidle_reg1_reg_0,
    SYNC_RXCDRLOCK,
    SYNC_RXDLYSRESETDONE,
    SYNC_RXPHALIGNDONE_M,
    SYNC_RXPHALIGNDONE_S,
    user_active_lane);
  output [5:0]Q;
  output [0:0]pipe_sync_fsm_rx;
  output [0:0]RST_TXSYNC_DONE;
  input out;
  input \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ;
  input RST_CPLLRESET;
  input pipe_pclk_in;
  input SYNC_TXPHALIGNDONE;
  input SYNC_TXSYNC_START;
  input pipe_mmcm_lock_in;
  input SYNC_TXDLYSRESETDONE;
  input SYNC_TXPHINITDONE;
  input SYNC_GEN3;
  input SYNC_RATE_IDLE;
  input rxelecidle_reg1_reg_0;
  input SYNC_RXCDRLOCK;
  input SYNC_RXDLYSRESETDONE;
  input SYNC_RXPHALIGNDONE_M;
  input SYNC_RXPHALIGNDONE_S;
  input [0:0]user_active_lane;

  wire \FSM_onehot_txsync_fsm.fsm_tx[1]_i_1__2_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__2_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[2]_i_1__2_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[3]_i_1__2_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[4]_i_1__2_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[5]_i_1__2_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[5]_i_3__2_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[6]_i_1__2_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ;
  wire [5:0]Q;
  wire RST_CPLLRESET;
  wire [0:0]RST_TXSYNC_DONE;
  wire SYNC_GEN3;
  wire SYNC_RATE_IDLE;
  wire SYNC_RXCDRLOCK;
  wire SYNC_RXDLYSRESETDONE;
  wire SYNC_RXPHALIGNDONE_M;
  wire SYNC_RXPHALIGNDONE_S;
  wire SYNC_TXDLYSRESETDONE;
  wire SYNC_TXPHALIGNDONE;
  wire SYNC_TXPHINITDONE;
  wire SYNC_TXSYNC_START;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg2;
  wire out;
  wire pipe_mmcm_lock_in;
  wire pipe_pclk_in;
  wire [0:0]pipe_sync_fsm_rx;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxdlysresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxdlysresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxelecidle_reg1;
  wire rxelecidle_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxelecidle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_m_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_m_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_s_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxphaligndone_s_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_donem_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_donem_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsync_start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsyncdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxsyncdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txdlysresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txdlysresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txdlysresetdone_reg3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphaligndone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphaligndone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphaligndone_reg3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphinitdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphinitdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txphinitdone_reg3;
  wire \txsync_fsm.txsync_done_i_1__2_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsync_start_reg3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsyncdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsyncdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txsyncdone_reg3;
  wire [0:0]user_active_lane;

  LUT4 #(
    .INIT(16'hFF1D)) 
    \FSM_onehot_txsync_fsm.fsm_tx[1]_i_1__2 
       (.I0(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__2_n_0 ),
        .I1(Q[0]),
        .I2(txsync_start_reg2),
        .I3(Q[5]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__2 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(Q[5]),
        .I4(Q[1]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__2_n_0 ));
  LUT4 #(
    .INIT(16'hF444)) 
    \FSM_onehot_txsync_fsm.fsm_tx[2]_i_1__2 
       (.I0(mmcm_lock_reg2),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(txsync_start_reg2),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[2]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hFFD0D0D0)) 
    \FSM_onehot_txsync_fsm.fsm_tx[3]_i_1__2 
       (.I0(txdlysresetdone_reg2),
        .I1(txdlysresetdone_reg3),
        .I2(Q[2]),
        .I3(mmcm_lock_reg2),
        .I4(Q[1]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[3]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h44F44444)) 
    \FSM_onehot_txsync_fsm.fsm_tx[4]_i_1__2 
       (.I0(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_3__2_n_0 ),
        .I1(Q[3]),
        .I2(txdlysresetdone_reg2),
        .I3(txdlysresetdone_reg3),
        .I4(Q[2]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[4]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFB000B000B000)) 
    \FSM_onehot_txsync_fsm.fsm_tx[5]_i_1__2 
       (.I0(txphaligndone_reg3),
        .I1(txphaligndone_reg2),
        .I2(user_active_lane),
        .I3(Q[4]),
        .I4(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_3__2_n_0 ),
        .I5(Q[3]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hF444)) 
    \FSM_onehot_txsync_fsm.fsm_tx[5]_i_3__2 
       (.I0(txphinitdone_reg3),
        .I1(txphinitdone_reg2),
        .I2(out),
        .I3(\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_3__2_n_0 ));
  LUT5 #(
    .INIT(32'h8080AA80)) 
    \FSM_onehot_txsync_fsm.fsm_tx[6]_i_1__2 
       (.I0(Q[4]),
        .I1(\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ),
        .I2(out),
        .I3(txphaligndone_reg2),
        .I4(txphaligndone_reg3),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[6]_i_1__2_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[2]_i_1__2_n_0 ),
        .Q(Q[1]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[3]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[4]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:0000100,FSM_TXSYNC_START:0001000,FSM_TXPHINITDONE:0010000,FSM_TXSYNC_DONE1:0100000,FSM_TXSYNC_DONE2:1000000,FSM_TXSYNC_IDLE:0000010,iSTATE:0000001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[6]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_GEN3),
        .Q(gen3_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gen3_reg1),
        .Q(gen3_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_mmcm_lock_in),
        .Q(mmcm_lock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(mmcm_lock_reg1),
        .Q(mmcm_lock_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RATE_IDLE),
        .Q(rate_idle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_idle_reg1),
        .Q(rate_idle_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXCDRLOCK),
        .Q(rxcdrlock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxcdrlock_reg1),
        .Q(rxcdrlock_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxdlysresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXDLYSRESETDONE),
        .Q(rxdlysresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxdlysresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxdlysresetdone_reg1),
        .Q(rxdlysresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxelecidle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxelecidle_reg1_reg_0),
        .Q(rxelecidle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxelecidle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxelecidle_reg1),
        .Q(rxelecidle_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_m_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXPHALIGNDONE_M),
        .Q(rxphaligndone_m_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_m_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxphaligndone_m_reg1),
        .Q(rxphaligndone_m_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_s_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_RXPHALIGNDONE_S),
        .Q(rxphaligndone_s_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_s_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxphaligndone_s_reg1),
        .Q(rxphaligndone_s_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_donem_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxsync_donem_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_donem_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsync_donem_reg1),
        .Q(rxsync_donem_reg2),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxsync_fsm_disable.fsm_rx_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b1),
        .Q(pipe_sync_fsm_rx),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_start_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxsync_start_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_start_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsync_start_reg1),
        .Q(rxsync_start_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsyncdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxsyncdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsyncdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxsyncdone_reg1),
        .Q(rxsyncdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txdlysresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXDLYSRESETDONE),
        .Q(txdlysresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txdlysresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txdlysresetdone_reg1),
        .Q(txdlysresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txdlysresetdone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txdlysresetdone_reg2),
        .Q(txdlysresetdone_reg3),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphaligndone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXPHALIGNDONE),
        .Q(txphaligndone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphaligndone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphaligndone_reg1),
        .Q(txphaligndone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphaligndone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphaligndone_reg2),
        .Q(txphaligndone_reg3),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphinitdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXPHINITDONE),
        .Q(txphinitdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphinitdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphinitdone_reg1),
        .Q(txphinitdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphinitdone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txphinitdone_reg2),
        .Q(txphinitdone_reg3),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hABAAA8AA)) 
    \txsync_fsm.txsync_done_i_1__2 
       (.I0(Q[5]),
        .I1(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_2__2_n_0 ),
        .I2(txsync_start_reg2),
        .I3(Q[0]),
        .I4(RST_TXSYNC_DONE),
        .O(\txsync_fsm.txsync_done_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txsync_fsm.txsync_done_reg 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txsync_fsm.txsync_done_i_1__2_n_0 ),
        .Q(RST_TXSYNC_DONE),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_start_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(SYNC_TXSYNC_START),
        .Q(txsync_start_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_start_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_start_reg1),
        .Q(txsync_start_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_start_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsync_start_reg2),
        .Q(txsync_start_reg3),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsyncdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(txsyncdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsyncdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsyncdone_reg1),
        .Q(txsyncdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsyncdone_reg3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txsyncdone_reg2),
        .Q(txsyncdone_reg3),
        .R(RST_CPLLRESET));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pipe_user" *) 
module pcie_7x_0_pcie_7x_0_pipe_user
   (rst_idle_reg2_reg_0,
    out,
    SYNC_TXPHALIGNDONE,
    txelecidle_reg2_reg_0,
    txcompliance_reg2_reg_0,
    SYNC_TXPHINITDONE,
    txelecidle_reg2_reg_1,
    USER_OOBCLK,
    RST_RXCDRLOCK,
    rate_idle_reg2_reg_0,
    \converge_cnt_reg[15]_0 ,
    \converge_cnt_reg[1]_0 ,
    \converge_cnt_reg[6]_0 ,
    RST_RESETDONE,
    txcompliance_reg2_reg_1,
    converge_gen3_reg_0,
    gt_rxvalid_0,
    SYNC_RXELECIDLE,
    gt_rxvalid_q_reg,
    pipe_txphaligndone,
    user_active_lane,
    txphaligndone_reg1_reg,
    pipe_txphinitdone,
    txphinitdone_reg1_reg,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[5] ,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ,
    RST_CPLLRESET,
    pipe_pclk_sel_out,
    pipe_pclk_in,
    pipe_oobclk_in,
    USER_TXRESETDONE,
    USER_RXRESETDONE,
    USER_TXELECIDLE,
    USER_TXCOMPLIANCE,
    gt_rxcdrlock_0,
    RST_RXUSRCLK_RESET,
    pipe_rxusrclk_in,
    pipe_rxstatus,
    RST_IDLE,
    Q,
    USER_RATE_GEN3,
    USER_RXEQ_ADAPT_DONE,
    RST_PHYSTATUS);
  output rst_idle_reg2_reg_0;
  output out;
  output SYNC_TXPHALIGNDONE;
  output txelecidle_reg2_reg_0;
  output txcompliance_reg2_reg_0;
  output SYNC_TXPHINITDONE;
  output txelecidle_reg2_reg_1;
  output USER_OOBCLK;
  output [0:0]RST_RXCDRLOCK;
  output rate_idle_reg2_reg_0;
  output \converge_cnt_reg[15]_0 ;
  output \converge_cnt_reg[1]_0 ;
  output \converge_cnt_reg[6]_0 ;
  output [0:0]RST_RESETDONE;
  output [0:0]txcompliance_reg2_reg_1;
  output converge_gen3_reg_0;
  input gt_rxvalid_0;
  input SYNC_RXELECIDLE;
  input gt_rxvalid_q_reg;
  input [1:0]pipe_txphaligndone;
  input [0:0]user_active_lane;
  input txphaligndone_reg1_reg;
  input [1:0]pipe_txphinitdone;
  input txphinitdone_reg1_reg;
  input \FSM_onehot_txsync_fsm.fsm_tx_reg[5] ;
  input \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ;
  input RST_CPLLRESET;
  input [0:0]pipe_pclk_sel_out;
  input pipe_pclk_in;
  input pipe_oobclk_in;
  input USER_TXRESETDONE;
  input USER_RXRESETDONE;
  input USER_TXELECIDLE;
  input USER_TXCOMPLIANCE;
  input gt_rxcdrlock_0;
  input RST_RXUSRCLK_RESET;
  input pipe_rxusrclk_in;
  input [0:0]pipe_rxstatus;
  input RST_IDLE;
  input [1:0]Q;
  input USER_RATE_GEN3;
  input USER_RXEQ_ADAPT_DONE;
  input [0:0]RST_PHYSTATUS;

  wire \FSM_onehot_txsync_fsm.fsm_tx_reg[5] ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ;
  wire [1:0]Q;
  wire RST_CPLLRESET;
  wire RST_IDLE;
  wire [0:0]RST_PHYSTATUS;
  wire [0:0]RST_RESETDONE;
  wire [0:0]RST_RXCDRLOCK;
  wire RST_RXUSRCLK_RESET;
  wire SYNC_RXELECIDLE;
  wire SYNC_TXPHALIGNDONE;
  wire SYNC_TXPHINITDONE;
  wire USER_OOBCLK;
  wire USER_RATE_GEN3;
  wire USER_RXEQ_ADAPT_DONE;
  wire USER_RXRESETDONE;
  wire USER_TXCOMPLIANCE;
  wire USER_TXELECIDLE;
  wire USER_TXRESETDONE;
  wire \converge_cnt[0]_i_1__0_n_0 ;
  wire \converge_cnt[0]_i_4_n_0 ;
  wire \converge_cnt[0]_i_5_n_0 ;
  wire \converge_cnt[0]_i_6_n_0 ;
  wire [21:0]converge_cnt_reg;
  wire \converge_cnt_reg[0]_i_3_n_0 ;
  wire \converge_cnt_reg[0]_i_3_n_1 ;
  wire \converge_cnt_reg[0]_i_3_n_2 ;
  wire \converge_cnt_reg[0]_i_3_n_3 ;
  wire \converge_cnt_reg[0]_i_3_n_4 ;
  wire \converge_cnt_reg[0]_i_3_n_5 ;
  wire \converge_cnt_reg[0]_i_3_n_6 ;
  wire \converge_cnt_reg[0]_i_3_n_7 ;
  wire \converge_cnt_reg[12]_i_1_n_0 ;
  wire \converge_cnt_reg[12]_i_1_n_1 ;
  wire \converge_cnt_reg[12]_i_1_n_2 ;
  wire \converge_cnt_reg[12]_i_1_n_3 ;
  wire \converge_cnt_reg[12]_i_1_n_4 ;
  wire \converge_cnt_reg[12]_i_1_n_5 ;
  wire \converge_cnt_reg[12]_i_1_n_6 ;
  wire \converge_cnt_reg[12]_i_1_n_7 ;
  wire \converge_cnt_reg[15]_0 ;
  wire \converge_cnt_reg[16]_i_1_n_0 ;
  wire \converge_cnt_reg[16]_i_1_n_1 ;
  wire \converge_cnt_reg[16]_i_1_n_2 ;
  wire \converge_cnt_reg[16]_i_1_n_3 ;
  wire \converge_cnt_reg[16]_i_1_n_4 ;
  wire \converge_cnt_reg[16]_i_1_n_5 ;
  wire \converge_cnt_reg[16]_i_1_n_6 ;
  wire \converge_cnt_reg[16]_i_1_n_7 ;
  wire \converge_cnt_reg[1]_0 ;
  wire \converge_cnt_reg[20]_i_1_n_3 ;
  wire \converge_cnt_reg[20]_i_1_n_6 ;
  wire \converge_cnt_reg[20]_i_1_n_7 ;
  wire \converge_cnt_reg[4]_i_1_n_0 ;
  wire \converge_cnt_reg[4]_i_1_n_1 ;
  wire \converge_cnt_reg[4]_i_1_n_2 ;
  wire \converge_cnt_reg[4]_i_1_n_3 ;
  wire \converge_cnt_reg[4]_i_1_n_4 ;
  wire \converge_cnt_reg[4]_i_1_n_5 ;
  wire \converge_cnt_reg[4]_i_1_n_6 ;
  wire \converge_cnt_reg[4]_i_1_n_7 ;
  wire \converge_cnt_reg[6]_0 ;
  wire \converge_cnt_reg[8]_i_1_n_0 ;
  wire \converge_cnt_reg[8]_i_1_n_1 ;
  wire \converge_cnt_reg[8]_i_1_n_2 ;
  wire \converge_cnt_reg[8]_i_1_n_3 ;
  wire \converge_cnt_reg[8]_i_1_n_4 ;
  wire \converge_cnt_reg[8]_i_1_n_5 ;
  wire \converge_cnt_reg[8]_i_1_n_6 ;
  wire \converge_cnt_reg[8]_i_1_n_7 ;
  wire converge_gen3_i_1_n_0;
  wire converge_gen3_reg_0;
  wire gt_rxcdrlock_0;
  wire gt_rxvalid_0;
  wire gt_rxvalid_q_i_6_n_0;
  wire gt_rxvalid_q_reg;
  wire \gtx_channel.gtxe2_channel_i_i_59_n_0 ;
  wire \gtx_channel.gtxe2_channel_i_i_60_n_0 ;
  wire [1:0]oobclk_cnt;
  wire \oobclk_div.oobclk_i_1_n_0 ;
  wire [3:0]p_0_in__0;
  wire [3:0]p_0_in__0__0;
  wire [1:0]p_1_in__0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire pclk_sel_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire pclk_sel_reg2;
  wire pipe_oobclk_in;
  wire pipe_pclk_in;
  wire [0:0]pipe_pclk_sel_out;
  wire [0:0]pipe_rxstatus;
  wire pipe_rxusrclk_in;
  wire [1:0]pipe_txphaligndone;
  wire [1:0]pipe_txphinitdone;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_done_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_gen3_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_gen3_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg2;
  wire rate_idle_reg2_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_rxsync_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_rxsync_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg2;
  wire rst_idle_reg2_reg_0;
  wire [3:0]rxcdrlock_cnt_reg__0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_adapt_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_adapt_done_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxstatus_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxstatus_reg2;
  wire [3:0]rxvalid_cnt_reg__0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxvalid_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxvalid_reg2;
  wire sel;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txcompliance_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txcompliance_reg2;
  wire [0:0]txcompliance_reg2_reg_1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txelecidle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txelecidle_reg2;
  wire txelecidle_reg2_reg_1;
  wire txphaligndone_reg1_reg;
  wire txphinitdone_reg1_reg;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg2;
  wire [0:0]user_active_lane;
  wire [3:1]\NLW_converge_cnt_reg[20]_i_1_CO_UNCONNECTED ;
  wire [3:2]\NLW_converge_cnt_reg[20]_i_1_O_UNCONNECTED ;

  assign out = rst_idle_reg2;
  assign txcompliance_reg2_reg_0 = txcompliance_reg2;
  assign txelecidle_reg2_reg_0 = txelecidle_reg2;
  LUT4 #(
    .INIT(16'h7077)) 
    \FSM_onehot_txsync_fsm.fsm_tx[5]_i_2 
       (.I0(txelecidle_reg2),
        .I1(txcompliance_reg2),
        .I2(\FSM_onehot_txsync_fsm.fsm_tx_reg[5] ),
        .I3(\FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ),
        .O(txelecidle_reg2_reg_1));
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_onehot_txsync_fsm.fsm_tx[5]_i_3 
       (.I0(txcompliance_reg2),
        .I1(txelecidle_reg2),
        .O(txcompliance_reg2_reg_1));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \converge_cnt[0]_i_1__0 
       (.I0(rate_gen3_reg2),
        .I1(RST_CPLLRESET),
        .I2(rst_idle_reg2),
        .I3(rate_idle_reg2),
        .O(\converge_cnt[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF5555555D)) 
    \converge_cnt[0]_i_2 
       (.I0(converge_cnt_reg[21]),
        .I1(\converge_cnt[0]_i_4_n_0 ),
        .I2(converge_cnt_reg[12]),
        .I3(converge_cnt_reg[14]),
        .I4(converge_cnt_reg[20]),
        .I5(\converge_cnt[0]_i_5_n_0 ),
        .O(sel));
  LUT5 #(
    .INIT(32'h00000001)) 
    \converge_cnt[0]_i_4 
       (.I0(converge_cnt_reg[3]),
        .I1(converge_cnt_reg[4]),
        .I2(converge_cnt_reg[5]),
        .I3(converge_cnt_reg[7]),
        .I4(converge_cnt_reg[6]),
        .O(\converge_cnt[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0A0B0A0F0A0B0A0B)) 
    \converge_cnt[0]_i_5 
       (.I0(\converge_cnt_reg[15]_0 ),
        .I1(converge_cnt_reg[13]),
        .I2(converge_cnt_reg[20]),
        .I3(converge_cnt_reg[14]),
        .I4(converge_cnt_reg[12]),
        .I5(\gtx_channel.gtxe2_channel_i_i_60_n_0 ),
        .O(\converge_cnt[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \converge_cnt[0]_i_6 
       (.I0(converge_cnt_reg[0]),
        .O(\converge_cnt[0]_i_6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3_n_7 ),
        .Q(converge_cnt_reg[0]),
        .R(\converge_cnt[0]_i_1__0_n_0 ));
  CARRY4 \converge_cnt_reg[0]_i_3 
       (.CI(1'b0),
        .CO({\converge_cnt_reg[0]_i_3_n_0 ,\converge_cnt_reg[0]_i_3_n_1 ,\converge_cnt_reg[0]_i_3_n_2 ,\converge_cnt_reg[0]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\converge_cnt_reg[0]_i_3_n_4 ,\converge_cnt_reg[0]_i_3_n_5 ,\converge_cnt_reg[0]_i_3_n_6 ,\converge_cnt_reg[0]_i_3_n_7 }),
        .S({converge_cnt_reg[3:1],\converge_cnt[0]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[10] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1_n_5 ),
        .Q(converge_cnt_reg[10]),
        .R(\converge_cnt[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[11] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1_n_4 ),
        .Q(converge_cnt_reg[11]),
        .R(\converge_cnt[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[12] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1_n_7 ),
        .Q(converge_cnt_reg[12]),
        .R(\converge_cnt[0]_i_1__0_n_0 ));
  CARRY4 \converge_cnt_reg[12]_i_1 
       (.CI(\converge_cnt_reg[8]_i_1_n_0 ),
        .CO({\converge_cnt_reg[12]_i_1_n_0 ,\converge_cnt_reg[12]_i_1_n_1 ,\converge_cnt_reg[12]_i_1_n_2 ,\converge_cnt_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[12]_i_1_n_4 ,\converge_cnt_reg[12]_i_1_n_5 ,\converge_cnt_reg[12]_i_1_n_6 ,\converge_cnt_reg[12]_i_1_n_7 }),
        .S(converge_cnt_reg[15:12]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[13] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1_n_6 ),
        .Q(converge_cnt_reg[13]),
        .R(\converge_cnt[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[14] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1_n_5 ),
        .Q(converge_cnt_reg[14]),
        .R(\converge_cnt[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[15] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1_n_4 ),
        .Q(converge_cnt_reg[15]),
        .R(\converge_cnt[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[16] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1_n_7 ),
        .Q(converge_cnt_reg[16]),
        .R(\converge_cnt[0]_i_1__0_n_0 ));
  CARRY4 \converge_cnt_reg[16]_i_1 
       (.CI(\converge_cnt_reg[12]_i_1_n_0 ),
        .CO({\converge_cnt_reg[16]_i_1_n_0 ,\converge_cnt_reg[16]_i_1_n_1 ,\converge_cnt_reg[16]_i_1_n_2 ,\converge_cnt_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[16]_i_1_n_4 ,\converge_cnt_reg[16]_i_1_n_5 ,\converge_cnt_reg[16]_i_1_n_6 ,\converge_cnt_reg[16]_i_1_n_7 }),
        .S(converge_cnt_reg[19:16]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[17] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1_n_6 ),
        .Q(converge_cnt_reg[17]),
        .R(\converge_cnt[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[18] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1_n_5 ),
        .Q(converge_cnt_reg[18]),
        .R(\converge_cnt[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[19] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1_n_4 ),
        .Q(converge_cnt_reg[19]),
        .R(\converge_cnt[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3_n_6 ),
        .Q(converge_cnt_reg[1]),
        .R(\converge_cnt[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[20] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[20]_i_1_n_7 ),
        .Q(converge_cnt_reg[20]),
        .R(\converge_cnt[0]_i_1__0_n_0 ));
  CARRY4 \converge_cnt_reg[20]_i_1 
       (.CI(\converge_cnt_reg[16]_i_1_n_0 ),
        .CO({\NLW_converge_cnt_reg[20]_i_1_CO_UNCONNECTED [3:1],\converge_cnt_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_converge_cnt_reg[20]_i_1_O_UNCONNECTED [3:2],\converge_cnt_reg[20]_i_1_n_6 ,\converge_cnt_reg[20]_i_1_n_7 }),
        .S({1'b0,1'b0,converge_cnt_reg[21:20]}));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[21] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[20]_i_1_n_6 ),
        .Q(converge_cnt_reg[21]),
        .R(\converge_cnt[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3_n_5 ),
        .Q(converge_cnt_reg[2]),
        .R(\converge_cnt[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3_n_4 ),
        .Q(converge_cnt_reg[3]),
        .R(\converge_cnt[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[4] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1_n_7 ),
        .Q(converge_cnt_reg[4]),
        .R(\converge_cnt[0]_i_1__0_n_0 ));
  CARRY4 \converge_cnt_reg[4]_i_1 
       (.CI(\converge_cnt_reg[0]_i_3_n_0 ),
        .CO({\converge_cnt_reg[4]_i_1_n_0 ,\converge_cnt_reg[4]_i_1_n_1 ,\converge_cnt_reg[4]_i_1_n_2 ,\converge_cnt_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[4]_i_1_n_4 ,\converge_cnt_reg[4]_i_1_n_5 ,\converge_cnt_reg[4]_i_1_n_6 ,\converge_cnt_reg[4]_i_1_n_7 }),
        .S(converge_cnt_reg[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[5] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1_n_6 ),
        .Q(converge_cnt_reg[5]),
        .R(\converge_cnt[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[6] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1_n_5 ),
        .Q(converge_cnt_reg[6]),
        .R(\converge_cnt[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[7] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1_n_4 ),
        .Q(converge_cnt_reg[7]),
        .R(\converge_cnt[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[8] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1_n_7 ),
        .Q(converge_cnt_reg[8]),
        .R(\converge_cnt[0]_i_1__0_n_0 ));
  CARRY4 \converge_cnt_reg[8]_i_1 
       (.CI(\converge_cnt_reg[4]_i_1_n_0 ),
        .CO({\converge_cnt_reg[8]_i_1_n_0 ,\converge_cnt_reg[8]_i_1_n_1 ,\converge_cnt_reg[8]_i_1_n_2 ,\converge_cnt_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[8]_i_1_n_4 ,\converge_cnt_reg[8]_i_1_n_5 ,\converge_cnt_reg[8]_i_1_n_6 ,\converge_cnt_reg[8]_i_1_n_7 }),
        .S(converge_cnt_reg[11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[9] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1_n_6 ),
        .Q(converge_cnt_reg[9]),
        .R(\converge_cnt[0]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hC8)) 
    converge_gen3_i_1
       (.I0(rxeq_adapt_done_reg2),
        .I1(rate_gen3_reg2),
        .I2(converge_gen3_reg_0),
        .O(converge_gen3_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    converge_gen3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_gen3_i_1_n_0),
        .Q(converge_gen3_reg_0),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hFFFFA8FF)) 
    gt_rx_phy_status_q_i_1
       (.I0(RST_PHYSTATUS),
        .I1(rate_idle_reg2),
        .I2(rate_rxsync_reg2),
        .I3(rst_idle_reg2),
        .I4(rate_done_reg2),
        .O(rate_idle_reg2_reg_0));
  LUT6 #(
    .INIT(64'h7FFF7FFFFFFF7FFF)) 
    gt_rxvalid_q_i_5__2
       (.I0(gt_rxvalid_q_i_6_n_0),
        .I1(gt_rxvalid_0),
        .I2(rst_idle_reg2),
        .I3(rate_idle_reg2),
        .I4(SYNC_RXELECIDLE),
        .I5(gt_rxvalid_q_reg),
        .O(rst_idle_reg2_reg_0));
  LUT4 #(
    .INIT(16'h8000)) 
    gt_rxvalid_q_i_6
       (.I0(rxvalid_cnt_reg__0[0]),
        .I1(rxvalid_cnt_reg__0[1]),
        .I2(rxvalid_cnt_reg__0[2]),
        .I3(rxvalid_cnt_reg__0[3]),
        .O(gt_rxvalid_q_i_6_n_0));
  LUT6 #(
    .INIT(64'h0000000000020000)) 
    \gtx_channel.gtxe2_channel_i_i_50 
       (.I0(\gtx_channel.gtxe2_channel_i_i_59_n_0 ),
        .I1(converge_cnt_reg[1]),
        .I2(converge_cnt_reg[0]),
        .I3(converge_cnt_reg[2]),
        .I4(converge_cnt_reg[3]),
        .I5(\gtx_channel.gtxe2_channel_i_i_60_n_0 ),
        .O(\converge_cnt_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \gtx_channel.gtxe2_channel_i_i_51 
       (.I0(converge_cnt_reg[6]),
        .I1(converge_cnt_reg[7]),
        .I2(converge_cnt_reg[4]),
        .I3(converge_cnt_reg[5]),
        .I4(converge_cnt_reg[21]),
        .I5(converge_cnt_reg[13]),
        .O(\converge_cnt_reg[6]_0 ));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \gtx_channel.gtxe2_channel_i_i_52 
       (.I0(converge_cnt_reg[15]),
        .I1(converge_cnt_reg[18]),
        .I2(converge_cnt_reg[19]),
        .I3(converge_cnt_reg[17]),
        .I4(converge_cnt_reg[16]),
        .O(\converge_cnt_reg[15]_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \gtx_channel.gtxe2_channel_i_i_59 
       (.I0(converge_cnt_reg[20]),
        .I1(converge_cnt_reg[14]),
        .I2(converge_cnt_reg[12]),
        .O(\gtx_channel.gtxe2_channel_i_i_59_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \gtx_channel.gtxe2_channel_i_i_60 
       (.I0(converge_cnt_reg[9]),
        .I1(converge_cnt_reg[8]),
        .I2(converge_cnt_reg[11]),
        .I3(converge_cnt_reg[10]),
        .O(\gtx_channel.gtxe2_channel_i_i_60_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \oobclk_div.oobclk_cnt[0]_i_1 
       (.I0(oobclk_cnt[0]),
        .O(p_1_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \oobclk_div.oobclk_cnt[1]_i_1 
       (.I0(oobclk_cnt[0]),
        .I1(oobclk_cnt[1]),
        .O(p_1_in__0[1]));
  FDRE #(
    .INIT(1'b0)) 
    \oobclk_div.oobclk_cnt_reg[0] 
       (.C(pipe_oobclk_in),
        .CE(1'b1),
        .D(p_1_in__0[0]),
        .Q(oobclk_cnt[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \oobclk_div.oobclk_cnt_reg[1] 
       (.C(pipe_oobclk_in),
        .CE(1'b1),
        .D(p_1_in__0[1]),
        .Q(oobclk_cnt[1]),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hB8)) 
    \oobclk_div.oobclk_i_1 
       (.I0(oobclk_cnt[1]),
        .I1(pclk_sel_reg2),
        .I2(oobclk_cnt[0]),
        .O(\oobclk_div.oobclk_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \oobclk_div.oobclk_reg 
       (.C(pipe_oobclk_in),
        .CE(1'b1),
        .D(\oobclk_div.oobclk_i_1_n_0 ),
        .Q(USER_OOBCLK),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE pclk_sel_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_pclk_sel_out),
        .Q(pclk_sel_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE pclk_sel_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pclk_sel_reg1),
        .Q(pclk_sel_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_done_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(Q[1]),
        .Q(rate_done_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_done_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_done_reg1),
        .Q(rate_done_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_gen3_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(USER_RATE_GEN3),
        .Q(rate_gen3_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_gen3_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_gen3_reg1),
        .Q(rate_gen3_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(Q[0]),
        .Q(rate_idle_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_idle_reg1),
        .Q(rate_idle_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_rxsync_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rate_rxsync_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_rxsync_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_rxsync_reg1),
        .Q(rate_rxsync_reg2),
        .R(RST_RXUSRCLK_RESET));
  LUT2 #(
    .INIT(4'h8)) 
    \resetdone_reg1[0]_i_1 
       (.I0(rxresetdone_reg2),
        .I1(txresetdone_reg2),
        .O(RST_RESETDONE));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_start_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(resetovrd_start_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_start_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(resetovrd_start_reg1),
        .Q(resetovrd_start_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(RST_IDLE),
        .Q(rst_idle_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rst_idle_reg1),
        .Q(rst_idle_reg2),
        .R(RST_RXUSRCLK_RESET));
  LUT5 #(
    .INIT(32'hD0505050)) 
    \rxcdrlock_cnt[0]_i_1 
       (.I0(rxcdrlock_cnt_reg__0[0]),
        .I1(rxcdrlock_cnt_reg__0[2]),
        .I2(rxcdrlock_reg2),
        .I3(rxcdrlock_cnt_reg__0[1]),
        .I4(rxcdrlock_cnt_reg__0[3]),
        .O(p_0_in__0[0]));
  LUT5 #(
    .INIT(32'h8FF00000)) 
    \rxcdrlock_cnt[1]_i_1 
       (.I0(rxcdrlock_cnt_reg__0[3]),
        .I1(rxcdrlock_cnt_reg__0[2]),
        .I2(rxcdrlock_cnt_reg__0[0]),
        .I3(rxcdrlock_cnt_reg__0[1]),
        .I4(rxcdrlock_reg2),
        .O(p_0_in__0[1]));
  LUT5 #(
    .INIT(32'hF8780000)) 
    \rxcdrlock_cnt[2]_i_1 
       (.I0(rxcdrlock_cnt_reg__0[0]),
        .I1(rxcdrlock_cnt_reg__0[1]),
        .I2(rxcdrlock_cnt_reg__0[2]),
        .I3(rxcdrlock_cnt_reg__0[3]),
        .I4(rxcdrlock_reg2),
        .O(p_0_in__0[2]));
  LUT5 #(
    .INIT(32'hFF008000)) 
    \rxcdrlock_cnt[3]_i_1 
       (.I0(rxcdrlock_cnt_reg__0[0]),
        .I1(rxcdrlock_cnt_reg__0[1]),
        .I2(rxcdrlock_cnt_reg__0[2]),
        .I3(rxcdrlock_reg2),
        .I4(rxcdrlock_cnt_reg__0[3]),
        .O(p_0_in__0[3]));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(rxcdrlock_cnt_reg__0[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(rxcdrlock_cnt_reg__0[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(rxcdrlock_cnt_reg__0[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(rxcdrlock_cnt_reg__0[3]),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h80000000)) 
    \rxcdrlock_reg1[0]_i_1 
       (.I0(rxcdrlock_cnt_reg__0[2]),
        .I1(rxcdrlock_cnt_reg__0[3]),
        .I2(gt_rxcdrlock_0),
        .I3(rxcdrlock_cnt_reg__0[1]),
        .I4(rxcdrlock_cnt_reg__0[0]),
        .O(RST_RXCDRLOCK));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gt_rxcdrlock_0),
        .Q(rxcdrlock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxcdrlock_reg1),
        .Q(rxcdrlock_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_adapt_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_RXEQ_ADAPT_DONE),
        .Q(rxeq_adapt_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_adapt_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_adapt_done_reg1),
        .Q(rxeq_adapt_done_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_RXRESETDONE),
        .Q(rxresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxresetdone_reg1),
        .Q(rxresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxstatus_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(pipe_rxstatus),
        .Q(rxstatus_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxstatus_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rxstatus_reg1),
        .Q(rxstatus_reg2),
        .R(RST_RXUSRCLK_RESET));
  LUT6 #(
    .INIT(64'hC404040404040404)) 
    \rxvalid_cnt[0]_i_1 
       (.I0(rxstatus_reg2),
        .I1(rxvalid_reg2),
        .I2(rxvalid_cnt_reg__0[0]),
        .I3(rxvalid_cnt_reg__0[1]),
        .I4(rxvalid_cnt_reg__0[2]),
        .I5(rxvalid_cnt_reg__0[3]),
        .O(p_0_in__0__0[0]));
  LUT6 #(
    .INIT(64'h808000F000F00000)) 
    \rxvalid_cnt[1]_i_1 
       (.I0(rxvalid_cnt_reg__0[3]),
        .I1(rxvalid_cnt_reg__0[2]),
        .I2(rxvalid_reg2),
        .I3(rxstatus_reg2),
        .I4(rxvalid_cnt_reg__0[1]),
        .I5(rxvalid_cnt_reg__0[0]),
        .O(p_0_in__0__0[1]));
  LUT6 #(
    .INIT(64'h80BF000000C00000)) 
    \rxvalid_cnt[2]_i_1 
       (.I0(rxvalid_cnt_reg__0[3]),
        .I1(rxvalid_cnt_reg__0[0]),
        .I2(rxvalid_cnt_reg__0[1]),
        .I3(rxstatus_reg2),
        .I4(rxvalid_reg2),
        .I5(rxvalid_cnt_reg__0[2]),
        .O(p_0_in__0__0[2]));
  LUT6 #(
    .INIT(64'h8C08080808080808)) 
    \rxvalid_cnt[3]_i_1 
       (.I0(rxvalid_cnt_reg__0[3]),
        .I1(rxvalid_reg2),
        .I2(rxstatus_reg2),
        .I3(rxvalid_cnt_reg__0[2]),
        .I4(rxvalid_cnt_reg__0[1]),
        .I5(rxvalid_cnt_reg__0[0]),
        .O(p_0_in__0__0[3]));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[0] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__0__0[0]),
        .Q(rxvalid_cnt_reg__0[0]),
        .R(RST_RXUSRCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[1] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__0__0[1]),
        .Q(rxvalid_cnt_reg__0[1]),
        .R(RST_RXUSRCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[2] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__0__0[2]),
        .Q(rxvalid_cnt_reg__0[2]),
        .R(RST_RXUSRCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[3] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__0__0[3]),
        .Q(rxvalid_cnt_reg__0[3]),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxvalid_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(gt_rxvalid_0),
        .Q(rxvalid_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxvalid_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rxvalid_reg1),
        .Q(rxvalid_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txcompliance_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_TXCOMPLIANCE),
        .Q(txcompliance_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txcompliance_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcompliance_reg1),
        .Q(txcompliance_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txelecidle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_TXELECIDLE),
        .Q(txelecidle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txelecidle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txelecidle_reg1),
        .Q(txelecidle_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h00000000BBB0B0B0)) 
    txphaligndone_reg1_i_1
       (.I0(pipe_txphaligndone[1]),
        .I1(user_active_lane),
        .I2(pipe_txphaligndone[0]),
        .I3(txelecidle_reg2),
        .I4(txcompliance_reg2),
        .I5(txphaligndone_reg1_reg),
        .O(SYNC_TXPHALIGNDONE));
  LUT6 #(
    .INIT(64'h00000000BBB0B0B0)) 
    txphinitdone_reg1_i_1
       (.I0(pipe_txphinitdone[1]),
        .I1(user_active_lane),
        .I2(pipe_txphinitdone[0]),
        .I3(txelecidle_reg2),
        .I4(txcompliance_reg2),
        .I5(txphinitdone_reg1_reg),
        .O(SYNC_TXPHINITDONE));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_TXRESETDONE),
        .Q(txresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txresetdone_reg1),
        .Q(txresetdone_reg2),
        .R(RST_CPLLRESET));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pipe_user" *) 
module pcie_7x_0_pcie_7x_0_pipe_user_26
   (rst_idle_reg2_reg_0,
    out,
    txelecidle_reg2_reg_0,
    txcompliance_reg2_reg_0,
    USER_OOBCLK,
    RST_RXCDRLOCK,
    rate_idle_reg2_reg_0,
    user_rx_converge,
    RST_RESETDONE,
    user_active_lane,
    gt_rxvalid_1,
    gt_rxvalid_q_reg,
    gt_rxvalid_q_reg_0,
    RST_CPLLRESET,
    pipe_pclk_sel_out,
    pipe_pclk_in,
    pipe_oobclk_in,
    USER_TXRESETDONE,
    USER_RXRESETDONE,
    txelecidle_reg1_reg_0,
    txcompliance_reg1_reg_0,
    gt_rxcdrlock_1,
    RST_RXUSRCLK_RESET,
    pipe_rxusrclk_in,
    pipe_rxstatus,
    RST_IDLE,
    Q,
    USER_RATE_GEN3,
    USER_RXEQ_ADAPT_DONE,
    RST_PHYSTATUS);
  output rst_idle_reg2_reg_0;
  output out;
  output txelecidle_reg2_reg_0;
  output txcompliance_reg2_reg_0;
  output USER_OOBCLK;
  output [0:0]RST_RXCDRLOCK;
  output rate_idle_reg2_reg_0;
  output [0:0]user_rx_converge;
  output [0:0]RST_RESETDONE;
  output [0:0]user_active_lane;
  input gt_rxvalid_1;
  input gt_rxvalid_q_reg;
  input gt_rxvalid_q_reg_0;
  input RST_CPLLRESET;
  input [0:0]pipe_pclk_sel_out;
  input pipe_pclk_in;
  input pipe_oobclk_in;
  input USER_TXRESETDONE;
  input USER_RXRESETDONE;
  input txelecidle_reg1_reg_0;
  input txcompliance_reg1_reg_0;
  input gt_rxcdrlock_1;
  input RST_RXUSRCLK_RESET;
  input pipe_rxusrclk_in;
  input [0:0]pipe_rxstatus;
  input RST_IDLE;
  input [1:0]Q;
  input USER_RATE_GEN3;
  input USER_RXEQ_ADAPT_DONE;
  input [0:0]RST_PHYSTATUS;

  wire [1:0]Q;
  wire RST_CPLLRESET;
  wire RST_IDLE;
  wire [0:0]RST_PHYSTATUS;
  wire [0:0]RST_RESETDONE;
  wire [0:0]RST_RXCDRLOCK;
  wire RST_RXUSRCLK_RESET;
  wire USER_OOBCLK;
  wire USER_RATE_GEN3;
  wire USER_RXEQ_ADAPT_DONE;
  wire USER_RXRESETDONE;
  wire USER_TXRESETDONE;
  wire \converge_cnt[0]_i_1__2_n_0 ;
  wire \converge_cnt[0]_i_4__0_n_0 ;
  wire \converge_cnt[0]_i_5__0_n_0 ;
  wire \converge_cnt[0]_i_6__0_n_0 ;
  wire [21:0]converge_cnt_reg;
  wire \converge_cnt_reg[0]_i_3__0_n_0 ;
  wire \converge_cnt_reg[0]_i_3__0_n_1 ;
  wire \converge_cnt_reg[0]_i_3__0_n_2 ;
  wire \converge_cnt_reg[0]_i_3__0_n_3 ;
  wire \converge_cnt_reg[0]_i_3__0_n_4 ;
  wire \converge_cnt_reg[0]_i_3__0_n_5 ;
  wire \converge_cnt_reg[0]_i_3__0_n_6 ;
  wire \converge_cnt_reg[0]_i_3__0_n_7 ;
  wire \converge_cnt_reg[12]_i_1__0_n_0 ;
  wire \converge_cnt_reg[12]_i_1__0_n_1 ;
  wire \converge_cnt_reg[12]_i_1__0_n_2 ;
  wire \converge_cnt_reg[12]_i_1__0_n_3 ;
  wire \converge_cnt_reg[12]_i_1__0_n_4 ;
  wire \converge_cnt_reg[12]_i_1__0_n_5 ;
  wire \converge_cnt_reg[12]_i_1__0_n_6 ;
  wire \converge_cnt_reg[12]_i_1__0_n_7 ;
  wire \converge_cnt_reg[16]_i_1__0_n_0 ;
  wire \converge_cnt_reg[16]_i_1__0_n_1 ;
  wire \converge_cnt_reg[16]_i_1__0_n_2 ;
  wire \converge_cnt_reg[16]_i_1__0_n_3 ;
  wire \converge_cnt_reg[16]_i_1__0_n_4 ;
  wire \converge_cnt_reg[16]_i_1__0_n_5 ;
  wire \converge_cnt_reg[16]_i_1__0_n_6 ;
  wire \converge_cnt_reg[16]_i_1__0_n_7 ;
  wire \converge_cnt_reg[20]_i_1__0_n_3 ;
  wire \converge_cnt_reg[20]_i_1__0_n_6 ;
  wire \converge_cnt_reg[20]_i_1__0_n_7 ;
  wire \converge_cnt_reg[4]_i_1__0_n_0 ;
  wire \converge_cnt_reg[4]_i_1__0_n_1 ;
  wire \converge_cnt_reg[4]_i_1__0_n_2 ;
  wire \converge_cnt_reg[4]_i_1__0_n_3 ;
  wire \converge_cnt_reg[4]_i_1__0_n_4 ;
  wire \converge_cnt_reg[4]_i_1__0_n_5 ;
  wire \converge_cnt_reg[4]_i_1__0_n_6 ;
  wire \converge_cnt_reg[4]_i_1__0_n_7 ;
  wire \converge_cnt_reg[8]_i_1__0_n_0 ;
  wire \converge_cnt_reg[8]_i_1__0_n_1 ;
  wire \converge_cnt_reg[8]_i_1__0_n_2 ;
  wire \converge_cnt_reg[8]_i_1__0_n_3 ;
  wire \converge_cnt_reg[8]_i_1__0_n_4 ;
  wire \converge_cnt_reg[8]_i_1__0_n_5 ;
  wire \converge_cnt_reg[8]_i_1__0_n_6 ;
  wire \converge_cnt_reg[8]_i_1__0_n_7 ;
  wire converge_gen3_i_1__0_n_0;
  wire converge_gen3_reg_n_0;
  wire gt_rxcdrlock_1;
  wire gt_rxvalid_1;
  wire gt_rxvalid_q_i_5_n_0;
  wire gt_rxvalid_q_reg;
  wire gt_rxvalid_q_reg_0;
  wire \gtx_channel.gtxe2_channel_i_i_54_n_0 ;
  wire \gtx_channel.gtxe2_channel_i_i_55_n_0 ;
  wire \gtx_channel.gtxe2_channel_i_i_56_n_0 ;
  wire \gtx_channel.gtxe2_channel_i_i_57_n_0 ;
  wire \gtx_channel.gtxe2_channel_i_i_58_n_0 ;
  wire [1:0]oobclk_cnt;
  wire \oobclk_div.oobclk_i_1__0_n_0 ;
  wire [3:0]p_0_in__0;
  wire [3:0]p_0_in__0__0;
  wire [1:0]p_1_in__0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire pclk_sel_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire pclk_sel_reg2;
  wire pipe_oobclk_in;
  wire pipe_pclk_in;
  wire [0:0]pipe_pclk_sel_out;
  wire [0:0]pipe_rxstatus;
  wire pipe_rxusrclk_in;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_done_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_gen3_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_gen3_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg2;
  wire rate_idle_reg2_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_rxsync_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_rxsync_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg2;
  wire rst_idle_reg2_reg_0;
  wire [3:0]rxcdrlock_cnt_reg__0__0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_adapt_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_adapt_done_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxstatus_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxstatus_reg2;
  wire [3:0]rxvalid_cnt_reg__0__0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxvalid_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxvalid_reg2;
  wire sel;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txcompliance_reg1;
  wire txcompliance_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txcompliance_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txelecidle_reg1;
  wire txelecidle_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txelecidle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg2;
  wire [0:0]user_active_lane;
  wire [0:0]user_rx_converge;
  wire [3:1]\NLW_converge_cnt_reg[20]_i_1__0_CO_UNCONNECTED ;
  wire [3:2]\NLW_converge_cnt_reg[20]_i_1__0_O_UNCONNECTED ;

  assign out = rst_idle_reg2;
  assign txcompliance_reg2_reg_0 = txcompliance_reg2;
  assign txelecidle_reg2_reg_0 = txelecidle_reg2;
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_onehot_txsync_fsm.fsm_tx[5]_i_2__0 
       (.I0(txcompliance_reg2),
        .I1(txelecidle_reg2),
        .O(user_active_lane));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \converge_cnt[0]_i_1__2 
       (.I0(rate_gen3_reg2),
        .I1(RST_CPLLRESET),
        .I2(rst_idle_reg2),
        .I3(rate_idle_reg2),
        .O(\converge_cnt[0]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF5555555D)) 
    \converge_cnt[0]_i_2__0 
       (.I0(converge_cnt_reg[21]),
        .I1(\converge_cnt[0]_i_4__0_n_0 ),
        .I2(converge_cnt_reg[12]),
        .I3(converge_cnt_reg[14]),
        .I4(converge_cnt_reg[20]),
        .I5(\converge_cnt[0]_i_5__0_n_0 ),
        .O(sel));
  LUT5 #(
    .INIT(32'h00000001)) 
    \converge_cnt[0]_i_4__0 
       (.I0(converge_cnt_reg[3]),
        .I1(converge_cnt_reg[4]),
        .I2(converge_cnt_reg[5]),
        .I3(converge_cnt_reg[7]),
        .I4(converge_cnt_reg[6]),
        .O(\converge_cnt[0]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h0A0B0A0F0A0B0A0B)) 
    \converge_cnt[0]_i_5__0 
       (.I0(\gtx_channel.gtxe2_channel_i_i_58_n_0 ),
        .I1(converge_cnt_reg[13]),
        .I2(converge_cnt_reg[20]),
        .I3(converge_cnt_reg[14]),
        .I4(converge_cnt_reg[12]),
        .I5(\gtx_channel.gtxe2_channel_i_i_56_n_0 ),
        .O(\converge_cnt[0]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \converge_cnt[0]_i_6__0 
       (.I0(converge_cnt_reg[0]),
        .O(\converge_cnt[0]_i_6__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3__0_n_7 ),
        .Q(converge_cnt_reg[0]),
        .R(\converge_cnt[0]_i_1__2_n_0 ));
  CARRY4 \converge_cnt_reg[0]_i_3__0 
       (.CI(1'b0),
        .CO({\converge_cnt_reg[0]_i_3__0_n_0 ,\converge_cnt_reg[0]_i_3__0_n_1 ,\converge_cnt_reg[0]_i_3__0_n_2 ,\converge_cnt_reg[0]_i_3__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\converge_cnt_reg[0]_i_3__0_n_4 ,\converge_cnt_reg[0]_i_3__0_n_5 ,\converge_cnt_reg[0]_i_3__0_n_6 ,\converge_cnt_reg[0]_i_3__0_n_7 }),
        .S({converge_cnt_reg[3:1],\converge_cnt[0]_i_6__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[10] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1__0_n_5 ),
        .Q(converge_cnt_reg[10]),
        .R(\converge_cnt[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[11] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1__0_n_4 ),
        .Q(converge_cnt_reg[11]),
        .R(\converge_cnt[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[12] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1__0_n_7 ),
        .Q(converge_cnt_reg[12]),
        .R(\converge_cnt[0]_i_1__2_n_0 ));
  CARRY4 \converge_cnt_reg[12]_i_1__0 
       (.CI(\converge_cnt_reg[8]_i_1__0_n_0 ),
        .CO({\converge_cnt_reg[12]_i_1__0_n_0 ,\converge_cnt_reg[12]_i_1__0_n_1 ,\converge_cnt_reg[12]_i_1__0_n_2 ,\converge_cnt_reg[12]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[12]_i_1__0_n_4 ,\converge_cnt_reg[12]_i_1__0_n_5 ,\converge_cnt_reg[12]_i_1__0_n_6 ,\converge_cnt_reg[12]_i_1__0_n_7 }),
        .S(converge_cnt_reg[15:12]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[13] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1__0_n_6 ),
        .Q(converge_cnt_reg[13]),
        .R(\converge_cnt[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[14] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1__0_n_5 ),
        .Q(converge_cnt_reg[14]),
        .R(\converge_cnt[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[15] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1__0_n_4 ),
        .Q(converge_cnt_reg[15]),
        .R(\converge_cnt[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[16] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1__0_n_7 ),
        .Q(converge_cnt_reg[16]),
        .R(\converge_cnt[0]_i_1__2_n_0 ));
  CARRY4 \converge_cnt_reg[16]_i_1__0 
       (.CI(\converge_cnt_reg[12]_i_1__0_n_0 ),
        .CO({\converge_cnt_reg[16]_i_1__0_n_0 ,\converge_cnt_reg[16]_i_1__0_n_1 ,\converge_cnt_reg[16]_i_1__0_n_2 ,\converge_cnt_reg[16]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[16]_i_1__0_n_4 ,\converge_cnt_reg[16]_i_1__0_n_5 ,\converge_cnt_reg[16]_i_1__0_n_6 ,\converge_cnt_reg[16]_i_1__0_n_7 }),
        .S(converge_cnt_reg[19:16]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[17] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1__0_n_6 ),
        .Q(converge_cnt_reg[17]),
        .R(\converge_cnt[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[18] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1__0_n_5 ),
        .Q(converge_cnt_reg[18]),
        .R(\converge_cnt[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[19] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1__0_n_4 ),
        .Q(converge_cnt_reg[19]),
        .R(\converge_cnt[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3__0_n_6 ),
        .Q(converge_cnt_reg[1]),
        .R(\converge_cnt[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[20] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[20]_i_1__0_n_7 ),
        .Q(converge_cnt_reg[20]),
        .R(\converge_cnt[0]_i_1__2_n_0 ));
  CARRY4 \converge_cnt_reg[20]_i_1__0 
       (.CI(\converge_cnt_reg[16]_i_1__0_n_0 ),
        .CO({\NLW_converge_cnt_reg[20]_i_1__0_CO_UNCONNECTED [3:1],\converge_cnt_reg[20]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_converge_cnt_reg[20]_i_1__0_O_UNCONNECTED [3:2],\converge_cnt_reg[20]_i_1__0_n_6 ,\converge_cnt_reg[20]_i_1__0_n_7 }),
        .S({1'b0,1'b0,converge_cnt_reg[21:20]}));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[21] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[20]_i_1__0_n_6 ),
        .Q(converge_cnt_reg[21]),
        .R(\converge_cnt[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3__0_n_5 ),
        .Q(converge_cnt_reg[2]),
        .R(\converge_cnt[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3__0_n_4 ),
        .Q(converge_cnt_reg[3]),
        .R(\converge_cnt[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[4] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1__0_n_7 ),
        .Q(converge_cnt_reg[4]),
        .R(\converge_cnt[0]_i_1__2_n_0 ));
  CARRY4 \converge_cnt_reg[4]_i_1__0 
       (.CI(\converge_cnt_reg[0]_i_3__0_n_0 ),
        .CO({\converge_cnt_reg[4]_i_1__0_n_0 ,\converge_cnt_reg[4]_i_1__0_n_1 ,\converge_cnt_reg[4]_i_1__0_n_2 ,\converge_cnt_reg[4]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[4]_i_1__0_n_4 ,\converge_cnt_reg[4]_i_1__0_n_5 ,\converge_cnt_reg[4]_i_1__0_n_6 ,\converge_cnt_reg[4]_i_1__0_n_7 }),
        .S(converge_cnt_reg[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[5] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1__0_n_6 ),
        .Q(converge_cnt_reg[5]),
        .R(\converge_cnt[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[6] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1__0_n_5 ),
        .Q(converge_cnt_reg[6]),
        .R(\converge_cnt[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[7] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1__0_n_4 ),
        .Q(converge_cnt_reg[7]),
        .R(\converge_cnt[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[8] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1__0_n_7 ),
        .Q(converge_cnt_reg[8]),
        .R(\converge_cnt[0]_i_1__2_n_0 ));
  CARRY4 \converge_cnt_reg[8]_i_1__0 
       (.CI(\converge_cnt_reg[4]_i_1__0_n_0 ),
        .CO({\converge_cnt_reg[8]_i_1__0_n_0 ,\converge_cnt_reg[8]_i_1__0_n_1 ,\converge_cnt_reg[8]_i_1__0_n_2 ,\converge_cnt_reg[8]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[8]_i_1__0_n_4 ,\converge_cnt_reg[8]_i_1__0_n_5 ,\converge_cnt_reg[8]_i_1__0_n_6 ,\converge_cnt_reg[8]_i_1__0_n_7 }),
        .S(converge_cnt_reg[11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[9] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1__0_n_6 ),
        .Q(converge_cnt_reg[9]),
        .R(\converge_cnt[0]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'hC8)) 
    converge_gen3_i_1__0
       (.I0(rxeq_adapt_done_reg2),
        .I1(rate_gen3_reg2),
        .I2(converge_gen3_reg_n_0),
        .O(converge_gen3_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    converge_gen3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_gen3_i_1__0_n_0),
        .Q(converge_gen3_reg_n_0),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hFFFFA8FF)) 
    gt_rx_phy_status_q_i_1__0
       (.I0(RST_PHYSTATUS),
        .I1(rate_idle_reg2),
        .I2(rate_rxsync_reg2),
        .I3(rst_idle_reg2),
        .I4(rate_done_reg2),
        .O(rate_idle_reg2_reg_0));
  LUT6 #(
    .INIT(64'h7FFF7FFFFFFF7FFF)) 
    gt_rxvalid_q_i_4
       (.I0(gt_rxvalid_q_i_5_n_0),
        .I1(gt_rxvalid_1),
        .I2(rst_idle_reg2),
        .I3(rate_idle_reg2),
        .I4(gt_rxvalid_q_reg),
        .I5(gt_rxvalid_q_reg_0),
        .O(rst_idle_reg2_reg_0));
  LUT4 #(
    .INIT(16'h8000)) 
    gt_rxvalid_q_i_5
       (.I0(rxvalid_cnt_reg__0__0[0]),
        .I1(rxvalid_cnt_reg__0__0[1]),
        .I2(rxvalid_cnt_reg__0__0[2]),
        .I3(rxvalid_cnt_reg__0__0[3]),
        .O(gt_rxvalid_q_i_5_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000800)) 
    \gtx_channel.gtxe2_channel_i_i_49 
       (.I0(\gtx_channel.gtxe2_channel_i_i_54_n_0 ),
        .I1(\gtx_channel.gtxe2_channel_i_i_55_n_0 ),
        .I2(\gtx_channel.gtxe2_channel_i_i_56_n_0 ),
        .I3(\gtx_channel.gtxe2_channel_i_i_57_n_0 ),
        .I4(\gtx_channel.gtxe2_channel_i_i_58_n_0 ),
        .I5(converge_gen3_reg_n_0),
        .O(user_rx_converge));
  LUT3 #(
    .INIT(8'h01)) 
    \gtx_channel.gtxe2_channel_i_i_54 
       (.I0(converge_cnt_reg[20]),
        .I1(converge_cnt_reg[14]),
        .I2(converge_cnt_reg[12]),
        .O(\gtx_channel.gtxe2_channel_i_i_54_n_0 ));
  LUT4 #(
    .INIT(16'h0100)) 
    \gtx_channel.gtxe2_channel_i_i_55 
       (.I0(converge_cnt_reg[1]),
        .I1(converge_cnt_reg[0]),
        .I2(converge_cnt_reg[2]),
        .I3(converge_cnt_reg[3]),
        .O(\gtx_channel.gtxe2_channel_i_i_55_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \gtx_channel.gtxe2_channel_i_i_56 
       (.I0(converge_cnt_reg[9]),
        .I1(converge_cnt_reg[8]),
        .I2(converge_cnt_reg[11]),
        .I3(converge_cnt_reg[10]),
        .O(\gtx_channel.gtxe2_channel_i_i_56_n_0 ));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \gtx_channel.gtxe2_channel_i_i_57 
       (.I0(converge_cnt_reg[6]),
        .I1(converge_cnt_reg[7]),
        .I2(converge_cnt_reg[4]),
        .I3(converge_cnt_reg[5]),
        .I4(converge_cnt_reg[21]),
        .I5(converge_cnt_reg[13]),
        .O(\gtx_channel.gtxe2_channel_i_i_57_n_0 ));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \gtx_channel.gtxe2_channel_i_i_58 
       (.I0(converge_cnt_reg[15]),
        .I1(converge_cnt_reg[18]),
        .I2(converge_cnt_reg[19]),
        .I3(converge_cnt_reg[17]),
        .I4(converge_cnt_reg[16]),
        .O(\gtx_channel.gtxe2_channel_i_i_58_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \oobclk_div.oobclk_cnt[0]_i_1__0 
       (.I0(oobclk_cnt[0]),
        .O(p_1_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \oobclk_div.oobclk_cnt[1]_i_1__0 
       (.I0(oobclk_cnt[0]),
        .I1(oobclk_cnt[1]),
        .O(p_1_in__0[1]));
  FDRE #(
    .INIT(1'b0)) 
    \oobclk_div.oobclk_cnt_reg[0] 
       (.C(pipe_oobclk_in),
        .CE(1'b1),
        .D(p_1_in__0[0]),
        .Q(oobclk_cnt[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \oobclk_div.oobclk_cnt_reg[1] 
       (.C(pipe_oobclk_in),
        .CE(1'b1),
        .D(p_1_in__0[1]),
        .Q(oobclk_cnt[1]),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hB8)) 
    \oobclk_div.oobclk_i_1__0 
       (.I0(oobclk_cnt[1]),
        .I1(pclk_sel_reg2),
        .I2(oobclk_cnt[0]),
        .O(\oobclk_div.oobclk_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \oobclk_div.oobclk_reg 
       (.C(pipe_oobclk_in),
        .CE(1'b1),
        .D(\oobclk_div.oobclk_i_1__0_n_0 ),
        .Q(USER_OOBCLK),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE pclk_sel_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_pclk_sel_out),
        .Q(pclk_sel_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE pclk_sel_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pclk_sel_reg1),
        .Q(pclk_sel_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_done_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(Q[1]),
        .Q(rate_done_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_done_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_done_reg1),
        .Q(rate_done_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_gen3_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(USER_RATE_GEN3),
        .Q(rate_gen3_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_gen3_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_gen3_reg1),
        .Q(rate_gen3_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(Q[0]),
        .Q(rate_idle_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_idle_reg1),
        .Q(rate_idle_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_rxsync_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rate_rxsync_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_rxsync_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_rxsync_reg1),
        .Q(rate_rxsync_reg2),
        .R(RST_RXUSRCLK_RESET));
  LUT2 #(
    .INIT(4'h8)) 
    \resetdone_reg1[1]_i_1 
       (.I0(rxresetdone_reg2),
        .I1(txresetdone_reg2),
        .O(RST_RESETDONE));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_start_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(resetovrd_start_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_start_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(resetovrd_start_reg1),
        .Q(resetovrd_start_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(RST_IDLE),
        .Q(rst_idle_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rst_idle_reg1),
        .Q(rst_idle_reg2),
        .R(RST_RXUSRCLK_RESET));
  LUT5 #(
    .INIT(32'hD0505050)) 
    \rxcdrlock_cnt[0]_i_1__0 
       (.I0(rxcdrlock_cnt_reg__0__0[0]),
        .I1(rxcdrlock_cnt_reg__0__0[2]),
        .I2(rxcdrlock_reg2),
        .I3(rxcdrlock_cnt_reg__0__0[1]),
        .I4(rxcdrlock_cnt_reg__0__0[3]),
        .O(p_0_in__0[0]));
  LUT5 #(
    .INIT(32'h8FF00000)) 
    \rxcdrlock_cnt[1]_i_1__0 
       (.I0(rxcdrlock_cnt_reg__0__0[3]),
        .I1(rxcdrlock_cnt_reg__0__0[2]),
        .I2(rxcdrlock_cnt_reg__0__0[0]),
        .I3(rxcdrlock_cnt_reg__0__0[1]),
        .I4(rxcdrlock_reg2),
        .O(p_0_in__0[1]));
  LUT5 #(
    .INIT(32'hF8780000)) 
    \rxcdrlock_cnt[2]_i_1__0 
       (.I0(rxcdrlock_cnt_reg__0__0[0]),
        .I1(rxcdrlock_cnt_reg__0__0[1]),
        .I2(rxcdrlock_cnt_reg__0__0[2]),
        .I3(rxcdrlock_cnt_reg__0__0[3]),
        .I4(rxcdrlock_reg2),
        .O(p_0_in__0[2]));
  LUT5 #(
    .INIT(32'hFF008000)) 
    \rxcdrlock_cnt[3]_i_1__0 
       (.I0(rxcdrlock_cnt_reg__0__0[0]),
        .I1(rxcdrlock_cnt_reg__0__0[1]),
        .I2(rxcdrlock_cnt_reg__0__0[2]),
        .I3(rxcdrlock_reg2),
        .I4(rxcdrlock_cnt_reg__0__0[3]),
        .O(p_0_in__0[3]));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(rxcdrlock_cnt_reg__0__0[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(rxcdrlock_cnt_reg__0__0[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(rxcdrlock_cnt_reg__0__0[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(rxcdrlock_cnt_reg__0__0[3]),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h80000000)) 
    \rxcdrlock_reg1[1]_i_1 
       (.I0(rxcdrlock_cnt_reg__0__0[2]),
        .I1(rxcdrlock_cnt_reg__0__0[3]),
        .I2(gt_rxcdrlock_1),
        .I3(rxcdrlock_cnt_reg__0__0[1]),
        .I4(rxcdrlock_cnt_reg__0__0[0]),
        .O(RST_RXCDRLOCK));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gt_rxcdrlock_1),
        .Q(rxcdrlock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxcdrlock_reg1),
        .Q(rxcdrlock_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_adapt_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_RXEQ_ADAPT_DONE),
        .Q(rxeq_adapt_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_adapt_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_adapt_done_reg1),
        .Q(rxeq_adapt_done_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_RXRESETDONE),
        .Q(rxresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxresetdone_reg1),
        .Q(rxresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxstatus_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(pipe_rxstatus),
        .Q(rxstatus_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxstatus_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rxstatus_reg1),
        .Q(rxstatus_reg2),
        .R(RST_RXUSRCLK_RESET));
  LUT6 #(
    .INIT(64'hC404040404040404)) 
    \rxvalid_cnt[0]_i_1__0 
       (.I0(rxstatus_reg2),
        .I1(rxvalid_reg2),
        .I2(rxvalid_cnt_reg__0__0[0]),
        .I3(rxvalid_cnt_reg__0__0[1]),
        .I4(rxvalid_cnt_reg__0__0[2]),
        .I5(rxvalid_cnt_reg__0__0[3]),
        .O(p_0_in__0__0[0]));
  LUT6 #(
    .INIT(64'h808000F000F00000)) 
    \rxvalid_cnt[1]_i_1__0 
       (.I0(rxvalid_cnt_reg__0__0[3]),
        .I1(rxvalid_cnt_reg__0__0[2]),
        .I2(rxvalid_reg2),
        .I3(rxstatus_reg2),
        .I4(rxvalid_cnt_reg__0__0[1]),
        .I5(rxvalid_cnt_reg__0__0[0]),
        .O(p_0_in__0__0[1]));
  LUT6 #(
    .INIT(64'h80BF000000C00000)) 
    \rxvalid_cnt[2]_i_1__0 
       (.I0(rxvalid_cnt_reg__0__0[3]),
        .I1(rxvalid_cnt_reg__0__0[0]),
        .I2(rxvalid_cnt_reg__0__0[1]),
        .I3(rxstatus_reg2),
        .I4(rxvalid_reg2),
        .I5(rxvalid_cnt_reg__0__0[2]),
        .O(p_0_in__0__0[2]));
  LUT6 #(
    .INIT(64'h8C08080808080808)) 
    \rxvalid_cnt[3]_i_1__0 
       (.I0(rxvalid_cnt_reg__0__0[3]),
        .I1(rxvalid_reg2),
        .I2(rxstatus_reg2),
        .I3(rxvalid_cnt_reg__0__0[2]),
        .I4(rxvalid_cnt_reg__0__0[1]),
        .I5(rxvalid_cnt_reg__0__0[0]),
        .O(p_0_in__0__0[3]));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[0] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__0__0[0]),
        .Q(rxvalid_cnt_reg__0__0[0]),
        .R(RST_RXUSRCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[1] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__0__0[1]),
        .Q(rxvalid_cnt_reg__0__0[1]),
        .R(RST_RXUSRCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[2] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__0__0[2]),
        .Q(rxvalid_cnt_reg__0__0[2]),
        .R(RST_RXUSRCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[3] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__0__0[3]),
        .Q(rxvalid_cnt_reg__0__0[3]),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxvalid_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(gt_rxvalid_1),
        .Q(rxvalid_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxvalid_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rxvalid_reg1),
        .Q(rxvalid_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txcompliance_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcompliance_reg1_reg_0),
        .Q(txcompliance_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txcompliance_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcompliance_reg1),
        .Q(txcompliance_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txelecidle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txelecidle_reg1_reg_0),
        .Q(txelecidle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txelecidle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txelecidle_reg1),
        .Q(txelecidle_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_TXRESETDONE),
        .Q(txresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txresetdone_reg1),
        .Q(txresetdone_reg2),
        .R(RST_CPLLRESET));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pipe_user" *) 
module pcie_7x_0_pcie_7x_0_pipe_user_32
   (reg_clock_locked_reg,
    rst_idle_reg2_reg_0,
    txcompliance_reg2_reg_0,
    txcompliance_reg2_reg_1,
    txelecidle_reg2_reg_0,
    txcompliance_reg2_reg_2,
    USER_OOBCLK,
    RST_RXCDRLOCK,
    rate_idle_reg2_reg_0,
    \converge_cnt_reg[15]_0 ,
    \converge_cnt_reg[1]_0 ,
    \converge_cnt_reg[6]_0 ,
    RST_RESETDONE,
    user_active_lane,
    converge_gen3_reg_0,
    reg_clock_locked,
    out,
    phy_rdy_n_int_reg,
    phy_rdy_n_int_reg_0,
    gt_rxvalid_2,
    gt_rxvalid_q_reg,
    gt_rxvalid_q_reg_0,
    pipe_txphaligndone,
    txphaligndone_reg1_reg,
    txphaligndone_reg1_reg_0,
    pipe_txphinitdone,
    RST_CPLLRESET,
    pipe_pclk_sel_out,
    pipe_pclk_in,
    pipe_oobclk_in,
    USER_TXRESETDONE,
    USER_RXRESETDONE,
    txelecidle_reg1_reg_0,
    txcompliance_reg1_reg_0,
    gt_rxcdrlock_2,
    RST_RXUSRCLK_RESET,
    pipe_rxusrclk_in,
    pipe_rxstatus,
    RST_IDLE,
    Q,
    rate_gen3_2,
    USER_RXEQ_ADAPT_DONE,
    RST_PHYSTATUS);
  output reg_clock_locked_reg;
  output rst_idle_reg2_reg_0;
  output txcompliance_reg2_reg_0;
  output txcompliance_reg2_reg_1;
  output txelecidle_reg2_reg_0;
  output txcompliance_reg2_reg_2;
  output USER_OOBCLK;
  output [0:0]RST_RXCDRLOCK;
  output rate_idle_reg2_reg_0;
  output \converge_cnt_reg[15]_0 ;
  output \converge_cnt_reg[1]_0 ;
  output \converge_cnt_reg[6]_0 ;
  output [0:0]RST_RESETDONE;
  output [0:0]user_active_lane;
  output converge_gen3_reg_0;
  input reg_clock_locked;
  input out;
  input phy_rdy_n_int_reg;
  input phy_rdy_n_int_reg_0;
  input gt_rxvalid_2;
  input gt_rxvalid_q_reg;
  input gt_rxvalid_q_reg_0;
  input [1:0]pipe_txphaligndone;
  input txphaligndone_reg1_reg;
  input txphaligndone_reg1_reg_0;
  input [1:0]pipe_txphinitdone;
  input RST_CPLLRESET;
  input [0:0]pipe_pclk_sel_out;
  input pipe_pclk_in;
  input pipe_oobclk_in;
  input USER_TXRESETDONE;
  input USER_RXRESETDONE;
  input txelecidle_reg1_reg_0;
  input txcompliance_reg1_reg_0;
  input gt_rxcdrlock_2;
  input RST_RXUSRCLK_RESET;
  input pipe_rxusrclk_in;
  input [0:0]pipe_rxstatus;
  input RST_IDLE;
  input [1:0]Q;
  input rate_gen3_2;
  input USER_RXEQ_ADAPT_DONE;
  input [0:0]RST_PHYSTATUS;

  wire [1:0]Q;
  wire RST_CPLLRESET;
  wire RST_IDLE;
  wire [0:0]RST_PHYSTATUS;
  wire [0:0]RST_RESETDONE;
  wire [0:0]RST_RXCDRLOCK;
  wire RST_RXUSRCLK_RESET;
  wire USER_OOBCLK;
  wire USER_RXEQ_ADAPT_DONE;
  wire USER_RXRESETDONE;
  wire USER_TXRESETDONE;
  wire \converge_cnt[0]_i_1__4_n_0 ;
  wire \converge_cnt[0]_i_4__1_n_0 ;
  wire \converge_cnt[0]_i_5__1_n_0 ;
  wire \converge_cnt[0]_i_6__1_n_0 ;
  wire \converge_cnt[0]_i_7_n_0 ;
  wire [21:0]converge_cnt_reg;
  wire \converge_cnt_reg[0]_i_3__1_n_0 ;
  wire \converge_cnt_reg[0]_i_3__1_n_1 ;
  wire \converge_cnt_reg[0]_i_3__1_n_2 ;
  wire \converge_cnt_reg[0]_i_3__1_n_3 ;
  wire \converge_cnt_reg[0]_i_3__1_n_4 ;
  wire \converge_cnt_reg[0]_i_3__1_n_5 ;
  wire \converge_cnt_reg[0]_i_3__1_n_6 ;
  wire \converge_cnt_reg[0]_i_3__1_n_7 ;
  wire \converge_cnt_reg[12]_i_1__1_n_0 ;
  wire \converge_cnt_reg[12]_i_1__1_n_1 ;
  wire \converge_cnt_reg[12]_i_1__1_n_2 ;
  wire \converge_cnt_reg[12]_i_1__1_n_3 ;
  wire \converge_cnt_reg[12]_i_1__1_n_4 ;
  wire \converge_cnt_reg[12]_i_1__1_n_5 ;
  wire \converge_cnt_reg[12]_i_1__1_n_6 ;
  wire \converge_cnt_reg[12]_i_1__1_n_7 ;
  wire \converge_cnt_reg[15]_0 ;
  wire \converge_cnt_reg[16]_i_1__1_n_0 ;
  wire \converge_cnt_reg[16]_i_1__1_n_1 ;
  wire \converge_cnt_reg[16]_i_1__1_n_2 ;
  wire \converge_cnt_reg[16]_i_1__1_n_3 ;
  wire \converge_cnt_reg[16]_i_1__1_n_4 ;
  wire \converge_cnt_reg[16]_i_1__1_n_5 ;
  wire \converge_cnt_reg[16]_i_1__1_n_6 ;
  wire \converge_cnt_reg[16]_i_1__1_n_7 ;
  wire \converge_cnt_reg[1]_0 ;
  wire \converge_cnt_reg[20]_i_1__1_n_3 ;
  wire \converge_cnt_reg[20]_i_1__1_n_6 ;
  wire \converge_cnt_reg[20]_i_1__1_n_7 ;
  wire \converge_cnt_reg[4]_i_1__1_n_0 ;
  wire \converge_cnt_reg[4]_i_1__1_n_1 ;
  wire \converge_cnt_reg[4]_i_1__1_n_2 ;
  wire \converge_cnt_reg[4]_i_1__1_n_3 ;
  wire \converge_cnt_reg[4]_i_1__1_n_4 ;
  wire \converge_cnt_reg[4]_i_1__1_n_5 ;
  wire \converge_cnt_reg[4]_i_1__1_n_6 ;
  wire \converge_cnt_reg[4]_i_1__1_n_7 ;
  wire \converge_cnt_reg[6]_0 ;
  wire \converge_cnt_reg[8]_i_1__1_n_0 ;
  wire \converge_cnt_reg[8]_i_1__1_n_1 ;
  wire \converge_cnt_reg[8]_i_1__1_n_2 ;
  wire \converge_cnt_reg[8]_i_1__1_n_3 ;
  wire \converge_cnt_reg[8]_i_1__1_n_4 ;
  wire \converge_cnt_reg[8]_i_1__1_n_5 ;
  wire \converge_cnt_reg[8]_i_1__1_n_6 ;
  wire \converge_cnt_reg[8]_i_1__1_n_7 ;
  wire converge_gen3_i_1__1_n_0;
  wire converge_gen3_reg_0;
  wire gt_rxcdrlock_2;
  wire gt_rxvalid_2;
  wire gt_rxvalid_q_i_5__0_n_0;
  wire gt_rxvalid_q_reg;
  wire gt_rxvalid_q_reg_0;
  wire \gtx_channel.gtxe2_channel_i_i_65_n_0 ;
  wire [1:0]oobclk_cnt;
  wire \oobclk_div.oobclk_i_1__1_n_0 ;
  wire out;
  wire [3:0]p_0_in__0;
  wire [3:0]p_0_in__0__0;
  wire [1:0]p_1_in__0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire pclk_sel_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire pclk_sel_reg2;
  wire phy_rdy_n_int_reg;
  wire phy_rdy_n_int_reg_0;
  wire pipe_oobclk_in;
  wire pipe_pclk_in;
  wire [0:0]pipe_pclk_sel_out;
  wire [0:0]pipe_rxstatus;
  wire pipe_rxusrclk_in;
  wire [1:0]pipe_txphaligndone;
  wire [1:0]pipe_txphinitdone;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_done_reg2;
  wire rate_gen3_2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_gen3_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_gen3_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg2;
  wire rate_idle_reg2_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_rxsync_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_rxsync_reg2;
  wire reg_clock_locked;
  wire reg_clock_locked_reg;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg2;
  wire rst_idle_reg2_reg_0;
  wire [3:0]rxcdrlock_cnt_reg__0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_adapt_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_adapt_done_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxstatus_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxstatus_reg2;
  wire [3:0]rxvalid_cnt_reg__0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxvalid_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxvalid_reg2;
  wire sel;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txcompliance_reg1;
  wire txcompliance_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txcompliance_reg2;
  wire txcompliance_reg2_reg_0;
  wire txcompliance_reg2_reg_2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txelecidle_reg1;
  wire txelecidle_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txelecidle_reg2;
  wire txphaligndone_reg1_reg;
  wire txphaligndone_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg2;
  wire [0:0]user_active_lane;
  wire [3:1]\NLW_converge_cnt_reg[20]_i_1__1_CO_UNCONNECTED ;
  wire [3:2]\NLW_converge_cnt_reg[20]_i_1__1_O_UNCONNECTED ;

  assign txcompliance_reg2_reg_1 = txcompliance_reg2;
  assign txelecidle_reg2_reg_0 = txelecidle_reg2;
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_onehot_txsync_fsm.fsm_tx[5]_i_2__1 
       (.I0(txcompliance_reg2),
        .I1(txelecidle_reg2),
        .O(user_active_lane));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \converge_cnt[0]_i_1__4 
       (.I0(rate_gen3_reg2),
        .I1(RST_CPLLRESET),
        .I2(rst_idle_reg2),
        .I3(rate_idle_reg2),
        .O(\converge_cnt[0]_i_1__4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF5555555D)) 
    \converge_cnt[0]_i_2__1 
       (.I0(converge_cnt_reg[21]),
        .I1(\converge_cnt[0]_i_4__1_n_0 ),
        .I2(converge_cnt_reg[12]),
        .I3(converge_cnt_reg[14]),
        .I4(converge_cnt_reg[20]),
        .I5(\converge_cnt[0]_i_5__1_n_0 ),
        .O(sel));
  LUT5 #(
    .INIT(32'h00000001)) 
    \converge_cnt[0]_i_4__1 
       (.I0(converge_cnt_reg[3]),
        .I1(converge_cnt_reg[4]),
        .I2(converge_cnt_reg[5]),
        .I3(converge_cnt_reg[7]),
        .I4(converge_cnt_reg[6]),
        .O(\converge_cnt[0]_i_4__1_n_0 ));
  LUT6 #(
    .INIT(64'h0A0B0A0F0A0B0A0B)) 
    \converge_cnt[0]_i_5__1 
       (.I0(\converge_cnt_reg[15]_0 ),
        .I1(converge_cnt_reg[13]),
        .I2(converge_cnt_reg[20]),
        .I3(converge_cnt_reg[14]),
        .I4(converge_cnt_reg[12]),
        .I5(\converge_cnt[0]_i_7_n_0 ),
        .O(\converge_cnt[0]_i_5__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \converge_cnt[0]_i_6__1 
       (.I0(converge_cnt_reg[0]),
        .O(\converge_cnt[0]_i_6__1_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \converge_cnt[0]_i_7 
       (.I0(converge_cnt_reg[9]),
        .I1(converge_cnt_reg[8]),
        .I2(converge_cnt_reg[11]),
        .I3(converge_cnt_reg[10]),
        .O(\converge_cnt[0]_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3__1_n_7 ),
        .Q(converge_cnt_reg[0]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  CARRY4 \converge_cnt_reg[0]_i_3__1 
       (.CI(1'b0),
        .CO({\converge_cnt_reg[0]_i_3__1_n_0 ,\converge_cnt_reg[0]_i_3__1_n_1 ,\converge_cnt_reg[0]_i_3__1_n_2 ,\converge_cnt_reg[0]_i_3__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\converge_cnt_reg[0]_i_3__1_n_4 ,\converge_cnt_reg[0]_i_3__1_n_5 ,\converge_cnt_reg[0]_i_3__1_n_6 ,\converge_cnt_reg[0]_i_3__1_n_7 }),
        .S({converge_cnt_reg[3:1],\converge_cnt[0]_i_6__1_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[10] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1__1_n_5 ),
        .Q(converge_cnt_reg[10]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[11] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1__1_n_4 ),
        .Q(converge_cnt_reg[11]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[12] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1__1_n_7 ),
        .Q(converge_cnt_reg[12]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  CARRY4 \converge_cnt_reg[12]_i_1__1 
       (.CI(\converge_cnt_reg[8]_i_1__1_n_0 ),
        .CO({\converge_cnt_reg[12]_i_1__1_n_0 ,\converge_cnt_reg[12]_i_1__1_n_1 ,\converge_cnt_reg[12]_i_1__1_n_2 ,\converge_cnt_reg[12]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[12]_i_1__1_n_4 ,\converge_cnt_reg[12]_i_1__1_n_5 ,\converge_cnt_reg[12]_i_1__1_n_6 ,\converge_cnt_reg[12]_i_1__1_n_7 }),
        .S(converge_cnt_reg[15:12]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[13] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1__1_n_6 ),
        .Q(converge_cnt_reg[13]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[14] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1__1_n_5 ),
        .Q(converge_cnt_reg[14]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[15] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1__1_n_4 ),
        .Q(converge_cnt_reg[15]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[16] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1__1_n_7 ),
        .Q(converge_cnt_reg[16]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  CARRY4 \converge_cnt_reg[16]_i_1__1 
       (.CI(\converge_cnt_reg[12]_i_1__1_n_0 ),
        .CO({\converge_cnt_reg[16]_i_1__1_n_0 ,\converge_cnt_reg[16]_i_1__1_n_1 ,\converge_cnt_reg[16]_i_1__1_n_2 ,\converge_cnt_reg[16]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[16]_i_1__1_n_4 ,\converge_cnt_reg[16]_i_1__1_n_5 ,\converge_cnt_reg[16]_i_1__1_n_6 ,\converge_cnt_reg[16]_i_1__1_n_7 }),
        .S(converge_cnt_reg[19:16]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[17] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1__1_n_6 ),
        .Q(converge_cnt_reg[17]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[18] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1__1_n_5 ),
        .Q(converge_cnt_reg[18]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[19] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1__1_n_4 ),
        .Q(converge_cnt_reg[19]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3__1_n_6 ),
        .Q(converge_cnt_reg[1]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[20] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[20]_i_1__1_n_7 ),
        .Q(converge_cnt_reg[20]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  CARRY4 \converge_cnt_reg[20]_i_1__1 
       (.CI(\converge_cnt_reg[16]_i_1__1_n_0 ),
        .CO({\NLW_converge_cnt_reg[20]_i_1__1_CO_UNCONNECTED [3:1],\converge_cnt_reg[20]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_converge_cnt_reg[20]_i_1__1_O_UNCONNECTED [3:2],\converge_cnt_reg[20]_i_1__1_n_6 ,\converge_cnt_reg[20]_i_1__1_n_7 }),
        .S({1'b0,1'b0,converge_cnt_reg[21:20]}));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[21] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[20]_i_1__1_n_6 ),
        .Q(converge_cnt_reg[21]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3__1_n_5 ),
        .Q(converge_cnt_reg[2]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3__1_n_4 ),
        .Q(converge_cnt_reg[3]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[4] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1__1_n_7 ),
        .Q(converge_cnt_reg[4]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  CARRY4 \converge_cnt_reg[4]_i_1__1 
       (.CI(\converge_cnt_reg[0]_i_3__1_n_0 ),
        .CO({\converge_cnt_reg[4]_i_1__1_n_0 ,\converge_cnt_reg[4]_i_1__1_n_1 ,\converge_cnt_reg[4]_i_1__1_n_2 ,\converge_cnt_reg[4]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[4]_i_1__1_n_4 ,\converge_cnt_reg[4]_i_1__1_n_5 ,\converge_cnt_reg[4]_i_1__1_n_6 ,\converge_cnt_reg[4]_i_1__1_n_7 }),
        .S(converge_cnt_reg[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[5] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1__1_n_6 ),
        .Q(converge_cnt_reg[5]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[6] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1__1_n_5 ),
        .Q(converge_cnt_reg[6]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[7] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1__1_n_4 ),
        .Q(converge_cnt_reg[7]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[8] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1__1_n_7 ),
        .Q(converge_cnt_reg[8]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  CARRY4 \converge_cnt_reg[8]_i_1__1 
       (.CI(\converge_cnt_reg[4]_i_1__1_n_0 ),
        .CO({\converge_cnt_reg[8]_i_1__1_n_0 ,\converge_cnt_reg[8]_i_1__1_n_1 ,\converge_cnt_reg[8]_i_1__1_n_2 ,\converge_cnt_reg[8]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[8]_i_1__1_n_4 ,\converge_cnt_reg[8]_i_1__1_n_5 ,\converge_cnt_reg[8]_i_1__1_n_6 ,\converge_cnt_reg[8]_i_1__1_n_7 }),
        .S(converge_cnt_reg[11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[9] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1__1_n_6 ),
        .Q(converge_cnt_reg[9]),
        .R(\converge_cnt[0]_i_1__4_n_0 ));
  LUT3 #(
    .INIT(8'hC8)) 
    converge_gen3_i_1__1
       (.I0(rxeq_adapt_done_reg2),
        .I1(rate_gen3_reg2),
        .I2(converge_gen3_reg_0),
        .O(converge_gen3_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    converge_gen3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_gen3_i_1__1_n_0),
        .Q(converge_gen3_reg_0),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hFFFFA8FF)) 
    gt_rx_phy_status_q_i_1__1
       (.I0(RST_PHYSTATUS),
        .I1(rate_idle_reg2),
        .I2(rate_rxsync_reg2),
        .I3(rst_idle_reg2),
        .I4(rate_done_reg2),
        .O(rate_idle_reg2_reg_0));
  LUT6 #(
    .INIT(64'h7FFF7FFFFFFF7FFF)) 
    gt_rxvalid_q_i_4__0
       (.I0(gt_rxvalid_q_i_5__0_n_0),
        .I1(gt_rxvalid_2),
        .I2(rst_idle_reg2),
        .I3(rate_idle_reg2),
        .I4(gt_rxvalid_q_reg),
        .I5(gt_rxvalid_q_reg_0),
        .O(rst_idle_reg2_reg_0));
  LUT4 #(
    .INIT(16'h8000)) 
    gt_rxvalid_q_i_5__0
       (.I0(rxvalid_cnt_reg__0[0]),
        .I1(rxvalid_cnt_reg__0[1]),
        .I2(rxvalid_cnt_reg__0[2]),
        .I3(rxvalid_cnt_reg__0[3]),
        .O(gt_rxvalid_q_i_5__0_n_0));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \gtx_channel.gtxe2_channel_i_i_61 
       (.I0(converge_cnt_reg[15]),
        .I1(converge_cnt_reg[18]),
        .I2(converge_cnt_reg[19]),
        .I3(converge_cnt_reg[17]),
        .I4(converge_cnt_reg[16]),
        .O(\converge_cnt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \gtx_channel.gtxe2_channel_i_i_62 
       (.I0(converge_cnt_reg[6]),
        .I1(converge_cnt_reg[7]),
        .I2(converge_cnt_reg[4]),
        .I3(converge_cnt_reg[5]),
        .I4(converge_cnt_reg[21]),
        .I5(converge_cnt_reg[13]),
        .O(\converge_cnt_reg[6]_0 ));
  LUT6 #(
    .INIT(64'h0000000000020000)) 
    \gtx_channel.gtxe2_channel_i_i_63 
       (.I0(\gtx_channel.gtxe2_channel_i_i_65_n_0 ),
        .I1(converge_cnt_reg[1]),
        .I2(converge_cnt_reg[0]),
        .I3(converge_cnt_reg[2]),
        .I4(converge_cnt_reg[3]),
        .I5(\converge_cnt[0]_i_7_n_0 ),
        .O(\converge_cnt_reg[1]_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \gtx_channel.gtxe2_channel_i_i_65 
       (.I0(converge_cnt_reg[20]),
        .I1(converge_cnt_reg[14]),
        .I2(converge_cnt_reg[12]),
        .O(\gtx_channel.gtxe2_channel_i_i_65_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \oobclk_div.oobclk_cnt[0]_i_1__1 
       (.I0(oobclk_cnt[0]),
        .O(p_1_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \oobclk_div.oobclk_cnt[1]_i_1__1 
       (.I0(oobclk_cnt[0]),
        .I1(oobclk_cnt[1]),
        .O(p_1_in__0[1]));
  FDRE #(
    .INIT(1'b0)) 
    \oobclk_div.oobclk_cnt_reg[0] 
       (.C(pipe_oobclk_in),
        .CE(1'b1),
        .D(p_1_in__0[0]),
        .Q(oobclk_cnt[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \oobclk_div.oobclk_cnt_reg[1] 
       (.C(pipe_oobclk_in),
        .CE(1'b1),
        .D(p_1_in__0[1]),
        .Q(oobclk_cnt[1]),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hB8)) 
    \oobclk_div.oobclk_i_1__1 
       (.I0(oobclk_cnt[1]),
        .I1(pclk_sel_reg2),
        .I2(oobclk_cnt[0]),
        .O(\oobclk_div.oobclk_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \oobclk_div.oobclk_reg 
       (.C(pipe_oobclk_in),
        .CE(1'b1),
        .D(\oobclk_div.oobclk_i_1__1_n_0 ),
        .Q(USER_OOBCLK),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE pclk_sel_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_pclk_sel_out),
        .Q(pclk_sel_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE pclk_sel_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pclk_sel_reg1),
        .Q(pclk_sel_reg2),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h00000002)) 
    phy_rdy_n_int_i_1
       (.I0(reg_clock_locked),
        .I1(rst_idle_reg2),
        .I2(out),
        .I3(phy_rdy_n_int_reg),
        .I4(phy_rdy_n_int_reg_0),
        .O(reg_clock_locked_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_done_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(Q[1]),
        .Q(rate_done_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_done_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_done_reg1),
        .Q(rate_done_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_gen3_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_gen3_2),
        .Q(rate_gen3_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_gen3_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_gen3_reg1),
        .Q(rate_gen3_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(Q[0]),
        .Q(rate_idle_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_idle_reg1),
        .Q(rate_idle_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_rxsync_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rate_rxsync_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_rxsync_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_rxsync_reg1),
        .Q(rate_rxsync_reg2),
        .R(RST_RXUSRCLK_RESET));
  LUT2 #(
    .INIT(4'h8)) 
    \resetdone_reg1[2]_i_1 
       (.I0(rxresetdone_reg2),
        .I1(txresetdone_reg2),
        .O(RST_RESETDONE));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_start_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(resetovrd_start_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_start_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(resetovrd_start_reg1),
        .Q(resetovrd_start_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(RST_IDLE),
        .Q(rst_idle_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rst_idle_reg1),
        .Q(rst_idle_reg2),
        .R(RST_RXUSRCLK_RESET));
  LUT5 #(
    .INIT(32'hD0505050)) 
    \rxcdrlock_cnt[0]_i_1__1 
       (.I0(rxcdrlock_cnt_reg__0[0]),
        .I1(rxcdrlock_cnt_reg__0[2]),
        .I2(rxcdrlock_reg2),
        .I3(rxcdrlock_cnt_reg__0[1]),
        .I4(rxcdrlock_cnt_reg__0[3]),
        .O(p_0_in__0[0]));
  LUT5 #(
    .INIT(32'h8FF00000)) 
    \rxcdrlock_cnt[1]_i_1__1 
       (.I0(rxcdrlock_cnt_reg__0[3]),
        .I1(rxcdrlock_cnt_reg__0[2]),
        .I2(rxcdrlock_cnt_reg__0[0]),
        .I3(rxcdrlock_cnt_reg__0[1]),
        .I4(rxcdrlock_reg2),
        .O(p_0_in__0[1]));
  LUT5 #(
    .INIT(32'hF8780000)) 
    \rxcdrlock_cnt[2]_i_1__1 
       (.I0(rxcdrlock_cnt_reg__0[0]),
        .I1(rxcdrlock_cnt_reg__0[1]),
        .I2(rxcdrlock_cnt_reg__0[2]),
        .I3(rxcdrlock_cnt_reg__0[3]),
        .I4(rxcdrlock_reg2),
        .O(p_0_in__0[2]));
  LUT5 #(
    .INIT(32'hFF008000)) 
    \rxcdrlock_cnt[3]_i_1__1 
       (.I0(rxcdrlock_cnt_reg__0[0]),
        .I1(rxcdrlock_cnt_reg__0[1]),
        .I2(rxcdrlock_cnt_reg__0[2]),
        .I3(rxcdrlock_reg2),
        .I4(rxcdrlock_cnt_reg__0[3]),
        .O(p_0_in__0[3]));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(rxcdrlock_cnt_reg__0[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(rxcdrlock_cnt_reg__0[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(rxcdrlock_cnt_reg__0[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(rxcdrlock_cnt_reg__0[3]),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h80000000)) 
    \rxcdrlock_reg1[2]_i_1 
       (.I0(rxcdrlock_cnt_reg__0[2]),
        .I1(rxcdrlock_cnt_reg__0[3]),
        .I2(gt_rxcdrlock_2),
        .I3(rxcdrlock_cnt_reg__0[1]),
        .I4(rxcdrlock_cnt_reg__0[0]),
        .O(RST_RXCDRLOCK));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gt_rxcdrlock_2),
        .Q(rxcdrlock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxcdrlock_reg1),
        .Q(rxcdrlock_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_adapt_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_RXEQ_ADAPT_DONE),
        .Q(rxeq_adapt_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_adapt_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_adapt_done_reg1),
        .Q(rxeq_adapt_done_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_RXRESETDONE),
        .Q(rxresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxresetdone_reg1),
        .Q(rxresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxstatus_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(pipe_rxstatus),
        .Q(rxstatus_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxstatus_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rxstatus_reg1),
        .Q(rxstatus_reg2),
        .R(RST_RXUSRCLK_RESET));
  LUT6 #(
    .INIT(64'hC404040404040404)) 
    \rxvalid_cnt[0]_i_1__1 
       (.I0(rxstatus_reg2),
        .I1(rxvalid_reg2),
        .I2(rxvalid_cnt_reg__0[0]),
        .I3(rxvalid_cnt_reg__0[1]),
        .I4(rxvalid_cnt_reg__0[2]),
        .I5(rxvalid_cnt_reg__0[3]),
        .O(p_0_in__0__0[0]));
  LUT6 #(
    .INIT(64'h808000F000F00000)) 
    \rxvalid_cnt[1]_i_1__1 
       (.I0(rxvalid_cnt_reg__0[3]),
        .I1(rxvalid_cnt_reg__0[2]),
        .I2(rxvalid_reg2),
        .I3(rxstatus_reg2),
        .I4(rxvalid_cnt_reg__0[1]),
        .I5(rxvalid_cnt_reg__0[0]),
        .O(p_0_in__0__0[1]));
  LUT6 #(
    .INIT(64'h80BF000000C00000)) 
    \rxvalid_cnt[2]_i_1__1 
       (.I0(rxvalid_cnt_reg__0[3]),
        .I1(rxvalid_cnt_reg__0[0]),
        .I2(rxvalid_cnt_reg__0[1]),
        .I3(rxstatus_reg2),
        .I4(rxvalid_reg2),
        .I5(rxvalid_cnt_reg__0[2]),
        .O(p_0_in__0__0[2]));
  LUT6 #(
    .INIT(64'h8C08080808080808)) 
    \rxvalid_cnt[3]_i_1__1 
       (.I0(rxvalid_cnt_reg__0[3]),
        .I1(rxvalid_reg2),
        .I2(rxstatus_reg2),
        .I3(rxvalid_cnt_reg__0[2]),
        .I4(rxvalid_cnt_reg__0[1]),
        .I5(rxvalid_cnt_reg__0[0]),
        .O(p_0_in__0__0[3]));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[0] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__0__0[0]),
        .Q(rxvalid_cnt_reg__0[0]),
        .R(RST_RXUSRCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[1] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__0__0[1]),
        .Q(rxvalid_cnt_reg__0[1]),
        .R(RST_RXUSRCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[2] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__0__0[2]),
        .Q(rxvalid_cnt_reg__0[2]),
        .R(RST_RXUSRCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[3] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__0__0[3]),
        .Q(rxvalid_cnt_reg__0[3]),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxvalid_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(gt_rxvalid_2),
        .Q(rxvalid_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxvalid_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rxvalid_reg1),
        .Q(rxvalid_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txcompliance_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcompliance_reg1_reg_0),
        .Q(txcompliance_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txcompliance_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcompliance_reg1),
        .Q(txcompliance_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txelecidle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txelecidle_reg1_reg_0),
        .Q(txelecidle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txelecidle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txelecidle_reg1),
        .Q(txelecidle_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'h0707070707FFFFFF)) 
    txphaligndone_reg1_i_2
       (.I0(txcompliance_reg2),
        .I1(txelecidle_reg2),
        .I2(pipe_txphaligndone[0]),
        .I3(txphaligndone_reg1_reg),
        .I4(txphaligndone_reg1_reg_0),
        .I5(pipe_txphaligndone[1]),
        .O(txcompliance_reg2_reg_0));
  LUT6 #(
    .INIT(64'h0707070707FFFFFF)) 
    txphinitdone_reg1_i_2
       (.I0(txcompliance_reg2),
        .I1(txelecidle_reg2),
        .I2(pipe_txphinitdone[0]),
        .I3(txphaligndone_reg1_reg),
        .I4(txphaligndone_reg1_reg_0),
        .I5(pipe_txphinitdone[1]),
        .O(txcompliance_reg2_reg_2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_TXRESETDONE),
        .Q(txresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txresetdone_reg1),
        .Q(txresetdone_reg2),
        .R(RST_CPLLRESET));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pipe_user" *) 
module pcie_7x_0_pcie_7x_0_pipe_user_38
   (rst_idle_reg2_reg_0,
    out,
    txelecidle_reg2_reg_0,
    txcompliance_reg2_reg_0,
    USER_OOBCLK,
    RST_RXCDRLOCK,
    rate_rxsync_reg2_reg_0,
    user_rx_converge,
    RST_RESETDONE,
    user_active_lane,
    gt_rxvalid_3,
    gt_rxvalid_q_reg,
    gt_rxvalid_q_reg_0,
    RST_CPLLRESET,
    pipe_pclk_sel_out,
    pipe_pclk_in,
    pipe_oobclk_in,
    USER_TXRESETDONE,
    USER_RXRESETDONE,
    txelecidle_reg1_reg_0,
    txcompliance_reg1_reg_0,
    gt_rxcdrlock_3,
    RST_RXUSRCLK_RESET,
    pipe_rxusrclk_in,
    pipe_rxstatus,
    RST_IDLE,
    Q,
    rate_gen3_3,
    USER_RXEQ_ADAPT_DONE,
    RST_PHYSTATUS);
  output rst_idle_reg2_reg_0;
  output out;
  output txelecidle_reg2_reg_0;
  output txcompliance_reg2_reg_0;
  output USER_OOBCLK;
  output [0:0]RST_RXCDRLOCK;
  output rate_rxsync_reg2_reg_0;
  output [0:0]user_rx_converge;
  output [0:0]RST_RESETDONE;
  output [0:0]user_active_lane;
  input gt_rxvalid_3;
  input gt_rxvalid_q_reg;
  input gt_rxvalid_q_reg_0;
  input RST_CPLLRESET;
  input [0:0]pipe_pclk_sel_out;
  input pipe_pclk_in;
  input pipe_oobclk_in;
  input USER_TXRESETDONE;
  input USER_RXRESETDONE;
  input txelecidle_reg1_reg_0;
  input txcompliance_reg1_reg_0;
  input gt_rxcdrlock_3;
  input RST_RXUSRCLK_RESET;
  input pipe_rxusrclk_in;
  input [0:0]pipe_rxstatus;
  input RST_IDLE;
  input [1:0]Q;
  input rate_gen3_3;
  input USER_RXEQ_ADAPT_DONE;
  input [0:0]RST_PHYSTATUS;

  wire [1:0]Q;
  wire RST_CPLLRESET;
  wire RST_IDLE;
  wire [0:0]RST_PHYSTATUS;
  wire [0:0]RST_RESETDONE;
  wire [0:0]RST_RXCDRLOCK;
  wire RST_RXUSRCLK_RESET;
  wire USER_OOBCLK;
  wire USER_RXEQ_ADAPT_DONE;
  wire USER_RXRESETDONE;
  wire USER_TXRESETDONE;
  wire \converge_cnt[0]_i_1__6_n_0 ;
  wire \converge_cnt[0]_i_4__2_n_0 ;
  wire \converge_cnt[0]_i_5__2_n_0 ;
  wire \converge_cnt[0]_i_6__2_n_0 ;
  wire \converge_cnt[0]_i_7__0_n_0 ;
  wire \converge_cnt[0]_i_8_n_0 ;
  wire [21:0]converge_cnt_reg;
  wire \converge_cnt_reg[0]_i_3__2_n_0 ;
  wire \converge_cnt_reg[0]_i_3__2_n_1 ;
  wire \converge_cnt_reg[0]_i_3__2_n_2 ;
  wire \converge_cnt_reg[0]_i_3__2_n_3 ;
  wire \converge_cnt_reg[0]_i_3__2_n_4 ;
  wire \converge_cnt_reg[0]_i_3__2_n_5 ;
  wire \converge_cnt_reg[0]_i_3__2_n_6 ;
  wire \converge_cnt_reg[0]_i_3__2_n_7 ;
  wire \converge_cnt_reg[12]_i_1__2_n_0 ;
  wire \converge_cnt_reg[12]_i_1__2_n_1 ;
  wire \converge_cnt_reg[12]_i_1__2_n_2 ;
  wire \converge_cnt_reg[12]_i_1__2_n_3 ;
  wire \converge_cnt_reg[12]_i_1__2_n_4 ;
  wire \converge_cnt_reg[12]_i_1__2_n_5 ;
  wire \converge_cnt_reg[12]_i_1__2_n_6 ;
  wire \converge_cnt_reg[12]_i_1__2_n_7 ;
  wire \converge_cnt_reg[16]_i_1__2_n_0 ;
  wire \converge_cnt_reg[16]_i_1__2_n_1 ;
  wire \converge_cnt_reg[16]_i_1__2_n_2 ;
  wire \converge_cnt_reg[16]_i_1__2_n_3 ;
  wire \converge_cnt_reg[16]_i_1__2_n_4 ;
  wire \converge_cnt_reg[16]_i_1__2_n_5 ;
  wire \converge_cnt_reg[16]_i_1__2_n_6 ;
  wire \converge_cnt_reg[16]_i_1__2_n_7 ;
  wire \converge_cnt_reg[20]_i_1__2_n_3 ;
  wire \converge_cnt_reg[20]_i_1__2_n_6 ;
  wire \converge_cnt_reg[20]_i_1__2_n_7 ;
  wire \converge_cnt_reg[4]_i_1__2_n_0 ;
  wire \converge_cnt_reg[4]_i_1__2_n_1 ;
  wire \converge_cnt_reg[4]_i_1__2_n_2 ;
  wire \converge_cnt_reg[4]_i_1__2_n_3 ;
  wire \converge_cnt_reg[4]_i_1__2_n_4 ;
  wire \converge_cnt_reg[4]_i_1__2_n_5 ;
  wire \converge_cnt_reg[4]_i_1__2_n_6 ;
  wire \converge_cnt_reg[4]_i_1__2_n_7 ;
  wire \converge_cnt_reg[8]_i_1__2_n_0 ;
  wire \converge_cnt_reg[8]_i_1__2_n_1 ;
  wire \converge_cnt_reg[8]_i_1__2_n_2 ;
  wire \converge_cnt_reg[8]_i_1__2_n_3 ;
  wire \converge_cnt_reg[8]_i_1__2_n_4 ;
  wire \converge_cnt_reg[8]_i_1__2_n_5 ;
  wire \converge_cnt_reg[8]_i_1__2_n_6 ;
  wire \converge_cnt_reg[8]_i_1__2_n_7 ;
  wire converge_gen3_i_1__2_n_0;
  wire converge_gen3_reg_n_0;
  wire gt_rxcdrlock_3;
  wire gt_rxvalid_3;
  wire gt_rxvalid_q_i_5__1_n_0;
  wire gt_rxvalid_q_reg;
  wire gt_rxvalid_q_reg_0;
  wire \gtx_channel.gtxe2_channel_i_i_66_n_0 ;
  wire \gtx_channel.gtxe2_channel_i_i_67_n_0 ;
  wire \gtx_channel.gtxe2_channel_i_i_68_n_0 ;
  wire [1:0]oobclk_cnt;
  wire \oobclk_div.oobclk_i_1__2_n_0 ;
  wire [3:0]p_0_in__0;
  wire [3:0]p_0_in__0__0;
  wire [1:0]p_1_in__0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire pclk_sel_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire pclk_sel_reg2;
  wire pipe_oobclk_in;
  wire pipe_pclk_in;
  wire [0:0]pipe_pclk_sel_out;
  wire [0:0]pipe_rxstatus;
  wire pipe_rxusrclk_in;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_done_reg2;
  wire rate_gen3_3;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_gen3_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_gen3_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_idle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_rxsync_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rate_rxsync_reg2;
  wire rate_rxsync_reg2_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire resetovrd_start_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rst_idle_reg2;
  wire rst_idle_reg2_reg_0;
  wire [3:0]rxcdrlock_cnt_reg__0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxcdrlock_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_adapt_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxeq_adapt_done_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxresetdone_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxstatus_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxstatus_reg2;
  wire [3:0]rxvalid_cnt_reg__0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxvalid_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rxvalid_reg2;
  wire sel;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txcompliance_reg1;
  wire txcompliance_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txcompliance_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txelecidle_reg1;
  wire txelecidle_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txelecidle_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire txresetdone_reg2;
  wire [0:0]user_active_lane;
  wire [0:0]user_rx_converge;
  wire [3:1]\NLW_converge_cnt_reg[20]_i_1__2_CO_UNCONNECTED ;
  wire [3:2]\NLW_converge_cnt_reg[20]_i_1__2_O_UNCONNECTED ;

  assign out = rst_idle_reg2;
  assign txcompliance_reg2_reg_0 = txcompliance_reg2;
  assign txelecidle_reg2_reg_0 = txelecidle_reg2;
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_onehot_txsync_fsm.fsm_tx[5]_i_2__2 
       (.I0(txcompliance_reg2),
        .I1(txelecidle_reg2),
        .O(user_active_lane));
  LUT4 #(
    .INIT(16'hFFF7)) 
    \converge_cnt[0]_i_1__6 
       (.I0(rst_idle_reg2),
        .I1(rate_idle_reg2),
        .I2(rate_gen3_reg2),
        .I3(RST_CPLLRESET),
        .O(\converge_cnt[0]_i_1__6_n_0 ));
  LUT6 #(
    .INIT(64'hAEAEAEAEAEAEAFAE)) 
    \converge_cnt[0]_i_2__2 
       (.I0(\converge_cnt[0]_i_4__2_n_0 ),
        .I1(\converge_cnt[0]_i_5__2_n_0 ),
        .I2(converge_cnt_reg[20]),
        .I3(\converge_cnt[0]_i_6__2_n_0 ),
        .I4(converge_cnt_reg[12]),
        .I5(converge_cnt_reg[14]),
        .O(sel));
  LUT6 #(
    .INIT(64'h5557555F55575557)) 
    \converge_cnt[0]_i_4__2 
       (.I0(converge_cnt_reg[21]),
        .I1(converge_cnt_reg[13]),
        .I2(converge_cnt_reg[20]),
        .I3(converge_cnt_reg[14]),
        .I4(converge_cnt_reg[12]),
        .I5(\converge_cnt[0]_i_8_n_0 ),
        .O(\converge_cnt[0]_i_4__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \converge_cnt[0]_i_5__2 
       (.I0(converge_cnt_reg[16]),
        .I1(converge_cnt_reg[18]),
        .I2(converge_cnt_reg[19]),
        .I3(converge_cnt_reg[15]),
        .I4(converge_cnt_reg[17]),
        .O(\converge_cnt[0]_i_5__2_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \converge_cnt[0]_i_6__2 
       (.I0(converge_cnt_reg[11]),
        .I1(converge_cnt_reg[10]),
        .I2(converge_cnt_reg[9]),
        .I3(converge_cnt_reg[8]),
        .O(\converge_cnt[0]_i_6__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \converge_cnt[0]_i_7__0 
       (.I0(converge_cnt_reg[0]),
        .O(\converge_cnt[0]_i_7__0_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \converge_cnt[0]_i_8 
       (.I0(converge_cnt_reg[3]),
        .I1(converge_cnt_reg[4]),
        .I2(converge_cnt_reg[5]),
        .I3(converge_cnt_reg[7]),
        .I4(converge_cnt_reg[6]),
        .O(\converge_cnt[0]_i_8_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3__2_n_7 ),
        .Q(converge_cnt_reg[0]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  CARRY4 \converge_cnt_reg[0]_i_3__2 
       (.CI(1'b0),
        .CO({\converge_cnt_reg[0]_i_3__2_n_0 ,\converge_cnt_reg[0]_i_3__2_n_1 ,\converge_cnt_reg[0]_i_3__2_n_2 ,\converge_cnt_reg[0]_i_3__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\converge_cnt_reg[0]_i_3__2_n_4 ,\converge_cnt_reg[0]_i_3__2_n_5 ,\converge_cnt_reg[0]_i_3__2_n_6 ,\converge_cnt_reg[0]_i_3__2_n_7 }),
        .S({converge_cnt_reg[3:1],\converge_cnt[0]_i_7__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[10] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1__2_n_5 ),
        .Q(converge_cnt_reg[10]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[11] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1__2_n_4 ),
        .Q(converge_cnt_reg[11]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[12] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1__2_n_7 ),
        .Q(converge_cnt_reg[12]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  CARRY4 \converge_cnt_reg[12]_i_1__2 
       (.CI(\converge_cnt_reg[8]_i_1__2_n_0 ),
        .CO({\converge_cnt_reg[12]_i_1__2_n_0 ,\converge_cnt_reg[12]_i_1__2_n_1 ,\converge_cnt_reg[12]_i_1__2_n_2 ,\converge_cnt_reg[12]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[12]_i_1__2_n_4 ,\converge_cnt_reg[12]_i_1__2_n_5 ,\converge_cnt_reg[12]_i_1__2_n_6 ,\converge_cnt_reg[12]_i_1__2_n_7 }),
        .S(converge_cnt_reg[15:12]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[13] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1__2_n_6 ),
        .Q(converge_cnt_reg[13]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[14] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1__2_n_5 ),
        .Q(converge_cnt_reg[14]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[15] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[12]_i_1__2_n_4 ),
        .Q(converge_cnt_reg[15]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[16] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1__2_n_7 ),
        .Q(converge_cnt_reg[16]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  CARRY4 \converge_cnt_reg[16]_i_1__2 
       (.CI(\converge_cnt_reg[12]_i_1__2_n_0 ),
        .CO({\converge_cnt_reg[16]_i_1__2_n_0 ,\converge_cnt_reg[16]_i_1__2_n_1 ,\converge_cnt_reg[16]_i_1__2_n_2 ,\converge_cnt_reg[16]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[16]_i_1__2_n_4 ,\converge_cnt_reg[16]_i_1__2_n_5 ,\converge_cnt_reg[16]_i_1__2_n_6 ,\converge_cnt_reg[16]_i_1__2_n_7 }),
        .S(converge_cnt_reg[19:16]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[17] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1__2_n_6 ),
        .Q(converge_cnt_reg[17]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[18] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1__2_n_5 ),
        .Q(converge_cnt_reg[18]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[19] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[16]_i_1__2_n_4 ),
        .Q(converge_cnt_reg[19]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3__2_n_6 ),
        .Q(converge_cnt_reg[1]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[20] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[20]_i_1__2_n_7 ),
        .Q(converge_cnt_reg[20]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  CARRY4 \converge_cnt_reg[20]_i_1__2 
       (.CI(\converge_cnt_reg[16]_i_1__2_n_0 ),
        .CO({\NLW_converge_cnt_reg[20]_i_1__2_CO_UNCONNECTED [3:1],\converge_cnt_reg[20]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_converge_cnt_reg[20]_i_1__2_O_UNCONNECTED [3:2],\converge_cnt_reg[20]_i_1__2_n_6 ,\converge_cnt_reg[20]_i_1__2_n_7 }),
        .S({1'b0,1'b0,converge_cnt_reg[21:20]}));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[21] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[20]_i_1__2_n_6 ),
        .Q(converge_cnt_reg[21]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3__2_n_5 ),
        .Q(converge_cnt_reg[2]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[0]_i_3__2_n_4 ),
        .Q(converge_cnt_reg[3]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[4] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1__2_n_7 ),
        .Q(converge_cnt_reg[4]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  CARRY4 \converge_cnt_reg[4]_i_1__2 
       (.CI(\converge_cnt_reg[0]_i_3__2_n_0 ),
        .CO({\converge_cnt_reg[4]_i_1__2_n_0 ,\converge_cnt_reg[4]_i_1__2_n_1 ,\converge_cnt_reg[4]_i_1__2_n_2 ,\converge_cnt_reg[4]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[4]_i_1__2_n_4 ,\converge_cnt_reg[4]_i_1__2_n_5 ,\converge_cnt_reg[4]_i_1__2_n_6 ,\converge_cnt_reg[4]_i_1__2_n_7 }),
        .S(converge_cnt_reg[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[5] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1__2_n_6 ),
        .Q(converge_cnt_reg[5]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[6] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1__2_n_5 ),
        .Q(converge_cnt_reg[6]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[7] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[4]_i_1__2_n_4 ),
        .Q(converge_cnt_reg[7]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[8] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1__2_n_7 ),
        .Q(converge_cnt_reg[8]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  CARRY4 \converge_cnt_reg[8]_i_1__2 
       (.CI(\converge_cnt_reg[4]_i_1__2_n_0 ),
        .CO({\converge_cnt_reg[8]_i_1__2_n_0 ,\converge_cnt_reg[8]_i_1__2_n_1 ,\converge_cnt_reg[8]_i_1__2_n_2 ,\converge_cnt_reg[8]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\converge_cnt_reg[8]_i_1__2_n_4 ,\converge_cnt_reg[8]_i_1__2_n_5 ,\converge_cnt_reg[8]_i_1__2_n_6 ,\converge_cnt_reg[8]_i_1__2_n_7 }),
        .S(converge_cnt_reg[11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[9] 
       (.C(pipe_pclk_in),
        .CE(sel),
        .D(\converge_cnt_reg[8]_i_1__2_n_6 ),
        .Q(converge_cnt_reg[9]),
        .R(\converge_cnt[0]_i_1__6_n_0 ));
  LUT3 #(
    .INIT(8'hC8)) 
    converge_gen3_i_1__2
       (.I0(rxeq_adapt_done_reg2),
        .I1(rate_gen3_reg2),
        .I2(converge_gen3_reg_n_0),
        .O(converge_gen3_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    converge_gen3_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_gen3_i_1__2_n_0),
        .Q(converge_gen3_reg_n_0),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hFFFFA8FF)) 
    gt_rx_phy_status_q_i_1__2
       (.I0(RST_PHYSTATUS),
        .I1(rate_rxsync_reg2),
        .I2(rate_idle_reg2),
        .I3(rst_idle_reg2),
        .I4(rate_done_reg2),
        .O(rate_rxsync_reg2_reg_0));
  LUT6 #(
    .INIT(64'h7FFF7FFFFFFF7FFF)) 
    gt_rxvalid_q_i_4__1
       (.I0(gt_rxvalid_q_i_5__1_n_0),
        .I1(rst_idle_reg2),
        .I2(gt_rxvalid_3),
        .I3(rate_idle_reg2),
        .I4(gt_rxvalid_q_reg),
        .I5(gt_rxvalid_q_reg_0),
        .O(rst_idle_reg2_reg_0));
  LUT4 #(
    .INIT(16'h8000)) 
    gt_rxvalid_q_i_5__1
       (.I0(rxvalid_cnt_reg__0[3]),
        .I1(rxvalid_cnt_reg__0[2]),
        .I2(rxvalid_cnt_reg__0[1]),
        .I3(rxvalid_cnt_reg__0[0]),
        .O(gt_rxvalid_q_i_5__1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000800)) 
    \gtx_channel.gtxe2_channel_i_i_64 
       (.I0(\gtx_channel.gtxe2_channel_i_i_66_n_0 ),
        .I1(\gtx_channel.gtxe2_channel_i_i_67_n_0 ),
        .I2(\converge_cnt[0]_i_6__2_n_0 ),
        .I3(\gtx_channel.gtxe2_channel_i_i_68_n_0 ),
        .I4(\converge_cnt[0]_i_5__2_n_0 ),
        .I5(converge_gen3_reg_n_0),
        .O(user_rx_converge));
  LUT4 #(
    .INIT(16'h0100)) 
    \gtx_channel.gtxe2_channel_i_i_66 
       (.I0(converge_cnt_reg[1]),
        .I1(converge_cnt_reg[0]),
        .I2(converge_cnt_reg[2]),
        .I3(converge_cnt_reg[3]),
        .O(\gtx_channel.gtxe2_channel_i_i_66_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \gtx_channel.gtxe2_channel_i_i_67 
       (.I0(converge_cnt_reg[20]),
        .I1(converge_cnt_reg[14]),
        .I2(converge_cnt_reg[12]),
        .O(\gtx_channel.gtxe2_channel_i_i_67_n_0 ));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \gtx_channel.gtxe2_channel_i_i_68 
       (.I0(converge_cnt_reg[4]),
        .I1(converge_cnt_reg[5]),
        .I2(converge_cnt_reg[6]),
        .I3(converge_cnt_reg[7]),
        .I4(converge_cnt_reg[21]),
        .I5(converge_cnt_reg[13]),
        .O(\gtx_channel.gtxe2_channel_i_i_68_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \oobclk_div.oobclk_cnt[0]_i_1__2 
       (.I0(oobclk_cnt[0]),
        .O(p_1_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \oobclk_div.oobclk_cnt[1]_i_1__2 
       (.I0(oobclk_cnt[0]),
        .I1(oobclk_cnt[1]),
        .O(p_1_in__0[1]));
  FDRE #(
    .INIT(1'b0)) 
    \oobclk_div.oobclk_cnt_reg[0] 
       (.C(pipe_oobclk_in),
        .CE(1'b1),
        .D(p_1_in__0[0]),
        .Q(oobclk_cnt[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \oobclk_div.oobclk_cnt_reg[1] 
       (.C(pipe_oobclk_in),
        .CE(1'b1),
        .D(p_1_in__0[1]),
        .Q(oobclk_cnt[1]),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hB8)) 
    \oobclk_div.oobclk_i_1__2 
       (.I0(oobclk_cnt[1]),
        .I1(pclk_sel_reg2),
        .I2(oobclk_cnt[0]),
        .O(\oobclk_div.oobclk_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \oobclk_div.oobclk_reg 
       (.C(pipe_oobclk_in),
        .CE(1'b1),
        .D(\oobclk_div.oobclk_i_1__2_n_0 ),
        .Q(USER_OOBCLK),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE pclk_sel_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_pclk_sel_out),
        .Q(pclk_sel_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE pclk_sel_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pclk_sel_reg1),
        .Q(pclk_sel_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_done_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(Q[1]),
        .Q(rate_done_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_done_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_done_reg1),
        .Q(rate_done_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_gen3_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_gen3_3),
        .Q(rate_gen3_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_gen3_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_gen3_reg1),
        .Q(rate_gen3_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(Q[0]),
        .Q(rate_idle_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_idle_reg1),
        .Q(rate_idle_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_rxsync_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rate_rxsync_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_rxsync_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rate_rxsync_reg1),
        .Q(rate_rxsync_reg2),
        .R(RST_RXUSRCLK_RESET));
  LUT2 #(
    .INIT(4'h8)) 
    \resetdone_reg1[3]_i_1 
       (.I0(rxresetdone_reg2),
        .I1(txresetdone_reg2),
        .O(RST_RESETDONE));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_start_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(resetovrd_start_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_start_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(resetovrd_start_reg1),
        .Q(resetovrd_start_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(RST_IDLE),
        .Q(rst_idle_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rst_idle_reg1),
        .Q(rst_idle_reg2),
        .R(RST_RXUSRCLK_RESET));
  LUT5 #(
    .INIT(32'h80FF0000)) 
    \rxcdrlock_cnt[0]_i_1__2 
       (.I0(rxcdrlock_cnt_reg__0[2]),
        .I1(rxcdrlock_cnt_reg__0[1]),
        .I2(rxcdrlock_cnt_reg__0[3]),
        .I3(rxcdrlock_cnt_reg__0[0]),
        .I4(rxcdrlock_reg2),
        .O(p_0_in__0[0]));
  LUT5 #(
    .INIT(32'hD0A050A0)) 
    \rxcdrlock_cnt[1]_i_1__2 
       (.I0(rxcdrlock_cnt_reg__0[1]),
        .I1(rxcdrlock_cnt_reg__0[2]),
        .I2(rxcdrlock_reg2),
        .I3(rxcdrlock_cnt_reg__0[0]),
        .I4(rxcdrlock_cnt_reg__0[3]),
        .O(p_0_in__0[1]));
  LUT5 #(
    .INIT(32'hF8780000)) 
    \rxcdrlock_cnt[2]_i_1__2 
       (.I0(rxcdrlock_cnt_reg__0[0]),
        .I1(rxcdrlock_cnt_reg__0[1]),
        .I2(rxcdrlock_cnt_reg__0[2]),
        .I3(rxcdrlock_cnt_reg__0[3]),
        .I4(rxcdrlock_reg2),
        .O(p_0_in__0[2]));
  LUT5 #(
    .INIT(32'hEAAA0000)) 
    \rxcdrlock_cnt[3]_i_1__2 
       (.I0(rxcdrlock_cnt_reg__0[3]),
        .I1(rxcdrlock_cnt_reg__0[0]),
        .I2(rxcdrlock_cnt_reg__0[1]),
        .I3(rxcdrlock_cnt_reg__0[2]),
        .I4(rxcdrlock_reg2),
        .O(p_0_in__0[3]));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(rxcdrlock_cnt_reg__0[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(rxcdrlock_cnt_reg__0[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(rxcdrlock_cnt_reg__0[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(rxcdrlock_cnt_reg__0[3]),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h80000000)) 
    \rxcdrlock_reg1[3]_i_1 
       (.I0(gt_rxcdrlock_3),
        .I1(rxcdrlock_cnt_reg__0[2]),
        .I2(rxcdrlock_cnt_reg__0[3]),
        .I3(rxcdrlock_cnt_reg__0[1]),
        .I4(rxcdrlock_cnt_reg__0[0]),
        .O(RST_RXCDRLOCK));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(gt_rxcdrlock_3),
        .Q(rxcdrlock_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxcdrlock_reg1),
        .Q(rxcdrlock_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_adapt_done_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_RXEQ_ADAPT_DONE),
        .Q(rxeq_adapt_done_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_adapt_done_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_adapt_done_reg1),
        .Q(rxeq_adapt_done_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_RXRESETDONE),
        .Q(rxresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxresetdone_reg1),
        .Q(rxresetdone_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxstatus_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(pipe_rxstatus),
        .Q(rxstatus_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxstatus_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rxstatus_reg1),
        .Q(rxstatus_reg2),
        .R(RST_RXUSRCLK_RESET));
  LUT6 #(
    .INIT(64'hC000000044444444)) 
    \rxvalid_cnt[0]_i_1__2 
       (.I0(rxstatus_reg2),
        .I1(rxvalid_reg2),
        .I2(rxvalid_cnt_reg__0[3]),
        .I3(rxvalid_cnt_reg__0[2]),
        .I4(rxvalid_cnt_reg__0[1]),
        .I5(rxvalid_cnt_reg__0[0]),
        .O(p_0_in__0__0[0]));
  LUT6 #(
    .INIT(64'h808000F000F00000)) 
    \rxvalid_cnt[1]_i_1__2 
       (.I0(rxvalid_cnt_reg__0[2]),
        .I1(rxvalid_cnt_reg__0[3]),
        .I2(rxvalid_reg2),
        .I3(rxstatus_reg2),
        .I4(rxvalid_cnt_reg__0[1]),
        .I5(rxvalid_cnt_reg__0[0]),
        .O(p_0_in__0__0[1]));
  LUT6 #(
    .INIT(64'h80BF000000C00000)) 
    \rxvalid_cnt[2]_i_1__2 
       (.I0(rxvalid_cnt_reg__0[3]),
        .I1(rxvalid_cnt_reg__0[0]),
        .I2(rxvalid_cnt_reg__0[1]),
        .I3(rxstatus_reg2),
        .I4(rxvalid_reg2),
        .I5(rxvalid_cnt_reg__0[2]),
        .O(p_0_in__0__0[2]));
  LUT6 #(
    .INIT(64'h8C08080808080808)) 
    \rxvalid_cnt[3]_i_1__2 
       (.I0(rxvalid_cnt_reg__0[3]),
        .I1(rxvalid_reg2),
        .I2(rxstatus_reg2),
        .I3(rxvalid_cnt_reg__0[2]),
        .I4(rxvalid_cnt_reg__0[1]),
        .I5(rxvalid_cnt_reg__0[0]),
        .O(p_0_in__0__0[3]));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[0] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__0__0[0]),
        .Q(rxvalid_cnt_reg__0[0]),
        .R(RST_RXUSRCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[1] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__0__0[1]),
        .Q(rxvalid_cnt_reg__0[1]),
        .R(RST_RXUSRCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[2] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__0__0[2]),
        .Q(rxvalid_cnt_reg__0[2]),
        .R(RST_RXUSRCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[3] 
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(p_0_in__0__0[3]),
        .Q(rxvalid_cnt_reg__0[3]),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxvalid_reg1_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(gt_rxvalid_3),
        .Q(rxvalid_reg1),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxvalid_reg2_reg
       (.C(pipe_rxusrclk_in),
        .CE(1'b1),
        .D(rxvalid_reg1),
        .Q(rxvalid_reg2),
        .R(RST_RXUSRCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txcompliance_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcompliance_reg1_reg_0),
        .Q(txcompliance_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txcompliance_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcompliance_reg1),
        .Q(txcompliance_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txelecidle_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txelecidle_reg1_reg_0),
        .Q(txelecidle_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txelecidle_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txelecidle_reg1),
        .Q(txelecidle_reg2),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(USER_TXRESETDONE),
        .Q(txresetdone_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txresetdone_reg1),
        .Q(txresetdone_reg2),
        .R(RST_CPLLRESET));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_pipe_wrapper" *) 
module pcie_7x_0_pcie_7x_0_pipe_wrapper
   (cpllpd,
    cpllpd_0,
    cpllpd_1,
    cpllpd_2,
    QRST_CPLLLOCK,
    ext_ch_gt_drprdy,
    pipe_eyescandataerror,
    pci_exp_txn,
    pci_exp_txp,
    pipe_rx0_chanisaligned,
    pipe_rxcommadet,
    pipe_rxdlysresetdone,
    SYNC_RXELECIDLE,
    pipe_rxoutclk_out,
    SYNC_RXPHALIGNDONE_M,
    pipe_rxprbserr,
    pipe_txdlysresetdone,
    pipe_txoutclk_out,
    pipe_txphaligndone,
    pipe_txphinitdone,
    ext_ch_gt_drpdo,
    pipe_rxbufstatus,
    pipe_rxstatus,
    PIPE_RXDATA,
    pipe_dmonitorout,
    PIPE_RXDATAK,
    pipe_rxdisperr,
    pipe_rxnotintable,
    QPLL_QPLLOUTCLK,
    QPLL_QPLLOUTREFCLK,
    SYNC_TXDLYSRESET,
    SYNC_TXPHALIGN,
    SYNC_TXPHINIT,
    pipe_rx1_chanisaligned,
    pipe_dclk_in_0,
    PIPE_RXPHALIGNDONE,
    pipe_dclk_in_1,
    pipe_dclk_in_2,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[3] ,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[5] ,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[4] ,
    pipe_rx2_chanisaligned,
    pipe_dclk_in_3,
    pipe_dclk_in_4,
    pipe_dclk_in_5,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[3]_0 ,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[4]_0 ,
    pipe_rx3_chanisaligned,
    pipe_dclk_in_6,
    pipe_dclk_in_7,
    pipe_dclk_in_8,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[3]_1 ,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_1 ,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[4]_1 ,
    pipe_rate_idle,
    DRP_FSM,
    \fsm_reg[2] ,
    \fsm_reg[2]_0 ,
    \fsm_reg[2]_1 ,
    reg_clock_locked_reg,
    rst_idle_reg2_reg,
    rst_idle_reg2_reg_0,
    rst_idle_reg2_reg_1,
    rst_idle_reg2_reg_2,
    D,
    gt_rxvalid_q_reg,
    gt_rxvalid_q_reg_0,
    gt_rxvalid_q_reg_1,
    gt_ch_drp_rdy,
    gen3_reg,
    QRST_IDLE,
    QPLL_QPLLLOCK,
    pipe_qrst_fsm,
    SYNC_FSM_TX,
    pipe_sync_fsm_rx,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[6] ,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ,
    \FSM_onehot_txsync_fsm.fsm_tx_reg[6]_1 ,
    RST_IDLE,
    RST_FSM,
    pipe_rst_fsm,
    pipe_rate_fsm,
    pipe_pclk_sel_out,
    rate_cpllpd_0,
    rate_cpllpd_1,
    rate_cpllpd_2,
    rate_cpllpd_3,
    rate_idle_reg2_reg,
    rate_idle_reg2_reg_0,
    rate_idle_reg2_reg_1,
    rate_rxsync_reg2_reg,
    CPLLPD0,
    pipe_dclk_in,
    sys_clk,
    pci_exp_rxn,
    pci_exp_rxp,
    pipe_rx0_polarity,
    pipe_rxprbscntreset,
    pipe_rxusrclk_in,
    pipe_tx_deemph_gt,
    pipe_tx_rcvr_det_gt,
    USER_TXELECIDLE,
    pipe_txinhibit,
    pipe_txprbsforceerr,
    pipe_pclk_in,
    Q,
    pipe_loopback,
    pipe_rxprbssel,
    \cplllock_reg1_reg[3] ,
    pipe_txprbssel,
    \cplllock_reg1_reg[0] ,
    USER_TXCOMPLIANCE,
    \cplllock_reg1_reg[0]_0 ,
    CPLLPD0_3,
    pipe_rx1_polarity,
    txelecidle_reg1_reg,
    \cplllock_reg1_reg[1] ,
    \cplllock_reg1_reg[1]_0 ,
    txcompliance_reg1_reg,
    \cplllock_reg1_reg[1]_1 ,
    CPLLPD0_4,
    pipe_rx2_polarity,
    txelecidle_reg1_reg_0,
    \cplllock_reg1_reg[2] ,
    \cplllock_reg1_reg[2]_0 ,
    txcompliance_reg1_reg_0,
    \cplllock_reg1_reg[2]_1 ,
    CPLLPD0_5,
    pipe_rx3_polarity,
    txelecidle_reg1_reg_1,
    \cplllock_reg1_reg[3]_0 ,
    \cplllock_reg1_reg[3]_1 ,
    txcompliance_reg1_reg_1,
    \cplllock_reg1_reg[3]_2 ,
    p_0_in__0,
    ext_ch_gt_drpaddr,
    reg_clock_locked,
    \gt_rx_status_q_reg[0] ,
    \gt_rx_status_q_reg[0]_0 ,
    \gt_rx_status_q_reg[0]_1 ,
    \gt_rx_status_q_reg[0]_2 ,
    \gt_rx_status_q_reg[2] ,
    ext_ch_gt_drpdi,
    ext_ch_gt_drpen,
    ext_ch_gt_drpwe,
    \rate_reg1_reg[0] ,
    pipe_mmcm_lock_in,
    pipe_oobclk_in);
  output cpllpd;
  output cpllpd_0;
  output cpllpd_1;
  output cpllpd_2;
  output [3:0]QRST_CPLLLOCK;
  output [3:0]ext_ch_gt_drprdy;
  output [3:0]pipe_eyescandataerror;
  output [3:0]pci_exp_txn;
  output [3:0]pci_exp_txp;
  output pipe_rx0_chanisaligned;
  output [3:0]pipe_rxcommadet;
  output [3:0]pipe_rxdlysresetdone;
  output SYNC_RXELECIDLE;
  output [3:0]pipe_rxoutclk_out;
  output SYNC_RXPHALIGNDONE_M;
  output [3:0]pipe_rxprbserr;
  output [3:0]pipe_txdlysresetdone;
  output pipe_txoutclk_out;
  output [3:0]pipe_txphaligndone;
  output [3:0]pipe_txphinitdone;
  output [63:0]ext_ch_gt_drpdo;
  output [11:0]pipe_rxbufstatus;
  output [11:0]pipe_rxstatus;
  output [15:0]PIPE_RXDATA;
  output [31:0]pipe_dmonitorout;
  output [1:0]PIPE_RXDATAK;
  output [31:0]pipe_rxdisperr;
  output [31:0]pipe_rxnotintable;
  output QPLL_QPLLOUTCLK;
  output QPLL_QPLLOUTREFCLK;
  output SYNC_TXDLYSRESET;
  output SYNC_TXPHALIGN;
  output SYNC_TXPHINIT;
  output pipe_rx1_chanisaligned;
  output pipe_dclk_in_0;
  output [2:0]PIPE_RXPHALIGNDONE;
  output [15:0]pipe_dclk_in_1;
  output [1:0]pipe_dclk_in_2;
  output \FSM_onehot_txsync_fsm.fsm_tx_reg[3] ;
  output \FSM_onehot_txsync_fsm.fsm_tx_reg[5] ;
  output \FSM_onehot_txsync_fsm.fsm_tx_reg[4] ;
  output pipe_rx2_chanisaligned;
  output pipe_dclk_in_3;
  output [15:0]pipe_dclk_in_4;
  output [1:0]pipe_dclk_in_5;
  output \FSM_onehot_txsync_fsm.fsm_tx_reg[3]_0 ;
  output \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ;
  output \FSM_onehot_txsync_fsm.fsm_tx_reg[4]_0 ;
  output pipe_rx3_chanisaligned;
  output pipe_dclk_in_6;
  output [15:0]pipe_dclk_in_7;
  output [1:0]pipe_dclk_in_8;
  output \FSM_onehot_txsync_fsm.fsm_tx_reg[3]_1 ;
  output \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_1 ;
  output \FSM_onehot_txsync_fsm.fsm_tx_reg[4]_1 ;
  output pipe_rate_idle;
  output [2:0]DRP_FSM;
  output [2:0]\fsm_reg[2] ;
  output [2:0]\fsm_reg[2]_0 ;
  output [2:0]\fsm_reg[2]_1 ;
  output reg_clock_locked_reg;
  output rst_idle_reg2_reg;
  output rst_idle_reg2_reg_0;
  output rst_idle_reg2_reg_1;
  output rst_idle_reg2_reg_2;
  output [2:0]D;
  output [2:0]gt_rxvalid_q_reg;
  output [2:0]gt_rxvalid_q_reg_0;
  output [2:0]gt_rxvalid_q_reg_1;
  output [3:0]gt_ch_drp_rdy;
  output gen3_reg;
  output QRST_IDLE;
  output QPLL_QPLLLOCK;
  output [3:0]pipe_qrst_fsm;
  output [2:0]SYNC_FSM_TX;
  output [3:0]pipe_sync_fsm_rx;
  output [2:0]\FSM_onehot_txsync_fsm.fsm_tx_reg[6] ;
  output [2:0]\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ;
  output [2:0]\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_1 ;
  output RST_IDLE;
  output [0:0]RST_FSM;
  output [3:0]pipe_rst_fsm;
  output [19:0]pipe_rate_fsm;
  output [3:0]pipe_pclk_sel_out;
  output rate_cpllpd_0;
  output rate_cpllpd_1;
  output rate_cpllpd_2;
  output rate_cpllpd_3;
  output rate_idle_reg2_reg;
  output rate_idle_reg2_reg_0;
  output rate_idle_reg2_reg_1;
  output rate_rxsync_reg2_reg;
  input CPLLPD0;
  input pipe_dclk_in;
  input sys_clk;
  input [3:0]pci_exp_rxn;
  input [3:0]pci_exp_rxp;
  input pipe_rx0_polarity;
  input pipe_rxprbscntreset;
  input pipe_rxusrclk_in;
  input pipe_tx_deemph_gt;
  input pipe_tx_rcvr_det_gt;
  input USER_TXELECIDLE;
  input [3:0]pipe_txinhibit;
  input pipe_txprbsforceerr;
  input pipe_pclk_in;
  input [1:0]Q;
  input [2:0]pipe_loopback;
  input [2:0]pipe_rxprbssel;
  input [2:0]\cplllock_reg1_reg[3] ;
  input [2:0]pipe_txprbssel;
  input [15:0]\cplllock_reg1_reg[0] ;
  input USER_TXCOMPLIANCE;
  input [1:0]\cplllock_reg1_reg[0]_0 ;
  input CPLLPD0_3;
  input pipe_rx1_polarity;
  input txelecidle_reg1_reg;
  input [1:0]\cplllock_reg1_reg[1] ;
  input [15:0]\cplllock_reg1_reg[1]_0 ;
  input txcompliance_reg1_reg;
  input [1:0]\cplllock_reg1_reg[1]_1 ;
  input CPLLPD0_4;
  input pipe_rx2_polarity;
  input txelecidle_reg1_reg_0;
  input [1:0]\cplllock_reg1_reg[2] ;
  input [15:0]\cplllock_reg1_reg[2]_0 ;
  input txcompliance_reg1_reg_0;
  input [1:0]\cplllock_reg1_reg[2]_1 ;
  input CPLLPD0_5;
  input pipe_rx3_polarity;
  input txelecidle_reg1_reg_1;
  input [1:0]\cplllock_reg1_reg[3]_0 ;
  input [15:0]\cplllock_reg1_reg[3]_1 ;
  input txcompliance_reg1_reg_1;
  input [1:0]\cplllock_reg1_reg[3]_2 ;
  input p_0_in__0;
  input [35:0]ext_ch_gt_drpaddr;
  input reg_clock_locked;
  input \gt_rx_status_q_reg[0] ;
  input \gt_rx_status_q_reg[0]_0 ;
  input \gt_rx_status_q_reg[0]_1 ;
  input \gt_rx_status_q_reg[0]_2 ;
  input \gt_rx_status_q_reg[2] ;
  input [63:0]ext_ch_gt_drpdi;
  input [3:0]ext_ch_gt_drpen;
  input [3:0]ext_ch_gt_drpwe;
  input [0:0]\rate_reg1_reg[0] ;
  input pipe_mmcm_lock_in;
  input pipe_oobclk_in;

  wire CPLLPD0;
  wire CPLLPD0_3;
  wire CPLLPD0_4;
  wire CPLLPD0_5;
  wire [2:0]D;
  wire [2:0]DRP_FSM;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg[3] ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg[3]_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg[3]_1 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg[4] ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg[4]_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg[4]_1 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg[5] ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx_reg[5]_1 ;
  wire [2:0]\FSM_onehot_txsync_fsm.fsm_tx_reg[6] ;
  wire [2:0]\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 ;
  wire [2:0]\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_1 ;
  wire [15:0]PIPE_RXDATA;
  wire [1:0]PIPE_RXDATAK;
  wire [2:0]PIPE_RXPHALIGNDONE;
  wire [1:0]Q;
  wire QPLL_QPLLLOCK;
  wire QPLL_QPLLOUTCLK;
  wire QPLL_QPLLOUTREFCLK;
  wire [3:0]QRST_CPLLLOCK;
  wire QRST_IDLE;
  wire [0:0]RST_FSM;
  wire RST_IDLE;
  wire [2:0]SYNC_FSM_TX;
  wire SYNC_RXELECIDLE;
  wire SYNC_RXPHALIGNDONE_M;
  wire SYNC_TXDLYSRESET;
  wire SYNC_TXPHALIGN;
  wire SYNC_TXPHINIT;
  wire SYNC_TXSYNC_START0;
  wire SYNC_TXSYNC_START00_out;
  wire SYNC_TXSYNC_START010_out;
  wire SYNC_TXSYNC_START05_out;
  wire USER_TXCOMPLIANCE;
  wire USER_TXELECIDLE;
  wire [15:0]\cplllock_reg1_reg[0] ;
  wire [1:0]\cplllock_reg1_reg[0]_0 ;
  wire [1:0]\cplllock_reg1_reg[1] ;
  wire [15:0]\cplllock_reg1_reg[1]_0 ;
  wire [1:0]\cplllock_reg1_reg[1]_1 ;
  wire [1:0]\cplllock_reg1_reg[2] ;
  wire [15:0]\cplllock_reg1_reg[2]_0 ;
  wire [1:0]\cplllock_reg1_reg[2]_1 ;
  wire [2:0]\cplllock_reg1_reg[3] ;
  wire [1:0]\cplllock_reg1_reg[3]_0 ;
  wire [15:0]\cplllock_reg1_reg[3]_1 ;
  wire [1:0]\cplllock_reg1_reg[3]_2 ;
  wire cpllpd;
  wire cpllpd_0;
  wire cpllpd_1;
  wire cpllpd_2;
  wire [7:0]drp_mux_addr_0;
  wire [8:0]drp_mux_addr_18;
  wire [8:0]drp_mux_addr_27;
  wire [8:0]drp_mux_addr_9;
  wire [15:0]drp_mux_di_0;
  wire [15:0]drp_mux_di_16;
  wire [15:0]drp_mux_di_32;
  wire [15:0]drp_mux_di_48;
  wire drp_mux_en_0;
  wire drp_mux_en_1;
  wire drp_mux_en_2;
  wire drp_mux_en_3;
  wire drp_mux_we_0;
  wire drp_mux_we_1;
  wire drp_mux_we_2;
  wire drp_mux_we_3;
  wire [6:0]eq_txeq_maincursor_0;
  wire [6:0]eq_txeq_maincursor_14;
  wire [6:0]eq_txeq_maincursor_21;
  wire [6:0]eq_txeq_maincursor_7;
  wire [4:0]eq_txeq_postcursor_0;
  wire [4:0]eq_txeq_postcursor_10;
  wire [4:0]eq_txeq_postcursor_15;
  wire [4:0]eq_txeq_postcursor_5;
  wire [4:0]eq_txeq_precursor_0;
  wire [4:0]eq_txeq_precursor_10;
  wire [4:0]eq_txeq_precursor_15;
  wire [4:0]eq_txeq_precursor_5;
  wire [35:0]ext_ch_gt_drpaddr;
  wire [63:0]ext_ch_gt_drpdi;
  wire [63:0]ext_ch_gt_drpdo;
  wire [3:0]ext_ch_gt_drpen;
  wire [3:0]ext_ch_gt_drprdy;
  wire [3:0]ext_ch_gt_drpwe;
  wire [2:0]\fsm_reg[2] ;
  wire [2:0]\fsm_reg[2]_0 ;
  wire [2:0]\fsm_reg[2]_1 ;
  wire gen3_reg;
  wire [3:0]gt_ch_drp_rdy;
  wire gt_cpllpdrefclk;
  wire gt_phystatus_0;
  wire gt_phystatus_1;
  wire gt_phystatus_2;
  wire gt_phystatus_3;
  wire \gt_rx_status_q_reg[0] ;
  wire \gt_rx_status_q_reg[0]_0 ;
  wire \gt_rx_status_q_reg[0]_1 ;
  wire \gt_rx_status_q_reg[0]_2 ;
  wire \gt_rx_status_q_reg[2] ;
  wire gt_rxcdrlock_0;
  wire gt_rxcdrlock_1;
  wire gt_rxcdrlock_2;
  wire gt_rxcdrlock_3;
  wire [4:0]\gt_rxchbondo[1]_0 ;
  wire gt_rxratedone_0;
  wire gt_rxratedone_1;
  wire gt_rxratedone_2;
  wire gt_rxratedone_3;
  wire gt_rxresetdone_0;
  wire gt_rxresetdone_1;
  wire gt_rxresetdone_2;
  wire gt_rxresetdone_3;
  wire gt_rxvalid_0;
  wire gt_rxvalid_1;
  wire gt_rxvalid_2;
  wire gt_rxvalid_3;
  wire [2:0]gt_rxvalid_q_reg;
  wire [2:0]gt_rxvalid_q_reg_0;
  wire [2:0]gt_rxvalid_q_reg_1;
  wire gt_txratedone_0;
  wire gt_txratedone_1;
  wire gt_txratedone_2;
  wire gt_txratedone_3;
  wire gt_txresetdone_0;
  wire gt_txresetdone_1;
  wire gt_txresetdone_2;
  wire gt_txresetdone_3;
  wire \gtx_channel.gtxe2_channel_i_i_53_n_0 ;
  wire \gtx_channel.gtxe2_channel_i_i_6_n_0 ;
  wire p_0_in1_in;
  wire p_0_in1_in_1;
  wire p_0_in1_in_4;
  wire p_0_in1_in_5;
  wire p_0_in__0;
  wire p_103_out;
  wire p_139_out;
  wire p_145_out;
  wire p_157_out;
  wire p_194_out;
  wire p_1_in;
  wire p_1_in2_in;
  wire p_1_in2_in_2;
  wire p_1_in2_in_3;
  wire p_1_in2_in_6;
  wire p_1_in_0;
  wire p_200_out;
  wire p_212_out;
  wire p_31_out;
  wire p_37_out;
  wire p_49_out;
  wire p_85_out;
  wire p_91_out;
  wire [3:0]pci_exp_rxn;
  wire [3:0]pci_exp_rxp;
  wire [3:0]pci_exp_txn;
  wire [3:0]pci_exp_txp;
  wire pipe_dclk_in;
  wire pipe_dclk_in_0;
  wire [15:0]pipe_dclk_in_1;
  wire [1:0]pipe_dclk_in_2;
  wire pipe_dclk_in_3;
  wire [15:0]pipe_dclk_in_4;
  wire [1:0]pipe_dclk_in_5;
  wire pipe_dclk_in_6;
  wire [15:0]pipe_dclk_in_7;
  wire [1:0]pipe_dclk_in_8;
  wire [31:0]pipe_dmonitorout;
  wire [3:0]pipe_eyescandataerror;
  wire \pipe_lane[0].pipe_drp.pipe_drp_i_n_3 ;
  wire \pipe_lane[0].pipe_eq.pipe_eq_i_n_17 ;
  wire \pipe_lane[0].pipe_sync_i_n_1 ;
  wire \pipe_lane[0].pipe_user_i_n_1 ;
  wire \pipe_lane[0].pipe_user_i_n_10 ;
  wire \pipe_lane[0].pipe_user_i_n_11 ;
  wire \pipe_lane[0].pipe_user_i_n_12 ;
  wire \pipe_lane[0].pipe_user_i_n_15 ;
  wire \pipe_lane[0].pipe_user_i_n_5 ;
  wire \pipe_lane[0].pipe_user_i_n_6 ;
  wire \pipe_lane[1].pipe_eq.pipe_eq_i_n_17 ;
  wire \pipe_lane[1].pipe_rate.pipe_rate_i_n_1 ;
  wire \pipe_lane[1].pipe_user_i_n_1 ;
  wire \pipe_lane[2].pipe_eq.pipe_eq_i_n_17 ;
  wire \pipe_lane[2].pipe_user_i_n_10 ;
  wire \pipe_lane[2].pipe_user_i_n_11 ;
  wire \pipe_lane[2].pipe_user_i_n_14 ;
  wire \pipe_lane[2].pipe_user_i_n_2 ;
  wire \pipe_lane[2].pipe_user_i_n_5 ;
  wire \pipe_lane[2].pipe_user_i_n_9 ;
  wire \pipe_lane[3].pipe_eq.pipe_eq_i_n_17 ;
  wire \pipe_lane[3].pipe_user_i_n_1 ;
  wire [2:0]pipe_loopback;
  wire pipe_mmcm_lock_in;
  wire pipe_oobclk_in;
  wire pipe_pclk_in;
  wire [3:0]pipe_pclk_sel_out;
  wire [3:0]pipe_qrst_fsm;
  wire [19:0]pipe_rate_fsm;
  wire pipe_rate_idle;
  wire \pipe_reset.pipe_reset_i_n_0 ;
  wire [3:0]pipe_rst_fsm;
  wire pipe_rx0_chanisaligned;
  wire pipe_rx0_polarity;
  wire pipe_rx1_chanisaligned;
  wire pipe_rx1_polarity;
  wire pipe_rx2_chanisaligned;
  wire pipe_rx2_polarity;
  wire pipe_rx3_chanisaligned;
  wire pipe_rx3_polarity;
  wire [11:0]pipe_rxbufstatus;
  wire [3:0]pipe_rxcommadet;
  wire [31:0]pipe_rxdisperr;
  wire [3:0]pipe_rxdlysresetdone;
  wire [31:0]pipe_rxnotintable;
  wire [3:0]pipe_rxoutclk_out;
  wire pipe_rxprbscntreset;
  wire [3:0]pipe_rxprbserr;
  wire [2:0]pipe_rxprbssel;
  wire [11:0]pipe_rxstatus;
  wire pipe_rxusrclk_in;
  wire [3:0]pipe_sync_fsm_rx;
  wire pipe_tx_deemph_gt;
  wire pipe_tx_rcvr_det_gt;
  wire [3:0]pipe_txdlysresetdone;
  wire [3:0]pipe_txinhibit;
  wire pipe_txoutclk_out;
  wire [3:0]pipe_txphaligndone;
  wire [3:0]pipe_txphinitdone;
  wire pipe_txprbsforceerr;
  wire [2:0]pipe_txprbssel;
  wire qdrp_done;
  wire qpllpd;
  wire qrst_drp_start;
  wire qrst_qpllreset;
  wire rate_cpllpd_0;
  wire rate_cpllpd_1;
  wire rate_cpllpd_2;
  wire rate_cpllpd_3;
  wire rate_cpllreset_0;
  wire rate_cpllreset_1;
  wire rate_cpllreset_2;
  wire rate_cpllreset_3;
  wire rate_done_0;
  wire rate_done_1;
  wire rate_done_2;
  wire rate_done_3;
  wire rate_drp_start_0;
  wire rate_drp_start_1;
  wire rate_drp_start_2;
  wire rate_drp_start_3;
  wire rate_drp_x16x20_mode_0;
  wire rate_drp_x16x20_mode_1;
  wire rate_drp_x16x20_mode_2;
  wire rate_drp_x16x20_mode_3;
  wire rate_gen3_1;
  wire rate_gen3_2;
  wire rate_gen3_3;
  wire [3:0]rate_idle;
  wire rate_idle_reg2_reg;
  wire rate_idle_reg2_reg_0;
  wire rate_idle_reg2_reg_1;
  wire [3:0]rate_qpllpd;
  wire [3:0]rate_qpllreset;
  wire [0:0]rate_rate_0;
  wire [0:0]rate_rate_3;
  wire [0:0]rate_rate_6;
  wire [0:0]rate_rate_9;
  wire [0:0]\rate_reg1_reg[0] ;
  wire rate_rxsync_reg2_reg;
  wire [0:0]rate_sysclksel_0;
  wire [0:0]rate_sysclksel_2;
  wire [0:0]rate_sysclksel_4;
  wire [0:0]rate_sysclksel_6;
  wire rate_txpmareset_0;
  wire rate_txpmareset_1;
  wire rate_txpmareset_2;
  wire rate_txpmareset_3;
  wire reg_clock_locked;
  wire reg_clock_locked_reg;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire reset_n_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire reset_n_reg2;
  wire rst_cpllreset;
  wire rst_dclk_reset;
  wire rst_gtreset;
  wire rst_idle_reg2_reg;
  wire rst_idle_reg2_reg_0;
  wire rst_idle_reg2_reg_1;
  wire rst_idle_reg2_reg_2;
  wire rst_txsync_start;
  wire rst_userrdy;
  wire rxchbonden_0;
  wire rxchbonden_1;
  wire rxchbonden_2;
  wire rxchbonden_3;
  wire rxdlysresetdone_3;
  wire rxphaligndone_s_3;
  wire sync_txdlyen_0;
  wire sys_clk;
  wire txcompliance_reg1_reg;
  wire txcompliance_reg1_reg_0;
  wire txcompliance_reg1_reg_1;
  wire txdlysresetdone_3;
  wire txelecidle_reg1_reg;
  wire txelecidle_reg1_reg_0;
  wire txelecidle_reg1_reg_1;
  wire txsyncallin;
  wire [3:0]user_active_lane;
  wire user_oobclk_0;
  wire user_oobclk_1;
  wire user_oobclk_2;
  wire user_oobclk_3;
  wire [3:0]user_resetdone;
  wire [3:1]user_rx_converge;

  LUT4 #(
    .INIT(16'h8000)) 
    PIPE_RATE_IDLE
       (.I0(rate_idle[1]),
        .I1(rate_idle[0]),
        .I2(rate_idle[3]),
        .I3(rate_idle[2]),
        .O(pipe_rate_idle));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG cpllpd_refclk_inst
       (.I(sys_clk),
        .O(gt_cpllpdrefclk));
  LUT5 #(
    .INIT(32'h4555FFFF)) 
    \gtx_channel.gtxe2_channel_i_i_53 
       (.I0(\pipe_lane[2].pipe_user_i_n_14 ),
        .I1(\pipe_lane[2].pipe_user_i_n_9 ),
        .I2(\pipe_lane[2].pipe_user_i_n_11 ),
        .I3(\pipe_lane[2].pipe_user_i_n_10 ),
        .I4(user_rx_converge[3]),
        .O(\gtx_channel.gtxe2_channel_i_i_53_n_0 ));
  LUT6 #(
    .INIT(64'h00000000AAAA0080)) 
    \gtx_channel.gtxe2_channel_i_i_6 
       (.I0(user_rx_converge[1]),
        .I1(\pipe_lane[0].pipe_user_i_n_11 ),
        .I2(\pipe_lane[0].pipe_user_i_n_12 ),
        .I3(\pipe_lane[0].pipe_user_i_n_10 ),
        .I4(\pipe_lane[0].pipe_user_i_n_15 ),
        .I5(\gtx_channel.gtxe2_channel_i_i_53_n_0 ),
        .O(\gtx_channel.gtxe2_channel_i_i_6_n_0 ));
  pcie_7x_0_pcie_7x_0_gt_wrapper \pipe_lane[0].gt_wrapper_i 
       (.CPLLPD0(CPLLPD0),
        .DRPADDR({\pipe_lane[0].pipe_drp.pipe_drp_i_n_3 ,drp_mux_addr_0}),
        .DRPDI(drp_mux_di_0),
        .DRP_GTXRESET(rst_gtreset),
        .PIPE_RXDATA(PIPE_RXDATA),
        .PIPE_RXDATAK(PIPE_RXDATAK),
        .Q(Q),
        .QPLL_QPLLOUTCLK(QPLL_QPLLOUTCLK),
        .QPLL_QPLLOUTREFCLK(QPLL_QPLLOUTREFCLK),
        .RATE_CPLLLOCK(QRST_CPLLLOCK[0]),
        .RATE_PHYSTATUS(gt_phystatus_0),
        .RATE_RXRATEDONE(gt_rxratedone_0),
        .RATE_TXRATEDONE(gt_txratedone_0),
        .RST_CPLLRESET(rst_cpllreset),
        .RXCHBONDO(\gt_rxchbondo[1]_0 ),
        .RXRATE(rate_rate_0),
        .RXSYSCLKSEL(rate_sysclksel_0),
        .SYNC_RXELECIDLE(SYNC_RXELECIDLE),
        .SYNC_RXPHALIGNDONE_M(SYNC_RXPHALIGNDONE_M),
        .SYNC_TXDLYSRESET(SYNC_TXDLYSRESET),
        .SYNC_TXPHALIGN(SYNC_TXPHALIGN),
        .SYNC_TXPHINIT(SYNC_TXPHINIT),
        .TXMAINCURSOR(eq_txeq_maincursor_0),
        .TXPOSTCURSOR(eq_txeq_postcursor_0),
        .TXPRECURSOR(eq_txeq_precursor_0),
        .USER_OOBCLK(user_oobclk_0),
        .USER_RXRESETDONE(gt_rxresetdone_0),
        .USER_TXCOMPLIANCE(USER_TXCOMPLIANCE),
        .USER_TXELECIDLE(USER_TXELECIDLE),
        .USER_TXRESETDONE(gt_txresetdone_0),
        .\cplllock_reg1_reg[0] (\gtx_channel.gtxe2_channel_i_i_6_n_0 ),
        .\cplllock_reg1_reg[0]_0 (\cplllock_reg1_reg[3] ),
        .\cplllock_reg1_reg[0]_1 (\cplllock_reg1_reg[0] ),
        .\cplllock_reg1_reg[0]_2 (\cplllock_reg1_reg[0]_0 ),
        .cpllpd(cpllpd),
        .drp_mux_en_0(drp_mux_en_0),
        .drp_mux_we_0(drp_mux_we_0),
        .ext_ch_gt_drpdo(ext_ch_gt_drpdo[15:0]),
        .ext_ch_gt_drprdy(ext_ch_gt_drprdy[0]),
        .gt_cpllpdrefclk(gt_cpllpdrefclk),
        .\gt_rx_status_q_reg[0] (\gt_rx_status_q_reg[0] ),
        .\gt_rx_status_q_reg[2] (\gt_rx_status_q_reg[2] ),
        .gt_rxcdrlock_0(gt_rxcdrlock_0),
        .gt_rxvalid_0(gt_rxvalid_0),
        .gt_rxvalid_q_reg(gt_rxvalid_q_reg_1),
        .pci_exp_rxn(pci_exp_rxn[0]),
        .pci_exp_rxp(pci_exp_rxp[0]),
        .pci_exp_txn(pci_exp_txn[0]),
        .pci_exp_txp(pci_exp_txp[0]),
        .pipe_dclk_in(pipe_dclk_in),
        .pipe_dmonitorout(pipe_dmonitorout[7:0]),
        .pipe_eyescandataerror(pipe_eyescandataerror[0]),
        .pipe_loopback(pipe_loopback),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_rx0_chanisaligned(pipe_rx0_chanisaligned),
        .pipe_rx0_polarity(pipe_rx0_polarity),
        .pipe_rxbufstatus(pipe_rxbufstatus[2:0]),
        .pipe_rxcommadet(pipe_rxcommadet[0]),
        .pipe_rxdisperr(pipe_rxdisperr[7:0]),
        .pipe_rxdlysresetdone(pipe_rxdlysresetdone[0]),
        .pipe_rxnotintable(pipe_rxnotintable[7:0]),
        .pipe_rxoutclk_out(pipe_rxoutclk_out[0]),
        .pipe_rxprbscntreset(pipe_rxprbscntreset),
        .pipe_rxprbserr(pipe_rxprbserr[0]),
        .pipe_rxprbssel(pipe_rxprbssel),
        .pipe_rxstatus(pipe_rxstatus[2:0]),
        .pipe_rxusrclk_in(pipe_rxusrclk_in),
        .pipe_tx_deemph_gt(pipe_tx_deemph_gt),
        .pipe_tx_rcvr_det_gt(pipe_tx_rcvr_det_gt),
        .pipe_txdlysresetdone(pipe_txdlysresetdone[0]),
        .pipe_txinhibit(pipe_txinhibit[0]),
        .pipe_txoutclk_out(pipe_txoutclk_out),
        .pipe_txphaligndone(pipe_txphaligndone[0]),
        .pipe_txphinitdone(pipe_txphinitdone[0]),
        .pipe_txprbsforceerr(pipe_txprbsforceerr),
        .pipe_txprbssel(pipe_txprbssel),
        .rate_cpllreset_0(rate_cpllreset_0),
        .rate_txpmareset_0(rate_txpmareset_0),
        .rst_userrdy(rst_userrdy),
        .rxchbonden_0(rxchbonden_0),
        .sync_txdlyen_0(sync_txdlyen_0),
        .sys_clk(sys_clk));
  pcie_7x_0_pcie_7x_0_pipe_drp \pipe_lane[0].pipe_drp.pipe_drp_i 
       (.DRPADDR({\pipe_lane[0].pipe_drp.pipe_drp_i_n_3 ,drp_mux_addr_0}),
        .DRPDI(drp_mux_di_0),
        .DRP_DONE(p_212_out),
        .DRP_GTXRESET(rst_gtreset),
        .Q(DRP_FSM),
        .RATE_DRP_START(rate_drp_start_0),
        .RATE_DRP_X16X20_MODE(rate_drp_x16x20_mode_0),
        .RST_DCLK_RESET(rst_dclk_reset),
        .drp_mux_en_0(drp_mux_en_0),
        .drp_mux_we_0(drp_mux_we_0),
        .ext_ch_gt_drpaddr(ext_ch_gt_drpaddr[8:0]),
        .ext_ch_gt_drpdi(ext_ch_gt_drpdi[15:0]),
        .ext_ch_gt_drpdo(ext_ch_gt_drpdo[15:0]),
        .ext_ch_gt_drpen(ext_ch_gt_drpen[0]),
        .ext_ch_gt_drprdy(ext_ch_gt_drprdy[0]),
        .ext_ch_gt_drpwe(ext_ch_gt_drpwe[0]),
        .gt_ch_drp_rdy(gt_ch_drp_rdy[0]),
        .pipe_dclk_in(pipe_dclk_in),
        .\rate_reg1_reg[0]_0 (\rate_reg1_reg[0] ));
  pcie_7x_0_pcie_7x_0_pipe_eq \pipe_lane[0].pipe_eq.pipe_eq_i 
       (.RST_CPLLRESET(rst_cpllreset),
        .TXMAINCURSOR(eq_txeq_maincursor_0),
        .TXPOSTCURSOR(eq_txeq_postcursor_0),
        .TXPRECURSOR(eq_txeq_precursor_0),
        .USER_RATE_GEN3(gen3_reg),
        .USER_RXEQ_ADAPT_DONE(\pipe_lane[0].pipe_eq.pipe_eq_i_n_17 ),
        .pipe_pclk_in(pipe_pclk_in));
  pcie_7x_0_pcie_7x_0_gt_common \pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i 
       (.QPLL_DRP_DONE(qdrp_done),
        .QPLL_DRP_GEN3(\pipe_lane[1].pipe_rate.pipe_rate_i_n_1 ),
        .QPLL_QPLLLOCK(QPLL_QPLLLOCK),
        .QPLL_QPLLOUTCLK(QPLL_QPLLOUTCLK),
        .QPLL_QPLLOUTREFCLK(QPLL_QPLLOUTREFCLK),
        .QPLL_QPLLPD(qpllpd),
        .QPLL_QPLLRESET(qrst_qpllreset),
        .QRST_DRP_START(qrst_drp_start),
        .RST_DCLK_RESET(rst_dclk_reset),
        .pipe_dclk_in(pipe_dclk_in),
        .sys_clk(sys_clk));
  pcie_7x_0_pcie_7x_0_pipe_rate \pipe_lane[0].pipe_rate.pipe_rate_i 
       (.\FSM_onehot_fsm_reg[20]_0 (p_0_in1_in),
        .Q({rate_done_0,rate_idle[0]}),
        .QRST_QPLLPD_IN(rate_qpllpd[0]),
        .QRST_QPLLRESET_IN(rate_qpllreset[0]),
        .RATE_CPLLLOCK(QRST_CPLLLOCK[0]),
        .RATE_DRP_DONE(p_212_out),
        .RATE_DRP_START(rate_drp_start_0),
        .RATE_DRP_X16X20_MODE(rate_drp_x16x20_mode_0),
        .RATE_PHYSTATUS(gt_phystatus_0),
        .RATE_QPLLLOCK(QPLL_QPLLLOCK),
        .RATE_RXRATEDONE(gt_rxratedone_0),
        .RATE_TXRATEDONE(gt_txratedone_0),
        .RATE_TXSYNC_DONE(p_194_out),
        .RST_CPLLRESET(rst_cpllreset),
        .RST_IDLE(RST_IDLE),
        .RST_TXSYNC_START(rst_txsync_start),
        .RXRATE(rate_rate_0),
        .RXSYSCLKSEL(rate_sysclksel_0),
        .SYNC_TXSYNC_START(SYNC_TXSYNC_START010_out),
        .USER_RATE_GEN3(gen3_reg),
        .USER_RXRESETDONE(gt_rxresetdone_0),
        .USER_TXRESETDONE(gt_txresetdone_0),
        .out(p_1_in2_in),
        .pipe_mmcm_lock_in(pipe_mmcm_lock_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_pclk_sel_out(pipe_pclk_sel_out[0]),
        .pipe_rate_fsm(pipe_rate_fsm[4:0]),
        .rate_cpllpd_0(rate_cpllpd_0),
        .rate_cpllreset_0(rate_cpllreset_0),
        .\rate_in_reg1_reg[0]_0 (\rate_reg1_reg[0] ),
        .rate_txpmareset_0(rate_txpmareset_0),
        .rxchbonden_0(rxchbonden_0),
        .user_active_lane(user_active_lane[0]));
  pcie_7x_0_pcie_7x_0_pipe_sync \pipe_lane[0].pipe_sync_i 
       (.\FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 (\pipe_lane[0].pipe_user_i_n_6 ),
        .\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 (p_1_in2_in),
        .\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_1 (p_0_in1_in),
        .Q({SYNC_FSM_TX[2],SYNC_TXPHALIGN,SYNC_TXPHINIT,SYNC_TXDLYSRESET,SYNC_FSM_TX[1:0]}),
        .RST_CPLLRESET(rst_cpllreset),
        .RST_TXSYNC_DONE(p_194_out),
        .SYNC_RATE_IDLE(rate_idle[0]),
        .SYNC_RXCDRLOCK(p_200_out),
        .SYNC_RXDLYSRESETDONE(rxdlysresetdone_3),
        .SYNC_RXELECIDLE(SYNC_RXELECIDLE),
        .SYNC_RXPHALIGNDONE_M(SYNC_RXPHALIGNDONE_M),
        .SYNC_RXPHALIGNDONE_S(rxphaligndone_s_3),
        .SYNC_TXDLYSRESETDONE(txdlysresetdone_3),
        .SYNC_TXPHALIGNDONE(txsyncallin),
        .SYNC_TXPHINITDONE(\pipe_lane[0].pipe_user_i_n_5 ),
        .SYNC_TXSYNC_START(SYNC_TXSYNC_START010_out),
        .USER_RATE_GEN3(gen3_reg),
        .out(p_1_in_0),
        .pipe_mmcm_lock_in(pipe_mmcm_lock_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_sync_fsm_rx(pipe_sync_fsm_rx[0]),
        .sync_txdlyen_0(sync_txdlyen_0),
        .txphaligndone_reg3_reg_0(\pipe_lane[0].pipe_sync_i_n_1 ),
        .user_active_lane(user_active_lane[0]));
  pcie_7x_0_pcie_7x_0_pipe_user \pipe_lane[0].pipe_user_i 
       (.\FSM_onehot_txsync_fsm.fsm_tx_reg[5] (\pipe_lane[0].pipe_sync_i_n_1 ),
        .\FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 (p_1_in_0),
        .Q({rate_done_0,rate_idle[0]}),
        .RST_CPLLRESET(rst_cpllreset),
        .RST_IDLE(RST_IDLE),
        .RST_PHYSTATUS(gt_phystatus_0),
        .RST_RESETDONE(user_resetdone[0]),
        .RST_RXCDRLOCK(p_200_out),
        .RST_RXUSRCLK_RESET(p_1_in),
        .SYNC_RXELECIDLE(SYNC_RXELECIDLE),
        .SYNC_TXPHALIGNDONE(txsyncallin),
        .SYNC_TXPHINITDONE(\pipe_lane[0].pipe_user_i_n_5 ),
        .USER_OOBCLK(user_oobclk_0),
        .USER_RATE_GEN3(gen3_reg),
        .USER_RXEQ_ADAPT_DONE(\pipe_lane[0].pipe_eq.pipe_eq_i_n_17 ),
        .USER_RXRESETDONE(gt_rxresetdone_0),
        .USER_TXCOMPLIANCE(USER_TXCOMPLIANCE),
        .USER_TXELECIDLE(USER_TXELECIDLE),
        .USER_TXRESETDONE(gt_txresetdone_0),
        .\converge_cnt_reg[15]_0 (\pipe_lane[0].pipe_user_i_n_10 ),
        .\converge_cnt_reg[1]_0 (\pipe_lane[0].pipe_user_i_n_11 ),
        .\converge_cnt_reg[6]_0 (\pipe_lane[0].pipe_user_i_n_12 ),
        .converge_gen3_reg_0(\pipe_lane[0].pipe_user_i_n_15 ),
        .gt_rxcdrlock_0(gt_rxcdrlock_0),
        .gt_rxvalid_0(gt_rxvalid_0),
        .gt_rxvalid_q_reg(\gt_rx_status_q_reg[0] ),
        .out(\pipe_lane[0].pipe_user_i_n_1 ),
        .pipe_oobclk_in(pipe_oobclk_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_pclk_sel_out(pipe_pclk_sel_out[0]),
        .pipe_rxstatus(pipe_rxstatus[2]),
        .pipe_rxusrclk_in(pipe_rxusrclk_in),
        .pipe_txphaligndone(pipe_txphaligndone[1:0]),
        .pipe_txphinitdone(pipe_txphinitdone[1:0]),
        .rate_idle_reg2_reg_0(rate_idle_reg2_reg),
        .rst_idle_reg2_reg_0(rst_idle_reg2_reg),
        .txcompliance_reg2_reg_0(p_0_in1_in),
        .txcompliance_reg2_reg_1(user_active_lane[0]),
        .txelecidle_reg2_reg_0(p_1_in2_in),
        .txelecidle_reg2_reg_1(\pipe_lane[0].pipe_user_i_n_6 ),
        .txphaligndone_reg1_reg(\pipe_lane[2].pipe_user_i_n_2 ),
        .txphinitdone_reg1_reg(\pipe_lane[2].pipe_user_i_n_5 ),
        .user_active_lane(user_active_lane[1]));
  pcie_7x_0_pcie_7x_0_gt_wrapper_21 \pipe_lane[1].gt_wrapper_i 
       (.CPLLPD0_3(CPLLPD0_3),
        .DRPADDR(drp_mux_addr_9),
        .DRPDI(drp_mux_di_16),
        .DRP_GTXRESET(rst_gtreset),
        .PIPE_RXPHALIGNDONE(PIPE_RXPHALIGNDONE[0]),
        .QPLL_QPLLOUTCLK(QPLL_QPLLOUTCLK),
        .QPLL_QPLLOUTREFCLK(QPLL_QPLLOUTREFCLK),
        .RATE_CPLLLOCK(QRST_CPLLLOCK[1]),
        .RATE_PHYSTATUS(gt_phystatus_1),
        .RATE_RXRATEDONE(gt_rxratedone_1),
        .RATE_TXRATEDONE(gt_txratedone_1),
        .RST_CPLLRESET(rst_cpllreset),
        .RXCHBONDO(\gt_rxchbondo[1]_0 ),
        .RXRATE(rate_rate_3),
        .RXSYSCLKSEL(rate_sysclksel_2),
        .SYNC_TXDLYSRESET(\FSM_onehot_txsync_fsm.fsm_tx_reg[3] ),
        .SYNC_TXPHALIGN(\FSM_onehot_txsync_fsm.fsm_tx_reg[5] ),
        .SYNC_TXPHINIT(\FSM_onehot_txsync_fsm.fsm_tx_reg[4] ),
        .TXMAINCURSOR(eq_txeq_maincursor_7),
        .TXPOSTCURSOR(eq_txeq_postcursor_5),
        .TXPRECURSOR(eq_txeq_precursor_5),
        .USER_OOBCLK(user_oobclk_1),
        .USER_RXRESETDONE(gt_rxresetdone_1),
        .USER_TXRESETDONE(gt_txresetdone_1),
        .\cplllock_reg1_reg[1] (\gtx_channel.gtxe2_channel_i_i_6_n_0 ),
        .\cplllock_reg1_reg[1]_0 (txelecidle_reg1_reg),
        .\cplllock_reg1_reg[1]_1 (\cplllock_reg1_reg[1] ),
        .\cplllock_reg1_reg[1]_2 (\cplllock_reg1_reg[3] ),
        .\cplllock_reg1_reg[1]_3 (\cplllock_reg1_reg[1]_0 ),
        .\cplllock_reg1_reg[1]_4 (txcompliance_reg1_reg),
        .\cplllock_reg1_reg[1]_5 (\cplllock_reg1_reg[1]_1 ),
        .cpllpd_0(cpllpd_0),
        .drp_mux_en_1(drp_mux_en_1),
        .drp_mux_we_1(drp_mux_we_1),
        .ext_ch_gt_drpdo(ext_ch_gt_drpdo[31:16]),
        .ext_ch_gt_drprdy(ext_ch_gt_drprdy[1]),
        .gt_cpllpdrefclk(gt_cpllpdrefclk),
        .\gt_rx_status_q_reg[0] (\gt_rx_status_q_reg[0]_0 ),
        .\gt_rx_status_q_reg[2] (\gt_rx_status_q_reg[2] ),
        .gt_rxcdrlock_1(gt_rxcdrlock_1),
        .gt_rxvalid_1(gt_rxvalid_1),
        .gt_rxvalid_q_reg(gt_rxvalid_q_reg_0),
        .pci_exp_rxn(pci_exp_rxn[1]),
        .pci_exp_rxp(pci_exp_rxp[1]),
        .pci_exp_txn(pci_exp_txn[1]),
        .pci_exp_txp(pci_exp_txp[1]),
        .pipe_dclk_in(pipe_dclk_in),
        .pipe_dclk_in_0(pipe_dclk_in_0),
        .pipe_dclk_in_1(pipe_dclk_in_1),
        .pipe_dclk_in_2(pipe_dclk_in_2),
        .pipe_dmonitorout(pipe_dmonitorout[15:8]),
        .pipe_eyescandataerror(pipe_eyescandataerror[1]),
        .pipe_loopback(pipe_loopback),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_rx1_chanisaligned(pipe_rx1_chanisaligned),
        .pipe_rx1_polarity(pipe_rx1_polarity),
        .pipe_rxbufstatus(pipe_rxbufstatus[5:3]),
        .pipe_rxcommadet(pipe_rxcommadet[1]),
        .pipe_rxdisperr(pipe_rxdisperr[15:8]),
        .pipe_rxdlysresetdone(pipe_rxdlysresetdone[1]),
        .pipe_rxnotintable(pipe_rxnotintable[15:8]),
        .pipe_rxoutclk_out(pipe_rxoutclk_out[1]),
        .pipe_rxprbscntreset(pipe_rxprbscntreset),
        .pipe_rxprbserr(pipe_rxprbserr[1]),
        .pipe_rxprbssel(pipe_rxprbssel),
        .pipe_rxstatus(pipe_rxstatus[5:3]),
        .pipe_rxusrclk_in(pipe_rxusrclk_in),
        .pipe_tx_deemph_gt(pipe_tx_deemph_gt),
        .pipe_tx_rcvr_det_gt(pipe_tx_rcvr_det_gt),
        .pipe_txdlysresetdone(pipe_txdlysresetdone[1]),
        .pipe_txinhibit(pipe_txinhibit[1]),
        .pipe_txphaligndone(pipe_txphaligndone[1]),
        .pipe_txphinitdone(pipe_txphinitdone[1]),
        .pipe_txprbsforceerr(pipe_txprbsforceerr),
        .pipe_txprbssel(pipe_txprbssel),
        .rate_cpllreset_1(rate_cpllreset_1),
        .rate_txpmareset_1(rate_txpmareset_1),
        .rst_userrdy(rst_userrdy),
        .rxchbonden_1(rxchbonden_1),
        .sys_clk(sys_clk));
  pcie_7x_0_pcie_7x_0_pipe_drp_22 \pipe_lane[1].pipe_drp.pipe_drp_i 
       (.DRPADDR(drp_mux_addr_9),
        .DRPDI(drp_mux_di_16),
        .DRP_DONE(p_157_out),
        .DRP_GTXRESET(rst_gtreset),
        .Q(\fsm_reg[2] ),
        .RATE_DRP_START(rate_drp_start_1),
        .RATE_DRP_X16X20_MODE(rate_drp_x16x20_mode_1),
        .RST_DCLK_RESET(rst_dclk_reset),
        .drp_mux_en_1(drp_mux_en_1),
        .drp_mux_we_1(drp_mux_we_1),
        .ext_ch_gt_drpaddr(ext_ch_gt_drpaddr[17:9]),
        .ext_ch_gt_drpdi(ext_ch_gt_drpdi[31:16]),
        .ext_ch_gt_drpdo(ext_ch_gt_drpdo[31:16]),
        .ext_ch_gt_drpen(ext_ch_gt_drpen[1]),
        .ext_ch_gt_drprdy(ext_ch_gt_drprdy[1]),
        .ext_ch_gt_drpwe(ext_ch_gt_drpwe[1]),
        .gt_ch_drp_rdy(gt_ch_drp_rdy[1]),
        .pipe_dclk_in(pipe_dclk_in),
        .\rate_reg1_reg[0]_0 (\rate_reg1_reg[0] ));
  pcie_7x_0_pcie_7x_0_pipe_eq_23 \pipe_lane[1].pipe_eq.pipe_eq_i 
       (.RST_CPLLRESET(rst_cpllreset),
        .TXMAINCURSOR(eq_txeq_maincursor_7),
        .TXPOSTCURSOR(eq_txeq_postcursor_5),
        .TXPRECURSOR(eq_txeq_precursor_5),
        .USER_RXEQ_ADAPT_DONE(\pipe_lane[1].pipe_eq.pipe_eq_i_n_17 ),
        .pipe_pclk_in(pipe_pclk_in),
        .rate_gen3_1(rate_gen3_1));
  pcie_7x_0_pcie_7x_0_pipe_rate_24 \pipe_lane[1].pipe_rate.pipe_rate_i 
       (.\FSM_onehot_fsm_reg[20]_0 (p_0_in1_in_1),
        .Q({rate_done_1,rate_idle[1]}),
        .QPLL_DRP_GEN3(\pipe_lane[1].pipe_rate.pipe_rate_i_n_1 ),
        .QRST_QPLLPD_IN(rate_qpllpd[1]),
        .QRST_QPLLRESET_IN(rate_qpllreset[1]),
        .RATE_CPLLLOCK(QRST_CPLLLOCK[1]),
        .RATE_DRP_DONE(p_157_out),
        .RATE_DRP_START(rate_drp_start_1),
        .RATE_DRP_X16X20_MODE(rate_drp_x16x20_mode_1),
        .RATE_PHYSTATUS(gt_phystatus_1),
        .RATE_QPLLLOCK(QPLL_QPLLLOCK),
        .RATE_RXRATEDONE(gt_rxratedone_1),
        .RATE_TXRATEDONE(gt_txratedone_1),
        .RATE_TXSYNC_DONE(p_139_out),
        .RST_CPLLRESET(rst_cpllreset),
        .RST_IDLE(RST_IDLE),
        .RST_TXSYNC_START(rst_txsync_start),
        .RXRATE(rate_rate_3),
        .RXSYSCLKSEL(rate_sysclksel_2),
        .SYNC_TXSYNC_START(SYNC_TXSYNC_START05_out),
        .USER_RATE_GEN3(gen3_reg),
        .USER_RXRESETDONE(gt_rxresetdone_1),
        .USER_TXRESETDONE(gt_txresetdone_1),
        .out(p_1_in2_in_2),
        .pipe_mmcm_lock_in(pipe_mmcm_lock_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_pclk_sel_out(pipe_pclk_sel_out[1]),
        .pipe_rate_fsm(pipe_rate_fsm[9:5]),
        .rate_cpllpd_1(rate_cpllpd_1),
        .rate_cpllreset_1(rate_cpllreset_1),
        .rate_gen3_1(rate_gen3_1),
        .rate_gen3_2(rate_gen3_2),
        .rate_gen3_3(rate_gen3_3),
        .\rate_in_reg1_reg[0]_0 (\rate_reg1_reg[0] ),
        .rate_txpmareset_1(rate_txpmareset_1),
        .rxchbonden_1(rxchbonden_1),
        .user_active_lane(user_active_lane[1]));
  pcie_7x_0_pcie_7x_0_pipe_sync_25 \pipe_lane[1].pipe_sync_i 
       (.\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 (p_0_in1_in_1),
        .Q({\FSM_onehot_txsync_fsm.fsm_tx_reg[6] [2],\FSM_onehot_txsync_fsm.fsm_tx_reg[5] ,\FSM_onehot_txsync_fsm.fsm_tx_reg[4] ,\FSM_onehot_txsync_fsm.fsm_tx_reg[3] ,\FSM_onehot_txsync_fsm.fsm_tx_reg[6] [1:0]}),
        .RST_CPLLRESET(rst_cpllreset),
        .RST_TXSYNC_DONE(p_139_out),
        .SYNC_GEN3(rate_gen3_1),
        .SYNC_RATE_IDLE(rate_idle[1]),
        .SYNC_RXCDRLOCK(p_145_out),
        .SYNC_RXDLYSRESETDONE(rxdlysresetdone_3),
        .SYNC_RXPHALIGNDONE_M(SYNC_RXPHALIGNDONE_M),
        .SYNC_RXPHALIGNDONE_S(rxphaligndone_s_3),
        .SYNC_TXDLYSRESETDONE(txdlysresetdone_3),
        .SYNC_TXPHALIGNDONE(txsyncallin),
        .SYNC_TXPHINITDONE(\pipe_lane[0].pipe_user_i_n_5 ),
        .SYNC_TXSYNC_START(SYNC_TXSYNC_START05_out),
        .out(p_1_in2_in_2),
        .pipe_mmcm_lock_in(pipe_mmcm_lock_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_sync_fsm_rx(pipe_sync_fsm_rx[1]),
        .rxelecidle_reg1_reg_0(pipe_dclk_in_0),
        .user_active_lane(user_active_lane[1]));
  pcie_7x_0_pcie_7x_0_pipe_user_26 \pipe_lane[1].pipe_user_i 
       (.Q({rate_done_1,rate_idle[1]}),
        .RST_CPLLRESET(rst_cpllreset),
        .RST_IDLE(RST_IDLE),
        .RST_PHYSTATUS(gt_phystatus_1),
        .RST_RESETDONE(user_resetdone[1]),
        .RST_RXCDRLOCK(p_145_out),
        .RST_RXUSRCLK_RESET(p_1_in),
        .USER_OOBCLK(user_oobclk_1),
        .USER_RATE_GEN3(rate_gen3_1),
        .USER_RXEQ_ADAPT_DONE(\pipe_lane[1].pipe_eq.pipe_eq_i_n_17 ),
        .USER_RXRESETDONE(gt_rxresetdone_1),
        .USER_TXRESETDONE(gt_txresetdone_1),
        .gt_rxcdrlock_1(gt_rxcdrlock_1),
        .gt_rxvalid_1(gt_rxvalid_1),
        .gt_rxvalid_q_reg(pipe_dclk_in_0),
        .gt_rxvalid_q_reg_0(\gt_rx_status_q_reg[0]_0 ),
        .out(\pipe_lane[1].pipe_user_i_n_1 ),
        .pipe_oobclk_in(pipe_oobclk_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_pclk_sel_out(pipe_pclk_sel_out[1]),
        .pipe_rxstatus(pipe_rxstatus[5]),
        .pipe_rxusrclk_in(pipe_rxusrclk_in),
        .rate_idle_reg2_reg_0(rate_idle_reg2_reg_0),
        .rst_idle_reg2_reg_0(rst_idle_reg2_reg_0),
        .txcompliance_reg1_reg_0(txcompliance_reg1_reg),
        .txcompliance_reg2_reg_0(p_0_in1_in_1),
        .txelecidle_reg1_reg_0(txelecidle_reg1_reg),
        .txelecidle_reg2_reg_0(p_1_in2_in_2),
        .user_active_lane(user_active_lane[1]),
        .user_rx_converge(user_rx_converge[1]));
  pcie_7x_0_pcie_7x_0_gt_wrapper_27 \pipe_lane[2].gt_wrapper_i 
       (.CPLLPD0_4(CPLLPD0_4),
        .DRPADDR(drp_mux_addr_18),
        .DRPDI(drp_mux_di_32),
        .DRP_GTXRESET(rst_gtreset),
        .PIPE_RXPHALIGNDONE(PIPE_RXPHALIGNDONE[1]),
        .QPLL_QPLLOUTCLK(QPLL_QPLLOUTCLK),
        .QPLL_QPLLOUTREFCLK(QPLL_QPLLOUTREFCLK),
        .RATE_CPLLLOCK(QRST_CPLLLOCK[2]),
        .RATE_PHYSTATUS(gt_phystatus_2),
        .RATE_RXRATEDONE(gt_rxratedone_2),
        .RATE_TXRATEDONE(gt_txratedone_2),
        .RST_CPLLRESET(rst_cpllreset),
        .RXCHBONDO(\gt_rxchbondo[1]_0 ),
        .RXRATE(rate_rate_6),
        .RXSYSCLKSEL(rate_sysclksel_4),
        .SYNC_TXDLYSRESET(\FSM_onehot_txsync_fsm.fsm_tx_reg[3]_0 ),
        .SYNC_TXPHALIGN(\FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ),
        .SYNC_TXPHINIT(\FSM_onehot_txsync_fsm.fsm_tx_reg[4]_0 ),
        .TXMAINCURSOR(eq_txeq_maincursor_14),
        .TXPOSTCURSOR(eq_txeq_postcursor_10),
        .TXPRECURSOR(eq_txeq_precursor_10),
        .USER_OOBCLK(user_oobclk_2),
        .USER_RXRESETDONE(gt_rxresetdone_2),
        .USER_TXRESETDONE(gt_txresetdone_2),
        .\cplllock_reg1_reg[2] (\gtx_channel.gtxe2_channel_i_i_6_n_0 ),
        .\cplllock_reg1_reg[2]_0 (txelecidle_reg1_reg_0),
        .\cplllock_reg1_reg[2]_1 (\cplllock_reg1_reg[2] ),
        .\cplllock_reg1_reg[2]_2 (\cplllock_reg1_reg[3] ),
        .\cplllock_reg1_reg[2]_3 (\cplllock_reg1_reg[2]_0 ),
        .\cplllock_reg1_reg[2]_4 (txcompliance_reg1_reg_0),
        .\cplllock_reg1_reg[2]_5 (\cplllock_reg1_reg[2]_1 ),
        .cpllpd_1(cpllpd_1),
        .drp_mux_en_2(drp_mux_en_2),
        .drp_mux_we_2(drp_mux_we_2),
        .ext_ch_gt_drpdo(ext_ch_gt_drpdo[47:32]),
        .ext_ch_gt_drprdy(ext_ch_gt_drprdy[2]),
        .gt_cpllpdrefclk(gt_cpllpdrefclk),
        .\gt_rx_status_q_reg[0] (\gt_rx_status_q_reg[0]_1 ),
        .\gt_rx_status_q_reg[2] (\gt_rx_status_q_reg[2] ),
        .gt_rxcdrlock_2(gt_rxcdrlock_2),
        .gt_rxvalid_2(gt_rxvalid_2),
        .gt_rxvalid_q_reg(gt_rxvalid_q_reg),
        .pci_exp_rxn(pci_exp_rxn[2]),
        .pci_exp_rxp(pci_exp_rxp[2]),
        .pci_exp_txn(pci_exp_txn[2]),
        .pci_exp_txp(pci_exp_txp[2]),
        .pipe_dclk_in(pipe_dclk_in),
        .pipe_dclk_in_0(pipe_dclk_in_3),
        .pipe_dclk_in_1(pipe_dclk_in_4),
        .pipe_dclk_in_2(pipe_dclk_in_5),
        .pipe_dmonitorout(pipe_dmonitorout[23:16]),
        .pipe_eyescandataerror(pipe_eyescandataerror[2]),
        .pipe_loopback(pipe_loopback),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_rx2_chanisaligned(pipe_rx2_chanisaligned),
        .pipe_rx2_polarity(pipe_rx2_polarity),
        .pipe_rxbufstatus(pipe_rxbufstatus[8:6]),
        .pipe_rxcommadet(pipe_rxcommadet[2]),
        .pipe_rxdisperr(pipe_rxdisperr[23:16]),
        .pipe_rxdlysresetdone(pipe_rxdlysresetdone[2]),
        .pipe_rxnotintable(pipe_rxnotintable[23:16]),
        .pipe_rxoutclk_out(pipe_rxoutclk_out[2]),
        .pipe_rxprbscntreset(pipe_rxprbscntreset),
        .pipe_rxprbserr(pipe_rxprbserr[2]),
        .pipe_rxprbssel(pipe_rxprbssel),
        .pipe_rxstatus(pipe_rxstatus[8:6]),
        .pipe_rxusrclk_in(pipe_rxusrclk_in),
        .pipe_tx_deemph_gt(pipe_tx_deemph_gt),
        .pipe_tx_rcvr_det_gt(pipe_tx_rcvr_det_gt),
        .pipe_txdlysresetdone(pipe_txdlysresetdone[2]),
        .pipe_txinhibit(pipe_txinhibit[2]),
        .pipe_txphaligndone(pipe_txphaligndone[2]),
        .pipe_txphinitdone(pipe_txphinitdone[2]),
        .pipe_txprbsforceerr(pipe_txprbsforceerr),
        .pipe_txprbssel(pipe_txprbssel),
        .rate_cpllreset_2(rate_cpllreset_2),
        .rate_txpmareset_2(rate_txpmareset_2),
        .rst_userrdy(rst_userrdy),
        .rxchbonden_2(rxchbonden_2),
        .sys_clk(sys_clk));
  pcie_7x_0_pcie_7x_0_pipe_drp_28 \pipe_lane[2].pipe_drp.pipe_drp_i 
       (.DRPADDR(drp_mux_addr_18),
        .DRPDI(drp_mux_di_32),
        .DRP_DONE(p_103_out),
        .DRP_GTXRESET(rst_gtreset),
        .Q(\fsm_reg[2]_0 ),
        .RATE_DRP_START(rate_drp_start_2),
        .RATE_DRP_X16X20_MODE(rate_drp_x16x20_mode_2),
        .RST_DCLK_RESET(rst_dclk_reset),
        .drp_mux_en_2(drp_mux_en_2),
        .drp_mux_we_2(drp_mux_we_2),
        .ext_ch_gt_drpaddr(ext_ch_gt_drpaddr[26:18]),
        .ext_ch_gt_drpdi(ext_ch_gt_drpdi[47:32]),
        .ext_ch_gt_drpdo(ext_ch_gt_drpdo[47:32]),
        .ext_ch_gt_drpen(ext_ch_gt_drpen[2]),
        .ext_ch_gt_drprdy(ext_ch_gt_drprdy[2]),
        .ext_ch_gt_drpwe(ext_ch_gt_drpwe[2]),
        .gt_ch_drp_rdy(gt_ch_drp_rdy[2]),
        .pipe_dclk_in(pipe_dclk_in),
        .\rate_reg1_reg[0]_0 (\rate_reg1_reg[0] ));
  pcie_7x_0_pcie_7x_0_pipe_eq_29 \pipe_lane[2].pipe_eq.pipe_eq_i 
       (.RST_CPLLRESET(rst_cpllreset),
        .TXMAINCURSOR(eq_txeq_maincursor_14),
        .TXPOSTCURSOR(eq_txeq_postcursor_10),
        .TXPRECURSOR(eq_txeq_precursor_10),
        .USER_RXEQ_ADAPT_DONE(\pipe_lane[2].pipe_eq.pipe_eq_i_n_17 ),
        .pipe_pclk_in(pipe_pclk_in),
        .rate_gen3_2(rate_gen3_2));
  pcie_7x_0_pcie_7x_0_pipe_rate_30 \pipe_lane[2].pipe_rate.pipe_rate_i 
       (.\FSM_onehot_fsm_reg[20]_0 (p_0_in1_in_4),
        .Q({rate_done_2,rate_idle[2]}),
        .QRST_QPLLPD_IN(rate_qpllpd[2]),
        .QRST_QPLLRESET_IN(rate_qpllreset[2]),
        .RATE_CPLLLOCK(QRST_CPLLLOCK[2]),
        .RATE_DRP_DONE(p_103_out),
        .RATE_DRP_START(rate_drp_start_2),
        .RATE_DRP_X16X20_MODE(rate_drp_x16x20_mode_2),
        .RATE_PHYSTATUS(gt_phystatus_2),
        .RATE_QPLLLOCK(QPLL_QPLLLOCK),
        .RATE_RXRATEDONE(gt_rxratedone_2),
        .RATE_TXRATEDONE(gt_txratedone_2),
        .RATE_TXSYNC_DONE(p_85_out),
        .RST_CPLLRESET(rst_cpllreset),
        .RST_IDLE(RST_IDLE),
        .RST_TXSYNC_START(rst_txsync_start),
        .RXRATE(rate_rate_6),
        .RXSYSCLKSEL(rate_sysclksel_4),
        .SYNC_TXSYNC_START(SYNC_TXSYNC_START00_out),
        .USER_RXRESETDONE(gt_rxresetdone_2),
        .USER_TXRESETDONE(gt_txresetdone_2),
        .out(p_1_in2_in_3),
        .pipe_mmcm_lock_in(pipe_mmcm_lock_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_pclk_sel_out(pipe_pclk_sel_out[2]),
        .pipe_rate_fsm(pipe_rate_fsm[14:10]),
        .rate_cpllpd_2(rate_cpllpd_2),
        .rate_cpllreset_2(rate_cpllreset_2),
        .rate_gen3_2(rate_gen3_2),
        .\rate_in_reg1_reg[0]_0 (\rate_reg1_reg[0] ),
        .rate_txpmareset_2(rate_txpmareset_2),
        .rxchbonden_2(rxchbonden_2),
        .user_active_lane(user_active_lane[2]));
  pcie_7x_0_pcie_7x_0_pipe_sync_31 \pipe_lane[2].pipe_sync_i 
       (.\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 (p_0_in1_in_4),
        .Q({\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 [2],\FSM_onehot_txsync_fsm.fsm_tx_reg[5]_0 ,\FSM_onehot_txsync_fsm.fsm_tx_reg[4]_0 ,\FSM_onehot_txsync_fsm.fsm_tx_reg[3]_0 ,\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 [1:0]}),
        .RST_CPLLRESET(rst_cpllreset),
        .RST_TXSYNC_DONE(p_85_out),
        .SYNC_GEN3(rate_gen3_2),
        .SYNC_RATE_IDLE(rate_idle[2]),
        .SYNC_RXCDRLOCK(p_91_out),
        .SYNC_RXDLYSRESETDONE(rxdlysresetdone_3),
        .SYNC_RXPHALIGNDONE_M(SYNC_RXPHALIGNDONE_M),
        .SYNC_RXPHALIGNDONE_S(rxphaligndone_s_3),
        .SYNC_TXDLYSRESETDONE(txdlysresetdone_3),
        .SYNC_TXPHALIGNDONE(txsyncallin),
        .SYNC_TXPHINITDONE(\pipe_lane[0].pipe_user_i_n_5 ),
        .SYNC_TXSYNC_START(SYNC_TXSYNC_START00_out),
        .out(p_1_in2_in_3),
        .pipe_mmcm_lock_in(pipe_mmcm_lock_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_sync_fsm_rx(pipe_sync_fsm_rx[2]),
        .rxelecidle_reg1_reg_0(pipe_dclk_in_3),
        .user_active_lane(user_active_lane[2]));
  pcie_7x_0_pcie_7x_0_pipe_user_32 \pipe_lane[2].pipe_user_i 
       (.Q({rate_done_2,rate_idle[2]}),
        .RST_CPLLRESET(rst_cpllreset),
        .RST_IDLE(RST_IDLE),
        .RST_PHYSTATUS(gt_phystatus_2),
        .RST_RESETDONE(user_resetdone[2]),
        .RST_RXCDRLOCK(p_91_out),
        .RST_RXUSRCLK_RESET(p_1_in),
        .USER_OOBCLK(user_oobclk_2),
        .USER_RXEQ_ADAPT_DONE(\pipe_lane[2].pipe_eq.pipe_eq_i_n_17 ),
        .USER_RXRESETDONE(gt_rxresetdone_2),
        .USER_TXRESETDONE(gt_txresetdone_2),
        .\converge_cnt_reg[15]_0 (\pipe_lane[2].pipe_user_i_n_9 ),
        .\converge_cnt_reg[1]_0 (\pipe_lane[2].pipe_user_i_n_10 ),
        .\converge_cnt_reg[6]_0 (\pipe_lane[2].pipe_user_i_n_11 ),
        .converge_gen3_reg_0(\pipe_lane[2].pipe_user_i_n_14 ),
        .gt_rxcdrlock_2(gt_rxcdrlock_2),
        .gt_rxvalid_2(gt_rxvalid_2),
        .gt_rxvalid_q_reg(pipe_dclk_in_3),
        .gt_rxvalid_q_reg_0(\gt_rx_status_q_reg[0]_1 ),
        .out(\pipe_lane[3].pipe_user_i_n_1 ),
        .phy_rdy_n_int_reg(\pipe_lane[0].pipe_user_i_n_1 ),
        .phy_rdy_n_int_reg_0(\pipe_lane[1].pipe_user_i_n_1 ),
        .pipe_oobclk_in(pipe_oobclk_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_pclk_sel_out(pipe_pclk_sel_out[2]),
        .pipe_rxstatus(pipe_rxstatus[8]),
        .pipe_rxusrclk_in(pipe_rxusrclk_in),
        .pipe_txphaligndone(pipe_txphaligndone[3:2]),
        .pipe_txphinitdone(pipe_txphinitdone[3:2]),
        .rate_gen3_2(rate_gen3_2),
        .rate_idle_reg2_reg_0(rate_idle_reg2_reg_1),
        .reg_clock_locked(reg_clock_locked),
        .reg_clock_locked_reg(reg_clock_locked_reg),
        .rst_idle_reg2_reg_0(rst_idle_reg2_reg_1),
        .txcompliance_reg1_reg_0(txcompliance_reg1_reg_0),
        .txcompliance_reg2_reg_0(\pipe_lane[2].pipe_user_i_n_2 ),
        .txcompliance_reg2_reg_1(p_0_in1_in_4),
        .txcompliance_reg2_reg_2(\pipe_lane[2].pipe_user_i_n_5 ),
        .txelecidle_reg1_reg_0(txelecidle_reg1_reg_0),
        .txelecidle_reg2_reg_0(p_1_in2_in_3),
        .txphaligndone_reg1_reg(p_0_in1_in_5),
        .txphaligndone_reg1_reg_0(p_1_in2_in_6),
        .user_active_lane(user_active_lane[2]));
  pcie_7x_0_pcie_7x_0_gt_wrapper_33 \pipe_lane[3].gt_wrapper_i 
       (.CPLLPD0_5(CPLLPD0_5),
        .D(D),
        .DRPADDR(drp_mux_addr_27),
        .DRPDI(drp_mux_di_48),
        .DRP_GTXRESET(rst_gtreset),
        .PIPE_RXPHALIGNDONE(PIPE_RXPHALIGNDONE[2]),
        .QPLL_QPLLOUTCLK(QPLL_QPLLOUTCLK),
        .QPLL_QPLLOUTREFCLK(QPLL_QPLLOUTREFCLK),
        .RATE_CPLLLOCK(QRST_CPLLLOCK[3]),
        .RATE_PHYSTATUS(gt_phystatus_3),
        .RATE_RXRATEDONE(gt_rxratedone_3),
        .RATE_TXRATEDONE(gt_txratedone_3),
        .RST_CPLLRESET(rst_cpllreset),
        .RXCHBONDO(\gt_rxchbondo[1]_0 ),
        .RXRATE(rate_rate_9),
        .RXSYSCLKSEL(rate_sysclksel_6),
        .SYNC_TXDLYSRESET(\FSM_onehot_txsync_fsm.fsm_tx_reg[3]_1 ),
        .SYNC_TXPHALIGN(\FSM_onehot_txsync_fsm.fsm_tx_reg[5]_1 ),
        .SYNC_TXPHINIT(\FSM_onehot_txsync_fsm.fsm_tx_reg[4]_1 ),
        .TXMAINCURSOR(eq_txeq_maincursor_21),
        .TXPOSTCURSOR(eq_txeq_postcursor_15),
        .TXPRECURSOR(eq_txeq_precursor_15),
        .USER_OOBCLK(user_oobclk_3),
        .USER_RXRESETDONE(gt_rxresetdone_3),
        .USER_TXRESETDONE(gt_txresetdone_3),
        .\cplllock_reg1_reg[3] (\gtx_channel.gtxe2_channel_i_i_6_n_0 ),
        .\cplllock_reg1_reg[3]_0 (txelecidle_reg1_reg_1),
        .\cplllock_reg1_reg[3]_1 (\cplllock_reg1_reg[3]_0 ),
        .\cplllock_reg1_reg[3]_2 (\cplllock_reg1_reg[3] ),
        .\cplllock_reg1_reg[3]_3 (\cplllock_reg1_reg[3]_1 ),
        .\cplllock_reg1_reg[3]_4 (txcompliance_reg1_reg_1),
        .\cplllock_reg1_reg[3]_5 (\cplllock_reg1_reg[3]_2 ),
        .cpllpd_2(cpllpd_2),
        .drp_mux_en_3(drp_mux_en_3),
        .drp_mux_we_3(drp_mux_we_3),
        .ext_ch_gt_drpdo(ext_ch_gt_drpdo[63:48]),
        .ext_ch_gt_drprdy(ext_ch_gt_drprdy[3]),
        .gt_cpllpdrefclk(gt_cpllpdrefclk),
        .\gt_rx_status_q_reg[0] (\gt_rx_status_q_reg[0]_2 ),
        .\gt_rx_status_q_reg[2] (\gt_rx_status_q_reg[2] ),
        .gt_rxcdrlock_3(gt_rxcdrlock_3),
        .gt_rxvalid_3(gt_rxvalid_3),
        .pci_exp_rxn(pci_exp_rxn[3]),
        .pci_exp_rxp(pci_exp_rxp[3]),
        .pci_exp_txn(pci_exp_txn[3]),
        .pci_exp_txp(pci_exp_txp[3]),
        .pipe_dclk_in(pipe_dclk_in),
        .pipe_dclk_in_0(pipe_dclk_in_6),
        .pipe_dclk_in_1(pipe_dclk_in_7),
        .pipe_dclk_in_2(pipe_dclk_in_8),
        .pipe_dmonitorout(pipe_dmonitorout[31:24]),
        .pipe_eyescandataerror(pipe_eyescandataerror[3]),
        .pipe_loopback(pipe_loopback),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_rx3_chanisaligned(pipe_rx3_chanisaligned),
        .pipe_rx3_polarity(pipe_rx3_polarity),
        .pipe_rxbufstatus(pipe_rxbufstatus[11:9]),
        .pipe_rxcommadet(pipe_rxcommadet[3]),
        .pipe_rxdisperr(pipe_rxdisperr[31:24]),
        .pipe_rxdlysresetdone(pipe_rxdlysresetdone[3]),
        .pipe_rxnotintable(pipe_rxnotintable[31:24]),
        .pipe_rxoutclk_out(pipe_rxoutclk_out[3]),
        .pipe_rxprbscntreset(pipe_rxprbscntreset),
        .pipe_rxprbserr(pipe_rxprbserr[3]),
        .pipe_rxprbssel(pipe_rxprbssel),
        .pipe_rxstatus(pipe_rxstatus[11:9]),
        .pipe_rxusrclk_in(pipe_rxusrclk_in),
        .pipe_tx_deemph_gt(pipe_tx_deemph_gt),
        .pipe_tx_rcvr_det_gt(pipe_tx_rcvr_det_gt),
        .pipe_txdlysresetdone(pipe_txdlysresetdone[3]),
        .pipe_txinhibit(pipe_txinhibit[3]),
        .pipe_txphaligndone(pipe_txphaligndone[3]),
        .pipe_txphinitdone(pipe_txphinitdone[3]),
        .pipe_txprbsforceerr(pipe_txprbsforceerr),
        .pipe_txprbssel(pipe_txprbssel),
        .rate_cpllreset_3(rate_cpllreset_3),
        .rate_txpmareset_3(rate_txpmareset_3),
        .rst_userrdy(rst_userrdy),
        .rxchbonden_3(rxchbonden_3),
        .sys_clk(sys_clk));
  pcie_7x_0_pcie_7x_0_pipe_drp_34 \pipe_lane[3].pipe_drp.pipe_drp_i 
       (.DRPADDR(drp_mux_addr_27),
        .DRPDI(drp_mux_di_48),
        .DRP_DONE(p_49_out),
        .DRP_GTXRESET(rst_gtreset),
        .Q(\fsm_reg[2]_1 ),
        .RATE_DRP_START(rate_drp_start_3),
        .RATE_DRP_X16X20_MODE(rate_drp_x16x20_mode_3),
        .RST_DCLK_RESET(rst_dclk_reset),
        .drp_mux_en_3(drp_mux_en_3),
        .drp_mux_we_3(drp_mux_we_3),
        .ext_ch_gt_drpaddr(ext_ch_gt_drpaddr[35:27]),
        .ext_ch_gt_drpdi(ext_ch_gt_drpdi[63:48]),
        .ext_ch_gt_drpdo(ext_ch_gt_drpdo[63:48]),
        .ext_ch_gt_drpen(ext_ch_gt_drpen[3]),
        .ext_ch_gt_drprdy(ext_ch_gt_drprdy[3]),
        .ext_ch_gt_drpwe(ext_ch_gt_drpwe[3]),
        .gt_ch_drp_rdy(gt_ch_drp_rdy[3]),
        .pipe_dclk_in(pipe_dclk_in),
        .\rate_reg1_reg[0]_0 (\rate_reg1_reg[0] ));
  pcie_7x_0_pcie_7x_0_pipe_eq_35 \pipe_lane[3].pipe_eq.pipe_eq_i 
       (.RST_CPLLRESET(rst_cpllreset),
        .TXMAINCURSOR(eq_txeq_maincursor_21),
        .TXPOSTCURSOR(eq_txeq_postcursor_15),
        .TXPRECURSOR(eq_txeq_precursor_15),
        .USER_RXEQ_ADAPT_DONE(\pipe_lane[3].pipe_eq.pipe_eq_i_n_17 ),
        .pipe_pclk_in(pipe_pclk_in),
        .rate_gen3_3(rate_gen3_3));
  pcie_7x_0_pcie_7x_0_pipe_rate_36 \pipe_lane[3].pipe_rate.pipe_rate_i 
       (.\FSM_onehot_fsm_reg[20]_0 (p_0_in1_in_5),
        .Q({rate_done_3,rate_idle[3]}),
        .QPLL_QPLLLOCK(QPLL_QPLLLOCK),
        .QRST_QPLLPD_IN(rate_qpllpd[3]),
        .QRST_QPLLRESET_IN(rate_qpllreset[3]),
        .RATE_CPLLLOCK(QRST_CPLLLOCK[3]),
        .RATE_DRP_DONE(p_49_out),
        .RATE_DRP_START(rate_drp_start_3),
        .RATE_DRP_X16X20_MODE(rate_drp_x16x20_mode_3),
        .RATE_PHYSTATUS(gt_phystatus_3),
        .RATE_RXRATEDONE(gt_rxratedone_3),
        .RATE_TXRATEDONE(gt_txratedone_3),
        .RATE_TXSYNC_DONE(p_31_out),
        .RST_CPLLRESET(rst_cpllreset),
        .RST_IDLE(RST_IDLE),
        .RST_TXSYNC_START(rst_txsync_start),
        .RXRATE(rate_rate_9),
        .RXSYSCLKSEL(rate_sysclksel_6),
        .SYNC_TXSYNC_START(SYNC_TXSYNC_START0),
        .USER_RXRESETDONE(gt_rxresetdone_3),
        .USER_TXRESETDONE(gt_txresetdone_3),
        .out(p_1_in2_in_6),
        .pipe_mmcm_lock_in(pipe_mmcm_lock_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_pclk_sel_out(pipe_pclk_sel_out[3]),
        .pipe_rate_fsm(pipe_rate_fsm[19:15]),
        .rate_cpllpd_3(rate_cpllpd_3),
        .rate_cpllreset_3(rate_cpllreset_3),
        .rate_gen3_3(rate_gen3_3),
        .\rate_in_reg1_reg[0]_0 (\rate_reg1_reg[0] ),
        .rate_txpmareset_3(rate_txpmareset_3),
        .rxchbonden_3(rxchbonden_3),
        .user_active_lane(user_active_lane[3]));
  pcie_7x_0_pcie_7x_0_pipe_sync_37 \pipe_lane[3].pipe_sync_i 
       (.\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_0 (p_0_in1_in_5),
        .Q({\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_1 [2],\FSM_onehot_txsync_fsm.fsm_tx_reg[5]_1 ,\FSM_onehot_txsync_fsm.fsm_tx_reg[4]_1 ,\FSM_onehot_txsync_fsm.fsm_tx_reg[3]_1 ,\FSM_onehot_txsync_fsm.fsm_tx_reg[6]_1 [1:0]}),
        .RST_CPLLRESET(rst_cpllreset),
        .RST_TXSYNC_DONE(p_31_out),
        .SYNC_GEN3(rate_gen3_3),
        .SYNC_RATE_IDLE(rate_idle[3]),
        .SYNC_RXCDRLOCK(p_37_out),
        .SYNC_RXDLYSRESETDONE(rxdlysresetdone_3),
        .SYNC_RXPHALIGNDONE_M(SYNC_RXPHALIGNDONE_M),
        .SYNC_RXPHALIGNDONE_S(rxphaligndone_s_3),
        .SYNC_TXDLYSRESETDONE(txdlysresetdone_3),
        .SYNC_TXPHALIGNDONE(txsyncallin),
        .SYNC_TXPHINITDONE(\pipe_lane[0].pipe_user_i_n_5 ),
        .SYNC_TXSYNC_START(SYNC_TXSYNC_START0),
        .out(p_1_in2_in_6),
        .pipe_mmcm_lock_in(pipe_mmcm_lock_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_sync_fsm_rx(pipe_sync_fsm_rx[3]),
        .rxelecidle_reg1_reg_0(pipe_dclk_in_6),
        .user_active_lane(user_active_lane[3]));
  pcie_7x_0_pcie_7x_0_pipe_user_38 \pipe_lane[3].pipe_user_i 
       (.Q({rate_done_3,rate_idle[3]}),
        .RST_CPLLRESET(rst_cpllreset),
        .RST_IDLE(RST_IDLE),
        .RST_PHYSTATUS(gt_phystatus_3),
        .RST_RESETDONE(user_resetdone[3]),
        .RST_RXCDRLOCK(p_37_out),
        .RST_RXUSRCLK_RESET(p_1_in),
        .USER_OOBCLK(user_oobclk_3),
        .USER_RXEQ_ADAPT_DONE(\pipe_lane[3].pipe_eq.pipe_eq_i_n_17 ),
        .USER_RXRESETDONE(gt_rxresetdone_3),
        .USER_TXRESETDONE(gt_txresetdone_3),
        .gt_rxcdrlock_3(gt_rxcdrlock_3),
        .gt_rxvalid_3(gt_rxvalid_3),
        .gt_rxvalid_q_reg(pipe_dclk_in_6),
        .gt_rxvalid_q_reg_0(\gt_rx_status_q_reg[0]_2 ),
        .out(\pipe_lane[3].pipe_user_i_n_1 ),
        .pipe_oobclk_in(pipe_oobclk_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_pclk_sel_out(pipe_pclk_sel_out[3]),
        .pipe_rxstatus(pipe_rxstatus[11]),
        .pipe_rxusrclk_in(pipe_rxusrclk_in),
        .rate_gen3_3(rate_gen3_3),
        .rate_rxsync_reg2_reg_0(rate_rxsync_reg2_reg),
        .rst_idle_reg2_reg_0(rst_idle_reg2_reg_2),
        .txcompliance_reg1_reg_0(txcompliance_reg1_reg_1),
        .txcompliance_reg2_reg_0(p_0_in1_in_5),
        .txelecidle_reg1_reg_0(txelecidle_reg1_reg_1),
        .txelecidle_reg2_reg_0(p_1_in2_in_6),
        .user_active_lane(user_active_lane[3]),
        .user_rx_converge(user_rx_converge[3]));
  pcie_7x_0_pcie_7x_0_pipe_reset \pipe_reset.pipe_reset_i 
       (.D(user_resetdone),
        .DRP_GTXRESET(rst_gtreset),
        .Q({RST_IDLE,RST_FSM,rst_txsync_start}),
        .QRST_IDLE(QRST_IDLE),
        .RST_CPLLRESET(rst_cpllreset),
        .RST_DCLK_RESET(rst_dclk_reset),
        .RST_RXUSRCLK_RESET(p_1_in),
        .SS(\pipe_reset.pipe_reset_i_n_0 ),
        .\cplllock_reg1_reg[3]_0 (QRST_CPLLLOCK),
        .\drp_done_reg1_reg[3]_0 ({p_49_out,p_103_out,p_157_out,p_212_out}),
        .out(reset_n_reg2),
        .\phystatus_reg1_reg[3]_0 ({gt_phystatus_3,gt_phystatus_2,gt_phystatus_1,gt_phystatus_0}),
        .pipe_dclk_in(pipe_dclk_in),
        .pipe_mmcm_lock_in(pipe_mmcm_lock_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_rst_fsm(pipe_rst_fsm),
        .pipe_rxusrclk_in(pipe_rxusrclk_in),
        .rate_idle(rate_idle),
        .rst_userrdy(rst_userrdy),
        .\rxcdrlock_reg1_reg[3]_0 ({p_37_out,p_91_out,p_145_out,p_200_out}),
        .\txsync_done_reg1_reg[3]_0 ({p_31_out,p_85_out,p_139_out,p_194_out}));
  pcie_7x_0_pcie_7x_0_qpll_reset \qpll_reset.qpll_reset_i 
       (.D(rate_qpllpd),
        .Q({QRST_IDLE,qrst_drp_start}),
        .QPLL_QPLLLOCK(QPLL_QPLLLOCK),
        .QPLL_QPLLPD(qpllpd),
        .QPLL_QPLLRESET(qrst_qpllreset),
        .QRST_DRP_DONE(qdrp_done),
        .SS(\pipe_reset.pipe_reset_i_n_0 ),
        .\cplllock_reg1_reg[3]_0 (QRST_CPLLLOCK),
        .pipe_mmcm_lock_in(pipe_mmcm_lock_in),
        .pipe_pclk_in(pipe_pclk_in),
        .pipe_qrst_fsm(pipe_qrst_fsm),
        .\qpllreset_in_reg1_reg[3]_0 (rate_qpllreset),
        .\rate_reg1_reg[0]_0 (\rate_reg1_reg[0] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDCE reset_n_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .CLR(p_0_in__0),
        .D(1'b1),
        .Q(reset_n_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDCE reset_n_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .CLR(p_0_in__0),
        .D(reset_n_reg1),
        .Q(reset_n_reg2));
  LUT4 #(
    .INIT(16'h8000)) 
    rxdlysresetdone_0
       (.I0(pipe_rxdlysresetdone[1]),
        .I1(pipe_rxdlysresetdone[0]),
        .I2(pipe_rxdlysresetdone[3]),
        .I3(pipe_rxdlysresetdone[2]),
        .O(rxdlysresetdone_3));
  LUT3 #(
    .INIT(8'h80)) 
    rxphaligndone_s_0
       (.I0(PIPE_RXPHALIGNDONE[0]),
        .I1(PIPE_RXPHALIGNDONE[2]),
        .I2(PIPE_RXPHALIGNDONE[1]),
        .O(rxphaligndone_s_3));
  LUT4 #(
    .INIT(16'h8000)) 
    txdlysresetdone_0
       (.I0(pipe_txdlysresetdone[1]),
        .I1(pipe_txdlysresetdone[0]),
        .I2(pipe_txdlysresetdone[3]),
        .I3(pipe_txdlysresetdone[2]),
        .O(txdlysresetdone_3));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_qpll_drp" *) 
module pcie_7x_0_pcie_7x_0_qpll_drp
   (QPLL_DRP_DONE,
    Q,
    \di_reg[15]_0 ,
    qpll_drp_en,
    qpll_drp_we,
    RST_DCLK_RESET,
    QRST_DRP_START,
    pipe_dclk_in,
    qpll_drp_rdy,
    QPLL_QPLLLOCK,
    QPLL_DRP_GEN3,
    D);
  output QPLL_DRP_DONE;
  output [4:0]Q;
  output [15:0]\di_reg[15]_0 ;
  output qpll_drp_en;
  output qpll_drp_we;
  input RST_DCLK_RESET;
  input QRST_DRP_START;
  input pipe_dclk_in;
  input qpll_drp_rdy;
  input QPLL_QPLLLOCK;
  input QPLL_DRP_GEN3;
  input [15:0]D;

  wire [15:0]D;
  wire [4:0]Q;
  wire QPLL_DRP_DONE;
  wire QPLL_DRP_GEN3;
  wire QPLL_QPLLLOCK;
  wire QRST_DRP_START;
  wire RST_DCLK_RESET;
  wire \addr[0]_i_1_n_0 ;
  wire \addr[1]_i_1_n_0 ;
  wire \addr[2]_i_1_n_0 ;
  wire \addr[5]_i_1_n_0 ;
  wire \addr[7]_i_1_n_0 ;
  wire \crscode_reg_n_0_[0] ;
  wire \crscode_reg_n_0_[1] ;
  wire \crscode_reg_n_0_[2] ;
  wire \crscode_reg_n_0_[3] ;
  wire \crscode_reg_n_0_[4] ;
  wire \crscode_reg_n_0_[5] ;
  wire [15:0]di;
  wire \di[11]_i_2_n_0 ;
  wire \di[12]_i_2_n_0 ;
  wire \di[13]_i_2_n_0 ;
  wire \di[14]_i_2_n_0 ;
  wire \di[15]_i_2_n_0 ;
  wire [15:0]\di_reg[15]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [15:0]do_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [15:0]do_reg2;
  wire done;
  wire \fsm[0]_i_2__0_n_0 ;
  wire \fsm[1]_i_2_n_0 ;
  wire \fsm_inferred__1/i___0_n_0 ;
  wire \fsm_inferred__1/i___1_n_0 ;
  wire \fsm_inferred__1/i__n_0 ;
  wire \fsm_reg_n_0_[0] ;
  wire \fsm_reg_n_0_[1] ;
  wire \fsm_reg_n_0_[2] ;
  wire \fsm_reg_n_0_[3] ;
  wire \fsm_reg_n_0_[4] ;
  wire \fsm_reg_n_0_[5] ;
  wire \fsm_reg_n_0_[6] ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire gen3_reg2;
  wire \gtx_common.gtxe2_common_i_i_3_n_0 ;
  wire \gtx_common.gtxe2_common_i_i_4_n_0 ;
  wire index;
  wire \index[0]_i_1_n_0 ;
  wire \index[1]_i_1_n_0 ;
  wire \index[2]_i_1_n_0 ;
  wire \index[2]_i_2_n_0 ;
  wire \index[2]_i_4_n_0 ;
  wire \index_reg_n_0_[0] ;
  wire \index_reg_n_0_[1] ;
  wire \index_reg_n_0_[2] ;
  wire [1:0]load_cnt;
  wire \load_cnt[0]_i_1__0_n_0 ;
  wire \load_cnt[1]_i_1_n_0 ;
  wire \load_cnt[1]_i_2_n_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire ovrd_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire ovrd_reg2;
  wire [6:0]p_0_in__0;
  wire p_1_in;
  wire [5:0]p_2_in;
  wire pipe_dclk_in;
  wire qpll_drp_en;
  wire qpll_drp_rdy;
  wire qpll_drp_we;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire qplllock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire qplllock_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rdy_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire rdy_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire start_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire start_reg2;

  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'h12)) 
    \addr[0]_i_1 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .O(\addr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT3 #(
    .INIT(8'h0D)) 
    \addr[1]_i_1 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[1] ),
        .O(\addr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT3 #(
    .INIT(8'h4D)) 
    \addr[2]_i_1 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[0] ),
        .O(\addr[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \addr[5]_i_1 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[0] ),
        .O(\addr[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \addr[7]_i_1 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .O(\addr[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\addr[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\addr[1]_i_1_n_0 ),
        .Q(Q[1]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\addr[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\addr[5]_i_1_n_0 ),
        .Q(Q[3]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\addr[7]_i_1_n_0 ),
        .Q(Q[4]),
        .R(RST_DCLK_RESET));
  LUT2 #(
    .INIT(4'h2)) 
    \crscode[0]_i_1 
       (.I0(do_reg2[1]),
        .I1(\index_reg_n_0_[2] ),
        .O(p_2_in[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \crscode[1]_i_1 
       (.I0(do_reg2[2]),
        .I1(\index_reg_n_0_[2] ),
        .O(p_2_in[1]));
  LUT2 #(
    .INIT(4'h2)) 
    \crscode[2]_i_1 
       (.I0(do_reg2[3]),
        .I1(\index_reg_n_0_[2] ),
        .O(p_2_in[2]));
  LUT2 #(
    .INIT(4'h2)) 
    \crscode[3]_i_1 
       (.I0(do_reg2[4]),
        .I1(\index_reg_n_0_[2] ),
        .O(p_2_in[3]));
  LUT2 #(
    .INIT(4'h2)) 
    \crscode[4]_i_1 
       (.I0(do_reg2[5]),
        .I1(\index_reg_n_0_[2] ),
        .O(p_2_in[4]));
  LUT4 #(
    .INIT(16'hC080)) 
    \crscode[5]_i_1 
       (.I0(ovrd_reg2),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[2] ),
        .O(p_1_in));
  LUT2 #(
    .INIT(4'h2)) 
    \crscode[5]_i_2 
       (.I0(do_reg2[6]),
        .I1(\index_reg_n_0_[2] ),
        .O(p_2_in[5]));
  FDRE #(
    .INIT(1'b0)) 
    \crscode_reg[0] 
       (.C(pipe_dclk_in),
        .CE(p_1_in),
        .D(p_2_in[0]),
        .Q(\crscode_reg_n_0_[0] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \crscode_reg[1] 
       (.C(pipe_dclk_in),
        .CE(p_1_in),
        .D(p_2_in[1]),
        .Q(\crscode_reg_n_0_[1] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \crscode_reg[2] 
       (.C(pipe_dclk_in),
        .CE(p_1_in),
        .D(p_2_in[2]),
        .Q(\crscode_reg_n_0_[2] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \crscode_reg[3] 
       (.C(pipe_dclk_in),
        .CE(p_1_in),
        .D(p_2_in[3]),
        .Q(\crscode_reg_n_0_[3] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \crscode_reg[4] 
       (.C(pipe_dclk_in),
        .CE(p_1_in),
        .D(p_2_in[4]),
        .Q(\crscode_reg_n_0_[4] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \crscode_reg[5] 
       (.C(pipe_dclk_in),
        .CE(p_1_in),
        .D(p_2_in[5]),
        .Q(\crscode_reg_n_0_[5] ),
        .R(RST_DCLK_RESET));
  LUT4 #(
    .INIT(16'h7E00)) 
    \di[0]_i_1 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(do_reg2[0]),
        .O(di[0]));
  LUT5 #(
    .INIT(32'h0CC5CCCC)) 
    \di[10]_i_1 
       (.I0(\crscode_reg_n_0_[0] ),
        .I1(do_reg2[10]),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[0] ),
        .I4(\index_reg_n_0_[2] ),
        .O(di[10]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAEBAA)) 
    \di[11]_i_1 
       (.I0(\di[11]_i_2_n_0 ),
        .I1(\crscode_reg_n_0_[0] ),
        .I2(\crscode_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[2] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(\index_reg_n_0_[1] ),
        .O(di[11]));
  LUT5 #(
    .INIT(32'h20FF2044)) 
    \di[11]_i_2 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(ovrd_reg2),
        .I3(\index_reg_n_0_[2] ),
        .I4(do_reg2[11]),
        .O(\di[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00AA0000AAAAC3AA)) 
    \di[12]_i_1 
       (.I0(do_reg2[12]),
        .I1(\di[12]_i_2_n_0 ),
        .I2(\crscode_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[2] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(\index_reg_n_0_[1] ),
        .O(di[12]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \di[12]_i_2 
       (.I0(\crscode_reg_n_0_[0] ),
        .I1(\crscode_reg_n_0_[1] ),
        .O(\di[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00F0F099F0F0FFF0)) 
    \di[13]_i_1 
       (.I0(\crscode_reg_n_0_[3] ),
        .I1(\di[13]_i_2_n_0 ),
        .I2(do_reg2[13]),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(\index_reg_n_0_[2] ),
        .O(di[13]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \di[13]_i_2 
       (.I0(\crscode_reg_n_0_[1] ),
        .I1(\crscode_reg_n_0_[0] ),
        .I2(\crscode_reg_n_0_[2] ),
        .O(\di[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00F0F099F0F0FFF0)) 
    \di[14]_i_1 
       (.I0(\crscode_reg_n_0_[4] ),
        .I1(\di[14]_i_2_n_0 ),
        .I2(do_reg2[14]),
        .I3(\index_reg_n_0_[1] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(\index_reg_n_0_[2] ),
        .O(di[14]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \di[14]_i_2 
       (.I0(\crscode_reg_n_0_[2] ),
        .I1(\crscode_reg_n_0_[0] ),
        .I2(\crscode_reg_n_0_[1] ),
        .I3(\crscode_reg_n_0_[3] ),
        .O(\di[14]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0AACAAAA0AA3AAAA)) 
    \di[15]_i_1 
       (.I0(do_reg2[15]),
        .I1(\di[15]_i_2_n_0 ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[0] ),
        .I4(\index_reg_n_0_[2] ),
        .I5(\crscode_reg_n_0_[5] ),
        .O(di[15]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \di[15]_i_2 
       (.I0(\crscode_reg_n_0_[3] ),
        .I1(\crscode_reg_n_0_[1] ),
        .I2(\crscode_reg_n_0_[0] ),
        .I3(\crscode_reg_n_0_[2] ),
        .I4(\crscode_reg_n_0_[4] ),
        .O(\di[15]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7E00)) 
    \di[1]_i_1 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(do_reg2[1]),
        .O(di[1]));
  LUT4 #(
    .INIT(16'h7E00)) 
    \di[2]_i_1 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(do_reg2[2]),
        .O(di[2]));
  LUT4 #(
    .INIT(16'h7E00)) 
    \di[3]_i_1 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(do_reg2[3]),
        .O(di[3]));
  LUT4 #(
    .INIT(16'h7E00)) 
    \di[4]_i_1 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(do_reg2[4]),
        .O(di[4]));
  LUT4 #(
    .INIT(16'h2AAB)) 
    \di[5]_i_1 
       (.I0(do_reg2[5]),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[0] ),
        .I3(\index_reg_n_0_[2] ),
        .O(di[5]));
  LUT4 #(
    .INIT(16'h2BA8)) 
    \di[6]_i_1 
       (.I0(do_reg2[6]),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[0] ),
        .O(di[6]));
  LUT4 #(
    .INIT(16'h7E00)) 
    \di[7]_i_1 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(do_reg2[7]),
        .O(di[7]));
  LUT4 #(
    .INIT(16'h2AAB)) 
    \di[8]_i_1 
       (.I0(do_reg2[8]),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[0] ),
        .I3(\index_reg_n_0_[2] ),
        .O(di[8]));
  LUT4 #(
    .INIT(16'h7E00)) 
    \di[9]_i_1 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(do_reg2[9]),
        .O(di[9]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[0]),
        .Q(\di_reg[15]_0 [0]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[10]),
        .Q(\di_reg[15]_0 [10]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[11]),
        .Q(\di_reg[15]_0 [11]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[12]),
        .Q(\di_reg[15]_0 [12]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[13]),
        .Q(\di_reg[15]_0 [13]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[14]),
        .Q(\di_reg[15]_0 [14]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[15]),
        .Q(\di_reg[15]_0 [15]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[1]),
        .Q(\di_reg[15]_0 [1]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[2]),
        .Q(\di_reg[15]_0 [2]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[3]),
        .Q(\di_reg[15]_0 [3]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[4]),
        .Q(\di_reg[15]_0 [4]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[5]),
        .Q(\di_reg[15]_0 [5]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[6]),
        .Q(\di_reg[15]_0 [6]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[7]),
        .Q(\di_reg[15]_0 [7]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[8]),
        .Q(\di_reg[15]_0 [8]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(di[9]),
        .Q(\di_reg[15]_0 [9]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[0]),
        .Q(do_reg1[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[10]),
        .Q(do_reg1[10]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[11]),
        .Q(do_reg1[11]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[12]),
        .Q(do_reg1[12]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[13]),
        .Q(do_reg1[13]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[14]),
        .Q(do_reg1[14]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[15]),
        .Q(do_reg1[15]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[1]),
        .Q(do_reg1[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[2]),
        .Q(do_reg1[2]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[3]),
        .Q(do_reg1[3]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[4]),
        .Q(do_reg1[4]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[5]),
        .Q(do_reg1[5]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[6]),
        .Q(do_reg1[6]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[7]),
        .Q(do_reg1[7]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[8]),
        .Q(do_reg1[8]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(D[9]),
        .Q(do_reg1[9]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[0]),
        .Q(do_reg2[0]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[10] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[10]),
        .Q(do_reg2[10]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[11] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[11]),
        .Q(do_reg2[11]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[12] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[12]),
        .Q(do_reg2[12]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[13] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[13]),
        .Q(do_reg2[13]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[14] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[14]),
        .Q(do_reg2[14]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[15] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[15]),
        .Q(do_reg2[15]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[1]),
        .Q(do_reg2[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[2]),
        .Q(do_reg2[2]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[3]),
        .Q(do_reg2[3]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[4]),
        .Q(do_reg2[4]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[5]),
        .Q(do_reg2[5]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[6]),
        .Q(do_reg2[6]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[7] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[7]),
        .Q(do_reg2[7]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[8] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[8]),
        .Q(do_reg2[8]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[9] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(do_reg1[9]),
        .Q(do_reg2[9]),
        .R(RST_DCLK_RESET));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    done_i_1
       (.I0(\fsm_reg_n_0_[6] ),
        .I1(start_reg2),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm_reg_n_0_[4] ),
        .I5(\gtx_common.gtxe2_common_i_i_4_n_0 ),
        .O(done));
  FDRE #(
    .INIT(1'b0)) 
    done_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(done),
        .Q(QPLL_DRP_DONE),
        .R(RST_DCLK_RESET));
  LUT6 #(
    .INIT(64'h5DFF5D5D5D5D5D5D)) 
    \fsm[0]_i_1__0 
       (.I0(\fsm_inferred__1/i___1_n_0 ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(start_reg2),
        .I3(\fsm[0]_i_2__0_n_0 ),
        .I4(\index_reg_n_0_[1] ),
        .I5(\fsm_reg_n_0_[6] ),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \fsm[0]_i_2__0 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[2] ),
        .O(\fsm[0]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT5 #(
    .INIT(32'hFFFF7000)) 
    \fsm[1]_i_1__0 
       (.I0(load_cnt[0]),
        .I1(load_cnt[1]),
        .I2(\fsm_inferred__1/i___1_n_0 ),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\fsm[1]_i_2_n_0 ),
        .O(p_0_in__0[1]));
  LUT6 #(
    .INIT(64'hFF00B000B000B000)) 
    \fsm[1]_i_2 
       (.I0(\fsm[0]_i_2__0_n_0 ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[6] ),
        .I3(\fsm_inferred__1/i___1_n_0 ),
        .I4(\fsm_reg_n_0_[0] ),
        .I5(start_reg2),
        .O(\fsm[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \fsm[2]_i_1__0 
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_inferred__1/i___1_n_0 ),
        .I2(load_cnt[1]),
        .I3(load_cnt[0]),
        .O(p_0_in__0[2]));
  LUT4 #(
    .INIT(16'h88C8)) 
    \fsm[3]_i_1 
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(\fsm_inferred__1/i___1_n_0 ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(rdy_reg2),
        .O(p_0_in__0[3]));
  LUT3 #(
    .INIT(8'h80)) 
    \fsm[4]_i_1 
       (.I0(rdy_reg2),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm_inferred__1/i___1_n_0 ),
        .O(p_0_in__0[4]));
  LUT4 #(
    .INIT(16'h88C8)) 
    \fsm[5]_i_1 
       (.I0(\fsm_reg_n_0_[4] ),
        .I1(\fsm_inferred__1/i___1_n_0 ),
        .I2(\fsm_reg_n_0_[5] ),
        .I3(rdy_reg2),
        .O(p_0_in__0[5]));
  LUT3 #(
    .INIT(8'h80)) 
    \fsm[6]_i_1 
       (.I0(rdy_reg2),
        .I1(\fsm_reg_n_0_[5] ),
        .I2(\fsm_inferred__1/i___1_n_0 ),
        .O(p_0_in__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT4 #(
    .INIT(16'h0116)) 
    \fsm_inferred__1/i_ 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm_reg_n_0_[3] ),
        .O(\fsm_inferred__1/i__n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT4 #(
    .INIT(16'hFEE8)) 
    \fsm_inferred__1/i___0 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm_reg_n_0_[3] ),
        .O(\fsm_inferred__1/i___0_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \fsm_inferred__1/i___1 
       (.I0(\fsm_reg_n_0_[4] ),
        .I1(\fsm_reg_n_0_[5] ),
        .I2(\fsm_reg_n_0_[6] ),
        .I3(\fsm_inferred__1/i__n_0 ),
        .I4(\fsm_inferred__1/i___0_n_0 ),
        .O(\fsm_inferred__1/i___1_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_READ:000000100,FSM_QPLLRESET:010000000,FSM_LOAD:000000010,FSM_DONE:001000000,FSM_WRITE:000010000,FSM_IDLE:000000001,FSM_WRDY:000100000,FSM_RRDY:000001000,FSM_QPLLLOCK:100000000" *) 
  FDSE #(
    .INIT(1'b1)) 
    \fsm_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(\fsm_reg_n_0_[0] ),
        .S(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:000000100,FSM_QPLLRESET:010000000,FSM_LOAD:000000010,FSM_DONE:001000000,FSM_WRITE:000010000,FSM_IDLE:000000001,FSM_WRDY:000100000,FSM_RRDY:000001000,FSM_QPLLLOCK:100000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(\fsm_reg_n_0_[1] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:000000100,FSM_QPLLRESET:010000000,FSM_LOAD:000000010,FSM_DONE:001000000,FSM_WRITE:000010000,FSM_IDLE:000000001,FSM_WRDY:000100000,FSM_RRDY:000001000,FSM_QPLLLOCK:100000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(\fsm_reg_n_0_[2] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:000000100,FSM_QPLLRESET:010000000,FSM_LOAD:000000010,FSM_DONE:001000000,FSM_WRITE:000010000,FSM_IDLE:000000001,FSM_WRDY:000100000,FSM_RRDY:000001000,FSM_QPLLLOCK:100000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[3] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(\fsm_reg_n_0_[3] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:000000100,FSM_QPLLRESET:010000000,FSM_LOAD:000000010,FSM_DONE:001000000,FSM_WRITE:000010000,FSM_IDLE:000000001,FSM_WRDY:000100000,FSM_RRDY:000001000,FSM_QPLLLOCK:100000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[4] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[4]),
        .Q(\fsm_reg_n_0_[4] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:000000100,FSM_QPLLRESET:010000000,FSM_LOAD:000000010,FSM_DONE:001000000,FSM_WRITE:000010000,FSM_IDLE:000000001,FSM_WRDY:000100000,FSM_RRDY:000001000,FSM_QPLLLOCK:100000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[5] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[5]),
        .Q(\fsm_reg_n_0_[5] ),
        .R(RST_DCLK_RESET));
  (* FSM_ENCODED_STATES = "FSM_READ:000000100,FSM_QPLLRESET:010000000,FSM_LOAD:000000010,FSM_DONE:001000000,FSM_WRITE:000010000,FSM_IDLE:000000001,FSM_WRDY:000100000,FSM_RRDY:000001000,FSM_QPLLLOCK:100000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[6] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(p_0_in__0[6]),
        .Q(\fsm_reg_n_0_[6] ),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(QPLL_DRP_GEN3),
        .Q(gen3_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(gen3_reg1),
        .Q(gen3_reg2),
        .R(RST_DCLK_RESET));
  LUT6 #(
    .INIT(64'h0000000000010100)) 
    \gtx_common.gtxe2_common_i_i_1 
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(\fsm_reg_n_0_[6] ),
        .I3(\fsm_reg_n_0_[4] ),
        .I4(\fsm_reg_n_0_[2] ),
        .I5(\gtx_common.gtxe2_common_i_i_3_n_0 ),
        .O(qpll_drp_en));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT5 #(
    .INIT(32'h00000010)) 
    \gtx_common.gtxe2_common_i_i_2 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[6] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[1] ),
        .I4(\gtx_common.gtxe2_common_i_i_4_n_0 ),
        .O(qpll_drp_we));
  LUT2 #(
    .INIT(4'hE)) 
    \gtx_common.gtxe2_common_i_i_3 
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm_reg_n_0_[5] ),
        .O(\gtx_common.gtxe2_common_i_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \gtx_common.gtxe2_common_i_i_4 
       (.I0(\fsm_reg_n_0_[5] ),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm_reg_n_0_[2] ),
        .O(\gtx_common.gtxe2_common_i_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT5 #(
    .INIT(32'h00FF7000)) 
    \index[0]_i_1 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index[2]_i_2_n_0 ),
        .I3(index),
        .I4(\index_reg_n_0_[0] ),
        .O(\index[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT5 #(
    .INIT(32'h10FFC000)) 
    \index[1]_i_1 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index[2]_i_2_n_0 ),
        .I3(index),
        .I4(\index_reg_n_0_[1] ),
        .O(\index[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT5 #(
    .INIT(32'h22FF8000)) 
    \index[2]_i_1 
       (.I0(\index[2]_i_2_n_0 ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[0] ),
        .I3(index),
        .I4(\index_reg_n_0_[2] ),
        .O(\index[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT5 #(
    .INIT(32'h00000004)) 
    \index[2]_i_2 
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_reg_n_0_[6] ),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(\gtx_common.gtxe2_common_i_i_4_n_0 ),
        .I4(\fsm_reg_n_0_[4] ),
        .O(\index[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFEEB)) 
    \index[2]_i_3 
       (.I0(\index[2]_i_4_n_0 ),
        .I1(\fsm_reg_n_0_[5] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(\fsm_reg_n_0_[2] ),
        .I4(\fsm_reg_n_0_[1] ),
        .I5(\fsm_reg_n_0_[4] ),
        .O(index));
  LUT2 #(
    .INIT(4'hE)) 
    \index[2]_i_4 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[6] ),
        .O(\index[2]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\index[0]_i_1_n_0 ),
        .Q(\index_reg_n_0_[0] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\index[1]_i_1_n_0 ),
        .Q(\index_reg_n_0_[1] ),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[2] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\index[2]_i_1_n_0 ),
        .Q(\index_reg_n_0_[2] ),
        .R(RST_DCLK_RESET));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT5 #(
    .INIT(32'h00B00000)) 
    \load_cnt[0]_i_1__0 
       (.I0(load_cnt[1]),
        .I1(load_cnt[0]),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[6] ),
        .I4(\load_cnt[1]_i_2_n_0 ),
        .O(\load_cnt[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT5 #(
    .INIT(32'h00E00000)) 
    \load_cnt[1]_i_1 
       (.I0(load_cnt[0]),
        .I1(load_cnt[1]),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[6] ),
        .I4(\load_cnt[1]_i_2_n_0 ),
        .O(\load_cnt[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    \load_cnt[1]_i_2 
       (.I0(\fsm_reg_n_0_[4] ),
        .I1(\fsm_reg_n_0_[5] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(\fsm_reg_n_0_[2] ),
        .I4(\fsm_reg_n_0_[0] ),
        .O(\load_cnt[1]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \load_cnt_reg[0] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\load_cnt[0]_i_1__0_n_0 ),
        .Q(load_cnt[0]),
        .R(RST_DCLK_RESET));
  FDRE #(
    .INIT(1'b0)) 
    \load_cnt_reg[1] 
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(\load_cnt[1]_i_1_n_0 ),
        .Q(load_cnt[1]),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE ovrd_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(ovrd_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE ovrd_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(ovrd_reg1),
        .Q(ovrd_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE qplllock_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(QPLL_QPLLLOCK),
        .Q(qplllock_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE qplllock_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(qplllock_reg1),
        .Q(qplllock_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rdy_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(qpll_drp_rdy),
        .Q(rdy_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rdy_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(rdy_reg1),
        .Q(rdy_reg2),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE start_reg1_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(QRST_DRP_START),
        .Q(start_reg1),
        .R(RST_DCLK_RESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE start_reg2_reg
       (.C(pipe_dclk_in),
        .CE(1'b1),
        .D(start_reg1),
        .Q(start_reg2),
        .R(RST_DCLK_RESET));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_qpll_reset" *) 
module pcie_7x_0_pcie_7x_0_qpll_reset
   (Q,
    pipe_qrst_fsm,
    QPLL_QPLLRESET,
    QPLL_QPLLPD,
    SS,
    pipe_pclk_in,
    D,
    \rate_reg1_reg[0]_0 ,
    QRST_DRP_DONE,
    \qpllreset_in_reg1_reg[3]_0 ,
    QPLL_QPLLLOCK,
    \cplllock_reg1_reg[3]_0 ,
    pipe_mmcm_lock_in);
  output [1:0]Q;
  output [3:0]pipe_qrst_fsm;
  output QPLL_QPLLRESET;
  output QPLL_QPLLPD;
  input [0:0]SS;
  input pipe_pclk_in;
  input [3:0]D;
  input [0:0]\rate_reg1_reg[0]_0 ;
  input [0:0]QRST_DRP_DONE;
  input [3:0]\qpllreset_in_reg1_reg[3]_0 ;
  input QPLL_QPLLLOCK;
  input [3:0]\cplllock_reg1_reg[3]_0 ;
  input pipe_mmcm_lock_in;

  wire [3:0]D;
  wire \FSM_onehot_fsm[0]_i_1__4_n_0 ;
  wire \FSM_onehot_fsm[1]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm[1]_i_2__0_n_0 ;
  wire \FSM_onehot_fsm[2]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm[3]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm[4]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm[5]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm[7]_i_1_n_0 ;
  wire \FSM_onehot_fsm_reg_n_0_[0] ;
  wire \FSM_onehot_fsm_reg_n_0_[1] ;
  wire \FSM_onehot_fsm_reg_n_0_[3] ;
  wire \FSM_onehot_fsm_reg_n_0_[4] ;
  wire \FSM_onehot_fsm_reg_n_0_[5] ;
  wire \FSM_onehot_fsm_reg_n_0_[6] ;
  wire [1:0]Q;
  wire QPLL_QPLLLOCK;
  wire QPLL_QPLLPD;
  wire QPLL_QPLLRESET;
  wire [0:0]QRST_DRP_DONE;
  wire [0:0]SS;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]cplllock_reg1;
  wire [3:0]\cplllock_reg1_reg[3]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]cplllock_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire drp_done_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire drp_done_reg2;
  wire fsm2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire mmcm_lock_reg2;
  wire pipe_mmcm_lock_in;
  wire pipe_pclk_in;
  wire [3:0]pipe_qrst_fsm;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire qplllock_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire qplllock_reg2;
  wire qpllpd_i_1_n_0;
  wire qpllpd_i_2_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]qpllpd_in_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]qpllpd_in_reg2;
  wire qpllreset_i_1_n_0;
  wire qpllreset_i_2_n_0;
  wire qpllreset_i_3_n_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]qpllreset_in_reg1;
  wire [3:0]\qpllreset_in_reg1_reg[3]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]qpllreset_in_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_reg1;
  wire [0:0]\rate_reg1_reg[0]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [1:0]rate_reg2;

  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA8)) 
    \FSM_onehot_fsm[0]_i_1__4 
       (.I0(\FSM_onehot_fsm_reg_n_0_[0] ),
        .I1(qplllock_reg2),
        .I2(cplllock_reg2[1]),
        .I3(cplllock_reg2[0]),
        .I4(cplllock_reg2[3]),
        .I5(cplllock_reg2[2]),
        .O(\FSM_onehot_fsm[0]_i_1__4_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \FSM_onehot_fsm[1]_i_1__0 
       (.I0(\FSM_onehot_fsm[1]_i_2__0_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[0] ),
        .I2(fsm2),
        .I3(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[1]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \FSM_onehot_fsm[1]_i_2__0 
       (.I0(cplllock_reg2[2]),
        .I1(cplllock_reg2[3]),
        .I2(cplllock_reg2[0]),
        .I3(cplllock_reg2[1]),
        .I4(qplllock_reg2),
        .O(\FSM_onehot_fsm[1]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \FSM_onehot_fsm[2]_i_1__0 
       (.I0(fsm2),
        .I1(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I2(drp_done_reg2),
        .I3(Q[0]),
        .O(\FSM_onehot_fsm[2]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \FSM_onehot_fsm[2]_i_2__0 
       (.I0(mmcm_lock_reg2),
        .I1(cplllock_reg2[2]),
        .I2(cplllock_reg2[3]),
        .I3(cplllock_reg2[0]),
        .I4(cplllock_reg2[1]),
        .O(fsm2));
  LUT3 #(
    .INIT(8'h32)) 
    \FSM_onehot_fsm[3]_i_1__0 
       (.I0(Q[0]),
        .I1(drp_done_reg2),
        .I2(\FSM_onehot_fsm_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm[3]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \FSM_onehot_fsm[4]_i_1__0 
       (.I0(drp_done_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(qplllock_reg2),
        .I3(\FSM_onehot_fsm_reg_n_0_[4] ),
        .O(\FSM_onehot_fsm[4]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_fsm[5]_i_1__0 
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(qplllock_reg2),
        .O(\FSM_onehot_fsm[5]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_onehot_fsm[7]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[6] ),
        .I1(Q[1]),
        .O(\FSM_onehot_fsm[7]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:00000010,FSM_DRP_START_NOM:00000100,FSM_WAIT_LOCK:00000001,FSM_QPLL_PD:01000000,FSM_QPLL_PDRESET:00100000,FSM_QPLLLOCK2:1010,FSM_IDLE:10000000,FSM_DRP_START_OPT:0111,FSM_QPLL_RESET:1001,FSM_QPLLLOCK:00010000,FSM_DRP_DONE_OPT:1000,FSM_DRP_DONE_NOM:00001000" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_fsm_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[0]_i_1__4_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[0] ),
        .S(SS));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:00000010,FSM_DRP_START_NOM:00000100,FSM_WAIT_LOCK:00000001,FSM_QPLL_PD:01000000,FSM_QPLL_PDRESET:00100000,FSM_QPLLLOCK2:1010,FSM_IDLE:10000000,FSM_DRP_START_OPT:0111,FSM_QPLL_RESET:1001,FSM_QPLLLOCK:00010000,FSM_DRP_DONE_OPT:1000,FSM_DRP_DONE_NOM:00001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[1]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[1] ),
        .R(SS));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:00000010,FSM_DRP_START_NOM:00000100,FSM_WAIT_LOCK:00000001,FSM_QPLL_PD:01000000,FSM_QPLL_PDRESET:00100000,FSM_QPLLLOCK2:1010,FSM_IDLE:10000000,FSM_DRP_START_OPT:0111,FSM_QPLL_RESET:1001,FSM_QPLLLOCK:00010000,FSM_DRP_DONE_OPT:1000,FSM_DRP_DONE_NOM:00001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[2]_i_1__0_n_0 ),
        .Q(Q[0]),
        .R(SS));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:00000010,FSM_DRP_START_NOM:00000100,FSM_WAIT_LOCK:00000001,FSM_QPLL_PD:01000000,FSM_QPLL_PDRESET:00100000,FSM_QPLLLOCK2:1010,FSM_IDLE:10000000,FSM_DRP_START_OPT:0111,FSM_QPLL_RESET:1001,FSM_QPLLLOCK:00010000,FSM_DRP_DONE_OPT:1000,FSM_DRP_DONE_NOM:00001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[3]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[3] ),
        .R(SS));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:00000010,FSM_DRP_START_NOM:00000100,FSM_WAIT_LOCK:00000001,FSM_QPLL_PD:01000000,FSM_QPLL_PDRESET:00100000,FSM_QPLLLOCK2:1010,FSM_IDLE:10000000,FSM_DRP_START_OPT:0111,FSM_QPLL_RESET:1001,FSM_QPLLLOCK:00010000,FSM_DRP_DONE_OPT:1000,FSM_DRP_DONE_NOM:00001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[4]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[4] ),
        .R(SS));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:00000010,FSM_DRP_START_NOM:00000100,FSM_WAIT_LOCK:00000001,FSM_QPLL_PD:01000000,FSM_QPLL_PDRESET:00100000,FSM_QPLLLOCK2:1010,FSM_IDLE:10000000,FSM_DRP_START_OPT:0111,FSM_QPLL_RESET:1001,FSM_QPLLLOCK:00010000,FSM_DRP_DONE_OPT:1000,FSM_DRP_DONE_NOM:00001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[5]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[5] ),
        .R(SS));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:00000010,FSM_DRP_START_NOM:00000100,FSM_WAIT_LOCK:00000001,FSM_QPLL_PD:01000000,FSM_QPLL_PDRESET:00100000,FSM_QPLLLOCK2:1010,FSM_IDLE:10000000,FSM_DRP_START_OPT:0111,FSM_QPLL_RESET:1001,FSM_QPLLLOCK:00010000,FSM_DRP_DONE_OPT:1000,FSM_DRP_DONE_NOM:00001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_reg_n_0_[5] ),
        .Q(\FSM_onehot_fsm_reg_n_0_[6] ),
        .R(SS));
  (* FSM_ENCODED_STATES = "FSM_MMCM_LOCK:00000010,FSM_DRP_START_NOM:00000100,FSM_WAIT_LOCK:00000001,FSM_QPLL_PD:01000000,FSM_QPLL_PDRESET:00100000,FSM_QPLLLOCK2:1010,FSM_IDLE:10000000,FSM_DRP_START_OPT:0111,FSM_QPLL_RESET:1001,FSM_QPLLLOCK:00010000,FSM_DRP_DONE_OPT:1000,FSM_DRP_DONE_NOM:00001000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[7]_i_1_n_0 ),
        .Q(Q[1]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \cplllock_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\cplllock_reg1_reg[3]_0 [0]),
        .Q(cplllock_reg1[0]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \cplllock_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\cplllock_reg1_reg[3]_0 [1]),
        .Q(cplllock_reg1[1]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \cplllock_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\cplllock_reg1_reg[3]_0 [2]),
        .Q(cplllock_reg1[2]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \cplllock_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\cplllock_reg1_reg[3]_0 [3]),
        .Q(cplllock_reg1[3]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \cplllock_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cplllock_reg1[0]),
        .Q(cplllock_reg2[0]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \cplllock_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cplllock_reg1[1]),
        .Q(cplllock_reg2[1]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \cplllock_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cplllock_reg1[2]),
        .Q(cplllock_reg2[2]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \cplllock_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(cplllock_reg1[3]),
        .Q(cplllock_reg2[3]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \drp_done_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(QRST_DRP_DONE),
        .Q(drp_done_reg1),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \drp_done_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(drp_done_reg1),
        .Q(drp_done_reg2),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(pipe_mmcm_lock_in),
        .Q(mmcm_lock_reg1),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(mmcm_lock_reg1),
        .Q(mmcm_lock_reg2),
        .R(SS));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \pipe_qrst_fsm[0]_INST_0 
       (.I0(Q[1]),
        .I1(\FSM_onehot_fsm_reg_n_0_[5] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[3] ),
        .O(pipe_qrst_fsm[0]));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \pipe_qrst_fsm[1]_INST_0 
       (.I0(\FSM_onehot_fsm_reg_n_0_[5] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[0] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(pipe_qrst_fsm[1]));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \pipe_qrst_fsm[2]_INST_0 
       (.I0(\FSM_onehot_fsm_reg_n_0_[6] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I2(Q[0]),
        .I3(\FSM_onehot_fsm_reg_n_0_[3] ),
        .O(pipe_qrst_fsm[2]));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \pipe_qrst_fsm[3]_INST_0 
       (.I0(\FSM_onehot_fsm_reg_n_0_[5] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[6] ),
        .O(pipe_qrst_fsm[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \qplllock_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(QPLL_QPLLLOCK),
        .Q(qplllock_reg1),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \qplllock_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qplllock_reg1),
        .Q(qplllock_reg2),
        .R(SS));
  LUT6 #(
    .INIT(64'hFBF0FBFFFBF0FB00)) 
    qpllpd_i_1
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .I2(qpllpd_i_2_n_0),
        .I3(\FSM_onehot_fsm_reg_n_0_[6] ),
        .I4(Q[1]),
        .I5(QPLL_QPLLPD),
        .O(qpllpd_i_1_n_0));
  LUT5 #(
    .INIT(32'h80000000)) 
    qpllpd_i_2
       (.I0(Q[1]),
        .I1(qpllpd_in_reg2[2]),
        .I2(qpllpd_in_reg2[3]),
        .I3(qpllpd_in_reg2[0]),
        .I4(qpllpd_in_reg2[1]),
        .O(qpllpd_i_2_n_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \qpllpd_in_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D[0]),
        .Q(qpllpd_in_reg1[0]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \qpllpd_in_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D[1]),
        .Q(qpllpd_in_reg1[1]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \qpllpd_in_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D[2]),
        .Q(qpllpd_in_reg1[2]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \qpllpd_in_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(D[3]),
        .Q(qpllpd_in_reg1[3]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \qpllpd_in_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllpd_in_reg1[0]),
        .Q(qpllpd_in_reg2[0]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \qpllpd_in_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllpd_in_reg1[1]),
        .Q(qpllpd_in_reg2[1]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \qpllpd_in_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllpd_in_reg1[2]),
        .Q(qpllpd_in_reg2[2]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \qpllpd_in_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllpd_in_reg1[3]),
        .Q(qpllpd_in_reg2[3]),
        .R(SS));
  FDRE #(
    .INIT(1'b0)) 
    qpllpd_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllpd_i_1_n_0),
        .Q(QPLL_QPLLPD),
        .R(SS));
  LUT6 #(
    .INIT(64'hECECECEFECECECE0)) 
    qpllreset_i_1
       (.I0(qpllreset_i_2_n_0),
        .I1(qpllreset_i_3_n_0),
        .I2(\FSM_onehot_fsm_reg_n_0_[5] ),
        .I3(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I4(Q[1]),
        .I5(QPLL_QPLLRESET),
        .O(qpllreset_i_1_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    qpllreset_i_2
       (.I0(rate_reg2[0]),
        .I1(rate_reg2[1]),
        .O(qpllreset_i_2_n_0));
  LUT5 #(
    .INIT(32'h80000000)) 
    qpllreset_i_3
       (.I0(Q[1]),
        .I1(qpllreset_in_reg2[2]),
        .I2(qpllreset_in_reg2[3]),
        .I3(qpllreset_in_reg2[0]),
        .I4(qpllreset_in_reg2[1]),
        .O(qpllreset_i_3_n_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \qpllreset_in_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\qpllreset_in_reg1_reg[3]_0 [0]),
        .Q(qpllreset_in_reg1[0]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \qpllreset_in_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\qpllreset_in_reg1_reg[3]_0 [1]),
        .Q(qpllreset_in_reg1[1]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \qpllreset_in_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\qpllreset_in_reg1_reg[3]_0 [2]),
        .Q(qpllreset_in_reg1[2]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \qpllreset_in_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\qpllreset_in_reg1_reg[3]_0 [3]),
        .Q(qpllreset_in_reg1[3]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \qpllreset_in_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllreset_in_reg1[0]),
        .Q(qpllreset_in_reg2[0]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \qpllreset_in_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllreset_in_reg1[1]),
        .Q(qpllreset_in_reg2[1]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \qpllreset_in_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllreset_in_reg1[2]),
        .Q(qpllreset_in_reg2[2]),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \qpllreset_in_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllreset_in_reg1[3]),
        .Q(qpllreset_in_reg2[3]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    qpllreset_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(qpllreset_i_1_n_0),
        .Q(QPLL_QPLLRESET),
        .S(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\rate_reg1_reg[0]_0 ),
        .Q(rate_reg1[0]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rate_reg1[1]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_reg1[0]),
        .Q(rate_reg2[0]),
        .R(SS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rate_reg1[1]),
        .Q(rate_reg2[1]),
        .R(SS));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_qpll_wrapper" *) 
module pcie_7x_0_pcie_7x_0_qpll_wrapper
   (qpll_drp_rdy,
    QPLL_QPLLLOCK,
    QPLL_QPLLOUTCLK,
    QPLL_QPLLOUTREFCLK,
    D,
    pipe_dclk_in,
    qpll_drp_en,
    qpll_drp_we,
    sys_clk,
    QPLL_QPLLPD,
    QPLL_QPLLRESET,
    rdy_reg1_reg,
    Q);
  output qpll_drp_rdy;
  output QPLL_QPLLLOCK;
  output QPLL_QPLLOUTCLK;
  output QPLL_QPLLOUTREFCLK;
  output [15:0]D;
  input pipe_dclk_in;
  input qpll_drp_en;
  input qpll_drp_we;
  input sys_clk;
  input QPLL_QPLLPD;
  input QPLL_QPLLRESET;
  input [15:0]rdy_reg1_reg;
  input [4:0]Q;

  wire [15:0]D;
  wire [4:0]Q;
  wire QPLL_QPLLLOCK;
  wire QPLL_QPLLOUTCLK;
  wire QPLL_QPLLOUTREFCLK;
  wire QPLL_QPLLPD;
  wire QPLL_QPLLRESET;
  wire pipe_dclk_in;
  wire qpll_drp_en;
  wire qpll_drp_rdy;
  wire qpll_drp_we;
  wire [15:0]rdy_reg1_reg;
  wire sys_clk;
  wire \NLW_gtx_common.gtxe2_common_i_QPLLFBCLKLOST_UNCONNECTED ;
  wire \NLW_gtx_common.gtxe2_common_i_QPLLREFCLKLOST_UNCONNECTED ;
  wire \NLW_gtx_common.gtxe2_common_i_REFCLKOUTMONITOR_UNCONNECTED ;
  wire [7:0]\NLW_gtx_common.gtxe2_common_i_QPLLDMONITOR_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  GTXE2_COMMON #(
    .BIAS_CFG(64'h0000040000001000),
    .COMMON_CFG(32'h00000000),
    .IS_DRPCLK_INVERTED(1'b0),
    .IS_GTGREFCLK_INVERTED(1'b0),
    .IS_QPLLLOCKDETCLK_INVERTED(1'b0),
    .QPLL_CFG(27'h06801C1),
    .QPLL_CLKOUT_CFG(4'b0000),
    .QPLL_COARSE_FREQ_OVRD(6'b010000),
    .QPLL_COARSE_FREQ_OVRD_EN(1'b0),
    .QPLL_CP(10'b0000011111),
    .QPLL_CP_MONITOR_EN(1'b0),
    .QPLL_DMONITOR_SEL(1'b0),
    .QPLL_FBDIV(10'b0100100000),
    .QPLL_FBDIV_MONITOR_EN(1'b0),
    .QPLL_FBDIV_RATIO(1'b1),
    .QPLL_INIT_CFG(24'h000006),
    .QPLL_LOCK_CFG(16'h21E8),
    .QPLL_LPF(4'b1101),
    .QPLL_REFCLK_DIV(1),
    .SIM_QPLLREFCLK_SEL(3'b001),
    .SIM_RESET_SPEEDUP("FALSE"),
    .SIM_VERSION("3.0")) 
    \gtx_common.gtxe2_common_i 
       (.BGBYPASSB(1'b1),
        .BGMONITORENB(1'b1),
        .BGPDB(1'b1),
        .BGRCALOVRD({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DRPADDR({Q[4],1'b0,Q[3],Q[3],Q[4],Q[2:0]}),
        .DRPCLK(pipe_dclk_in),
        .DRPDI(rdy_reg1_reg),
        .DRPDO(D),
        .DRPEN(qpll_drp_en),
        .DRPRDY(qpll_drp_rdy),
        .DRPWE(qpll_drp_we),
        .GTGREFCLK(1'b0),
        .GTNORTHREFCLK0(1'b0),
        .GTNORTHREFCLK1(1'b0),
        .GTREFCLK0(sys_clk),
        .GTREFCLK1(1'b0),
        .GTSOUTHREFCLK0(1'b0),
        .GTSOUTHREFCLK1(1'b0),
        .PMARSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .QPLLDMONITOR(\NLW_gtx_common.gtxe2_common_i_QPLLDMONITOR_UNCONNECTED [7:0]),
        .QPLLFBCLKLOST(\NLW_gtx_common.gtxe2_common_i_QPLLFBCLKLOST_UNCONNECTED ),
        .QPLLLOCK(QPLL_QPLLLOCK),
        .QPLLLOCKDETCLK(1'b0),
        .QPLLLOCKEN(1'b1),
        .QPLLOUTCLK(QPLL_QPLLOUTCLK),
        .QPLLOUTREFCLK(QPLL_QPLLOUTREFCLK),
        .QPLLOUTRESET(1'b0),
        .QPLLPD(QPLL_QPLLPD),
        .QPLLREFCLKLOST(\NLW_gtx_common.gtxe2_common_i_QPLLREFCLKLOST_UNCONNECTED ),
        .QPLLREFCLKSEL({1'b0,1'b0,1'b1}),
        .QPLLRESET(QPLL_QPLLRESET),
        .QPLLRSVD1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .QPLLRSVD2({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .RCALENB(1'b1),
        .REFCLKOUTMONITOR(\NLW_gtx_common.gtxe2_common_i_REFCLKOUTMONITOR_UNCONNECTED ));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_rxeq_scan" *) 
module pcie_7x_0_pcie_7x_0_rxeq_scan
   (D,
    rxeq_new_txcoeff_req,
    adapt_done_reg_0,
    new_txcoeff_done_reg_0,
    RST_CPLLRESET,
    pipe_pclk_in,
    new_txcoeff_req_reg1_reg_0,
    rxeq_preset_valid,
    out,
    Q,
    \FSM_onehot_fsm_rx_reg[5] ,
    rxeq_adapt_done_reg_reg,
    rxeq_adapt_done_reg_reg_0,
    rxeq_adapt_done_reg_reg_1,
    rxeq_adapt_done_reg,
    USER_RXEQ_ADAPT_DONE,
    \preset_reg1_reg[2]_0 ,
    \txpreset_reg1_reg[3]_0 ,
    \txcoeff_reg1_reg[17]_0 ,
    \fs_reg1_reg[5]_0 ,
    \lf_reg1_reg[5]_0 );
  output [2:0]D;
  output rxeq_new_txcoeff_req;
  output adapt_done_reg_0;
  output new_txcoeff_done_reg_0;
  input RST_CPLLRESET;
  input pipe_pclk_in;
  input new_txcoeff_req_reg1_reg_0;
  input rxeq_preset_valid;
  input [1:0]out;
  input [4:0]Q;
  input [2:0]\FSM_onehot_fsm_rx_reg[5] ;
  input rxeq_adapt_done_reg_reg;
  input rxeq_adapt_done_reg_reg_0;
  input rxeq_adapt_done_reg_reg_1;
  input rxeq_adapt_done_reg;
  input USER_RXEQ_ADAPT_DONE;
  input [2:0]\preset_reg1_reg[2]_0 ;
  input [3:0]\txpreset_reg1_reg[3]_0 ;
  input [17:0]\txcoeff_reg1_reg[17]_0 ;
  input [5:0]\fs_reg1_reg[5]_0 ;
  input [5:0]\lf_reg1_reg[5]_0 ;

  wire [2:0]D;
  wire \FSM_onehot_fsm[1]_i_1__8_n_0 ;
  wire \FSM_onehot_fsm[2]_i_1__4_n_0 ;
  wire \FSM_onehot_fsm[3]_i_1__4_n_0 ;
  wire \FSM_onehot_fsm[3]_i_2__2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_10__2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_11__2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_12__2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_13__2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_1__8_n_0 ;
  wire \FSM_onehot_fsm[4]_i_2__3_n_0 ;
  wire \FSM_onehot_fsm[4]_i_3__2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_4__2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_5__2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_6__2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_7__2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_8__2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_9__2_n_0 ;
  wire \FSM_onehot_fsm_reg_n_0_[1] ;
  wire \FSM_onehot_fsm_reg_n_0_[2] ;
  wire \FSM_onehot_fsm_reg_n_0_[3] ;
  wire \FSM_onehot_fsm_reg_n_0_[4] ;
  wire \FSM_onehot_fsm_rx[6]_i_2__2_n_0 ;
  wire [2:0]\FSM_onehot_fsm_rx_reg[5] ;
  wire [4:0]Q;
  wire RST_CPLLRESET;
  wire USER_RXEQ_ADAPT_DONE;
  wire adapt_done;
  wire adapt_done_cnt_i_1__2_n_0;
  wire adapt_done_cnt_i_2__2_n_0;
  wire adapt_done_cnt_reg_n_0;
  wire adapt_done_reg_0;
  wire [21:0]converge_cnt;
  wire [21:1]converge_cnt0;
  wire [21:0]converge_cnt_0;
  wire \converge_cnt_reg[12]_i_2__2_n_0 ;
  wire \converge_cnt_reg[12]_i_2__2_n_1 ;
  wire \converge_cnt_reg[12]_i_2__2_n_2 ;
  wire \converge_cnt_reg[12]_i_2__2_n_3 ;
  wire \converge_cnt_reg[16]_i_2__2_n_0 ;
  wire \converge_cnt_reg[16]_i_2__2_n_1 ;
  wire \converge_cnt_reg[16]_i_2__2_n_2 ;
  wire \converge_cnt_reg[16]_i_2__2_n_3 ;
  wire \converge_cnt_reg[20]_i_2__2_n_0 ;
  wire \converge_cnt_reg[20]_i_2__2_n_1 ;
  wire \converge_cnt_reg[20]_i_2__2_n_2 ;
  wire \converge_cnt_reg[20]_i_2__2_n_3 ;
  wire \converge_cnt_reg[4]_i_2__2_n_0 ;
  wire \converge_cnt_reg[4]_i_2__2_n_1 ;
  wire \converge_cnt_reg[4]_i_2__2_n_2 ;
  wire \converge_cnt_reg[4]_i_2__2_n_3 ;
  wire \converge_cnt_reg[8]_i_2__2_n_0 ;
  wire \converge_cnt_reg[8]_i_2__2_n_1 ;
  wire \converge_cnt_reg[8]_i_2__2_n_2 ;
  wire \converge_cnt_reg[8]_i_2__2_n_3 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]fs_reg1;
  wire [5:0]\fs_reg1_reg[5]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]fs_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]lf_reg1;
  wire [5:0]\lf_reg1_reg[5]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]lf_reg2;
  wire new_txcoeff_done;
  wire new_txcoeff_done_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire new_txcoeff_req_reg1;
  wire new_txcoeff_req_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire new_txcoeff_req_reg2;
  wire [1:0]out;
  wire pipe_pclk_in;
  wire preset_done;
  wire preset_done_1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]preset_reg1;
  wire [2:0]\preset_reg1_reg[2]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]preset_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire preset_valid_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire preset_valid_reg2;
  wire rxeq_adapt_done_reg;
  wire rxeq_adapt_done_reg_reg;
  wire rxeq_adapt_done_reg_reg_0;
  wire rxeq_adapt_done_reg_reg_1;
  wire rxeq_new_txcoeff_req;
  wire rxeq_preset_valid;
  wire rxeqscan_adapt_done;
  wire rxeqscan_new_txcoeff_done;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]txcoeff_reg1;
  wire [17:0]\txcoeff_reg1_reg[17]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]txcoeff_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txpreset_reg1;
  wire [3:0]\txpreset_reg1_reg[3]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txpreset_reg2;
  wire [3:0]\NLW_converge_cnt_reg[21]_i_2__2_CO_UNCONNECTED ;
  wire [3:1]\NLW_converge_cnt_reg[21]_i_2__2_O_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h0F00AFAF0F11AFBB)) 
    \FSM_onehot_fsm[1]_i_1__8 
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(preset_valid_reg2),
        .I3(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I4(new_txcoeff_req_reg2),
        .I5(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[1]_i_1__8_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \FSM_onehot_fsm[2]_i_1__4 
       (.I0(preset_valid_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[2]_i_1__4_n_0 ));
  LUT6 #(
    .INIT(64'h04FF040404040404)) 
    \FSM_onehot_fsm[3]_i_1__4 
       (.I0(\FSM_onehot_fsm[3]_i_2__2_n_0 ),
        .I1(\FSM_onehot_fsm[4]_i_2__3_n_0 ),
        .I2(\FSM_onehot_fsm[4]_i_3__2_n_0 ),
        .I3(preset_valid_reg2),
        .I4(new_txcoeff_req_reg2),
        .I5(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[3]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT4 #(
    .INIT(16'h04FF)) 
    \FSM_onehot_fsm[3]_i_2__2 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(\FSM_onehot_fsm_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm[3]_i_2__2_n_0 ));
  LUT5 #(
    .INIT(32'hFFBFFFFF)) 
    \FSM_onehot_fsm[4]_i_10__2 
       (.I0(\FSM_onehot_fsm[4]_i_13__2_n_0 ),
        .I1(converge_cnt[2]),
        .I2(converge_cnt[20]),
        .I3(converge_cnt[10]),
        .I4(converge_cnt[0]),
        .O(\FSM_onehot_fsm[4]_i_10__2_n_0 ));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \FSM_onehot_fsm[4]_i_11__2 
       (.I0(converge_cnt[2]),
        .I1(converge_cnt[6]),
        .I2(converge_cnt[8]),
        .I3(converge_cnt[3]),
        .O(\FSM_onehot_fsm[4]_i_11__2_n_0 ));
  LUT5 #(
    .INIT(32'hEFFFFFFF)) 
    \FSM_onehot_fsm[4]_i_12__2 
       (.I0(\FSM_onehot_fsm[4]_i_13__2_n_0 ),
        .I1(converge_cnt[14]),
        .I2(converge_cnt[10]),
        .I3(converge_cnt[21]),
        .I4(converge_cnt[19]),
        .O(\FSM_onehot_fsm[4]_i_12__2_n_0 ));
  LUT4 #(
    .INIT(16'hFF7F)) 
    \FSM_onehot_fsm[4]_i_13__2 
       (.I0(converge_cnt[16]),
        .I1(converge_cnt[11]),
        .I2(converge_cnt[9]),
        .I3(converge_cnt[5]),
        .O(\FSM_onehot_fsm[4]_i_13__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFD0FFD0FFD0)) 
    \FSM_onehot_fsm[4]_i_1__8 
       (.I0(\FSM_onehot_fsm[4]_i_2__3_n_0 ),
        .I1(\FSM_onehot_fsm[4]_i_3__2_n_0 ),
        .I2(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I3(\FSM_onehot_fsm[4]_i_4__2_n_0 ),
        .I4(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I5(new_txcoeff_req_reg2),
        .O(\FSM_onehot_fsm[4]_i_1__8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFBF)) 
    \FSM_onehot_fsm[4]_i_2__3 
       (.I0(\FSM_onehot_fsm[4]_i_5__2_n_0 ),
        .I1(converge_cnt[17]),
        .I2(converge_cnt[18]),
        .I3(converge_cnt[21]),
        .I4(converge_cnt[8]),
        .I5(\FSM_onehot_fsm[4]_i_6__2_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_2__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000001000000)) 
    \FSM_onehot_fsm[4]_i_3__2 
       (.I0(\FSM_onehot_fsm[4]_i_7__2_n_0 ),
        .I1(converge_cnt[7]),
        .I2(converge_cnt[1]),
        .I3(converge_cnt[15]),
        .I4(converge_cnt[13]),
        .I5(\FSM_onehot_fsm[4]_i_8__2_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_3__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT4 #(
    .INIT(16'h0400)) 
    \FSM_onehot_fsm[4]_i_4__2 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(\FSM_onehot_fsm_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm[4]_i_4__2_n_0 ));
  LUT4 #(
    .INIT(16'hFFF2)) 
    \FSM_onehot_fsm[4]_i_5__2 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(converge_cnt[7]),
        .I3(converge_cnt[1]),
        .O(\FSM_onehot_fsm[4]_i_5__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFB)) 
    \FSM_onehot_fsm[4]_i_6__2 
       (.I0(\FSM_onehot_fsm[4]_i_9__2_n_0 ),
        .I1(converge_cnt[19]),
        .I2(converge_cnt[6]),
        .I3(converge_cnt[3]),
        .I4(converge_cnt[4]),
        .I5(\FSM_onehot_fsm[4]_i_10__2_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_6__2_n_0 ));
  LUT4 #(
    .INIT(16'hDFFF)) 
    \FSM_onehot_fsm[4]_i_7__2 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(converge_cnt[17]),
        .I3(converge_cnt[18]),
        .O(\FSM_onehot_fsm[4]_i_7__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \FSM_onehot_fsm[4]_i_8__2 
       (.I0(\FSM_onehot_fsm[4]_i_11__2_n_0 ),
        .I1(converge_cnt[12]),
        .I2(converge_cnt[20]),
        .I3(converge_cnt[0]),
        .I4(converge_cnt[4]),
        .I5(\FSM_onehot_fsm[4]_i_12__2_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_8__2_n_0 ));
  LUT4 #(
    .INIT(16'hFFDF)) 
    \FSM_onehot_fsm[4]_i_9__2 
       (.I0(converge_cnt[15]),
        .I1(converge_cnt[13]),
        .I2(converge_cnt[14]),
        .I3(converge_cnt[12]),
        .O(\FSM_onehot_fsm[4]_i_9__2_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[1]_i_1__8_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[1] ),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[2]_i_1__4_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[3]_i_1__4_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[4]_i_1__8_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h40FF4040)) 
    \FSM_onehot_fsm_rx[2]_i_1__2 
       (.I0(out[1]),
        .I1(Q[0]),
        .I2(out[0]),
        .I3(preset_done),
        .I4(Q[1]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hF444444444444444)) 
    \FSM_onehot_fsm_rx[5]_i_1__2 
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(Q[3]),
        .I2(\FSM_onehot_fsm_rx_reg[5] [2]),
        .I3(\FSM_onehot_fsm_rx_reg[5] [0]),
        .I4(\FSM_onehot_fsm_rx_reg[5] [1]),
        .I5(Q[2]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE0E0E0)) 
    \FSM_onehot_fsm_rx[6]_i_1__2 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(Q[4]),
        .I3(preset_done),
        .I4(Q[1]),
        .I5(\FSM_onehot_fsm_rx[6]_i_2__2_n_0 ),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_fsm_rx[6]_i_2__2 
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(Q[3]),
        .O(\FSM_onehot_fsm_rx[6]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h000A0A0AF0F0F8F0)) 
    adapt_done_cnt_i_1__2
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .I5(adapt_done_cnt_i_2__2_n_0),
        .O(adapt_done_cnt_i_1__2_n_0));
  LUT5 #(
    .INIT(32'h00FF0101)) 
    adapt_done_cnt_i_2__2
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I3(new_txcoeff_req_reg2),
        .I4(\FSM_onehot_fsm_reg_n_0_[4] ),
        .O(adapt_done_cnt_i_2__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    adapt_done_cnt_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(adapt_done_cnt_i_1__2_n_0),
        .Q(adapt_done_cnt_reg_n_0),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hF8000000)) 
    adapt_done_i_1__2
       (.I0(out[1]),
        .I1(out[0]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(new_txcoeff_req_reg2),
        .I4(\FSM_onehot_fsm_reg_n_0_[4] ),
        .O(adapt_done));
  FDRE #(
    .INIT(1'b0)) 
    adapt_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(adapt_done),
        .Q(rxeqscan_adapt_done),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h44444044)) 
    \converge_cnt[0]_i_1__5 
       (.I0(converge_cnt[0]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[0]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[10]_i_1__2 
       (.I0(converge_cnt0[10]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[10]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[11]_i_1__2 
       (.I0(converge_cnt0[11]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[11]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[12]_i_1__2 
       (.I0(converge_cnt0[12]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[12]));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[13]_i_1__2 
       (.I0(converge_cnt0[13]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[13]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[14]_i_1__2 
       (.I0(converge_cnt0[14]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[14]));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[15]_i_1__2 
       (.I0(converge_cnt0[15]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[15]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[16]_i_1__2 
       (.I0(converge_cnt0[16]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[16]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[17]_i_1__2 
       (.I0(converge_cnt0[17]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[17]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[18]_i_1__2 
       (.I0(converge_cnt0[18]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[18]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[19]_i_1__2 
       (.I0(converge_cnt0[19]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[19]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[1]_i_1__2 
       (.I0(converge_cnt0[1]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[1]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[20]_i_1__2 
       (.I0(converge_cnt0[20]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[20]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[21]_i_1__2 
       (.I0(converge_cnt0[21]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[21]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[2]_i_1__2 
       (.I0(converge_cnt0[2]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[2]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[3]_i_1__2 
       (.I0(converge_cnt0[3]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[3]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[4]_i_1__2 
       (.I0(converge_cnt0[4]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[4]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[5]_i_1__2 
       (.I0(converge_cnt0[5]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[5]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[6]_i_1__2 
       (.I0(converge_cnt0[6]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[6]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[7]_i_1__2 
       (.I0(converge_cnt0[7]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[7]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[8]_i_1__2 
       (.I0(converge_cnt0[8]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[8]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[9]_i_1__2 
       (.I0(converge_cnt0[9]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[9]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[0]),
        .Q(converge_cnt[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[10]),
        .Q(converge_cnt[10]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[11]),
        .Q(converge_cnt[11]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[12]),
        .Q(converge_cnt[12]),
        .R(RST_CPLLRESET));
  CARRY4 \converge_cnt_reg[12]_i_2__2 
       (.CI(\converge_cnt_reg[8]_i_2__2_n_0 ),
        .CO({\converge_cnt_reg[12]_i_2__2_n_0 ,\converge_cnt_reg[12]_i_2__2_n_1 ,\converge_cnt_reg[12]_i_2__2_n_2 ,\converge_cnt_reg[12]_i_2__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[12:9]),
        .S(converge_cnt[12:9]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[13]),
        .Q(converge_cnt[13]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[14]),
        .Q(converge_cnt[14]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[15]),
        .Q(converge_cnt[15]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[16]),
        .Q(converge_cnt[16]),
        .R(RST_CPLLRESET));
  CARRY4 \converge_cnt_reg[16]_i_2__2 
       (.CI(\converge_cnt_reg[12]_i_2__2_n_0 ),
        .CO({\converge_cnt_reg[16]_i_2__2_n_0 ,\converge_cnt_reg[16]_i_2__2_n_1 ,\converge_cnt_reg[16]_i_2__2_n_2 ,\converge_cnt_reg[16]_i_2__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[16:13]),
        .S(converge_cnt[16:13]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[17]),
        .Q(converge_cnt[17]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[18] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[18]),
        .Q(converge_cnt[18]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[19] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[19]),
        .Q(converge_cnt[19]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[1]),
        .Q(converge_cnt[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[20] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[20]),
        .Q(converge_cnt[20]),
        .R(RST_CPLLRESET));
  CARRY4 \converge_cnt_reg[20]_i_2__2 
       (.CI(\converge_cnt_reg[16]_i_2__2_n_0 ),
        .CO({\converge_cnt_reg[20]_i_2__2_n_0 ,\converge_cnt_reg[20]_i_2__2_n_1 ,\converge_cnt_reg[20]_i_2__2_n_2 ,\converge_cnt_reg[20]_i_2__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[20:17]),
        .S(converge_cnt[20:17]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[21] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[21]),
        .Q(converge_cnt[21]),
        .R(RST_CPLLRESET));
  CARRY4 \converge_cnt_reg[21]_i_2__2 
       (.CI(\converge_cnt_reg[20]_i_2__2_n_0 ),
        .CO(\NLW_converge_cnt_reg[21]_i_2__2_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_converge_cnt_reg[21]_i_2__2_O_UNCONNECTED [3:1],converge_cnt0[21]}),
        .S({1'b0,1'b0,1'b0,converge_cnt[21]}));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[2]),
        .Q(converge_cnt[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[3]),
        .Q(converge_cnt[3]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[4]),
        .Q(converge_cnt[4]),
        .R(RST_CPLLRESET));
  CARRY4 \converge_cnt_reg[4]_i_2__2 
       (.CI(1'b0),
        .CO({\converge_cnt_reg[4]_i_2__2_n_0 ,\converge_cnt_reg[4]_i_2__2_n_1 ,\converge_cnt_reg[4]_i_2__2_n_2 ,\converge_cnt_reg[4]_i_2__2_n_3 }),
        .CYINIT(converge_cnt[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[4:1]),
        .S(converge_cnt[4:1]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[5]),
        .Q(converge_cnt[5]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[6]),
        .Q(converge_cnt[6]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[7]),
        .Q(converge_cnt[7]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[8]),
        .Q(converge_cnt[8]),
        .R(RST_CPLLRESET));
  CARRY4 \converge_cnt_reg[8]_i_2__2 
       (.CI(\converge_cnt_reg[4]_i_2__2_n_0 ),
        .CO({\converge_cnt_reg[8]_i_2__2_n_0 ,\converge_cnt_reg[8]_i_2__2_n_1 ,\converge_cnt_reg[8]_i_2__2_n_2 ,\converge_cnt_reg[8]_i_2__2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[8:5]),
        .S(converge_cnt[8:5]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[9]),
        .Q(converge_cnt[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [0]),
        .Q(fs_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [1]),
        .Q(fs_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [2]),
        .Q(fs_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [3]),
        .Q(fs_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [4]),
        .Q(fs_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [5]),
        .Q(fs_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[0]),
        .Q(fs_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[1]),
        .Q(fs_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[2]),
        .Q(fs_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[3]),
        .Q(fs_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[4]),
        .Q(fs_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[5]),
        .Q(fs_reg2[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [0]),
        .Q(lf_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [1]),
        .Q(lf_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [2]),
        .Q(lf_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [3]),
        .Q(lf_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [4]),
        .Q(lf_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [5]),
        .Q(lf_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[0]),
        .Q(lf_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[1]),
        .Q(lf_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[2]),
        .Q(lf_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[3]),
        .Q(lf_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[4]),
        .Q(lf_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[5]),
        .Q(lf_reg2[5]),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    new_txcoeff_done_i_1__2
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(new_txcoeff_req_reg2),
        .O(new_txcoeff_done));
  FDRE #(
    .INIT(1'b0)) 
    new_txcoeff_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(new_txcoeff_done),
        .Q(rxeqscan_new_txcoeff_done),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE new_txcoeff_req_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(new_txcoeff_req_reg1_reg_0),
        .Q(new_txcoeff_req_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE new_txcoeff_req_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(new_txcoeff_req_reg1),
        .Q(new_txcoeff_req_reg2),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hEA)) 
    preset_done_i_1__2
       (.I0(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I2(preset_valid_reg2),
        .O(preset_done_1));
  FDRE #(
    .INIT(1'b0)) 
    preset_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_done_1),
        .Q(preset_done),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\preset_reg1_reg[2]_0 [0]),
        .Q(preset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\preset_reg1_reg[2]_0 [1]),
        .Q(preset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\preset_reg1_reg[2]_0 [2]),
        .Q(preset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_reg1[0]),
        .Q(preset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_reg1[1]),
        .Q(preset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_reg1[2]),
        .Q(preset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE preset_valid_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_valid),
        .Q(preset_valid_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE preset_valid_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_valid_reg1),
        .Q(preset_valid_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hA800FFFFA8000000)) 
    rxeq_adapt_done_i_1__2
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(rxeq_adapt_done_reg_reg_1),
        .I2(rxeqscan_adapt_done),
        .I3(Q[3]),
        .I4(rxeq_adapt_done_reg),
        .I5(USER_RXEQ_ADAPT_DONE),
        .O(new_txcoeff_done_reg_0));
  LUT6 #(
    .INIT(64'hFF00FF33AA00A800)) 
    rxeq_adapt_done_reg_i_1__2
       (.I0(rxeqscan_adapt_done),
        .I1(rxeq_adapt_done_reg_reg),
        .I2(rxeqscan_new_txcoeff_done),
        .I3(Q[3]),
        .I4(rxeq_adapt_done_reg_reg_0),
        .I5(rxeq_adapt_done_reg_reg_1),
        .O(adapt_done_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT2 #(
    .INIT(4'h2)) 
    rxeq_new_txcoeff_req_i_1__2
       (.I0(Q[3]),
        .I1(rxeqscan_new_txcoeff_done),
        .O(rxeq_new_txcoeff_req));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [0]),
        .Q(txcoeff_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [10]),
        .Q(txcoeff_reg1[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [11]),
        .Q(txcoeff_reg1[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [12]),
        .Q(txcoeff_reg1[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [13]),
        .Q(txcoeff_reg1[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [14]),
        .Q(txcoeff_reg1[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [15]),
        .Q(txcoeff_reg1[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [16]),
        .Q(txcoeff_reg1[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [17]),
        .Q(txcoeff_reg1[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [1]),
        .Q(txcoeff_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [2]),
        .Q(txcoeff_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [3]),
        .Q(txcoeff_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [4]),
        .Q(txcoeff_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [5]),
        .Q(txcoeff_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [6]),
        .Q(txcoeff_reg1[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [7]),
        .Q(txcoeff_reg1[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [8]),
        .Q(txcoeff_reg1[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [9]),
        .Q(txcoeff_reg1[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[0]),
        .Q(txcoeff_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[10]),
        .Q(txcoeff_reg2[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[11]),
        .Q(txcoeff_reg2[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[12]),
        .Q(txcoeff_reg2[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[13]),
        .Q(txcoeff_reg2[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[14]),
        .Q(txcoeff_reg2[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[15]),
        .Q(txcoeff_reg2[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[16]),
        .Q(txcoeff_reg2[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[17]),
        .Q(txcoeff_reg2[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[1]),
        .Q(txcoeff_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[2]),
        .Q(txcoeff_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[3]),
        .Q(txcoeff_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[4]),
        .Q(txcoeff_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[5]),
        .Q(txcoeff_reg2[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[6]),
        .Q(txcoeff_reg2[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[7]),
        .Q(txcoeff_reg2[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[8]),
        .Q(txcoeff_reg2[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[9]),
        .Q(txcoeff_reg2[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [0]),
        .Q(txpreset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [1]),
        .Q(txpreset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [2]),
        .Q(txpreset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [3]),
        .Q(txpreset_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[0]),
        .Q(txpreset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[1]),
        .Q(txpreset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[2]),
        .Q(txpreset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[3]),
        .Q(txpreset_reg2[3]),
        .R(RST_CPLLRESET));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_rxeq_scan" *) 
module pcie_7x_0_pcie_7x_0_rxeq_scan_39
   (D,
    rxeq_new_txcoeff_req,
    adapt_done_reg_0,
    new_txcoeff_done_reg_0,
    RST_CPLLRESET,
    pipe_pclk_in,
    new_txcoeff_req_reg1_reg_0,
    rxeq_preset_valid,
    out,
    Q,
    \FSM_onehot_fsm_rx_reg[5] ,
    rxeq_adapt_done_reg_reg,
    rxeq_adapt_done_reg_reg_0,
    rxeq_adapt_done_reg_reg_1,
    rxeq_adapt_done_reg,
    USER_RXEQ_ADAPT_DONE,
    \preset_reg1_reg[2]_0 ,
    \txpreset_reg1_reg[3]_0 ,
    \txcoeff_reg1_reg[17]_0 ,
    \fs_reg1_reg[5]_0 ,
    \lf_reg1_reg[5]_0 );
  output [2:0]D;
  output rxeq_new_txcoeff_req;
  output adapt_done_reg_0;
  output new_txcoeff_done_reg_0;
  input RST_CPLLRESET;
  input pipe_pclk_in;
  input new_txcoeff_req_reg1_reg_0;
  input rxeq_preset_valid;
  input [1:0]out;
  input [4:0]Q;
  input [2:0]\FSM_onehot_fsm_rx_reg[5] ;
  input rxeq_adapt_done_reg_reg;
  input rxeq_adapt_done_reg_reg_0;
  input rxeq_adapt_done_reg_reg_1;
  input rxeq_adapt_done_reg;
  input USER_RXEQ_ADAPT_DONE;
  input [2:0]\preset_reg1_reg[2]_0 ;
  input [3:0]\txpreset_reg1_reg[3]_0 ;
  input [17:0]\txcoeff_reg1_reg[17]_0 ;
  input [5:0]\fs_reg1_reg[5]_0 ;
  input [5:0]\lf_reg1_reg[5]_0 ;

  wire [2:0]D;
  wire \FSM_onehot_fsm[1]_i_1__6_n_0 ;
  wire \FSM_onehot_fsm[2]_i_1__3_n_0 ;
  wire \FSM_onehot_fsm[3]_i_1__3_n_0 ;
  wire \FSM_onehot_fsm[3]_i_2__1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_10__1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_11__1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_12__1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_13__1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_1__6_n_0 ;
  wire \FSM_onehot_fsm[4]_i_2__2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_3__1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_4__1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_5__1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_6__1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_7__1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_8__1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_9__1_n_0 ;
  wire \FSM_onehot_fsm_reg_n_0_[1] ;
  wire \FSM_onehot_fsm_reg_n_0_[2] ;
  wire \FSM_onehot_fsm_reg_n_0_[3] ;
  wire \FSM_onehot_fsm_reg_n_0_[4] ;
  wire \FSM_onehot_fsm_rx[6]_i_2__1_n_0 ;
  wire [2:0]\FSM_onehot_fsm_rx_reg[5] ;
  wire [4:0]Q;
  wire RST_CPLLRESET;
  wire USER_RXEQ_ADAPT_DONE;
  wire adapt_done;
  wire adapt_done_cnt_i_1__1_n_0;
  wire adapt_done_cnt_i_2__1_n_0;
  wire adapt_done_cnt_reg_n_0;
  wire adapt_done_reg_0;
  wire [21:0]converge_cnt;
  wire [21:1]converge_cnt0;
  wire [21:0]converge_cnt_0;
  wire \converge_cnt_reg[12]_i_2__1_n_0 ;
  wire \converge_cnt_reg[12]_i_2__1_n_1 ;
  wire \converge_cnt_reg[12]_i_2__1_n_2 ;
  wire \converge_cnt_reg[12]_i_2__1_n_3 ;
  wire \converge_cnt_reg[16]_i_2__1_n_0 ;
  wire \converge_cnt_reg[16]_i_2__1_n_1 ;
  wire \converge_cnt_reg[16]_i_2__1_n_2 ;
  wire \converge_cnt_reg[16]_i_2__1_n_3 ;
  wire \converge_cnt_reg[20]_i_2__1_n_0 ;
  wire \converge_cnt_reg[20]_i_2__1_n_1 ;
  wire \converge_cnt_reg[20]_i_2__1_n_2 ;
  wire \converge_cnt_reg[20]_i_2__1_n_3 ;
  wire \converge_cnt_reg[4]_i_2__1_n_0 ;
  wire \converge_cnt_reg[4]_i_2__1_n_1 ;
  wire \converge_cnt_reg[4]_i_2__1_n_2 ;
  wire \converge_cnt_reg[4]_i_2__1_n_3 ;
  wire \converge_cnt_reg[8]_i_2__1_n_0 ;
  wire \converge_cnt_reg[8]_i_2__1_n_1 ;
  wire \converge_cnt_reg[8]_i_2__1_n_2 ;
  wire \converge_cnt_reg[8]_i_2__1_n_3 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]fs_reg1;
  wire [5:0]\fs_reg1_reg[5]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]fs_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]lf_reg1;
  wire [5:0]\lf_reg1_reg[5]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]lf_reg2;
  wire new_txcoeff_done;
  wire new_txcoeff_done_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire new_txcoeff_req_reg1;
  wire new_txcoeff_req_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire new_txcoeff_req_reg2;
  wire [1:0]out;
  wire pipe_pclk_in;
  wire preset_done;
  wire preset_done_1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]preset_reg1;
  wire [2:0]\preset_reg1_reg[2]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]preset_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire preset_valid_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire preset_valid_reg2;
  wire rxeq_adapt_done_reg;
  wire rxeq_adapt_done_reg_reg;
  wire rxeq_adapt_done_reg_reg_0;
  wire rxeq_adapt_done_reg_reg_1;
  wire rxeq_new_txcoeff_req;
  wire rxeq_preset_valid;
  wire rxeqscan_adapt_done;
  wire rxeqscan_new_txcoeff_done;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]txcoeff_reg1;
  wire [17:0]\txcoeff_reg1_reg[17]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]txcoeff_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txpreset_reg1;
  wire [3:0]\txpreset_reg1_reg[3]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txpreset_reg2;
  wire [3:0]\NLW_converge_cnt_reg[21]_i_2__1_CO_UNCONNECTED ;
  wire [3:1]\NLW_converge_cnt_reg[21]_i_2__1_O_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h0F00AFAF0F11AFBB)) 
    \FSM_onehot_fsm[1]_i_1__6 
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(preset_valid_reg2),
        .I3(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I4(new_txcoeff_req_reg2),
        .I5(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[1]_i_1__6_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \FSM_onehot_fsm[2]_i_1__3 
       (.I0(preset_valid_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[2]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h04FF040404040404)) 
    \FSM_onehot_fsm[3]_i_1__3 
       (.I0(\FSM_onehot_fsm[3]_i_2__1_n_0 ),
        .I1(\FSM_onehot_fsm[4]_i_2__2_n_0 ),
        .I2(\FSM_onehot_fsm[4]_i_3__1_n_0 ),
        .I3(preset_valid_reg2),
        .I4(new_txcoeff_req_reg2),
        .I5(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT4 #(
    .INIT(16'h04FF)) 
    \FSM_onehot_fsm[3]_i_2__1 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(\FSM_onehot_fsm_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm[3]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFBFFFFF)) 
    \FSM_onehot_fsm[4]_i_10__1 
       (.I0(\FSM_onehot_fsm[4]_i_13__1_n_0 ),
        .I1(converge_cnt[2]),
        .I2(converge_cnt[20]),
        .I3(converge_cnt[10]),
        .I4(converge_cnt[0]),
        .O(\FSM_onehot_fsm[4]_i_10__1_n_0 ));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \FSM_onehot_fsm[4]_i_11__1 
       (.I0(converge_cnt[2]),
        .I1(converge_cnt[6]),
        .I2(converge_cnt[8]),
        .I3(converge_cnt[3]),
        .O(\FSM_onehot_fsm[4]_i_11__1_n_0 ));
  LUT5 #(
    .INIT(32'hEFFFFFFF)) 
    \FSM_onehot_fsm[4]_i_12__1 
       (.I0(\FSM_onehot_fsm[4]_i_13__1_n_0 ),
        .I1(converge_cnt[14]),
        .I2(converge_cnt[10]),
        .I3(converge_cnt[21]),
        .I4(converge_cnt[19]),
        .O(\FSM_onehot_fsm[4]_i_12__1_n_0 ));
  LUT4 #(
    .INIT(16'hFF7F)) 
    \FSM_onehot_fsm[4]_i_13__1 
       (.I0(converge_cnt[16]),
        .I1(converge_cnt[11]),
        .I2(converge_cnt[9]),
        .I3(converge_cnt[5]),
        .O(\FSM_onehot_fsm[4]_i_13__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFD0FFD0FFD0)) 
    \FSM_onehot_fsm[4]_i_1__6 
       (.I0(\FSM_onehot_fsm[4]_i_2__2_n_0 ),
        .I1(\FSM_onehot_fsm[4]_i_3__1_n_0 ),
        .I2(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I3(\FSM_onehot_fsm[4]_i_4__1_n_0 ),
        .I4(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I5(new_txcoeff_req_reg2),
        .O(\FSM_onehot_fsm[4]_i_1__6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFBF)) 
    \FSM_onehot_fsm[4]_i_2__2 
       (.I0(\FSM_onehot_fsm[4]_i_5__1_n_0 ),
        .I1(converge_cnt[17]),
        .I2(converge_cnt[18]),
        .I3(converge_cnt[21]),
        .I4(converge_cnt[8]),
        .I5(\FSM_onehot_fsm[4]_i_6__1_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000001000000)) 
    \FSM_onehot_fsm[4]_i_3__1 
       (.I0(\FSM_onehot_fsm[4]_i_7__1_n_0 ),
        .I1(converge_cnt[7]),
        .I2(converge_cnt[1]),
        .I3(converge_cnt[15]),
        .I4(converge_cnt[13]),
        .I5(\FSM_onehot_fsm[4]_i_8__1_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_3__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT4 #(
    .INIT(16'h0400)) 
    \FSM_onehot_fsm[4]_i_4__1 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(\FSM_onehot_fsm_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm[4]_i_4__1_n_0 ));
  LUT4 #(
    .INIT(16'hFFF2)) 
    \FSM_onehot_fsm[4]_i_5__1 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(converge_cnt[7]),
        .I3(converge_cnt[1]),
        .O(\FSM_onehot_fsm[4]_i_5__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFB)) 
    \FSM_onehot_fsm[4]_i_6__1 
       (.I0(\FSM_onehot_fsm[4]_i_9__1_n_0 ),
        .I1(converge_cnt[19]),
        .I2(converge_cnt[6]),
        .I3(converge_cnt[3]),
        .I4(converge_cnt[4]),
        .I5(\FSM_onehot_fsm[4]_i_10__1_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_6__1_n_0 ));
  LUT4 #(
    .INIT(16'hDFFF)) 
    \FSM_onehot_fsm[4]_i_7__1 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(converge_cnt[17]),
        .I3(converge_cnt[18]),
        .O(\FSM_onehot_fsm[4]_i_7__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \FSM_onehot_fsm[4]_i_8__1 
       (.I0(\FSM_onehot_fsm[4]_i_11__1_n_0 ),
        .I1(converge_cnt[12]),
        .I2(converge_cnt[20]),
        .I3(converge_cnt[0]),
        .I4(converge_cnt[4]),
        .I5(\FSM_onehot_fsm[4]_i_12__1_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_8__1_n_0 ));
  LUT4 #(
    .INIT(16'hFFDF)) 
    \FSM_onehot_fsm[4]_i_9__1 
       (.I0(converge_cnt[15]),
        .I1(converge_cnt[13]),
        .I2(converge_cnt[14]),
        .I3(converge_cnt[12]),
        .O(\FSM_onehot_fsm[4]_i_9__1_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[1]_i_1__6_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[1] ),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[2]_i_1__3_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[3]_i_1__3_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[4]_i_1__6_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h40FF4040)) 
    \FSM_onehot_fsm_rx[2]_i_1__1 
       (.I0(out[1]),
        .I1(Q[0]),
        .I2(out[0]),
        .I3(preset_done),
        .I4(Q[1]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hF444444444444444)) 
    \FSM_onehot_fsm_rx[5]_i_1__1 
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(Q[3]),
        .I2(\FSM_onehot_fsm_rx_reg[5] [2]),
        .I3(\FSM_onehot_fsm_rx_reg[5] [0]),
        .I4(\FSM_onehot_fsm_rx_reg[5] [1]),
        .I5(Q[2]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE0E0E0)) 
    \FSM_onehot_fsm_rx[6]_i_1__1 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(Q[4]),
        .I3(preset_done),
        .I4(Q[1]),
        .I5(\FSM_onehot_fsm_rx[6]_i_2__1_n_0 ),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_fsm_rx[6]_i_2__1 
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(Q[3]),
        .O(\FSM_onehot_fsm_rx[6]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h000A0A0AF0F0F8F0)) 
    adapt_done_cnt_i_1__1
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .I5(adapt_done_cnt_i_2__1_n_0),
        .O(adapt_done_cnt_i_1__1_n_0));
  LUT5 #(
    .INIT(32'h00FF0101)) 
    adapt_done_cnt_i_2__1
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I3(new_txcoeff_req_reg2),
        .I4(\FSM_onehot_fsm_reg_n_0_[4] ),
        .O(adapt_done_cnt_i_2__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    adapt_done_cnt_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(adapt_done_cnt_i_1__1_n_0),
        .Q(adapt_done_cnt_reg_n_0),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hF8000000)) 
    adapt_done_i_1__1
       (.I0(out[1]),
        .I1(out[0]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(new_txcoeff_req_reg2),
        .I4(\FSM_onehot_fsm_reg_n_0_[4] ),
        .O(adapt_done));
  FDRE #(
    .INIT(1'b0)) 
    adapt_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(adapt_done),
        .Q(rxeqscan_adapt_done),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h44444044)) 
    \converge_cnt[0]_i_1__3 
       (.I0(converge_cnt[0]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[0]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[10]_i_1__1 
       (.I0(converge_cnt0[10]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[10]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[11]_i_1__1 
       (.I0(converge_cnt0[11]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[11]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[12]_i_1__1 
       (.I0(converge_cnt0[12]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[12]));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[13]_i_1__1 
       (.I0(converge_cnt0[13]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[13]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[14]_i_1__1 
       (.I0(converge_cnt0[14]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[14]));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[15]_i_1__1 
       (.I0(converge_cnt0[15]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[15]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[16]_i_1__1 
       (.I0(converge_cnt0[16]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[16]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[17]_i_1__1 
       (.I0(converge_cnt0[17]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[17]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[18]_i_1__1 
       (.I0(converge_cnt0[18]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[18]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[19]_i_1__1 
       (.I0(converge_cnt0[19]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[19]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[1]_i_1__1 
       (.I0(converge_cnt0[1]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[1]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[20]_i_1__1 
       (.I0(converge_cnt0[20]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[20]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[21]_i_1__1 
       (.I0(converge_cnt0[21]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[21]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[2]_i_1__1 
       (.I0(converge_cnt0[2]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[2]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[3]_i_1__1 
       (.I0(converge_cnt0[3]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[3]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[4]_i_1__1 
       (.I0(converge_cnt0[4]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[4]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[5]_i_1__1 
       (.I0(converge_cnt0[5]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[5]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[6]_i_1__1 
       (.I0(converge_cnt0[6]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[6]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[7]_i_1__1 
       (.I0(converge_cnt0[7]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[7]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[8]_i_1__1 
       (.I0(converge_cnt0[8]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[8]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[9]_i_1__1 
       (.I0(converge_cnt0[9]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[9]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[0]),
        .Q(converge_cnt[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[10]),
        .Q(converge_cnt[10]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[11]),
        .Q(converge_cnt[11]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[12]),
        .Q(converge_cnt[12]),
        .R(RST_CPLLRESET));
  CARRY4 \converge_cnt_reg[12]_i_2__1 
       (.CI(\converge_cnt_reg[8]_i_2__1_n_0 ),
        .CO({\converge_cnt_reg[12]_i_2__1_n_0 ,\converge_cnt_reg[12]_i_2__1_n_1 ,\converge_cnt_reg[12]_i_2__1_n_2 ,\converge_cnt_reg[12]_i_2__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[12:9]),
        .S(converge_cnt[12:9]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[13]),
        .Q(converge_cnt[13]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[14]),
        .Q(converge_cnt[14]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[15]),
        .Q(converge_cnt[15]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[16]),
        .Q(converge_cnt[16]),
        .R(RST_CPLLRESET));
  CARRY4 \converge_cnt_reg[16]_i_2__1 
       (.CI(\converge_cnt_reg[12]_i_2__1_n_0 ),
        .CO({\converge_cnt_reg[16]_i_2__1_n_0 ,\converge_cnt_reg[16]_i_2__1_n_1 ,\converge_cnt_reg[16]_i_2__1_n_2 ,\converge_cnt_reg[16]_i_2__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[16:13]),
        .S(converge_cnt[16:13]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[17]),
        .Q(converge_cnt[17]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[18] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[18]),
        .Q(converge_cnt[18]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[19] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[19]),
        .Q(converge_cnt[19]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[1]),
        .Q(converge_cnt[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[20] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[20]),
        .Q(converge_cnt[20]),
        .R(RST_CPLLRESET));
  CARRY4 \converge_cnt_reg[20]_i_2__1 
       (.CI(\converge_cnt_reg[16]_i_2__1_n_0 ),
        .CO({\converge_cnt_reg[20]_i_2__1_n_0 ,\converge_cnt_reg[20]_i_2__1_n_1 ,\converge_cnt_reg[20]_i_2__1_n_2 ,\converge_cnt_reg[20]_i_2__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[20:17]),
        .S(converge_cnt[20:17]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[21] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[21]),
        .Q(converge_cnt[21]),
        .R(RST_CPLLRESET));
  CARRY4 \converge_cnt_reg[21]_i_2__1 
       (.CI(\converge_cnt_reg[20]_i_2__1_n_0 ),
        .CO(\NLW_converge_cnt_reg[21]_i_2__1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_converge_cnt_reg[21]_i_2__1_O_UNCONNECTED [3:1],converge_cnt0[21]}),
        .S({1'b0,1'b0,1'b0,converge_cnt[21]}));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[2]),
        .Q(converge_cnt[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[3]),
        .Q(converge_cnt[3]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[4]),
        .Q(converge_cnt[4]),
        .R(RST_CPLLRESET));
  CARRY4 \converge_cnt_reg[4]_i_2__1 
       (.CI(1'b0),
        .CO({\converge_cnt_reg[4]_i_2__1_n_0 ,\converge_cnt_reg[4]_i_2__1_n_1 ,\converge_cnt_reg[4]_i_2__1_n_2 ,\converge_cnt_reg[4]_i_2__1_n_3 }),
        .CYINIT(converge_cnt[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[4:1]),
        .S(converge_cnt[4:1]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[5]),
        .Q(converge_cnt[5]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[6]),
        .Q(converge_cnt[6]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[7]),
        .Q(converge_cnt[7]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[8]),
        .Q(converge_cnt[8]),
        .R(RST_CPLLRESET));
  CARRY4 \converge_cnt_reg[8]_i_2__1 
       (.CI(\converge_cnt_reg[4]_i_2__1_n_0 ),
        .CO({\converge_cnt_reg[8]_i_2__1_n_0 ,\converge_cnt_reg[8]_i_2__1_n_1 ,\converge_cnt_reg[8]_i_2__1_n_2 ,\converge_cnt_reg[8]_i_2__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[8:5]),
        .S(converge_cnt[8:5]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[9]),
        .Q(converge_cnt[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [0]),
        .Q(fs_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [1]),
        .Q(fs_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [2]),
        .Q(fs_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [3]),
        .Q(fs_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [4]),
        .Q(fs_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [5]),
        .Q(fs_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[0]),
        .Q(fs_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[1]),
        .Q(fs_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[2]),
        .Q(fs_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[3]),
        .Q(fs_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[4]),
        .Q(fs_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[5]),
        .Q(fs_reg2[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [0]),
        .Q(lf_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [1]),
        .Q(lf_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [2]),
        .Q(lf_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [3]),
        .Q(lf_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [4]),
        .Q(lf_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [5]),
        .Q(lf_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[0]),
        .Q(lf_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[1]),
        .Q(lf_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[2]),
        .Q(lf_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[3]),
        .Q(lf_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[4]),
        .Q(lf_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[5]),
        .Q(lf_reg2[5]),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    new_txcoeff_done_i_1__1
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(new_txcoeff_req_reg2),
        .O(new_txcoeff_done));
  FDRE #(
    .INIT(1'b0)) 
    new_txcoeff_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(new_txcoeff_done),
        .Q(rxeqscan_new_txcoeff_done),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE new_txcoeff_req_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(new_txcoeff_req_reg1_reg_0),
        .Q(new_txcoeff_req_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE new_txcoeff_req_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(new_txcoeff_req_reg1),
        .Q(new_txcoeff_req_reg2),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hEA)) 
    preset_done_i_1__1
       (.I0(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I2(preset_valid_reg2),
        .O(preset_done_1));
  FDRE #(
    .INIT(1'b0)) 
    preset_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_done_1),
        .Q(preset_done),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\preset_reg1_reg[2]_0 [0]),
        .Q(preset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\preset_reg1_reg[2]_0 [1]),
        .Q(preset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\preset_reg1_reg[2]_0 [2]),
        .Q(preset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_reg1[0]),
        .Q(preset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_reg1[1]),
        .Q(preset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_reg1[2]),
        .Q(preset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE preset_valid_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_valid),
        .Q(preset_valid_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE preset_valid_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_valid_reg1),
        .Q(preset_valid_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hA800FFFFA8000000)) 
    rxeq_adapt_done_i_1__1
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(rxeq_adapt_done_reg_reg_1),
        .I2(rxeqscan_adapt_done),
        .I3(Q[3]),
        .I4(rxeq_adapt_done_reg),
        .I5(USER_RXEQ_ADAPT_DONE),
        .O(new_txcoeff_done_reg_0));
  LUT6 #(
    .INIT(64'hFF00FF33AA00A800)) 
    rxeq_adapt_done_reg_i_1__1
       (.I0(rxeqscan_adapt_done),
        .I1(rxeq_adapt_done_reg_reg),
        .I2(rxeqscan_new_txcoeff_done),
        .I3(Q[3]),
        .I4(rxeq_adapt_done_reg_reg_0),
        .I5(rxeq_adapt_done_reg_reg_1),
        .O(adapt_done_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT2 #(
    .INIT(4'h2)) 
    rxeq_new_txcoeff_req_i_1__1
       (.I0(Q[3]),
        .I1(rxeqscan_new_txcoeff_done),
        .O(rxeq_new_txcoeff_req));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [0]),
        .Q(txcoeff_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [10]),
        .Q(txcoeff_reg1[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [11]),
        .Q(txcoeff_reg1[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [12]),
        .Q(txcoeff_reg1[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [13]),
        .Q(txcoeff_reg1[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [14]),
        .Q(txcoeff_reg1[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [15]),
        .Q(txcoeff_reg1[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [16]),
        .Q(txcoeff_reg1[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [17]),
        .Q(txcoeff_reg1[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [1]),
        .Q(txcoeff_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [2]),
        .Q(txcoeff_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [3]),
        .Q(txcoeff_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [4]),
        .Q(txcoeff_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [5]),
        .Q(txcoeff_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [6]),
        .Q(txcoeff_reg1[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [7]),
        .Q(txcoeff_reg1[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [8]),
        .Q(txcoeff_reg1[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [9]),
        .Q(txcoeff_reg1[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[0]),
        .Q(txcoeff_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[10]),
        .Q(txcoeff_reg2[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[11]),
        .Q(txcoeff_reg2[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[12]),
        .Q(txcoeff_reg2[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[13]),
        .Q(txcoeff_reg2[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[14]),
        .Q(txcoeff_reg2[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[15]),
        .Q(txcoeff_reg2[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[16]),
        .Q(txcoeff_reg2[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[17]),
        .Q(txcoeff_reg2[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[1]),
        .Q(txcoeff_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[2]),
        .Q(txcoeff_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[3]),
        .Q(txcoeff_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[4]),
        .Q(txcoeff_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[5]),
        .Q(txcoeff_reg2[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[6]),
        .Q(txcoeff_reg2[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[7]),
        .Q(txcoeff_reg2[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[8]),
        .Q(txcoeff_reg2[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[9]),
        .Q(txcoeff_reg2[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [0]),
        .Q(txpreset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [1]),
        .Q(txpreset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [2]),
        .Q(txpreset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [3]),
        .Q(txpreset_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[0]),
        .Q(txpreset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[1]),
        .Q(txpreset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[2]),
        .Q(txpreset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[3]),
        .Q(txpreset_reg2[3]),
        .R(RST_CPLLRESET));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_rxeq_scan" *) 
module pcie_7x_0_pcie_7x_0_rxeq_scan_41
   (D,
    rxeq_new_txcoeff_req,
    adapt_done_reg_0,
    new_txcoeff_done_reg_0,
    RST_CPLLRESET,
    pipe_pclk_in,
    new_txcoeff_req_reg1_reg_0,
    rxeq_preset_valid,
    out,
    Q,
    \FSM_onehot_fsm_rx_reg[5] ,
    rxeq_adapt_done_reg_reg,
    rxeq_adapt_done_reg_reg_0,
    rxeq_adapt_done_reg_reg_1,
    rxeq_adapt_done_reg,
    USER_RXEQ_ADAPT_DONE,
    \preset_reg1_reg[2]_0 ,
    \txpreset_reg1_reg[3]_0 ,
    \txcoeff_reg1_reg[17]_0 ,
    \fs_reg1_reg[5]_0 ,
    \lf_reg1_reg[5]_0 );
  output [2:0]D;
  output rxeq_new_txcoeff_req;
  output adapt_done_reg_0;
  output new_txcoeff_done_reg_0;
  input RST_CPLLRESET;
  input pipe_pclk_in;
  input new_txcoeff_req_reg1_reg_0;
  input rxeq_preset_valid;
  input [1:0]out;
  input [4:0]Q;
  input [2:0]\FSM_onehot_fsm_rx_reg[5] ;
  input rxeq_adapt_done_reg_reg;
  input rxeq_adapt_done_reg_reg_0;
  input rxeq_adapt_done_reg_reg_1;
  input rxeq_adapt_done_reg;
  input USER_RXEQ_ADAPT_DONE;
  input [2:0]\preset_reg1_reg[2]_0 ;
  input [3:0]\txpreset_reg1_reg[3]_0 ;
  input [17:0]\txcoeff_reg1_reg[17]_0 ;
  input [5:0]\fs_reg1_reg[5]_0 ;
  input [5:0]\lf_reg1_reg[5]_0 ;

  wire [2:0]D;
  wire \FSM_onehot_fsm[1]_i_1__4_n_0 ;
  wire \FSM_onehot_fsm[2]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm[3]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm[3]_i_2__0_n_0 ;
  wire \FSM_onehot_fsm[4]_i_10__0_n_0 ;
  wire \FSM_onehot_fsm[4]_i_11__0_n_0 ;
  wire \FSM_onehot_fsm[4]_i_12__0_n_0 ;
  wire \FSM_onehot_fsm[4]_i_13__0_n_0 ;
  wire \FSM_onehot_fsm[4]_i_1__4_n_0 ;
  wire \FSM_onehot_fsm[4]_i_2__1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_3__0_n_0 ;
  wire \FSM_onehot_fsm[4]_i_4__0_n_0 ;
  wire \FSM_onehot_fsm[4]_i_5__0_n_0 ;
  wire \FSM_onehot_fsm[4]_i_6__0_n_0 ;
  wire \FSM_onehot_fsm[4]_i_7__0_n_0 ;
  wire \FSM_onehot_fsm[4]_i_8__0_n_0 ;
  wire \FSM_onehot_fsm[4]_i_9__0_n_0 ;
  wire \FSM_onehot_fsm_reg_n_0_[1] ;
  wire \FSM_onehot_fsm_reg_n_0_[2] ;
  wire \FSM_onehot_fsm_reg_n_0_[3] ;
  wire \FSM_onehot_fsm_reg_n_0_[4] ;
  wire \FSM_onehot_fsm_rx[6]_i_2__0_n_0 ;
  wire [2:0]\FSM_onehot_fsm_rx_reg[5] ;
  wire [4:0]Q;
  wire RST_CPLLRESET;
  wire USER_RXEQ_ADAPT_DONE;
  wire adapt_done;
  wire adapt_done_cnt_i_1__0_n_0;
  wire adapt_done_cnt_i_2__0_n_0;
  wire adapt_done_cnt_reg_n_0;
  wire adapt_done_reg_0;
  wire [21:0]converge_cnt;
  wire [21:1]converge_cnt0;
  wire [21:0]converge_cnt_0;
  wire \converge_cnt_reg[12]_i_2__0_n_0 ;
  wire \converge_cnt_reg[12]_i_2__0_n_1 ;
  wire \converge_cnt_reg[12]_i_2__0_n_2 ;
  wire \converge_cnt_reg[12]_i_2__0_n_3 ;
  wire \converge_cnt_reg[16]_i_2__0_n_0 ;
  wire \converge_cnt_reg[16]_i_2__0_n_1 ;
  wire \converge_cnt_reg[16]_i_2__0_n_2 ;
  wire \converge_cnt_reg[16]_i_2__0_n_3 ;
  wire \converge_cnt_reg[20]_i_2__0_n_0 ;
  wire \converge_cnt_reg[20]_i_2__0_n_1 ;
  wire \converge_cnt_reg[20]_i_2__0_n_2 ;
  wire \converge_cnt_reg[20]_i_2__0_n_3 ;
  wire \converge_cnt_reg[4]_i_2__0_n_0 ;
  wire \converge_cnt_reg[4]_i_2__0_n_1 ;
  wire \converge_cnt_reg[4]_i_2__0_n_2 ;
  wire \converge_cnt_reg[4]_i_2__0_n_3 ;
  wire \converge_cnt_reg[8]_i_2__0_n_0 ;
  wire \converge_cnt_reg[8]_i_2__0_n_1 ;
  wire \converge_cnt_reg[8]_i_2__0_n_2 ;
  wire \converge_cnt_reg[8]_i_2__0_n_3 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]fs_reg1;
  wire [5:0]\fs_reg1_reg[5]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]fs_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]lf_reg1;
  wire [5:0]\lf_reg1_reg[5]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]lf_reg2;
  wire new_txcoeff_done;
  wire new_txcoeff_done_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire new_txcoeff_req_reg1;
  wire new_txcoeff_req_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire new_txcoeff_req_reg2;
  wire [1:0]out;
  wire pipe_pclk_in;
  wire preset_done;
  wire preset_done_1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]preset_reg1;
  wire [2:0]\preset_reg1_reg[2]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]preset_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire preset_valid_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire preset_valid_reg2;
  wire rxeq_adapt_done_reg;
  wire rxeq_adapt_done_reg_reg;
  wire rxeq_adapt_done_reg_reg_0;
  wire rxeq_adapt_done_reg_reg_1;
  wire rxeq_new_txcoeff_req;
  wire rxeq_preset_valid;
  wire rxeqscan_adapt_done;
  wire rxeqscan_new_txcoeff_done;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]txcoeff_reg1;
  wire [17:0]\txcoeff_reg1_reg[17]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]txcoeff_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txpreset_reg1;
  wire [3:0]\txpreset_reg1_reg[3]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txpreset_reg2;
  wire [3:0]\NLW_converge_cnt_reg[21]_i_2__0_CO_UNCONNECTED ;
  wire [3:1]\NLW_converge_cnt_reg[21]_i_2__0_O_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h0F00AFAF0F11AFBB)) 
    \FSM_onehot_fsm[1]_i_1__4 
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(preset_valid_reg2),
        .I3(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I4(new_txcoeff_req_reg2),
        .I5(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[1]_i_1__4_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \FSM_onehot_fsm[2]_i_1__2 
       (.I0(preset_valid_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[2]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h04FF040404040404)) 
    \FSM_onehot_fsm[3]_i_1__2 
       (.I0(\FSM_onehot_fsm[3]_i_2__0_n_0 ),
        .I1(\FSM_onehot_fsm[4]_i_2__1_n_0 ),
        .I2(\FSM_onehot_fsm[4]_i_3__0_n_0 ),
        .I3(preset_valid_reg2),
        .I4(new_txcoeff_req_reg2),
        .I5(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT4 #(
    .INIT(16'h04FF)) 
    \FSM_onehot_fsm[3]_i_2__0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(\FSM_onehot_fsm_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm[3]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFBFFFFF)) 
    \FSM_onehot_fsm[4]_i_10__0 
       (.I0(\FSM_onehot_fsm[4]_i_13__0_n_0 ),
        .I1(converge_cnt[2]),
        .I2(converge_cnt[20]),
        .I3(converge_cnt[10]),
        .I4(converge_cnt[0]),
        .O(\FSM_onehot_fsm[4]_i_10__0_n_0 ));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \FSM_onehot_fsm[4]_i_11__0 
       (.I0(converge_cnt[2]),
        .I1(converge_cnt[6]),
        .I2(converge_cnt[8]),
        .I3(converge_cnt[3]),
        .O(\FSM_onehot_fsm[4]_i_11__0_n_0 ));
  LUT5 #(
    .INIT(32'hEFFFFFFF)) 
    \FSM_onehot_fsm[4]_i_12__0 
       (.I0(\FSM_onehot_fsm[4]_i_13__0_n_0 ),
        .I1(converge_cnt[14]),
        .I2(converge_cnt[10]),
        .I3(converge_cnt[21]),
        .I4(converge_cnt[19]),
        .O(\FSM_onehot_fsm[4]_i_12__0_n_0 ));
  LUT4 #(
    .INIT(16'hFF7F)) 
    \FSM_onehot_fsm[4]_i_13__0 
       (.I0(converge_cnt[16]),
        .I1(converge_cnt[11]),
        .I2(converge_cnt[9]),
        .I3(converge_cnt[5]),
        .O(\FSM_onehot_fsm[4]_i_13__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFD0FFD0FFD0)) 
    \FSM_onehot_fsm[4]_i_1__4 
       (.I0(\FSM_onehot_fsm[4]_i_2__1_n_0 ),
        .I1(\FSM_onehot_fsm[4]_i_3__0_n_0 ),
        .I2(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I3(\FSM_onehot_fsm[4]_i_4__0_n_0 ),
        .I4(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I5(new_txcoeff_req_reg2),
        .O(\FSM_onehot_fsm[4]_i_1__4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFBF)) 
    \FSM_onehot_fsm[4]_i_2__1 
       (.I0(\FSM_onehot_fsm[4]_i_5__0_n_0 ),
        .I1(converge_cnt[17]),
        .I2(converge_cnt[18]),
        .I3(converge_cnt[21]),
        .I4(converge_cnt[8]),
        .I5(\FSM_onehot_fsm[4]_i_6__0_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000001000000)) 
    \FSM_onehot_fsm[4]_i_3__0 
       (.I0(\FSM_onehot_fsm[4]_i_7__0_n_0 ),
        .I1(converge_cnt[7]),
        .I2(converge_cnt[1]),
        .I3(converge_cnt[15]),
        .I4(converge_cnt[13]),
        .I5(\FSM_onehot_fsm[4]_i_8__0_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT4 #(
    .INIT(16'h0400)) 
    \FSM_onehot_fsm[4]_i_4__0 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(\FSM_onehot_fsm_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm[4]_i_4__0_n_0 ));
  LUT4 #(
    .INIT(16'hFFF2)) 
    \FSM_onehot_fsm[4]_i_5__0 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(converge_cnt[7]),
        .I3(converge_cnt[1]),
        .O(\FSM_onehot_fsm[4]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFB)) 
    \FSM_onehot_fsm[4]_i_6__0 
       (.I0(\FSM_onehot_fsm[4]_i_9__0_n_0 ),
        .I1(converge_cnt[19]),
        .I2(converge_cnt[6]),
        .I3(converge_cnt[3]),
        .I4(converge_cnt[4]),
        .I5(\FSM_onehot_fsm[4]_i_10__0_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_6__0_n_0 ));
  LUT4 #(
    .INIT(16'hDFFF)) 
    \FSM_onehot_fsm[4]_i_7__0 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(converge_cnt[17]),
        .I3(converge_cnt[18]),
        .O(\FSM_onehot_fsm[4]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \FSM_onehot_fsm[4]_i_8__0 
       (.I0(\FSM_onehot_fsm[4]_i_11__0_n_0 ),
        .I1(converge_cnt[12]),
        .I2(converge_cnt[20]),
        .I3(converge_cnt[0]),
        .I4(converge_cnt[4]),
        .I5(\FSM_onehot_fsm[4]_i_12__0_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_8__0_n_0 ));
  LUT4 #(
    .INIT(16'hFFDF)) 
    \FSM_onehot_fsm[4]_i_9__0 
       (.I0(converge_cnt[15]),
        .I1(converge_cnt[13]),
        .I2(converge_cnt[14]),
        .I3(converge_cnt[12]),
        .O(\FSM_onehot_fsm[4]_i_9__0_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[1]_i_1__4_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[1] ),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[2]_i_1__2_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[3]_i_1__2_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[4]_i_1__4_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h40FF4040)) 
    \FSM_onehot_fsm_rx[2]_i_1__0 
       (.I0(out[1]),
        .I1(Q[0]),
        .I2(out[0]),
        .I3(preset_done),
        .I4(Q[1]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hF444444444444444)) 
    \FSM_onehot_fsm_rx[5]_i_1__0 
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(Q[3]),
        .I2(\FSM_onehot_fsm_rx_reg[5] [2]),
        .I3(\FSM_onehot_fsm_rx_reg[5] [0]),
        .I4(\FSM_onehot_fsm_rx_reg[5] [1]),
        .I5(Q[2]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE0E0E0)) 
    \FSM_onehot_fsm_rx[6]_i_1__0 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(Q[4]),
        .I3(preset_done),
        .I4(Q[1]),
        .I5(\FSM_onehot_fsm_rx[6]_i_2__0_n_0 ),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_fsm_rx[6]_i_2__0 
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(Q[3]),
        .O(\FSM_onehot_fsm_rx[6]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h000A0A0AF0F0F8F0)) 
    adapt_done_cnt_i_1__0
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .I5(adapt_done_cnt_i_2__0_n_0),
        .O(adapt_done_cnt_i_1__0_n_0));
  LUT5 #(
    .INIT(32'h00FF0101)) 
    adapt_done_cnt_i_2__0
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I3(new_txcoeff_req_reg2),
        .I4(\FSM_onehot_fsm_reg_n_0_[4] ),
        .O(adapt_done_cnt_i_2__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    adapt_done_cnt_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(adapt_done_cnt_i_1__0_n_0),
        .Q(adapt_done_cnt_reg_n_0),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hF8000000)) 
    adapt_done_i_1__0
       (.I0(out[1]),
        .I1(out[0]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(new_txcoeff_req_reg2),
        .I4(\FSM_onehot_fsm_reg_n_0_[4] ),
        .O(adapt_done));
  FDRE #(
    .INIT(1'b0)) 
    adapt_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(adapt_done),
        .Q(rxeqscan_adapt_done),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h44444044)) 
    \converge_cnt[0]_i_1__1 
       (.I0(converge_cnt[0]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[0]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[10]_i_1__0 
       (.I0(converge_cnt0[10]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[10]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[11]_i_1__0 
       (.I0(converge_cnt0[11]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[11]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[12]_i_1__0 
       (.I0(converge_cnt0[12]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[12]));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[13]_i_1__0 
       (.I0(converge_cnt0[13]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[13]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[14]_i_1__0 
       (.I0(converge_cnt0[14]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[14]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[15]_i_1__0 
       (.I0(converge_cnt0[15]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[15]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[16]_i_1__0 
       (.I0(converge_cnt0[16]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[16]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[17]_i_1__0 
       (.I0(converge_cnt0[17]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[17]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[18]_i_1__0 
       (.I0(converge_cnt0[18]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[18]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[19]_i_1__0 
       (.I0(converge_cnt0[19]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[19]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[1]_i_1__0 
       (.I0(converge_cnt0[1]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[1]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[20]_i_1__0 
       (.I0(converge_cnt0[20]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[20]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[21]_i_1__0 
       (.I0(converge_cnt0[21]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[21]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[2]_i_1__0 
       (.I0(converge_cnt0[2]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[2]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[3]_i_1__0 
       (.I0(converge_cnt0[3]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[3]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[4]_i_1__0 
       (.I0(converge_cnt0[4]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[4]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[5]_i_1__0 
       (.I0(converge_cnt0[5]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[5]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[6]_i_1__0 
       (.I0(converge_cnt0[6]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[6]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[7]_i_1__0 
       (.I0(converge_cnt0[7]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[7]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[8]_i_1__0 
       (.I0(converge_cnt0[8]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[8]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[9]_i_1__0 
       (.I0(converge_cnt0[9]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[9]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[0]),
        .Q(converge_cnt[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[10]),
        .Q(converge_cnt[10]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[11]),
        .Q(converge_cnt[11]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[12]),
        .Q(converge_cnt[12]),
        .R(RST_CPLLRESET));
  CARRY4 \converge_cnt_reg[12]_i_2__0 
       (.CI(\converge_cnt_reg[8]_i_2__0_n_0 ),
        .CO({\converge_cnt_reg[12]_i_2__0_n_0 ,\converge_cnt_reg[12]_i_2__0_n_1 ,\converge_cnt_reg[12]_i_2__0_n_2 ,\converge_cnt_reg[12]_i_2__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[12:9]),
        .S(converge_cnt[12:9]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[13]),
        .Q(converge_cnt[13]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[14]),
        .Q(converge_cnt[14]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[15]),
        .Q(converge_cnt[15]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[16]),
        .Q(converge_cnt[16]),
        .R(RST_CPLLRESET));
  CARRY4 \converge_cnt_reg[16]_i_2__0 
       (.CI(\converge_cnt_reg[12]_i_2__0_n_0 ),
        .CO({\converge_cnt_reg[16]_i_2__0_n_0 ,\converge_cnt_reg[16]_i_2__0_n_1 ,\converge_cnt_reg[16]_i_2__0_n_2 ,\converge_cnt_reg[16]_i_2__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[16:13]),
        .S(converge_cnt[16:13]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[17]),
        .Q(converge_cnt[17]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[18] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[18]),
        .Q(converge_cnt[18]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[19] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[19]),
        .Q(converge_cnt[19]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[1]),
        .Q(converge_cnt[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[20] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[20]),
        .Q(converge_cnt[20]),
        .R(RST_CPLLRESET));
  CARRY4 \converge_cnt_reg[20]_i_2__0 
       (.CI(\converge_cnt_reg[16]_i_2__0_n_0 ),
        .CO({\converge_cnt_reg[20]_i_2__0_n_0 ,\converge_cnt_reg[20]_i_2__0_n_1 ,\converge_cnt_reg[20]_i_2__0_n_2 ,\converge_cnt_reg[20]_i_2__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[20:17]),
        .S(converge_cnt[20:17]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[21] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[21]),
        .Q(converge_cnt[21]),
        .R(RST_CPLLRESET));
  CARRY4 \converge_cnt_reg[21]_i_2__0 
       (.CI(\converge_cnt_reg[20]_i_2__0_n_0 ),
        .CO(\NLW_converge_cnt_reg[21]_i_2__0_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_converge_cnt_reg[21]_i_2__0_O_UNCONNECTED [3:1],converge_cnt0[21]}),
        .S({1'b0,1'b0,1'b0,converge_cnt[21]}));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[2]),
        .Q(converge_cnt[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[3]),
        .Q(converge_cnt[3]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[4]),
        .Q(converge_cnt[4]),
        .R(RST_CPLLRESET));
  CARRY4 \converge_cnt_reg[4]_i_2__0 
       (.CI(1'b0),
        .CO({\converge_cnt_reg[4]_i_2__0_n_0 ,\converge_cnt_reg[4]_i_2__0_n_1 ,\converge_cnt_reg[4]_i_2__0_n_2 ,\converge_cnt_reg[4]_i_2__0_n_3 }),
        .CYINIT(converge_cnt[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[4:1]),
        .S(converge_cnt[4:1]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[5]),
        .Q(converge_cnt[5]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[6]),
        .Q(converge_cnt[6]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[7]),
        .Q(converge_cnt[7]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[8]),
        .Q(converge_cnt[8]),
        .R(RST_CPLLRESET));
  CARRY4 \converge_cnt_reg[8]_i_2__0 
       (.CI(\converge_cnt_reg[4]_i_2__0_n_0 ),
        .CO({\converge_cnt_reg[8]_i_2__0_n_0 ,\converge_cnt_reg[8]_i_2__0_n_1 ,\converge_cnt_reg[8]_i_2__0_n_2 ,\converge_cnt_reg[8]_i_2__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[8:5]),
        .S(converge_cnt[8:5]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[9]),
        .Q(converge_cnt[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [0]),
        .Q(fs_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [1]),
        .Q(fs_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [2]),
        .Q(fs_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [3]),
        .Q(fs_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [4]),
        .Q(fs_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [5]),
        .Q(fs_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[0]),
        .Q(fs_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[1]),
        .Q(fs_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[2]),
        .Q(fs_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[3]),
        .Q(fs_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[4]),
        .Q(fs_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[5]),
        .Q(fs_reg2[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [0]),
        .Q(lf_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [1]),
        .Q(lf_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [2]),
        .Q(lf_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [3]),
        .Q(lf_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [4]),
        .Q(lf_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [5]),
        .Q(lf_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[0]),
        .Q(lf_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[1]),
        .Q(lf_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[2]),
        .Q(lf_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[3]),
        .Q(lf_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[4]),
        .Q(lf_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[5]),
        .Q(lf_reg2[5]),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    new_txcoeff_done_i_1__0
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(new_txcoeff_req_reg2),
        .O(new_txcoeff_done));
  FDRE #(
    .INIT(1'b0)) 
    new_txcoeff_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(new_txcoeff_done),
        .Q(rxeqscan_new_txcoeff_done),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE new_txcoeff_req_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(new_txcoeff_req_reg1_reg_0),
        .Q(new_txcoeff_req_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE new_txcoeff_req_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(new_txcoeff_req_reg1),
        .Q(new_txcoeff_req_reg2),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hEA)) 
    preset_done_i_1__0
       (.I0(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I2(preset_valid_reg2),
        .O(preset_done_1));
  FDRE #(
    .INIT(1'b0)) 
    preset_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_done_1),
        .Q(preset_done),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\preset_reg1_reg[2]_0 [0]),
        .Q(preset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\preset_reg1_reg[2]_0 [1]),
        .Q(preset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\preset_reg1_reg[2]_0 [2]),
        .Q(preset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_reg1[0]),
        .Q(preset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_reg1[1]),
        .Q(preset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_reg1[2]),
        .Q(preset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE preset_valid_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_valid),
        .Q(preset_valid_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE preset_valid_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_valid_reg1),
        .Q(preset_valid_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hA800FFFFA8000000)) 
    rxeq_adapt_done_i_1__0
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(rxeq_adapt_done_reg_reg_1),
        .I2(rxeqscan_adapt_done),
        .I3(Q[3]),
        .I4(rxeq_adapt_done_reg),
        .I5(USER_RXEQ_ADAPT_DONE),
        .O(new_txcoeff_done_reg_0));
  LUT6 #(
    .INIT(64'hFF00FF33AA00A800)) 
    rxeq_adapt_done_reg_i_1__0
       (.I0(rxeqscan_adapt_done),
        .I1(rxeq_adapt_done_reg_reg),
        .I2(rxeqscan_new_txcoeff_done),
        .I3(Q[3]),
        .I4(rxeq_adapt_done_reg_reg_0),
        .I5(rxeq_adapt_done_reg_reg_1),
        .O(adapt_done_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h2)) 
    rxeq_new_txcoeff_req_i_1__0
       (.I0(Q[3]),
        .I1(rxeqscan_new_txcoeff_done),
        .O(rxeq_new_txcoeff_req));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [0]),
        .Q(txcoeff_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [10]),
        .Q(txcoeff_reg1[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [11]),
        .Q(txcoeff_reg1[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [12]),
        .Q(txcoeff_reg1[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [13]),
        .Q(txcoeff_reg1[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [14]),
        .Q(txcoeff_reg1[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [15]),
        .Q(txcoeff_reg1[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [16]),
        .Q(txcoeff_reg1[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [17]),
        .Q(txcoeff_reg1[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [1]),
        .Q(txcoeff_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [2]),
        .Q(txcoeff_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [3]),
        .Q(txcoeff_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [4]),
        .Q(txcoeff_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [5]),
        .Q(txcoeff_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [6]),
        .Q(txcoeff_reg1[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [7]),
        .Q(txcoeff_reg1[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [8]),
        .Q(txcoeff_reg1[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [9]),
        .Q(txcoeff_reg1[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[0]),
        .Q(txcoeff_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[10]),
        .Q(txcoeff_reg2[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[11]),
        .Q(txcoeff_reg2[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[12]),
        .Q(txcoeff_reg2[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[13]),
        .Q(txcoeff_reg2[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[14]),
        .Q(txcoeff_reg2[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[15]),
        .Q(txcoeff_reg2[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[16]),
        .Q(txcoeff_reg2[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[17]),
        .Q(txcoeff_reg2[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[1]),
        .Q(txcoeff_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[2]),
        .Q(txcoeff_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[3]),
        .Q(txcoeff_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[4]),
        .Q(txcoeff_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[5]),
        .Q(txcoeff_reg2[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[6]),
        .Q(txcoeff_reg2[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[7]),
        .Q(txcoeff_reg2[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[8]),
        .Q(txcoeff_reg2[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[9]),
        .Q(txcoeff_reg2[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [0]),
        .Q(txpreset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [1]),
        .Q(txpreset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [2]),
        .Q(txpreset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [3]),
        .Q(txpreset_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[0]),
        .Q(txpreset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[1]),
        .Q(txpreset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[2]),
        .Q(txpreset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[3]),
        .Q(txpreset_reg2[3]),
        .R(RST_CPLLRESET));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_rxeq_scan" *) 
module pcie_7x_0_pcie_7x_0_rxeq_scan_43
   (D,
    rxeq_new_txcoeff_req,
    adapt_done_reg_0,
    new_txcoeff_done_reg_0,
    RST_CPLLRESET,
    pipe_pclk_in,
    new_txcoeff_req_reg1_reg_0,
    rxeq_preset_valid,
    out,
    Q,
    \FSM_onehot_fsm_rx_reg[5] ,
    rxeq_adapt_done_reg_reg,
    rxeq_adapt_done_reg_reg_0,
    rxeq_adapt_done_reg_reg_1,
    rxeq_adapt_done_reg,
    USER_RXEQ_ADAPT_DONE,
    \preset_reg1_reg[2]_0 ,
    \txpreset_reg1_reg[3]_0 ,
    \txcoeff_reg1_reg[17]_0 ,
    \fs_reg1_reg[5]_0 ,
    \lf_reg1_reg[5]_0 );
  output [2:0]D;
  output rxeq_new_txcoeff_req;
  output adapt_done_reg_0;
  output new_txcoeff_done_reg_0;
  input RST_CPLLRESET;
  input pipe_pclk_in;
  input new_txcoeff_req_reg1_reg_0;
  input rxeq_preset_valid;
  input [1:0]out;
  input [4:0]Q;
  input [2:0]\FSM_onehot_fsm_rx_reg[5] ;
  input rxeq_adapt_done_reg_reg;
  input rxeq_adapt_done_reg_reg_0;
  input rxeq_adapt_done_reg_reg_1;
  input rxeq_adapt_done_reg;
  input USER_RXEQ_ADAPT_DONE;
  input [2:0]\preset_reg1_reg[2]_0 ;
  input [3:0]\txpreset_reg1_reg[3]_0 ;
  input [17:0]\txcoeff_reg1_reg[17]_0 ;
  input [5:0]\fs_reg1_reg[5]_0 ;
  input [5:0]\lf_reg1_reg[5]_0 ;

  wire [2:0]D;
  wire \FSM_onehot_fsm[1]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm[2]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm[3]_i_1__1_n_0 ;
  wire \FSM_onehot_fsm[3]_i_2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_10_n_0 ;
  wire \FSM_onehot_fsm[4]_i_11_n_0 ;
  wire \FSM_onehot_fsm[4]_i_12_n_0 ;
  wire \FSM_onehot_fsm[4]_i_13_n_0 ;
  wire \FSM_onehot_fsm[4]_i_1__2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_2__0_n_0 ;
  wire \FSM_onehot_fsm[4]_i_3_n_0 ;
  wire \FSM_onehot_fsm[4]_i_4_n_0 ;
  wire \FSM_onehot_fsm[4]_i_5_n_0 ;
  wire \FSM_onehot_fsm[4]_i_6_n_0 ;
  wire \FSM_onehot_fsm[4]_i_7_n_0 ;
  wire \FSM_onehot_fsm[4]_i_8_n_0 ;
  wire \FSM_onehot_fsm[4]_i_9_n_0 ;
  wire \FSM_onehot_fsm_reg_n_0_[1] ;
  wire \FSM_onehot_fsm_reg_n_0_[2] ;
  wire \FSM_onehot_fsm_reg_n_0_[3] ;
  wire \FSM_onehot_fsm_reg_n_0_[4] ;
  wire \FSM_onehot_fsm_rx[6]_i_2_n_0 ;
  wire [2:0]\FSM_onehot_fsm_rx_reg[5] ;
  wire [4:0]Q;
  wire RST_CPLLRESET;
  wire USER_RXEQ_ADAPT_DONE;
  wire adapt_done;
  wire adapt_done_cnt_i_1_n_0;
  wire adapt_done_cnt_i_2_n_0;
  wire adapt_done_cnt_reg_n_0;
  wire adapt_done_reg_0;
  wire [21:0]converge_cnt;
  wire [21:1]converge_cnt0;
  wire [21:0]converge_cnt_0;
  wire \converge_cnt_reg[12]_i_2_n_0 ;
  wire \converge_cnt_reg[12]_i_2_n_1 ;
  wire \converge_cnt_reg[12]_i_2_n_2 ;
  wire \converge_cnt_reg[12]_i_2_n_3 ;
  wire \converge_cnt_reg[16]_i_2_n_0 ;
  wire \converge_cnt_reg[16]_i_2_n_1 ;
  wire \converge_cnt_reg[16]_i_2_n_2 ;
  wire \converge_cnt_reg[16]_i_2_n_3 ;
  wire \converge_cnt_reg[20]_i_2_n_0 ;
  wire \converge_cnt_reg[20]_i_2_n_1 ;
  wire \converge_cnt_reg[20]_i_2_n_2 ;
  wire \converge_cnt_reg[20]_i_2_n_3 ;
  wire \converge_cnt_reg[4]_i_2_n_0 ;
  wire \converge_cnt_reg[4]_i_2_n_1 ;
  wire \converge_cnt_reg[4]_i_2_n_2 ;
  wire \converge_cnt_reg[4]_i_2_n_3 ;
  wire \converge_cnt_reg[8]_i_2_n_0 ;
  wire \converge_cnt_reg[8]_i_2_n_1 ;
  wire \converge_cnt_reg[8]_i_2_n_2 ;
  wire \converge_cnt_reg[8]_i_2_n_3 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]fs_reg1;
  wire [5:0]\fs_reg1_reg[5]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]fs_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]lf_reg1;
  wire [5:0]\lf_reg1_reg[5]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [5:0]lf_reg2;
  wire new_txcoeff_done;
  wire new_txcoeff_done_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire new_txcoeff_req_reg1;
  wire new_txcoeff_req_reg1_reg_0;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire new_txcoeff_req_reg2;
  wire [1:0]out;
  wire pipe_pclk_in;
  wire preset_done;
  wire preset_done_1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]preset_reg1;
  wire [2:0]\preset_reg1_reg[2]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [2:0]preset_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire preset_valid_reg1;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire preset_valid_reg2;
  wire rxeq_adapt_done_reg;
  wire rxeq_adapt_done_reg_reg;
  wire rxeq_adapt_done_reg_reg_0;
  wire rxeq_adapt_done_reg_reg_1;
  wire rxeq_new_txcoeff_req;
  wire rxeq_preset_valid;
  wire rxeqscan_adapt_done;
  wire rxeqscan_new_txcoeff_done;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]txcoeff_reg1;
  wire [17:0]\txcoeff_reg1_reg[17]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [17:0]txcoeff_reg2;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txpreset_reg1;
  wire [3:0]\txpreset_reg1_reg[3]_0 ;
  (* SHIFT_EXTRACT = "NO" *) (* async_reg = "true" *) wire [3:0]txpreset_reg2;
  wire [3:0]\NLW_converge_cnt_reg[21]_i_2_CO_UNCONNECTED ;
  wire [3:1]\NLW_converge_cnt_reg[21]_i_2_O_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h0F00AFAF0F11AFBB)) 
    \FSM_onehot_fsm[1]_i_1__2 
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(preset_valid_reg2),
        .I3(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I4(new_txcoeff_req_reg2),
        .I5(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[1]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \FSM_onehot_fsm[2]_i_1__1 
       (.I0(preset_valid_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[2]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h04FF040404040404)) 
    \FSM_onehot_fsm[3]_i_1__1 
       (.I0(\FSM_onehot_fsm[3]_i_2_n_0 ),
        .I1(\FSM_onehot_fsm[4]_i_2__0_n_0 ),
        .I2(\FSM_onehot_fsm[4]_i_3_n_0 ),
        .I3(preset_valid_reg2),
        .I4(new_txcoeff_req_reg2),
        .I5(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT4 #(
    .INIT(16'h04FF)) 
    \FSM_onehot_fsm[3]_i_2 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(\FSM_onehot_fsm_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFBFFFFF)) 
    \FSM_onehot_fsm[4]_i_10 
       (.I0(\FSM_onehot_fsm[4]_i_13_n_0 ),
        .I1(converge_cnt[2]),
        .I2(converge_cnt[20]),
        .I3(converge_cnt[10]),
        .I4(converge_cnt[0]),
        .O(\FSM_onehot_fsm[4]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \FSM_onehot_fsm[4]_i_11 
       (.I0(converge_cnt[2]),
        .I1(converge_cnt[6]),
        .I2(converge_cnt[8]),
        .I3(converge_cnt[3]),
        .O(\FSM_onehot_fsm[4]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hEFFFFFFF)) 
    \FSM_onehot_fsm[4]_i_12 
       (.I0(\FSM_onehot_fsm[4]_i_13_n_0 ),
        .I1(converge_cnt[14]),
        .I2(converge_cnt[10]),
        .I3(converge_cnt[21]),
        .I4(converge_cnt[19]),
        .O(\FSM_onehot_fsm[4]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hFF7F)) 
    \FSM_onehot_fsm[4]_i_13 
       (.I0(converge_cnt[16]),
        .I1(converge_cnt[11]),
        .I2(converge_cnt[9]),
        .I3(converge_cnt[5]),
        .O(\FSM_onehot_fsm[4]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFD0FFD0FFD0)) 
    \FSM_onehot_fsm[4]_i_1__2 
       (.I0(\FSM_onehot_fsm[4]_i_2__0_n_0 ),
        .I1(\FSM_onehot_fsm[4]_i_3_n_0 ),
        .I2(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I3(\FSM_onehot_fsm[4]_i_4_n_0 ),
        .I4(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I5(new_txcoeff_req_reg2),
        .O(\FSM_onehot_fsm[4]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFBF)) 
    \FSM_onehot_fsm[4]_i_2__0 
       (.I0(\FSM_onehot_fsm[4]_i_5_n_0 ),
        .I1(converge_cnt[17]),
        .I2(converge_cnt[18]),
        .I3(converge_cnt[21]),
        .I4(converge_cnt[8]),
        .I5(\FSM_onehot_fsm[4]_i_6_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000001000000)) 
    \FSM_onehot_fsm[4]_i_3 
       (.I0(\FSM_onehot_fsm[4]_i_7_n_0 ),
        .I1(converge_cnt[7]),
        .I2(converge_cnt[1]),
        .I3(converge_cnt[15]),
        .I4(converge_cnt[13]),
        .I5(\FSM_onehot_fsm[4]_i_8_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT4 #(
    .INIT(16'h0400)) 
    \FSM_onehot_fsm[4]_i_4 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(\FSM_onehot_fsm_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm[4]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFFF2)) 
    \FSM_onehot_fsm[4]_i_5 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(converge_cnt[7]),
        .I3(converge_cnt[1]),
        .O(\FSM_onehot_fsm[4]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFB)) 
    \FSM_onehot_fsm[4]_i_6 
       (.I0(\FSM_onehot_fsm[4]_i_9_n_0 ),
        .I1(converge_cnt[19]),
        .I2(converge_cnt[6]),
        .I3(converge_cnt[3]),
        .I4(converge_cnt[4]),
        .I5(\FSM_onehot_fsm[4]_i_10_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hDFFF)) 
    \FSM_onehot_fsm[4]_i_7 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(converge_cnt[17]),
        .I3(converge_cnt[18]),
        .O(\FSM_onehot_fsm[4]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \FSM_onehot_fsm[4]_i_8 
       (.I0(\FSM_onehot_fsm[4]_i_11_n_0 ),
        .I1(converge_cnt[12]),
        .I2(converge_cnt[20]),
        .I3(converge_cnt[0]),
        .I4(converge_cnt[4]),
        .I5(\FSM_onehot_fsm[4]_i_12_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hFFDF)) 
    \FSM_onehot_fsm[4]_i_9 
       (.I0(converge_cnt[15]),
        .I1(converge_cnt[13]),
        .I2(converge_cnt[14]),
        .I3(converge_cnt[12]),
        .O(\FSM_onehot_fsm[4]_i_9_n_0 ));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[1]_i_1__2_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[1] ),
        .S(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[2]_i_1__1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[2] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[3]_i_1__1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[3] ),
        .R(RST_CPLLRESET));
  (* FSM_ENCODED_STATES = "FSM_PRESET:00100,FSM_CONVERGE:01000,FSM_NEW_TXCOEFF_REQ:10000,FSM_IDLE:00010,iSTATE:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[4]_i_1__2_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[4] ),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h40FF4040)) 
    \FSM_onehot_fsm_rx[2]_i_1 
       (.I0(out[1]),
        .I1(Q[0]),
        .I2(out[0]),
        .I3(preset_done),
        .I4(Q[1]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hF444444444444444)) 
    \FSM_onehot_fsm_rx[5]_i_1 
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(Q[3]),
        .I2(\FSM_onehot_fsm_rx_reg[5] [2]),
        .I3(\FSM_onehot_fsm_rx_reg[5] [0]),
        .I4(\FSM_onehot_fsm_rx_reg[5] [1]),
        .I5(Q[2]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE0E0E0)) 
    \FSM_onehot_fsm_rx[6]_i_1 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(Q[4]),
        .I3(preset_done),
        .I4(Q[1]),
        .I5(\FSM_onehot_fsm_rx[6]_i_2_n_0 ),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_fsm_rx[6]_i_2 
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(Q[3]),
        .O(\FSM_onehot_fsm_rx[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000A0A0AF0F0F8F0)) 
    adapt_done_cnt_i_1
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .I5(adapt_done_cnt_i_2_n_0),
        .O(adapt_done_cnt_i_1_n_0));
  LUT5 #(
    .INIT(32'h00FF0101)) 
    adapt_done_cnt_i_2
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I3(new_txcoeff_req_reg2),
        .I4(\FSM_onehot_fsm_reg_n_0_[4] ),
        .O(adapt_done_cnt_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    adapt_done_cnt_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(adapt_done_cnt_i_1_n_0),
        .Q(adapt_done_cnt_reg_n_0),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'hF8000000)) 
    adapt_done_i_1
       (.I0(out[1]),
        .I1(out[0]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(new_txcoeff_req_reg2),
        .I4(\FSM_onehot_fsm_reg_n_0_[4] ),
        .O(adapt_done));
  FDRE #(
    .INIT(1'b0)) 
    adapt_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(adapt_done),
        .Q(rxeqscan_adapt_done),
        .R(RST_CPLLRESET));
  LUT5 #(
    .INIT(32'h44444044)) 
    \converge_cnt[0]_i_1 
       (.I0(converge_cnt[0]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[0]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[10]_i_1 
       (.I0(converge_cnt0[10]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[10]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[11]_i_1 
       (.I0(converge_cnt0[11]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[11]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[12]_i_1 
       (.I0(converge_cnt0[12]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[12]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[13]_i_1 
       (.I0(converge_cnt0[13]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[13]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[14]_i_1 
       (.I0(converge_cnt0[14]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[14]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[15]_i_1 
       (.I0(converge_cnt0[15]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[15]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[16]_i_1 
       (.I0(converge_cnt0[16]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[16]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[17]_i_1 
       (.I0(converge_cnt0[17]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[17]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[18]_i_1 
       (.I0(converge_cnt0[18]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[18]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[19]_i_1 
       (.I0(converge_cnt0[19]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[19]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[1]_i_1 
       (.I0(converge_cnt0[1]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[1]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[20]_i_1 
       (.I0(converge_cnt0[20]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[20]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[21]_i_1 
       (.I0(converge_cnt0[21]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[21]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[2]_i_1 
       (.I0(converge_cnt0[2]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[2]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[3]_i_1 
       (.I0(converge_cnt0[3]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[3]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[4]_i_1 
       (.I0(converge_cnt0[4]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[4]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[5]_i_1 
       (.I0(converge_cnt0[5]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[5]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[6]_i_1 
       (.I0(converge_cnt0[6]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[6]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[7]_i_1 
       (.I0(converge_cnt0[7]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[7]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[8]_i_1 
       (.I0(converge_cnt0[8]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[8]));
  LUT5 #(
    .INIT(32'h88888088)) 
    \converge_cnt[9]_i_1 
       (.I0(converge_cnt0[9]),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[1]),
        .I4(out[0]),
        .O(converge_cnt_0[9]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[0]),
        .Q(converge_cnt[0]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[10]),
        .Q(converge_cnt[10]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[11]),
        .Q(converge_cnt[11]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[12]),
        .Q(converge_cnt[12]),
        .R(RST_CPLLRESET));
  CARRY4 \converge_cnt_reg[12]_i_2 
       (.CI(\converge_cnt_reg[8]_i_2_n_0 ),
        .CO({\converge_cnt_reg[12]_i_2_n_0 ,\converge_cnt_reg[12]_i_2_n_1 ,\converge_cnt_reg[12]_i_2_n_2 ,\converge_cnt_reg[12]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[12:9]),
        .S(converge_cnt[12:9]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[13]),
        .Q(converge_cnt[13]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[14]),
        .Q(converge_cnt[14]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[15]),
        .Q(converge_cnt[15]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[16]),
        .Q(converge_cnt[16]),
        .R(RST_CPLLRESET));
  CARRY4 \converge_cnt_reg[16]_i_2 
       (.CI(\converge_cnt_reg[12]_i_2_n_0 ),
        .CO({\converge_cnt_reg[16]_i_2_n_0 ,\converge_cnt_reg[16]_i_2_n_1 ,\converge_cnt_reg[16]_i_2_n_2 ,\converge_cnt_reg[16]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[16:13]),
        .S(converge_cnt[16:13]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[17]),
        .Q(converge_cnt[17]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[18] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[18]),
        .Q(converge_cnt[18]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[19] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[19]),
        .Q(converge_cnt[19]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[1]),
        .Q(converge_cnt[1]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[20] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[20]),
        .Q(converge_cnt[20]),
        .R(RST_CPLLRESET));
  CARRY4 \converge_cnt_reg[20]_i_2 
       (.CI(\converge_cnt_reg[16]_i_2_n_0 ),
        .CO({\converge_cnt_reg[20]_i_2_n_0 ,\converge_cnt_reg[20]_i_2_n_1 ,\converge_cnt_reg[20]_i_2_n_2 ,\converge_cnt_reg[20]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[20:17]),
        .S(converge_cnt[20:17]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[21] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[21]),
        .Q(converge_cnt[21]),
        .R(RST_CPLLRESET));
  CARRY4 \converge_cnt_reg[21]_i_2 
       (.CI(\converge_cnt_reg[20]_i_2_n_0 ),
        .CO(\NLW_converge_cnt_reg[21]_i_2_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_converge_cnt_reg[21]_i_2_O_UNCONNECTED [3:1],converge_cnt0[21]}),
        .S({1'b0,1'b0,1'b0,converge_cnt[21]}));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[2]),
        .Q(converge_cnt[2]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[3]),
        .Q(converge_cnt[3]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[4]),
        .Q(converge_cnt[4]),
        .R(RST_CPLLRESET));
  CARRY4 \converge_cnt_reg[4]_i_2 
       (.CI(1'b0),
        .CO({\converge_cnt_reg[4]_i_2_n_0 ,\converge_cnt_reg[4]_i_2_n_1 ,\converge_cnt_reg[4]_i_2_n_2 ,\converge_cnt_reg[4]_i_2_n_3 }),
        .CYINIT(converge_cnt[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[4:1]),
        .S(converge_cnt[4:1]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[5]),
        .Q(converge_cnt[5]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[6]),
        .Q(converge_cnt[6]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[7]),
        .Q(converge_cnt[7]),
        .R(RST_CPLLRESET));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[8]),
        .Q(converge_cnt[8]),
        .R(RST_CPLLRESET));
  CARRY4 \converge_cnt_reg[8]_i_2 
       (.CI(\converge_cnt_reg[4]_i_2_n_0 ),
        .CO({\converge_cnt_reg[8]_i_2_n_0 ,\converge_cnt_reg[8]_i_2_n_1 ,\converge_cnt_reg[8]_i_2_n_2 ,\converge_cnt_reg[8]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[8:5]),
        .S(converge_cnt[8:5]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(converge_cnt_0[9]),
        .Q(converge_cnt[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [0]),
        .Q(fs_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [1]),
        .Q(fs_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [2]),
        .Q(fs_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [3]),
        .Q(fs_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [4]),
        .Q(fs_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\fs_reg1_reg[5]_0 [5]),
        .Q(fs_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[0]),
        .Q(fs_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[1]),
        .Q(fs_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[2]),
        .Q(fs_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[3]),
        .Q(fs_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[4]),
        .Q(fs_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(fs_reg1[5]),
        .Q(fs_reg2[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [0]),
        .Q(lf_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [1]),
        .Q(lf_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [2]),
        .Q(lf_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [3]),
        .Q(lf_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [4]),
        .Q(lf_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\lf_reg1_reg[5]_0 [5]),
        .Q(lf_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[0]),
        .Q(lf_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[1]),
        .Q(lf_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[2]),
        .Q(lf_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[3]),
        .Q(lf_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[4]),
        .Q(lf_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(lf_reg1[5]),
        .Q(lf_reg2[5]),
        .R(RST_CPLLRESET));
  LUT2 #(
    .INIT(4'h8)) 
    new_txcoeff_done_i_1
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(new_txcoeff_req_reg2),
        .O(new_txcoeff_done));
  FDRE #(
    .INIT(1'b0)) 
    new_txcoeff_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(new_txcoeff_done),
        .Q(rxeqscan_new_txcoeff_done),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE new_txcoeff_req_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(new_txcoeff_req_reg1_reg_0),
        .Q(new_txcoeff_req_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE new_txcoeff_req_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(new_txcoeff_req_reg1),
        .Q(new_txcoeff_req_reg2),
        .R(RST_CPLLRESET));
  LUT3 #(
    .INIT(8'hEA)) 
    preset_done_i_1
       (.I0(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I2(preset_valid_reg2),
        .O(preset_done_1));
  FDRE #(
    .INIT(1'b0)) 
    preset_done_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_done_1),
        .Q(preset_done),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\preset_reg1_reg[2]_0 [0]),
        .Q(preset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\preset_reg1_reg[2]_0 [1]),
        .Q(preset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\preset_reg1_reg[2]_0 [2]),
        .Q(preset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_reg1[0]),
        .Q(preset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_reg1[1]),
        .Q(preset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_reg1[2]),
        .Q(preset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE preset_valid_reg1_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(rxeq_preset_valid),
        .Q(preset_valid_reg1),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE preset_valid_reg2_reg
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(preset_valid_reg1),
        .Q(preset_valid_reg2),
        .R(RST_CPLLRESET));
  LUT6 #(
    .INIT(64'hA800FFFFA8000000)) 
    rxeq_adapt_done_i_1
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(rxeq_adapt_done_reg_reg_1),
        .I2(rxeqscan_adapt_done),
        .I3(Q[3]),
        .I4(rxeq_adapt_done_reg),
        .I5(USER_RXEQ_ADAPT_DONE),
        .O(new_txcoeff_done_reg_0));
  LUT6 #(
    .INIT(64'hFF00FF33AA00A800)) 
    rxeq_adapt_done_reg_i_1
       (.I0(rxeqscan_adapt_done),
        .I1(rxeq_adapt_done_reg_reg),
        .I2(rxeqscan_new_txcoeff_done),
        .I3(Q[3]),
        .I4(rxeq_adapt_done_reg_reg_0),
        .I5(rxeq_adapt_done_reg_reg_1),
        .O(adapt_done_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT2 #(
    .INIT(4'h2)) 
    rxeq_new_txcoeff_req_i_1
       (.I0(Q[3]),
        .I1(rxeqscan_new_txcoeff_done),
        .O(rxeq_new_txcoeff_req));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [0]),
        .Q(txcoeff_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [10]),
        .Q(txcoeff_reg1[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [11]),
        .Q(txcoeff_reg1[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [12]),
        .Q(txcoeff_reg1[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [13]),
        .Q(txcoeff_reg1[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [14]),
        .Q(txcoeff_reg1[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [15]),
        .Q(txcoeff_reg1[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [16]),
        .Q(txcoeff_reg1[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [17]),
        .Q(txcoeff_reg1[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [1]),
        .Q(txcoeff_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [2]),
        .Q(txcoeff_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [3]),
        .Q(txcoeff_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [4]),
        .Q(txcoeff_reg1[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [5]),
        .Q(txcoeff_reg1[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [6]),
        .Q(txcoeff_reg1[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [7]),
        .Q(txcoeff_reg1[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [8]),
        .Q(txcoeff_reg1[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txcoeff_reg1_reg[17]_0 [9]),
        .Q(txcoeff_reg1[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[0]),
        .Q(txcoeff_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[10] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[10]),
        .Q(txcoeff_reg2[10]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[11] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[11]),
        .Q(txcoeff_reg2[11]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[12] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[12]),
        .Q(txcoeff_reg2[12]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[13] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[13]),
        .Q(txcoeff_reg2[13]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[14] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[14]),
        .Q(txcoeff_reg2[14]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[15] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[15]),
        .Q(txcoeff_reg2[15]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[16] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[16]),
        .Q(txcoeff_reg2[16]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[17] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[17]),
        .Q(txcoeff_reg2[17]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[1]),
        .Q(txcoeff_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[2]),
        .Q(txcoeff_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[3]),
        .Q(txcoeff_reg2[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[4] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[4]),
        .Q(txcoeff_reg2[4]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[5] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[5]),
        .Q(txcoeff_reg2[5]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[6] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[6]),
        .Q(txcoeff_reg2[6]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[7] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[7]),
        .Q(txcoeff_reg2[7]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[8] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[8]),
        .Q(txcoeff_reg2[8]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[9] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txcoeff_reg1[9]),
        .Q(txcoeff_reg2[9]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [0]),
        .Q(txpreset_reg1[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [1]),
        .Q(txpreset_reg1[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [2]),
        .Q(txpreset_reg1[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(\txpreset_reg1_reg[3]_0 [3]),
        .Q(txpreset_reg1[3]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[0] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[0]),
        .Q(txpreset_reg2[0]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[1] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[1]),
        .Q(txpreset_reg2[1]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[2] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[2]),
        .Q(txpreset_reg2[2]),
        .R(RST_CPLLRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[3] 
       (.C(pipe_pclk_in),
        .CE(1'b1),
        .D(txpreset_reg1[3]),
        .Q(txpreset_reg2[3]),
        .R(RST_CPLLRESET));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_tandem_cpler" *) 
module pcie_7x_0_pcie_7x_0_tandem_cpler
   (s_axis_tx_tvalid_cpler,
    m_axis_rx_tready_cpler,
    user_app_rdy_gnt_reg,
    user_app_rdy_gnt_reg_rep,
    user_app_rdy_gnt_reg_rep__0,
    user_app_rdy_gnt_reg_rep__1,
    \FSM_sequential_pio_rx_sm_128.state_reg[2] ,
    Q,
    user_reset_out_reg,
    S,
    s_axis_tx_tlast_0,
    m_axis_rx_tready_0,
    data_hold,
    DI,
    m_axis_rx_tready_mux,
    tready_thrtl_reg,
    s_axis_tx_tlast_mux,
    s_axis_tx_tvalid_mux,
    \gen_cpl_128.s_axis_tx_tdata_reg[0] ,
    user_app_rdy_gnt_reg_rep__1_0,
    user_app_rdy_gnt_reg_rep__1_1,
    cfg_trn_pending_n,
    cfg_dstatus,
    user_lnk_up,
    tx_err_drop,
    tx_cfg_req,
    cfg_msg_received,
    cfg_to_turnoff,
    pl_phy_lnk_up,
    pl_received_hot_rst,
    startup_cfgclk,
    startup_cfgmclk,
    startup_preq,
    pcie_drp_rdy,
    pl_transmit_hot_rst,
    cfg_mgmt_wr_en_n,
    cfg_mgmt_rd_en_n,
    cfg_err_malformed_n,
    cfg_err_cor_n,
    cfg_err_ur_n,
    cfg_err_ecrc_n,
    cfg_err_cpl_timeout_n,
    cfg_err_cpl_abort_n,
    cfg_err_cpl_unexpect_n,
    cfg_err_poisoned_n,
    cfg_err_atomic_egress_blocked_n,
    cfg_err_mc_blocked_n,
    cfg_err_internal_uncor_n,
    cfg_err_internal_cor_n,
    cfg_interrupt_n,
    cfg_pm_halt_aspm_l0s_n,
    cfg_pm_halt_aspm_l1_n,
    cfg_pm_force_state_en_n,
    cfg_pm_wake_n,
    cfg_turnoff_ok_mux,
    drp_en,
    drp_we,
    startup_clk_mux,
    startup_gsr_mux,
    startup_gts_mux,
    startup_pack_mux,
    startup_usrcclko_mux,
    startup_usrdoneo_mux,
    tx_buf_av,
    cfg_pcie_link_state,
    cfg_pmcsr_powerstate,
    cfg_device_number,
    cfg_function_number,
    pl_ltssm_state,
    tx_cfg_gnt_mux,
    trn_rnp_ok,
    trn_rnp_req,
    trn_fc_sel,
    pl_directed_link_change,
    pl_upstream_prefer_deemph,
    cfg_ds_device_number,
    cfg_ds_function_number,
    startup_keyclearb_mux,
    startup_usrcclkts_mux,
    startup_usrdonets_mux,
    m_axis_rx_tdata,
    m_axis_rx_tuser,
    cfg_msg_data,
    cfg_bus_number,
    pcie_drp_do,
    \s_axis_tx_tkeep[15] ,
    cfg_ds_bus_number,
    cfg_dsn,
    drp_addr,
    drp_di,
    s_axis_tx_tlast_1,
    s_axis_tx_tlast_2,
    SR,
    pipe_userclk2_in,
    \pio_rx_sm_128.req_compl_reg ,
    E,
    \pio_rx_sm_128.req_ep_reg ,
    \pio_rx_sm_128.req_td_reg ,
    s_axis_tx_tready_mux,
    m_axis_rx_tvalid_mux,
    m_axis_rx_tready,
    pkt_len_counter_dec__0_carry,
    s_axis_tx_tvalid,
    s_axis_tx_tlast,
    \FSM_sequential_pio_rx_sm_128.state_reg[1] ,
    \FSM_sequential_pio_rx_sm_128.state_reg[2]_0 ,
    \FSM_sequential_pio_rx_sm_128.state_reg[2]_1 ,
    \pio_rx_sm_128.req_addr_reg[2] ,
    \m_axis_rx_tuser[21] ,
    reg_axi_in_pkt,
    s_axis_tx_tdata,
    s_axis_tx_tuser,
    cfg_trn_pending,
    out,
    trn_terr_drop,
    trn_tcfg_req,
    cfg_msg_received_0,
    cfg_msg_received_pme_to,
    pl_phy_lnk_up_q,
    pl_received_hot_rst_q,
    startup_cfgclk_mux,
    startup_cfgmclk_mux,
    startup_preq_mux,
    drp_rdy,
    cfg_aer_ecrc_check_en,
    cfg_mgmt_wr_en,
    cfg_mgmt_rd_en,
    cfg_err_malformed,
    cfg_err_cor,
    cfg_err_ur,
    cfg_err_ecrc,
    cfg_err_cpl_timeout,
    cfg_err_cpl_abort,
    cfg_err_cpl_unexpect,
    cfg_err_poisoned,
    cfg_err_atomic_egress_blocked,
    cfg_err_mc_blocked,
    cfg_err_internal_uncor,
    cfg_err_internal_cor,
    cfg_interrupt,
    cfg_pm_halt_aspm_l0s,
    cfg_pm_halt_aspm_l1,
    cfg_pm_force_state_en,
    cfg_pm_wake,
    cfg_turnoff_ok,
    pcie_drp_en,
    pcie_drp_we,
    startup_clk,
    startup_gsr,
    startup_gts,
    startup_pack,
    startup_usrcclko,
    startup_usrdoneo,
    trn_tbuf_av,
    \cfg_pcie_link_state[2] ,
    \cfg_pmcsr_powerstate[1] ,
    \gen_cpl_128.s_axis_tx_tdata_reg[55] ,
    \gen_cpl_128.s_axis_tx_tdata_reg[50] ,
    \pl_ltssm_state[5] ,
    tx_cfg_gnt,
    rx_np_ok,
    rx_np_req,
    fc_sel,
    cfg_aer_ecrc_check_en_0,
    cfg_aer_ecrc_check_en_1,
    cfg_aer_ecrc_check_en_2,
    cfg_aer_ecrc_check_en_3,
    startup_keyclearb,
    startup_usrcclkts,
    startup_usrdonets,
    \m_axis_rx_tdata[127] ,
    \cfg_msg_data[15] ,
    \gen_cpl_128.s_axis_tx_tdata_reg[63] ,
    drp_do,
    s_axis_tx_tkeep,
    cfg_aer_ecrc_check_en_4,
    cfg_aer_ecrc_check_en_5,
    pcie_drp_addr,
    pcie_drp_di,
    \pio_rx_sm_128.req_compl_wd_reg ,
    \ecrc_pause_enabled.reg_tx_ecrc_pkt ,
    axi_in_packet,
    user_app_rdy_gnt_reg_rep__3,
    user_app_rdy_gnt_reg_rep__3_0,
    D,
    \pio_rx_sm_128.tlp_type_reg[7] ,
    \pio_rx_sm_128.req_be_reg[0] ,
    \pio_rx_sm_128.req_be_reg[3] ,
    \pio_rx_sm_128.req_len_reg[9] ,
    \pio_rx_sm_128.req_attr_reg[1] ,
    \pio_rx_sm_128.req_tc_reg[2] ,
    \pio_rx_sm_128.req_addr_reg[6] ,
    \pio_rx_sm_128.req_tag_reg[7] ,
    \pio_rx_sm_128.req_rid_reg[15] ,
    \gen_cpl_128.s_axis_tx_tkeep_reg[11] );
  output s_axis_tx_tvalid_cpler;
  output m_axis_rx_tready_cpler;
  output user_app_rdy_gnt_reg;
  output user_app_rdy_gnt_reg_rep;
  output user_app_rdy_gnt_reg_rep__0;
  output user_app_rdy_gnt_reg_rep__1;
  output \FSM_sequential_pio_rx_sm_128.state_reg[2] ;
  output [2:0]Q;
  output [0:0]user_reset_out_reg;
  output [1:0]S;
  output s_axis_tx_tlast_0;
  output [0:0]m_axis_rx_tready_0;
  output data_hold;
  output [0:0]DI;
  output m_axis_rx_tready_mux;
  output tready_thrtl_reg;
  output s_axis_tx_tlast_mux;
  output s_axis_tx_tvalid_mux;
  output \gen_cpl_128.s_axis_tx_tdata_reg[0] ;
  output [127:0]user_app_rdy_gnt_reg_rep__1_0;
  output [3:0]user_app_rdy_gnt_reg_rep__1_1;
  output cfg_trn_pending_n;
  output [0:0]cfg_dstatus;
  output user_lnk_up;
  output tx_err_drop;
  output tx_cfg_req;
  output cfg_msg_received;
  output cfg_to_turnoff;
  output pl_phy_lnk_up;
  output pl_received_hot_rst;
  output startup_cfgclk;
  output startup_cfgmclk;
  output startup_preq;
  output pcie_drp_rdy;
  output pl_transmit_hot_rst;
  output cfg_mgmt_wr_en_n;
  output cfg_mgmt_rd_en_n;
  output cfg_err_malformed_n;
  output cfg_err_cor_n;
  output cfg_err_ur_n;
  output cfg_err_ecrc_n;
  output cfg_err_cpl_timeout_n;
  output cfg_err_cpl_abort_n;
  output cfg_err_cpl_unexpect_n;
  output cfg_err_poisoned_n;
  output cfg_err_atomic_egress_blocked_n;
  output cfg_err_mc_blocked_n;
  output cfg_err_internal_uncor_n;
  output cfg_err_internal_cor_n;
  output cfg_interrupt_n;
  output cfg_pm_halt_aspm_l0s_n;
  output cfg_pm_halt_aspm_l1_n;
  output cfg_pm_force_state_en_n;
  output cfg_pm_wake_n;
  output cfg_turnoff_ok_mux;
  output drp_en;
  output drp_we;
  output startup_clk_mux;
  output startup_gsr_mux;
  output startup_gts_mux;
  output startup_pack_mux;
  output startup_usrcclko_mux;
  output startup_usrdoneo_mux;
  output [5:0]tx_buf_av;
  output [2:0]cfg_pcie_link_state;
  output [1:0]cfg_pmcsr_powerstate;
  output [4:0]cfg_device_number;
  output [2:0]cfg_function_number;
  output [5:0]pl_ltssm_state;
  output tx_cfg_gnt_mux;
  output trn_rnp_ok;
  output trn_rnp_req;
  output [2:0]trn_fc_sel;
  output [1:0]pl_directed_link_change;
  output pl_upstream_prefer_deemph;
  output [4:0]cfg_ds_device_number;
  output [2:0]cfg_ds_function_number;
  output startup_keyclearb_mux;
  output startup_usrcclkts_mux;
  output startup_usrdonets_mux;
  output [125:0]m_axis_rx_tdata;
  output [12:0]m_axis_rx_tuser;
  output [15:0]cfg_msg_data;
  output [7:0]cfg_bus_number;
  output [15:0]pcie_drp_do;
  output [2:0]\s_axis_tx_tkeep[15] ;
  output [7:0]cfg_ds_bus_number;
  output [63:0]cfg_dsn;
  output [8:0]drp_addr;
  output [15:0]drp_di;
  output s_axis_tx_tlast_1;
  output s_axis_tx_tlast_2;
  input [0:0]SR;
  input pipe_userclk2_in;
  input \pio_rx_sm_128.req_compl_reg ;
  input [0:0]E;
  input \pio_rx_sm_128.req_ep_reg ;
  input \pio_rx_sm_128.req_td_reg ;
  input s_axis_tx_tready_mux;
  input m_axis_rx_tvalid_mux;
  input m_axis_rx_tready;
  input [1:0]pkt_len_counter_dec__0_carry;
  input s_axis_tx_tvalid;
  input s_axis_tx_tlast;
  input \FSM_sequential_pio_rx_sm_128.state_reg[1] ;
  input \FSM_sequential_pio_rx_sm_128.state_reg[2]_0 ;
  input \FSM_sequential_pio_rx_sm_128.state_reg[2]_1 ;
  input \pio_rx_sm_128.req_addr_reg[2] ;
  input [13:0]\m_axis_rx_tuser[21] ;
  input reg_axi_in_pkt;
  input [127:0]s_axis_tx_tdata;
  input [3:0]s_axis_tx_tuser;
  input cfg_trn_pending;
  input out;
  input trn_terr_drop;
  input trn_tcfg_req;
  input cfg_msg_received_0;
  input cfg_msg_received_pme_to;
  input pl_phy_lnk_up_q;
  input pl_received_hot_rst_q;
  input startup_cfgclk_mux;
  input startup_cfgmclk_mux;
  input startup_preq_mux;
  input drp_rdy;
  input cfg_aer_ecrc_check_en;
  input cfg_mgmt_wr_en;
  input cfg_mgmt_rd_en;
  input cfg_err_malformed;
  input cfg_err_cor;
  input cfg_err_ur;
  input cfg_err_ecrc;
  input cfg_err_cpl_timeout;
  input cfg_err_cpl_abort;
  input cfg_err_cpl_unexpect;
  input cfg_err_poisoned;
  input cfg_err_atomic_egress_blocked;
  input cfg_err_mc_blocked;
  input cfg_err_internal_uncor;
  input cfg_err_internal_cor;
  input cfg_interrupt;
  input cfg_pm_halt_aspm_l0s;
  input cfg_pm_halt_aspm_l1;
  input cfg_pm_force_state_en;
  input cfg_pm_wake;
  input cfg_turnoff_ok;
  input pcie_drp_en;
  input pcie_drp_we;
  input startup_clk;
  input startup_gsr;
  input startup_gts;
  input startup_pack;
  input startup_usrcclko;
  input startup_usrdoneo;
  input [5:0]trn_tbuf_av;
  input [2:0]\cfg_pcie_link_state[2] ;
  input [1:0]\cfg_pmcsr_powerstate[1] ;
  input [4:0]\gen_cpl_128.s_axis_tx_tdata_reg[55] ;
  input [2:0]\gen_cpl_128.s_axis_tx_tdata_reg[50] ;
  input [5:0]\pl_ltssm_state[5] ;
  input tx_cfg_gnt;
  input rx_np_ok;
  input rx_np_req;
  input [2:0]fc_sel;
  input [1:0]cfg_aer_ecrc_check_en_0;
  input cfg_aer_ecrc_check_en_1;
  input [4:0]cfg_aer_ecrc_check_en_2;
  input [2:0]cfg_aer_ecrc_check_en_3;
  input startup_keyclearb;
  input startup_usrcclkts;
  input startup_usrdonets;
  input [125:0]\m_axis_rx_tdata[127] ;
  input [15:0]\cfg_msg_data[15] ;
  input [7:0]\gen_cpl_128.s_axis_tx_tdata_reg[63] ;
  input [15:0]drp_do;
  input [2:0]s_axis_tx_tkeep;
  input [7:0]cfg_aer_ecrc_check_en_4;
  input [63:0]cfg_aer_ecrc_check_en_5;
  input [8:0]pcie_drp_addr;
  input [15:0]pcie_drp_di;
  input \pio_rx_sm_128.req_compl_wd_reg ;
  input \ecrc_pause_enabled.reg_tx_ecrc_pkt ;
  input axi_in_packet;
  input user_app_rdy_gnt_reg_rep__3;
  input user_app_rdy_gnt_reg_rep__3_0;
  input [0:0]D;
  input [7:0]\pio_rx_sm_128.tlp_type_reg[7] ;
  input [0:0]\pio_rx_sm_128.req_be_reg[0] ;
  input [3:0]\pio_rx_sm_128.req_be_reg[3] ;
  input [9:0]\pio_rx_sm_128.req_len_reg[9] ;
  input [1:0]\pio_rx_sm_128.req_attr_reg[1] ;
  input [2:0]\pio_rx_sm_128.req_tc_reg[2] ;
  input [4:0]\pio_rx_sm_128.req_addr_reg[6] ;
  input [7:0]\pio_rx_sm_128.req_tag_reg[7] ;
  input [15:0]\pio_rx_sm_128.req_rid_reg[15] ;
  input [0:0]\gen_cpl_128.s_axis_tx_tkeep_reg[11] ;

  wire [0:0]D;
  wire [0:0]DI;
  wire [0:0]E;
  wire \FSM_sequential_pio_rx_sm_128.state_reg[1] ;
  wire \FSM_sequential_pio_rx_sm_128.state_reg[2] ;
  wire \FSM_sequential_pio_rx_sm_128.state_reg[2]_0 ;
  wire \FSM_sequential_pio_rx_sm_128.state_reg[2]_1 ;
  wire [2:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire axi_in_packet;
  wire cfg_aer_ecrc_check_en;
  wire [1:0]cfg_aer_ecrc_check_en_0;
  wire cfg_aer_ecrc_check_en_1;
  wire [4:0]cfg_aer_ecrc_check_en_2;
  wire [2:0]cfg_aer_ecrc_check_en_3;
  wire [7:0]cfg_aer_ecrc_check_en_4;
  wire [63:0]cfg_aer_ecrc_check_en_5;
  wire [7:0]cfg_bus_number;
  wire [4:0]cfg_device_number;
  wire [7:0]cfg_ds_bus_number;
  wire [4:0]cfg_ds_device_number;
  wire [2:0]cfg_ds_function_number;
  wire [63:0]cfg_dsn;
  wire [0:0]cfg_dstatus;
  wire cfg_err_atomic_egress_blocked;
  wire cfg_err_atomic_egress_blocked_n;
  wire cfg_err_cor;
  wire cfg_err_cor_n;
  wire cfg_err_cpl_abort;
  wire cfg_err_cpl_abort_n;
  wire cfg_err_cpl_timeout;
  wire cfg_err_cpl_timeout_n;
  wire cfg_err_cpl_unexpect;
  wire cfg_err_cpl_unexpect_n;
  wire cfg_err_ecrc;
  wire cfg_err_ecrc_n;
  wire cfg_err_internal_cor;
  wire cfg_err_internal_cor_n;
  wire cfg_err_internal_uncor;
  wire cfg_err_internal_uncor_n;
  wire cfg_err_malformed;
  wire cfg_err_malformed_n;
  wire cfg_err_mc_blocked;
  wire cfg_err_mc_blocked_n;
  wire cfg_err_poisoned;
  wire cfg_err_poisoned_n;
  wire cfg_err_ur;
  wire cfg_err_ur_n;
  wire [2:0]cfg_function_number;
  wire cfg_interrupt;
  wire cfg_interrupt_n;
  wire cfg_mgmt_rd_en;
  wire cfg_mgmt_rd_en_n;
  wire cfg_mgmt_wr_en;
  wire cfg_mgmt_wr_en_n;
  wire [15:0]cfg_msg_data;
  wire [15:0]\cfg_msg_data[15] ;
  wire cfg_msg_received;
  wire cfg_msg_received_0;
  wire cfg_msg_received_pme_to;
  wire [2:0]cfg_pcie_link_state;
  wire [2:0]\cfg_pcie_link_state[2] ;
  wire cfg_pm_force_state_en;
  wire cfg_pm_force_state_en_n;
  wire cfg_pm_halt_aspm_l0s;
  wire cfg_pm_halt_aspm_l0s_n;
  wire cfg_pm_halt_aspm_l1;
  wire cfg_pm_halt_aspm_l1_n;
  wire cfg_pm_wake;
  wire cfg_pm_wake_n;
  wire [1:0]cfg_pmcsr_powerstate;
  wire [1:0]\cfg_pmcsr_powerstate[1] ;
  wire cfg_to_turnoff;
  wire cfg_trn_pending;
  wire cfg_trn_pending_n;
  wire cfg_turnoff_ok;
  wire cfg_turnoff_ok_mux;
  wire [6:2]data0;
  wire data_hold;
  wire [8:0]drp_addr;
  wire [15:0]drp_di;
  wire [15:0]drp_do;
  wire drp_en;
  wire drp_rdy;
  wire drp_we;
  wire \ecrc_pause_enabled.reg_tx_ecrc_pkt ;
  wire [2:0]fc_sel;
  wire \gen_cpl_128.s_axis_tx_tdata_reg[0] ;
  wire [2:0]\gen_cpl_128.s_axis_tx_tdata_reg[50] ;
  wire [4:0]\gen_cpl_128.s_axis_tx_tdata_reg[55] ;
  wire [7:0]\gen_cpl_128.s_axis_tx_tdata_reg[63] ;
  wire [0:0]\gen_cpl_128.s_axis_tx_tkeep_reg[11] ;
  wire [125:0]m_axis_rx_tdata;
  wire [125:0]\m_axis_rx_tdata[127] ;
  wire m_axis_rx_tready;
  wire [0:0]m_axis_rx_tready_0;
  wire m_axis_rx_tready_cpler;
  wire m_axis_rx_tready_mux;
  wire [12:0]m_axis_rx_tuser;
  wire [13:0]\m_axis_rx_tuser[21] ;
  wire m_axis_rx_tvalid_mux;
  wire out;
  wire [8:0]pcie_drp_addr;
  wire [15:0]pcie_drp_di;
  wire [15:0]pcie_drp_do;
  wire pcie_drp_en;
  wire pcie_drp_rdy;
  wire pcie_drp_we;
  wire \pio_rx_sm_128.req_addr_reg[2] ;
  wire [4:0]\pio_rx_sm_128.req_addr_reg[6] ;
  wire [1:0]\pio_rx_sm_128.req_attr_reg[1] ;
  wire [0:0]\pio_rx_sm_128.req_be_reg[0] ;
  wire [3:0]\pio_rx_sm_128.req_be_reg[3] ;
  wire \pio_rx_sm_128.req_compl_reg ;
  wire \pio_rx_sm_128.req_compl_wd_reg ;
  wire \pio_rx_sm_128.req_ep_reg ;
  wire [9:0]\pio_rx_sm_128.req_len_reg[9] ;
  wire [15:0]\pio_rx_sm_128.req_rid_reg[15] ;
  wire [7:0]\pio_rx_sm_128.req_tag_reg[7] ;
  wire [2:0]\pio_rx_sm_128.req_tc_reg[2] ;
  wire \pio_rx_sm_128.req_td_reg ;
  wire [7:0]\pio_rx_sm_128.tlp_type_reg[7] ;
  wire pipe_userclk2_in;
  wire [1:0]pkt_len_counter_dec__0_carry;
  wire [1:0]pl_directed_link_change;
  wire [5:0]pl_ltssm_state;
  wire [5:0]\pl_ltssm_state[5] ;
  wire pl_phy_lnk_up;
  wire pl_phy_lnk_up_q;
  wire pl_received_hot_rst;
  wire pl_received_hot_rst_q;
  wire pl_transmit_hot_rst;
  wire pl_upstream_prefer_deemph;
  wire reg_axi_in_pkt;
  wire [1:0]req_attr;
  wire req_compl_int;
  wire req_compl_wd;
  wire req_ep;
  wire [9:0]req_len;
  wire [15:0]req_rid;
  wire [7:0]req_tag;
  wire [2:0]req_tc;
  wire req_td;
  wire rx_busy;
  wire rx_busy0;
  wire rx_np_ok;
  wire rx_np_req;
  wire [127:0]s_axis_tx_tdata;
  wire [95:0]s_axis_tx_tdata_cpler;
  wire [2:0]s_axis_tx_tkeep;
  wire [2:0]\s_axis_tx_tkeep[15] ;
  wire [15:11]s_axis_tx_tkeep_cpler;
  wire s_axis_tx_tlast;
  wire s_axis_tx_tlast_0;
  wire s_axis_tx_tlast_1;
  wire s_axis_tx_tlast_2;
  wire s_axis_tx_tlast_mux;
  wire s_axis_tx_tready_mux;
  wire [3:0]s_axis_tx_tuser;
  wire s_axis_tx_tvalid;
  wire s_axis_tx_tvalid_cpler;
  wire s_axis_tx_tvalid_mux;
  wire startup_cfgclk;
  wire startup_cfgclk_mux;
  wire startup_cfgmclk;
  wire startup_cfgmclk_mux;
  wire startup_clk;
  wire startup_clk_mux;
  wire startup_gsr;
  wire startup_gsr_mux;
  wire startup_gts;
  wire startup_gts_mux;
  wire startup_keyclearb;
  wire startup_keyclearb_mux;
  wire startup_pack;
  wire startup_pack_mux;
  wire startup_preq;
  wire startup_preq_mux;
  wire startup_usrcclko;
  wire startup_usrcclko_mux;
  wire startup_usrcclkts;
  wire startup_usrcclkts_mux;
  wire startup_usrdoneo;
  wire startup_usrdoneo_mux;
  wire startup_usrdonets;
  wire startup_usrdonets_mux;
  wire tandem_EP_RX_i_n_13;
  wire tandem_EP_RX_i_n_14;
  wire tandem_EP_RX_i_n_15;
  wire tandem_EP_RX_i_n_16;
  wire tandem_EP_TX_i_n_1;
  wire tready_thrtl_reg;
  wire [2:0]trn_fc_sel;
  wire trn_rnp_ok;
  wire trn_rnp_req;
  wire [5:0]trn_tbuf_av;
  wire trn_tcfg_req;
  wire trn_terr_drop;
  wire [5:0]tx_buf_av;
  wire tx_cfg_gnt;
  wire tx_cfg_gnt_mux;
  wire tx_cfg_req;
  wire tx_err_drop;
  wire user_app_rdy_gnt_reg;
  wire user_app_rdy_gnt_reg_rep;
  wire user_app_rdy_gnt_reg_rep__0;
  wire user_app_rdy_gnt_reg_rep__1;
  wire [127:0]user_app_rdy_gnt_reg_rep__1_0;
  wire [3:0]user_app_rdy_gnt_reg_rep__1_1;
  wire user_app_rdy_gnt_reg_rep__3;
  wire user_app_rdy_gnt_reg_rep__3_0;
  wire user_lnk_up;
  wire [0:0]user_reset_out_reg;

  pcie_7x_0_pcie_7x_0_tandem_cpler_rx_eng tandem_EP_RX_i
       (.D(D),
        .DI(DI),
        .E(E),
        .\FSM_sequential_pio_rx_sm_128.state[2]_i_2_0 (s_axis_tx_tvalid_cpler),
        .\FSM_sequential_pio_rx_sm_128.state_reg[1]_0 (\FSM_sequential_pio_rx_sm_128.state_reg[1] ),
        .\FSM_sequential_pio_rx_sm_128.state_reg[2]_0 (\FSM_sequential_pio_rx_sm_128.state_reg[2] ),
        .\FSM_sequential_pio_rx_sm_128.state_reg[2]_1 (\FSM_sequential_pio_rx_sm_128.state_reg[2]_0 ),
        .\FSM_sequential_pio_rx_sm_128.state_reg[2]_2 (\FSM_sequential_pio_rx_sm_128.state_reg[2]_1 ),
        .Q(Q),
        .S(S[0]),
        .SR(SR),
        .data_hold(data_hold),
        .data_prev_reg(user_app_rdy_gnt_reg_rep__0),
        .m_axis_rx_tready(m_axis_rx_tready),
        .m_axis_rx_tvalid_mux(m_axis_rx_tvalid_mux),
        .\pio_rx_sm_128.m_axis_rx_tready_reg_0 (m_axis_rx_tready_cpler),
        .\pio_rx_sm_128.req_addr_reg[2]_0 (\pio_rx_sm_128.req_addr_reg[2] ),
        .\pio_rx_sm_128.req_addr_reg[6]_0 (data0),
        .\pio_rx_sm_128.req_addr_reg[6]_1 (\pio_rx_sm_128.req_addr_reg[6] ),
        .\pio_rx_sm_128.req_attr_reg[1]_0 (req_attr),
        .\pio_rx_sm_128.req_attr_reg[1]_1 (\pio_rx_sm_128.req_attr_reg[1] ),
        .\pio_rx_sm_128.req_be_reg[0]_0 (\pio_rx_sm_128.req_be_reg[0] ),
        .\pio_rx_sm_128.req_be_reg[3]_0 ({tandem_EP_RX_i_n_13,tandem_EP_RX_i_n_14,tandem_EP_RX_i_n_15,tandem_EP_RX_i_n_16}),
        .\pio_rx_sm_128.req_be_reg[3]_1 (\pio_rx_sm_128.req_be_reg[3] ),
        .\pio_rx_sm_128.req_compl_reg_0 (\pio_rx_sm_128.req_compl_reg ),
        .\pio_rx_sm_128.req_compl_wd_reg_0 (\pio_rx_sm_128.req_compl_wd_reg ),
        .\pio_rx_sm_128.req_ep_reg_0 (\pio_rx_sm_128.req_ep_reg ),
        .\pio_rx_sm_128.req_len_reg[0]_0 (\m_axis_rx_tuser[21] [9]),
        .\pio_rx_sm_128.req_len_reg[9]_0 (req_len),
        .\pio_rx_sm_128.req_len_reg[9]_1 (\pio_rx_sm_128.req_len_reg[9] ),
        .\pio_rx_sm_128.req_rid_reg[15]_0 (req_rid),
        .\pio_rx_sm_128.req_rid_reg[15]_1 (\pio_rx_sm_128.req_rid_reg[15] ),
        .\pio_rx_sm_128.req_tag_reg[7]_0 (req_tag),
        .\pio_rx_sm_128.req_tag_reg[7]_1 (\pio_rx_sm_128.req_tag_reg[7] ),
        .\pio_rx_sm_128.req_tc_reg[2]_0 (req_tc),
        .\pio_rx_sm_128.req_tc_reg[2]_1 (\pio_rx_sm_128.req_tc_reg[2] ),
        .\pio_rx_sm_128.req_td_reg_0 (\pio_rx_sm_128.req_td_reg ),
        .\pio_rx_sm_128.tlp_type_reg[7]_0 (\pio_rx_sm_128.tlp_type_reg[7] ),
        .pipe_userclk2_in(pipe_userclk2_in),
        .pkt_len_counter_dec__0_carry(pkt_len_counter_dec__0_carry[0]),
        .req_compl_int(req_compl_int),
        .req_compl_wd(req_compl_wd),
        .req_ep(req_ep),
        .req_td(req_td),
        .rx_busy(rx_busy),
        .rx_busy0(rx_busy0));
  pcie_7x_0_pcie_7x_0_tandem_cpler_tx_eng tandem_EP_TX_i
       (.D({tandem_EP_RX_i_n_13,tandem_EP_RX_i_n_14,tandem_EP_RX_i_n_15,tandem_EP_RX_i_n_16}),
        .Q({s_axis_tx_tkeep_cpler[15],s_axis_tx_tkeep_cpler[11]}),
        .SR(SR),
        .axi_in_packet(axi_in_packet),
        .axi_in_packet_reg(user_app_rdy_gnt_reg_rep__1),
        .\gen_cpl_128.s_axis_tx_tdata_reg[13]_0 (req_attr),
        .\gen_cpl_128.s_axis_tx_tdata_reg[22]_0 (req_tc),
        .\gen_cpl_128.s_axis_tx_tdata_reg[50]_0 (\gen_cpl_128.s_axis_tx_tdata_reg[50] ),
        .\gen_cpl_128.s_axis_tx_tdata_reg[55]_0 (\gen_cpl_128.s_axis_tx_tdata_reg[55] ),
        .\gen_cpl_128.s_axis_tx_tdata_reg[63]_0 (\gen_cpl_128.s_axis_tx_tdata_reg[63] ),
        .\gen_cpl_128.s_axis_tx_tdata_reg[70]_0 (data0),
        .\gen_cpl_128.s_axis_tx_tdata_reg[79]_0 (req_tag),
        .\gen_cpl_128.s_axis_tx_tdata_reg[95]_0 (req_rid),
        .\gen_cpl_128.s_axis_tx_tdata_reg[9]_0 (req_len),
        .\gen_cpl_128.s_axis_tx_tkeep_reg[11]_0 (\gen_cpl_128.s_axis_tx_tkeep_reg[11] ),
        .\gen_cpl_128.s_axis_tx_tlast_reg_0 (s_axis_tx_tvalid_cpler),
        .\gen_cpl_128.s_axis_tx_tlast_reg_1 (tandem_EP_TX_i_n_1),
        .pipe_userclk2_in(pipe_userclk2_in),
        .req_compl_int(req_compl_int),
        .req_compl_wd(req_compl_wd),
        .req_ep(req_ep),
        .req_td(req_td),
        .s_axis_tx_tdata_cpler({s_axis_tx_tdata_cpler[95:72],s_axis_tx_tdata_cpler[70:48],s_axis_tx_tdata_cpler[34:32],s_axis_tx_tdata_cpler[30],s_axis_tx_tdata_cpler[27],s_axis_tx_tdata_cpler[22:20],s_axis_tx_tdata_cpler[15:12],s_axis_tx_tdata_cpler[9:0]}),
        .s_axis_tx_tlast(s_axis_tx_tlast),
        .s_axis_tx_tlast_0(s_axis_tx_tlast_2),
        .s_axis_tx_tready_mux(s_axis_tx_tready_mux),
        .s_axis_tx_tvalid(s_axis_tx_tvalid));
  pcie_7x_0_pcie_7x_0_tandem_cpler_ctl_arb tandem_ctl_arb_i
       (.Q({s_axis_tx_tkeep_cpler[15],s_axis_tx_tkeep_cpler[11]}),
        .S(S[1]),
        .SR(SR),
        .cfg_aer_ecrc_check_en(cfg_aer_ecrc_check_en),
        .cfg_aer_ecrc_check_en_0(cfg_aer_ecrc_check_en_0),
        .cfg_aer_ecrc_check_en_1(cfg_aer_ecrc_check_en_1),
        .cfg_aer_ecrc_check_en_2(cfg_aer_ecrc_check_en_2),
        .cfg_aer_ecrc_check_en_3(cfg_aer_ecrc_check_en_3),
        .cfg_aer_ecrc_check_en_4(cfg_aer_ecrc_check_en_4),
        .cfg_aer_ecrc_check_en_5(cfg_aer_ecrc_check_en_5),
        .cfg_bus_number(cfg_bus_number),
        .\cfg_bus_number[7] (\gen_cpl_128.s_axis_tx_tdata_reg[63] ),
        .cfg_device_number(cfg_device_number),
        .\cfg_device_number[4] (\gen_cpl_128.s_axis_tx_tdata_reg[55] ),
        .cfg_ds_bus_number(cfg_ds_bus_number),
        .cfg_ds_device_number(cfg_ds_device_number),
        .cfg_ds_function_number(cfg_ds_function_number),
        .cfg_dsn(cfg_dsn),
        .cfg_dstatus(cfg_dstatus),
        .cfg_err_atomic_egress_blocked(cfg_err_atomic_egress_blocked),
        .cfg_err_atomic_egress_blocked_n(cfg_err_atomic_egress_blocked_n),
        .cfg_err_cor(cfg_err_cor),
        .cfg_err_cor_n(cfg_err_cor_n),
        .cfg_err_cpl_abort(cfg_err_cpl_abort),
        .cfg_err_cpl_abort_n(cfg_err_cpl_abort_n),
        .cfg_err_cpl_timeout(cfg_err_cpl_timeout),
        .cfg_err_cpl_timeout_n(cfg_err_cpl_timeout_n),
        .cfg_err_cpl_unexpect(cfg_err_cpl_unexpect),
        .cfg_err_cpl_unexpect_n(cfg_err_cpl_unexpect_n),
        .cfg_err_ecrc(cfg_err_ecrc),
        .cfg_err_ecrc_n(cfg_err_ecrc_n),
        .cfg_err_internal_cor(cfg_err_internal_cor),
        .cfg_err_internal_cor_n(cfg_err_internal_cor_n),
        .cfg_err_internal_uncor(cfg_err_internal_uncor),
        .cfg_err_internal_uncor_n(cfg_err_internal_uncor_n),
        .cfg_err_malformed(cfg_err_malformed),
        .cfg_err_malformed_n(cfg_err_malformed_n),
        .cfg_err_mc_blocked(cfg_err_mc_blocked),
        .cfg_err_mc_blocked_n(cfg_err_mc_blocked_n),
        .cfg_err_poisoned(cfg_err_poisoned),
        .cfg_err_poisoned_n(cfg_err_poisoned_n),
        .cfg_err_ur(cfg_err_ur),
        .cfg_err_ur_n(cfg_err_ur_n),
        .cfg_function_number(cfg_function_number),
        .\cfg_function_number[2] (\gen_cpl_128.s_axis_tx_tdata_reg[50] ),
        .cfg_interrupt(cfg_interrupt),
        .cfg_interrupt_n(cfg_interrupt_n),
        .cfg_mgmt_rd_en(cfg_mgmt_rd_en),
        .cfg_mgmt_rd_en_n(cfg_mgmt_rd_en_n),
        .cfg_mgmt_wr_en(cfg_mgmt_wr_en),
        .cfg_mgmt_wr_en_n(cfg_mgmt_wr_en_n),
        .cfg_msg_data(cfg_msg_data),
        .\cfg_msg_data[15] (\cfg_msg_data[15] ),
        .cfg_msg_received(cfg_msg_received),
        .cfg_msg_received_0(cfg_msg_received_0),
        .cfg_msg_received_pme_to(cfg_msg_received_pme_to),
        .cfg_pcie_link_state(cfg_pcie_link_state),
        .\cfg_pcie_link_state[2] (\cfg_pcie_link_state[2] ),
        .cfg_pm_force_state_en(cfg_pm_force_state_en),
        .cfg_pm_force_state_en_n(cfg_pm_force_state_en_n),
        .cfg_pm_halt_aspm_l0s(cfg_pm_halt_aspm_l0s),
        .cfg_pm_halt_aspm_l0s_n(cfg_pm_halt_aspm_l0s_n),
        .cfg_pm_halt_aspm_l1(cfg_pm_halt_aspm_l1),
        .cfg_pm_halt_aspm_l1_n(cfg_pm_halt_aspm_l1_n),
        .cfg_pm_wake(cfg_pm_wake),
        .cfg_pm_wake_n(cfg_pm_wake_n),
        .cfg_pmcsr_powerstate(cfg_pmcsr_powerstate),
        .\cfg_pmcsr_powerstate[1] (\cfg_pmcsr_powerstate[1] ),
        .cfg_to_turnoff(cfg_to_turnoff),
        .cfg_trn_pending(cfg_trn_pending),
        .cfg_trn_pending_n(cfg_trn_pending_n),
        .cfg_turnoff_ok(cfg_turnoff_ok),
        .cfg_turnoff_ok_mux(cfg_turnoff_ok_mux),
        .drp_addr(drp_addr),
        .drp_di(drp_di),
        .drp_do(drp_do),
        .drp_en(drp_en),
        .drp_rdy(drp_rdy),
        .drp_we(drp_we),
        .\ecrc_pause_enabled.reg_tx_ecrc_pkt (\ecrc_pause_enabled.reg_tx_ecrc_pkt ),
        .fc_sel(fc_sel),
        .\gen_cpl_128.s_axis_tx_tdata_reg[0] (\gen_cpl_128.s_axis_tx_tdata_reg[0] ),
        .m_axis_rx_tdata(m_axis_rx_tdata),
        .\m_axis_rx_tdata[127] (\m_axis_rx_tdata[127] ),
        .\m_axis_rx_tdata_reg[0] (m_axis_rx_tready_cpler),
        .m_axis_rx_tready(m_axis_rx_tready),
        .m_axis_rx_tready_0(m_axis_rx_tready_0),
        .m_axis_rx_tready_mux(m_axis_rx_tready_mux),
        .m_axis_rx_tuser(m_axis_rx_tuser),
        .\m_axis_rx_tuser[21] ({\m_axis_rx_tuser[21] [13:10],\m_axis_rx_tuser[21] [8:0]}),
        .m_axis_rx_tvalid_mux(m_axis_rx_tvalid_mux),
        .out(out),
        .pcie_drp_addr(pcie_drp_addr),
        .pcie_drp_di(pcie_drp_di),
        .pcie_drp_do(pcie_drp_do),
        .pcie_drp_en(pcie_drp_en),
        .pcie_drp_rdy(pcie_drp_rdy),
        .pcie_drp_we(pcie_drp_we),
        .pipe_userclk2_in(pipe_userclk2_in),
        .pkt_len_counter_dec__0_carry(pkt_len_counter_dec__0_carry),
        .pl_directed_link_change(pl_directed_link_change),
        .pl_ltssm_state(pl_ltssm_state),
        .\pl_ltssm_state[5] (\pl_ltssm_state[5] ),
        .pl_phy_lnk_up(pl_phy_lnk_up),
        .pl_phy_lnk_up_q(pl_phy_lnk_up_q),
        .pl_received_hot_rst(pl_received_hot_rst),
        .pl_received_hot_rst_q(pl_received_hot_rst_q),
        .pl_transmit_hot_rst(pl_transmit_hot_rst),
        .pl_upstream_prefer_deemph(pl_upstream_prefer_deemph),
        .reg_axi_in_pkt(reg_axi_in_pkt),
        .req_compl_int(req_compl_int),
        .rx_busy(rx_busy),
        .rx_busy0(rx_busy0),
        .rx_np_ok(rx_np_ok),
        .rx_np_req(rx_np_req),
        .s_axis_tx_tdata(s_axis_tx_tdata),
        .s_axis_tx_tdata_cpler({s_axis_tx_tdata_cpler[95:72],s_axis_tx_tdata_cpler[70:48],s_axis_tx_tdata_cpler[34:32],s_axis_tx_tdata_cpler[30],s_axis_tx_tdata_cpler[27],s_axis_tx_tdata_cpler[22:20],s_axis_tx_tdata_cpler[15:12],s_axis_tx_tdata_cpler[9:0]}),
        .s_axis_tx_tkeep(s_axis_tx_tkeep),
        .\s_axis_tx_tkeep[15] (\s_axis_tx_tkeep[15] ),
        .s_axis_tx_tlast(s_axis_tx_tlast),
        .s_axis_tx_tlast_0(s_axis_tx_tlast_0),
        .s_axis_tx_tlast_1(s_axis_tx_tlast_1),
        .s_axis_tx_tlast_mux(s_axis_tx_tlast_mux),
        .s_axis_tx_tready_mux(s_axis_tx_tready_mux),
        .s_axis_tx_tuser(s_axis_tx_tuser),
        .s_axis_tx_tvalid(s_axis_tx_tvalid),
        .s_axis_tx_tvalid_mux(s_axis_tx_tvalid_mux),
        .startup_cfgclk(startup_cfgclk),
        .startup_cfgclk_mux(startup_cfgclk_mux),
        .startup_cfgmclk(startup_cfgmclk),
        .startup_cfgmclk_mux(startup_cfgmclk_mux),
        .startup_clk(startup_clk),
        .startup_clk_mux(startup_clk_mux),
        .startup_gsr(startup_gsr),
        .startup_gsr_mux(startup_gsr_mux),
        .startup_gts(startup_gts),
        .startup_gts_mux(startup_gts_mux),
        .startup_keyclearb(startup_keyclearb),
        .startup_keyclearb_mux(startup_keyclearb_mux),
        .startup_pack(startup_pack),
        .startup_pack_mux(startup_pack_mux),
        .startup_preq(startup_preq),
        .startup_preq_mux(startup_preq_mux),
        .startup_usrcclko(startup_usrcclko),
        .startup_usrcclko_mux(startup_usrcclko_mux),
        .startup_usrcclkts(startup_usrcclkts),
        .startup_usrcclkts_mux(startup_usrcclkts_mux),
        .startup_usrdoneo(startup_usrdoneo),
        .startup_usrdoneo_mux(startup_usrdoneo_mux),
        .startup_usrdonets(startup_usrdonets),
        .startup_usrdonets_mux(startup_usrdonets_mux),
        .\throttle_ctl_pipeline.reg_tlast_reg (s_axis_tx_tvalid_cpler),
        .tready_thrtl_i_4_0(tandem_EP_TX_i_n_1),
        .tready_thrtl_reg(tready_thrtl_reg),
        .trn_fc_sel(trn_fc_sel),
        .trn_rnp_ok(trn_rnp_ok),
        .trn_rnp_req(trn_rnp_req),
        .trn_tbuf_av(trn_tbuf_av),
        .trn_tcfg_req(trn_tcfg_req),
        .trn_terr_drop(trn_terr_drop),
        .tx_buf_av(tx_buf_av),
        .tx_cfg_gnt(tx_cfg_gnt),
        .tx_cfg_gnt_mux(tx_cfg_gnt_mux),
        .tx_cfg_req(tx_cfg_req),
        .tx_err_drop(tx_err_drop),
        .user_app_rdy_gnt_reg_0(user_app_rdy_gnt_reg),
        .user_app_rdy_gnt_reg_rep_0(user_app_rdy_gnt_reg_rep),
        .user_app_rdy_gnt_reg_rep__0_0(user_app_rdy_gnt_reg_rep__0),
        .user_app_rdy_gnt_reg_rep__1_0(user_app_rdy_gnt_reg_rep__1),
        .user_app_rdy_gnt_reg_rep__1_1(user_app_rdy_gnt_reg_rep__1_0),
        .user_app_rdy_gnt_reg_rep__1_2(user_app_rdy_gnt_reg_rep__1_1),
        .user_app_rdy_gnt_reg_rep__3_0(user_app_rdy_gnt_reg_rep__3),
        .user_app_rdy_gnt_reg_rep__3_1(user_app_rdy_gnt_reg_rep__3_0),
        .user_lnk_up(user_lnk_up),
        .user_reset_out_reg(user_reset_out_reg));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_tandem_cpler_ctl_arb" *) 
module pcie_7x_0_pcie_7x_0_tandem_cpler_ctl_arb
   (rx_busy,
    user_app_rdy_gnt_reg_0,
    user_app_rdy_gnt_reg_rep_0,
    user_app_rdy_gnt_reg_rep__0_0,
    user_app_rdy_gnt_reg_rep__1_0,
    user_reset_out_reg,
    S,
    s_axis_tx_tlast_0,
    m_axis_rx_tready_0,
    m_axis_rx_tready_mux,
    tready_thrtl_reg,
    s_axis_tx_tlast_mux,
    s_axis_tx_tvalid_mux,
    \gen_cpl_128.s_axis_tx_tdata_reg[0] ,
    user_app_rdy_gnt_reg_rep__1_1,
    user_app_rdy_gnt_reg_rep__1_2,
    cfg_trn_pending_n,
    cfg_dstatus,
    user_lnk_up,
    tx_err_drop,
    tx_cfg_req,
    cfg_msg_received,
    cfg_to_turnoff,
    pl_phy_lnk_up,
    pl_received_hot_rst,
    startup_cfgclk,
    startup_cfgmclk,
    startup_preq,
    pcie_drp_rdy,
    pl_transmit_hot_rst,
    cfg_mgmt_wr_en_n,
    cfg_mgmt_rd_en_n,
    cfg_err_malformed_n,
    cfg_err_cor_n,
    cfg_err_ur_n,
    cfg_err_ecrc_n,
    cfg_err_cpl_timeout_n,
    cfg_err_cpl_abort_n,
    cfg_err_cpl_unexpect_n,
    cfg_err_poisoned_n,
    cfg_err_atomic_egress_blocked_n,
    cfg_err_mc_blocked_n,
    cfg_err_internal_uncor_n,
    cfg_err_internal_cor_n,
    cfg_interrupt_n,
    cfg_pm_halt_aspm_l0s_n,
    cfg_pm_halt_aspm_l1_n,
    cfg_pm_force_state_en_n,
    cfg_pm_wake_n,
    cfg_turnoff_ok_mux,
    drp_en,
    drp_we,
    startup_clk_mux,
    startup_gsr_mux,
    startup_gts_mux,
    startup_pack_mux,
    startup_usrcclko_mux,
    startup_usrdoneo_mux,
    tx_buf_av,
    cfg_pcie_link_state,
    cfg_pmcsr_powerstate,
    cfg_device_number,
    cfg_function_number,
    pl_ltssm_state,
    tx_cfg_gnt_mux,
    trn_rnp_ok,
    trn_rnp_req,
    trn_fc_sel,
    pl_directed_link_change,
    pl_upstream_prefer_deemph,
    cfg_ds_device_number,
    cfg_ds_function_number,
    startup_keyclearb_mux,
    startup_usrcclkts_mux,
    startup_usrdonets_mux,
    m_axis_rx_tdata,
    m_axis_rx_tuser,
    cfg_msg_data,
    cfg_bus_number,
    pcie_drp_do,
    \s_axis_tx_tkeep[15] ,
    cfg_ds_bus_number,
    cfg_dsn,
    drp_addr,
    drp_di,
    s_axis_tx_tlast_1,
    SR,
    rx_busy0,
    pipe_userclk2_in,
    m_axis_rx_tready,
    \m_axis_rx_tdata_reg[0] ,
    m_axis_rx_tvalid_mux,
    pkt_len_counter_dec__0_carry,
    s_axis_tx_tlast,
    \throttle_ctl_pipeline.reg_tlast_reg ,
    s_axis_tx_tvalid,
    s_axis_tx_tready_mux,
    req_compl_int,
    reg_axi_in_pkt,
    s_axis_tx_tdata_cpler,
    s_axis_tx_tdata,
    tready_thrtl_i_4_0,
    s_axis_tx_tuser,
    cfg_trn_pending,
    out,
    trn_terr_drop,
    trn_tcfg_req,
    cfg_msg_received_0,
    cfg_msg_received_pme_to,
    pl_phy_lnk_up_q,
    pl_received_hot_rst_q,
    startup_cfgclk_mux,
    startup_cfgmclk_mux,
    startup_preq_mux,
    drp_rdy,
    cfg_aer_ecrc_check_en,
    cfg_mgmt_wr_en,
    cfg_mgmt_rd_en,
    cfg_err_malformed,
    cfg_err_cor,
    cfg_err_ur,
    cfg_err_ecrc,
    cfg_err_cpl_timeout,
    cfg_err_cpl_abort,
    cfg_err_cpl_unexpect,
    cfg_err_poisoned,
    cfg_err_atomic_egress_blocked,
    cfg_err_mc_blocked,
    cfg_err_internal_uncor,
    cfg_err_internal_cor,
    cfg_interrupt,
    cfg_pm_halt_aspm_l0s,
    cfg_pm_halt_aspm_l1,
    cfg_pm_force_state_en,
    cfg_pm_wake,
    cfg_turnoff_ok,
    pcie_drp_en,
    pcie_drp_we,
    startup_clk,
    startup_gsr,
    startup_gts,
    startup_pack,
    startup_usrcclko,
    startup_usrdoneo,
    trn_tbuf_av,
    \cfg_pcie_link_state[2] ,
    \cfg_pmcsr_powerstate[1] ,
    \cfg_device_number[4] ,
    \cfg_function_number[2] ,
    \pl_ltssm_state[5] ,
    tx_cfg_gnt,
    rx_np_ok,
    rx_np_req,
    fc_sel,
    cfg_aer_ecrc_check_en_0,
    cfg_aer_ecrc_check_en_1,
    cfg_aer_ecrc_check_en_2,
    cfg_aer_ecrc_check_en_3,
    startup_keyclearb,
    startup_usrcclkts,
    startup_usrdonets,
    \m_axis_rx_tdata[127] ,
    \m_axis_rx_tuser[21] ,
    \cfg_msg_data[15] ,
    \cfg_bus_number[7] ,
    drp_do,
    s_axis_tx_tkeep,
    Q,
    cfg_aer_ecrc_check_en_4,
    cfg_aer_ecrc_check_en_5,
    pcie_drp_addr,
    pcie_drp_di,
    \ecrc_pause_enabled.reg_tx_ecrc_pkt ,
    user_app_rdy_gnt_reg_rep__3_0,
    user_app_rdy_gnt_reg_rep__3_1);
  output rx_busy;
  output user_app_rdy_gnt_reg_0;
  output user_app_rdy_gnt_reg_rep_0;
  output user_app_rdy_gnt_reg_rep__0_0;
  output user_app_rdy_gnt_reg_rep__1_0;
  output [0:0]user_reset_out_reg;
  output [0:0]S;
  output s_axis_tx_tlast_0;
  output [0:0]m_axis_rx_tready_0;
  output m_axis_rx_tready_mux;
  output tready_thrtl_reg;
  output s_axis_tx_tlast_mux;
  output s_axis_tx_tvalid_mux;
  output \gen_cpl_128.s_axis_tx_tdata_reg[0] ;
  output [127:0]user_app_rdy_gnt_reg_rep__1_1;
  output [3:0]user_app_rdy_gnt_reg_rep__1_2;
  output cfg_trn_pending_n;
  output [0:0]cfg_dstatus;
  output user_lnk_up;
  output tx_err_drop;
  output tx_cfg_req;
  output cfg_msg_received;
  output cfg_to_turnoff;
  output pl_phy_lnk_up;
  output pl_received_hot_rst;
  output startup_cfgclk;
  output startup_cfgmclk;
  output startup_preq;
  output pcie_drp_rdy;
  output pl_transmit_hot_rst;
  output cfg_mgmt_wr_en_n;
  output cfg_mgmt_rd_en_n;
  output cfg_err_malformed_n;
  output cfg_err_cor_n;
  output cfg_err_ur_n;
  output cfg_err_ecrc_n;
  output cfg_err_cpl_timeout_n;
  output cfg_err_cpl_abort_n;
  output cfg_err_cpl_unexpect_n;
  output cfg_err_poisoned_n;
  output cfg_err_atomic_egress_blocked_n;
  output cfg_err_mc_blocked_n;
  output cfg_err_internal_uncor_n;
  output cfg_err_internal_cor_n;
  output cfg_interrupt_n;
  output cfg_pm_halt_aspm_l0s_n;
  output cfg_pm_halt_aspm_l1_n;
  output cfg_pm_force_state_en_n;
  output cfg_pm_wake_n;
  output cfg_turnoff_ok_mux;
  output drp_en;
  output drp_we;
  output startup_clk_mux;
  output startup_gsr_mux;
  output startup_gts_mux;
  output startup_pack_mux;
  output startup_usrcclko_mux;
  output startup_usrdoneo_mux;
  output [5:0]tx_buf_av;
  output [2:0]cfg_pcie_link_state;
  output [1:0]cfg_pmcsr_powerstate;
  output [4:0]cfg_device_number;
  output [2:0]cfg_function_number;
  output [5:0]pl_ltssm_state;
  output tx_cfg_gnt_mux;
  output trn_rnp_ok;
  output trn_rnp_req;
  output [2:0]trn_fc_sel;
  output [1:0]pl_directed_link_change;
  output pl_upstream_prefer_deemph;
  output [4:0]cfg_ds_device_number;
  output [2:0]cfg_ds_function_number;
  output startup_keyclearb_mux;
  output startup_usrcclkts_mux;
  output startup_usrdonets_mux;
  output [125:0]m_axis_rx_tdata;
  output [12:0]m_axis_rx_tuser;
  output [15:0]cfg_msg_data;
  output [7:0]cfg_bus_number;
  output [15:0]pcie_drp_do;
  output [2:0]\s_axis_tx_tkeep[15] ;
  output [7:0]cfg_ds_bus_number;
  output [63:0]cfg_dsn;
  output [8:0]drp_addr;
  output [15:0]drp_di;
  output s_axis_tx_tlast_1;
  input [0:0]SR;
  input rx_busy0;
  input pipe_userclk2_in;
  input m_axis_rx_tready;
  input \m_axis_rx_tdata_reg[0] ;
  input m_axis_rx_tvalid_mux;
  input [1:0]pkt_len_counter_dec__0_carry;
  input s_axis_tx_tlast;
  input \throttle_ctl_pipeline.reg_tlast_reg ;
  input s_axis_tx_tvalid;
  input s_axis_tx_tready_mux;
  input req_compl_int;
  input reg_axi_in_pkt;
  input [68:0]s_axis_tx_tdata_cpler;
  input [127:0]s_axis_tx_tdata;
  input tready_thrtl_i_4_0;
  input [3:0]s_axis_tx_tuser;
  input cfg_trn_pending;
  input out;
  input trn_terr_drop;
  input trn_tcfg_req;
  input cfg_msg_received_0;
  input cfg_msg_received_pme_to;
  input pl_phy_lnk_up_q;
  input pl_received_hot_rst_q;
  input startup_cfgclk_mux;
  input startup_cfgmclk_mux;
  input startup_preq_mux;
  input drp_rdy;
  input cfg_aer_ecrc_check_en;
  input cfg_mgmt_wr_en;
  input cfg_mgmt_rd_en;
  input cfg_err_malformed;
  input cfg_err_cor;
  input cfg_err_ur;
  input cfg_err_ecrc;
  input cfg_err_cpl_timeout;
  input cfg_err_cpl_abort;
  input cfg_err_cpl_unexpect;
  input cfg_err_poisoned;
  input cfg_err_atomic_egress_blocked;
  input cfg_err_mc_blocked;
  input cfg_err_internal_uncor;
  input cfg_err_internal_cor;
  input cfg_interrupt;
  input cfg_pm_halt_aspm_l0s;
  input cfg_pm_halt_aspm_l1;
  input cfg_pm_force_state_en;
  input cfg_pm_wake;
  input cfg_turnoff_ok;
  input pcie_drp_en;
  input pcie_drp_we;
  input startup_clk;
  input startup_gsr;
  input startup_gts;
  input startup_pack;
  input startup_usrcclko;
  input startup_usrdoneo;
  input [5:0]trn_tbuf_av;
  input [2:0]\cfg_pcie_link_state[2] ;
  input [1:0]\cfg_pmcsr_powerstate[1] ;
  input [4:0]\cfg_device_number[4] ;
  input [2:0]\cfg_function_number[2] ;
  input [5:0]\pl_ltssm_state[5] ;
  input tx_cfg_gnt;
  input rx_np_ok;
  input rx_np_req;
  input [2:0]fc_sel;
  input [1:0]cfg_aer_ecrc_check_en_0;
  input cfg_aer_ecrc_check_en_1;
  input [4:0]cfg_aer_ecrc_check_en_2;
  input [2:0]cfg_aer_ecrc_check_en_3;
  input startup_keyclearb;
  input startup_usrcclkts;
  input startup_usrdonets;
  input [125:0]\m_axis_rx_tdata[127] ;
  input [12:0]\m_axis_rx_tuser[21] ;
  input [15:0]\cfg_msg_data[15] ;
  input [7:0]\cfg_bus_number[7] ;
  input [15:0]drp_do;
  input [2:0]s_axis_tx_tkeep;
  input [1:0]Q;
  input [7:0]cfg_aer_ecrc_check_en_4;
  input [63:0]cfg_aer_ecrc_check_en_5;
  input [8:0]pcie_drp_addr;
  input [15:0]pcie_drp_di;
  input \ecrc_pause_enabled.reg_tx_ecrc_pkt ;
  input user_app_rdy_gnt_reg_rep__3_0;
  input user_app_rdy_gnt_reg_rep__3_1;

  wire [1:0]Q;
  wire [0:0]S;
  wire [0:0]SR;
  wire cfg_aer_ecrc_check_en;
  wire [1:0]cfg_aer_ecrc_check_en_0;
  wire cfg_aer_ecrc_check_en_1;
  wire [4:0]cfg_aer_ecrc_check_en_2;
  wire [2:0]cfg_aer_ecrc_check_en_3;
  wire [7:0]cfg_aer_ecrc_check_en_4;
  wire [63:0]cfg_aer_ecrc_check_en_5;
  wire [7:0]cfg_bus_number;
  wire [7:0]\cfg_bus_number[7] ;
  wire [4:0]cfg_device_number;
  wire [4:0]\cfg_device_number[4] ;
  wire [7:0]cfg_ds_bus_number;
  wire [4:0]cfg_ds_device_number;
  wire [2:0]cfg_ds_function_number;
  wire [63:0]cfg_dsn;
  wire [0:0]cfg_dstatus;
  wire cfg_err_atomic_egress_blocked;
  wire cfg_err_atomic_egress_blocked_n;
  wire cfg_err_cor;
  wire cfg_err_cor_n;
  wire cfg_err_cpl_abort;
  wire cfg_err_cpl_abort_n;
  wire cfg_err_cpl_timeout;
  wire cfg_err_cpl_timeout_n;
  wire cfg_err_cpl_unexpect;
  wire cfg_err_cpl_unexpect_n;
  wire cfg_err_ecrc;
  wire cfg_err_ecrc_n;
  wire cfg_err_internal_cor;
  wire cfg_err_internal_cor_n;
  wire cfg_err_internal_uncor;
  wire cfg_err_internal_uncor_n;
  wire cfg_err_malformed;
  wire cfg_err_malformed_n;
  wire cfg_err_mc_blocked;
  wire cfg_err_mc_blocked_n;
  wire cfg_err_poisoned;
  wire cfg_err_poisoned_n;
  wire cfg_err_ur;
  wire cfg_err_ur_n;
  wire [2:0]cfg_function_number;
  wire [2:0]\cfg_function_number[2] ;
  wire cfg_interrupt;
  wire cfg_interrupt_n;
  wire cfg_mgmt_rd_en;
  wire cfg_mgmt_rd_en_n;
  wire cfg_mgmt_wr_en;
  wire cfg_mgmt_wr_en_n;
  wire [15:0]cfg_msg_data;
  wire [15:0]\cfg_msg_data[15] ;
  wire cfg_msg_received;
  wire cfg_msg_received_0;
  wire cfg_msg_received_pme_to;
  wire [2:0]cfg_pcie_link_state;
  wire [2:0]\cfg_pcie_link_state[2] ;
  wire cfg_pm_force_state_en;
  wire cfg_pm_force_state_en_n;
  wire cfg_pm_halt_aspm_l0s;
  wire cfg_pm_halt_aspm_l0s_n;
  wire cfg_pm_halt_aspm_l1;
  wire cfg_pm_halt_aspm_l1_n;
  wire cfg_pm_wake;
  wire cfg_pm_wake_n;
  wire [1:0]cfg_pmcsr_powerstate;
  wire [1:0]\cfg_pmcsr_powerstate[1] ;
  wire cfg_to_turnoff;
  wire cfg_trn_pending;
  wire cfg_trn_pending_n;
  wire cfg_turnoff_ok;
  wire cfg_turnoff_ok_mux;
  wire [8:0]drp_addr;
  wire [15:0]drp_di;
  wire [15:0]drp_do;
  wire drp_en;
  wire drp_rdy;
  wire drp_we;
  wire \ecrc_pause_enabled.reg_tx_ecrc_pkt ;
  wire [2:0]fc_sel;
  wire \gen_cpl_128.s_axis_tx_tdata_reg[0] ;
  wire [125:0]m_axis_rx_tdata;
  wire [125:0]\m_axis_rx_tdata[127] ;
  wire \m_axis_rx_tdata_reg[0] ;
  wire m_axis_rx_tready;
  wire [0:0]m_axis_rx_tready_0;
  wire m_axis_rx_tready_mux;
  wire [12:0]m_axis_rx_tuser;
  wire [12:0]\m_axis_rx_tuser[21] ;
  wire m_axis_rx_tvalid_mux;
  wire out;
  wire [8:0]pcie_drp_addr;
  wire [15:0]pcie_drp_di;
  wire [15:0]pcie_drp_do;
  wire pcie_drp_en;
  wire pcie_drp_rdy;
  wire pcie_drp_we;
  wire pipe_userclk2_in;
  wire [1:0]pkt_len_counter_dec__0_carry;
  wire [1:0]pl_directed_link_change;
  wire [5:0]pl_ltssm_state;
  wire [5:0]\pl_ltssm_state[5] ;
  wire pl_phy_lnk_up;
  wire pl_phy_lnk_up_q;
  wire pl_received_hot_rst;
  wire pl_received_hot_rst_q;
  wire pl_transmit_hot_rst;
  wire pl_upstream_prefer_deemph;
  wire reg_axi_in_pkt;
  wire req_compl_int;
  wire rx_busy;
  wire rx_busy0;
  wire rx_completion_busy;
  wire rx_completion_busy_i_1_n_0;
  wire rx_np_ok;
  wire rx_np_req;
  wire [127:0]s_axis_tx_tdata;
  wire [68:0]s_axis_tx_tdata_cpler;
  wire [2:0]s_axis_tx_tkeep;
  wire [2:0]\s_axis_tx_tkeep[15] ;
  wire s_axis_tx_tlast;
  wire s_axis_tx_tlast_0;
  wire s_axis_tx_tlast_1;
  wire s_axis_tx_tlast_mux;
  wire s_axis_tx_tready_mux;
  wire [3:0]s_axis_tx_tuser;
  wire s_axis_tx_tvalid;
  wire s_axis_tx_tvalid_mux;
  wire startup_cfgclk;
  wire startup_cfgclk_mux;
  wire startup_cfgmclk;
  wire startup_cfgmclk_mux;
  wire startup_clk;
  wire startup_clk_mux;
  wire startup_gsr;
  wire startup_gsr_mux;
  wire startup_gts;
  wire startup_gts_mux;
  wire startup_keyclearb;
  wire startup_keyclearb_mux;
  wire startup_pack;
  wire startup_pack_mux;
  wire startup_preq;
  wire startup_preq_mux;
  wire startup_usrcclko;
  wire startup_usrcclko_mux;
  wire startup_usrcclkts;
  wire startup_usrcclkts_mux;
  wire startup_usrdoneo;
  wire startup_usrdoneo_mux;
  wire startup_usrdonets;
  wire startup_usrdonets_mux;
  wire \throttle_ctl_pipeline.reg_tlast_reg ;
  wire tready_thrtl_i_4_0;
  wire tready_thrtl_i_8_n_0;
  wire tready_thrtl_i_9_n_0;
  wire tready_thrtl_reg;
  wire [2:0]trn_fc_sel;
  wire trn_rnp_ok;
  wire trn_rnp_req;
  wire [5:0]trn_tbuf_av;
  wire trn_tcfg_req;
  wire trn_terr_drop;
  wire [5:0]tx_buf_av;
  wire tx_cfg_gnt;
  wire tx_cfg_gnt_mux;
  wire tx_cfg_req;
  wire tx_err_drop;
  wire user_app_rdy_gnt_i_1_n_0;
  wire user_app_rdy_gnt_reg_0;
  wire user_app_rdy_gnt_reg_rep_0;
  wire user_app_rdy_gnt_reg_rep__0_0;
  wire user_app_rdy_gnt_reg_rep__1_0;
  wire [127:0]user_app_rdy_gnt_reg_rep__1_1;
  wire [3:0]user_app_rdy_gnt_reg_rep__1_2;
  wire user_app_rdy_gnt_reg_rep__2_n_0;
  wire user_app_rdy_gnt_reg_rep__3_0;
  wire user_app_rdy_gnt_reg_rep__3_1;
  wire user_app_rdy_gnt_reg_rep__3_n_0;
  wire user_app_rdy_gnt_rep__0_i_1_n_0;
  wire user_app_rdy_gnt_rep__1_i_1_n_0;
  wire user_app_rdy_gnt_rep__2_i_1_n_0;
  wire user_app_rdy_gnt_rep__3_i_1_n_0;
  wire user_app_rdy_gnt_rep_i_1_n_0;
  wire user_lnk_up;
  wire [0:0]user_reset_out_reg;

  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \L23_thrtl_ep.reg_turnoff_ok_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(cfg_turnoff_ok),
        .O(cfg_turnoff_ok_mux));
  (* SOFT_HLUTNM = "soft_lutpair488" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_bus_number[0]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_bus_number[7] [0]),
        .O(cfg_bus_number[0]));
  (* SOFT_HLUTNM = "soft_lutpair487" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_bus_number[1]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_bus_number[7] [1]),
        .O(cfg_bus_number[1]));
  (* SOFT_HLUTNM = "soft_lutpair487" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_bus_number[2]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_bus_number[7] [2]),
        .O(cfg_bus_number[2]));
  (* SOFT_HLUTNM = "soft_lutpair486" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_bus_number[3]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_bus_number[7] [3]),
        .O(cfg_bus_number[3]));
  (* SOFT_HLUTNM = "soft_lutpair486" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_bus_number[4]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_bus_number[7] [4]),
        .O(cfg_bus_number[4]));
  (* SOFT_HLUTNM = "soft_lutpair485" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_bus_number[5]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_bus_number[7] [5]),
        .O(cfg_bus_number[5]));
  (* SOFT_HLUTNM = "soft_lutpair485" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_bus_number[6]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_bus_number[7] [6]),
        .O(cfg_bus_number[6]));
  (* SOFT_HLUTNM = "soft_lutpair484" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_bus_number[7]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_bus_number[7] [7]),
        .O(cfg_bus_number[7]));
  (* SOFT_HLUTNM = "soft_lutpair405" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_device_number[0]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_device_number[4] [0]),
        .O(cfg_device_number[0]));
  (* SOFT_HLUTNM = "soft_lutpair404" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_device_number[1]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_device_number[4] [1]),
        .O(cfg_device_number[1]));
  (* SOFT_HLUTNM = "soft_lutpair404" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_device_number[2]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_device_number[4] [2]),
        .O(cfg_device_number[2]));
  (* SOFT_HLUTNM = "soft_lutpair403" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_device_number[3]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_device_number[4] [3]),
        .O(cfg_device_number[3]));
  (* SOFT_HLUTNM = "soft_lutpair403" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_device_number[4]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_device_number[4] [4]),
        .O(cfg_device_number[4]));
  (* SOFT_HLUTNM = "soft_lutpair387" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_dstatus[5]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(cfg_trn_pending),
        .O(cfg_dstatus));
  (* SOFT_HLUTNM = "soft_lutpair406" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_function_number[0]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_function_number[2] [0]),
        .O(cfg_function_number[0]));
  (* SOFT_HLUTNM = "soft_lutpair406" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_function_number[1]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_function_number[2] [1]),
        .O(cfg_function_number[1]));
  (* SOFT_HLUTNM = "soft_lutpair405" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_function_number[2]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_function_number[2] [2]),
        .O(cfg_function_number[2]));
  (* SOFT_HLUTNM = "soft_lutpair484" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_msg_data[0]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_msg_data[15] [0]),
        .O(cfg_msg_data[0]));
  (* SOFT_HLUTNM = "soft_lutpair479" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_msg_data[10]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_msg_data[15] [10]),
        .O(cfg_msg_data[10]));
  (* SOFT_HLUTNM = "soft_lutpair478" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_msg_data[11]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_msg_data[15] [11]),
        .O(cfg_msg_data[11]));
  (* SOFT_HLUTNM = "soft_lutpair478" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_msg_data[12]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_msg_data[15] [12]),
        .O(cfg_msg_data[12]));
  (* SOFT_HLUTNM = "soft_lutpair477" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_msg_data[13]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_msg_data[15] [13]),
        .O(cfg_msg_data[13]));
  (* SOFT_HLUTNM = "soft_lutpair477" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_msg_data[14]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_msg_data[15] [14]),
        .O(cfg_msg_data[14]));
  (* SOFT_HLUTNM = "soft_lutpair476" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_msg_data[15]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_msg_data[15] [15]),
        .O(cfg_msg_data[15]));
  (* SOFT_HLUTNM = "soft_lutpair483" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_msg_data[1]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_msg_data[15] [1]),
        .O(cfg_msg_data[1]));
  (* SOFT_HLUTNM = "soft_lutpair483" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_msg_data[2]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_msg_data[15] [2]),
        .O(cfg_msg_data[2]));
  (* SOFT_HLUTNM = "soft_lutpair482" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_msg_data[3]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_msg_data[15] [3]),
        .O(cfg_msg_data[3]));
  (* SOFT_HLUTNM = "soft_lutpair482" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_msg_data[4]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_msg_data[15] [4]),
        .O(cfg_msg_data[4]));
  (* SOFT_HLUTNM = "soft_lutpair481" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_msg_data[5]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_msg_data[15] [5]),
        .O(cfg_msg_data[5]));
  (* SOFT_HLUTNM = "soft_lutpair481" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_msg_data[6]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_msg_data[15] [6]),
        .O(cfg_msg_data[6]));
  (* SOFT_HLUTNM = "soft_lutpair480" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_msg_data[7]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_msg_data[15] [7]),
        .O(cfg_msg_data[7]));
  (* SOFT_HLUTNM = "soft_lutpair480" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_msg_data[8]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_msg_data[15] [8]),
        .O(cfg_msg_data[8]));
  (* SOFT_HLUTNM = "soft_lutpair479" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_msg_data[9]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_msg_data[15] [9]),
        .O(cfg_msg_data[9]));
  (* SOFT_HLUTNM = "soft_lutpair389" *) 
  LUT2 #(
    .INIT(4'h8)) 
    cfg_msg_received_INST_0
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(cfg_msg_received_0),
        .O(cfg_msg_received));
  (* SOFT_HLUTNM = "soft_lutpair401" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_pcie_link_state[0]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_pcie_link_state[2] [0]),
        .O(cfg_pcie_link_state[0]));
  (* SOFT_HLUTNM = "soft_lutpair401" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_pcie_link_state[1]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_pcie_link_state[2] [1]),
        .O(cfg_pcie_link_state[1]));
  (* SOFT_HLUTNM = "soft_lutpair400" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_pcie_link_state[2]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_pcie_link_state[2] [2]),
        .O(cfg_pcie_link_state[2]));
  (* SOFT_HLUTNM = "soft_lutpair402" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_pmcsr_powerstate[0]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_pmcsr_powerstate[1] [0]),
        .O(cfg_pmcsr_powerstate[0]));
  (* SOFT_HLUTNM = "soft_lutpair402" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cfg_pmcsr_powerstate[1]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\cfg_pmcsr_powerstate[1] [1]),
        .O(cfg_pmcsr_powerstate[1]));
  (* SOFT_HLUTNM = "soft_lutpair389" *) 
  LUT2 #(
    .INIT(4'h8)) 
    cfg_to_turnoff_INST_0
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(cfg_msg_received_pme_to),
        .O(cfg_to_turnoff));
  LUT6 #(
    .INIT(64'hFFFF470047004700)) 
    \ecrc_pause_enabled.reg_tx_ecrc_pkt_i_1 
       (.I0(s_axis_tx_tlast),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(\throttle_ctl_pipeline.reg_tlast_reg ),
        .I3(\gen_cpl_128.s_axis_tx_tdata_reg[0] ),
        .I4(s_axis_tx_tlast_0),
        .I5(\ecrc_pause_enabled.reg_tx_ecrc_pkt ),
        .O(s_axis_tx_tlast_1));
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[0]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [0]),
        .O(m_axis_rx_tdata[0]));
  (* SOFT_HLUTNM = "soft_lutpair421" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[100]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [98]),
        .O(m_axis_rx_tdata[98]));
  (* SOFT_HLUTNM = "soft_lutpair420" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[101]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [99]),
        .O(m_axis_rx_tdata[99]));
  (* SOFT_HLUTNM = "soft_lutpair420" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[102]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [100]),
        .O(m_axis_rx_tdata[100]));
  (* SOFT_HLUTNM = "soft_lutpair419" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[103]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [101]),
        .O(m_axis_rx_tdata[101]));
  (* SOFT_HLUTNM = "soft_lutpair419" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[104]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [102]),
        .O(m_axis_rx_tdata[102]));
  (* SOFT_HLUTNM = "soft_lutpair418" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[105]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [103]),
        .O(m_axis_rx_tdata[103]));
  (* SOFT_HLUTNM = "soft_lutpair418" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[106]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [104]),
        .O(m_axis_rx_tdata[104]));
  (* SOFT_HLUTNM = "soft_lutpair417" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[107]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [105]),
        .O(m_axis_rx_tdata[105]));
  (* SOFT_HLUTNM = "soft_lutpair417" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[108]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [106]),
        .O(m_axis_rx_tdata[106]));
  (* SOFT_HLUTNM = "soft_lutpair416" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[109]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [107]),
        .O(m_axis_rx_tdata[107]));
  (* SOFT_HLUTNM = "soft_lutpair465" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[10]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [10]),
        .O(m_axis_rx_tdata[10]));
  (* SOFT_HLUTNM = "soft_lutpair416" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[110]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [108]),
        .O(m_axis_rx_tdata[108]));
  (* SOFT_HLUTNM = "soft_lutpair415" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[111]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [109]),
        .O(m_axis_rx_tdata[109]));
  (* SOFT_HLUTNM = "soft_lutpair415" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[112]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [110]),
        .O(m_axis_rx_tdata[110]));
  (* SOFT_HLUTNM = "soft_lutpair414" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[113]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [111]),
        .O(m_axis_rx_tdata[111]));
  (* SOFT_HLUTNM = "soft_lutpair414" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[114]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [112]),
        .O(m_axis_rx_tdata[112]));
  (* SOFT_HLUTNM = "soft_lutpair413" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[115]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [113]),
        .O(m_axis_rx_tdata[113]));
  (* SOFT_HLUTNM = "soft_lutpair413" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[116]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [114]),
        .O(m_axis_rx_tdata[114]));
  (* SOFT_HLUTNM = "soft_lutpair412" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[117]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [115]),
        .O(m_axis_rx_tdata[115]));
  (* SOFT_HLUTNM = "soft_lutpair412" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[118]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [116]),
        .O(m_axis_rx_tdata[116]));
  (* SOFT_HLUTNM = "soft_lutpair411" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[119]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [117]),
        .O(m_axis_rx_tdata[117]));
  (* SOFT_HLUTNM = "soft_lutpair464" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[11]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [11]),
        .O(m_axis_rx_tdata[11]));
  (* SOFT_HLUTNM = "soft_lutpair411" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[120]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [118]),
        .O(m_axis_rx_tdata[118]));
  (* SOFT_HLUTNM = "soft_lutpair410" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[121]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [119]),
        .O(m_axis_rx_tdata[119]));
  (* SOFT_HLUTNM = "soft_lutpair410" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[122]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [120]),
        .O(m_axis_rx_tdata[120]));
  (* SOFT_HLUTNM = "soft_lutpair409" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[123]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [121]),
        .O(m_axis_rx_tdata[121]));
  (* SOFT_HLUTNM = "soft_lutpair409" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[124]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [122]),
        .O(m_axis_rx_tdata[122]));
  (* SOFT_HLUTNM = "soft_lutpair408" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[125]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [123]),
        .O(m_axis_rx_tdata[123]));
  (* SOFT_HLUTNM = "soft_lutpair408" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[126]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [124]),
        .O(m_axis_rx_tdata[124]));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[127]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [125]),
        .O(m_axis_rx_tdata[125]));
  (* SOFT_HLUTNM = "soft_lutpair464" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[12]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [12]),
        .O(m_axis_rx_tdata[12]));
  (* SOFT_HLUTNM = "soft_lutpair463" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[13]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [13]),
        .O(m_axis_rx_tdata[13]));
  (* SOFT_HLUTNM = "soft_lutpair463" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[15]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [14]),
        .O(m_axis_rx_tdata[14]));
  (* SOFT_HLUTNM = "soft_lutpair462" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[16]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [15]),
        .O(m_axis_rx_tdata[15]));
  (* SOFT_HLUTNM = "soft_lutpair462" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[17]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [16]),
        .O(m_axis_rx_tdata[16]));
  (* SOFT_HLUTNM = "soft_lutpair461" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[18]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [17]),
        .O(m_axis_rx_tdata[17]));
  (* SOFT_HLUTNM = "soft_lutpair461" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[19]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [18]),
        .O(m_axis_rx_tdata[18]));
  (* SOFT_HLUTNM = "soft_lutpair469" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[1]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [1]),
        .O(m_axis_rx_tdata[1]));
  (* SOFT_HLUTNM = "soft_lutpair460" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[20]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [19]),
        .O(m_axis_rx_tdata[19]));
  (* SOFT_HLUTNM = "soft_lutpair460" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[21]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [20]),
        .O(m_axis_rx_tdata[20]));
  (* SOFT_HLUTNM = "soft_lutpair459" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[22]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [21]),
        .O(m_axis_rx_tdata[21]));
  (* SOFT_HLUTNM = "soft_lutpair459" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[23]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [22]),
        .O(m_axis_rx_tdata[22]));
  (* SOFT_HLUTNM = "soft_lutpair458" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[24]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [23]),
        .O(m_axis_rx_tdata[23]));
  (* SOFT_HLUTNM = "soft_lutpair458" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[25]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [24]),
        .O(m_axis_rx_tdata[24]));
  (* SOFT_HLUTNM = "soft_lutpair457" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[26]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [25]),
        .O(m_axis_rx_tdata[25]));
  (* SOFT_HLUTNM = "soft_lutpair457" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[27]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [26]),
        .O(m_axis_rx_tdata[26]));
  (* SOFT_HLUTNM = "soft_lutpair456" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[28]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [27]),
        .O(m_axis_rx_tdata[27]));
  (* SOFT_HLUTNM = "soft_lutpair456" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[29]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [28]),
        .O(m_axis_rx_tdata[28]));
  (* SOFT_HLUTNM = "soft_lutpair469" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[2]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [2]),
        .O(m_axis_rx_tdata[2]));
  (* SOFT_HLUTNM = "soft_lutpair455" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[30]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [29]),
        .O(m_axis_rx_tdata[29]));
  (* SOFT_HLUTNM = "soft_lutpair455" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[31]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [30]),
        .O(m_axis_rx_tdata[30]));
  (* SOFT_HLUTNM = "soft_lutpair454" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[32]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [31]),
        .O(m_axis_rx_tdata[31]));
  (* SOFT_HLUTNM = "soft_lutpair454" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[33]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [32]),
        .O(m_axis_rx_tdata[32]));
  (* SOFT_HLUTNM = "soft_lutpair453" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[34]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [33]),
        .O(m_axis_rx_tdata[33]));
  (* SOFT_HLUTNM = "soft_lutpair453" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[35]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [34]),
        .O(m_axis_rx_tdata[34]));
  (* SOFT_HLUTNM = "soft_lutpair452" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[36]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [35]),
        .O(m_axis_rx_tdata[35]));
  (* SOFT_HLUTNM = "soft_lutpair452" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[37]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [36]),
        .O(m_axis_rx_tdata[36]));
  (* SOFT_HLUTNM = "soft_lutpair451" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[38]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [37]),
        .O(m_axis_rx_tdata[37]));
  (* SOFT_HLUTNM = "soft_lutpair451" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[39]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [38]),
        .O(m_axis_rx_tdata[38]));
  (* SOFT_HLUTNM = "soft_lutpair468" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[3]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [3]),
        .O(m_axis_rx_tdata[3]));
  (* SOFT_HLUTNM = "soft_lutpair450" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[40]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [39]),
        .O(m_axis_rx_tdata[39]));
  (* SOFT_HLUTNM = "soft_lutpair450" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[41]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [40]),
        .O(m_axis_rx_tdata[40]));
  (* SOFT_HLUTNM = "soft_lutpair449" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[42]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [41]),
        .O(m_axis_rx_tdata[41]));
  (* SOFT_HLUTNM = "soft_lutpair449" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[43]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [42]),
        .O(m_axis_rx_tdata[42]));
  (* SOFT_HLUTNM = "soft_lutpair448" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[44]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [43]),
        .O(m_axis_rx_tdata[43]));
  (* SOFT_HLUTNM = "soft_lutpair448" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[45]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [44]),
        .O(m_axis_rx_tdata[44]));
  (* SOFT_HLUTNM = "soft_lutpair447" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[46]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [45]),
        .O(m_axis_rx_tdata[45]));
  (* SOFT_HLUTNM = "soft_lutpair447" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[47]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [46]),
        .O(m_axis_rx_tdata[46]));
  (* SOFT_HLUTNM = "soft_lutpair446" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[48]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [47]),
        .O(m_axis_rx_tdata[47]));
  (* SOFT_HLUTNM = "soft_lutpair446" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[49]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [48]),
        .O(m_axis_rx_tdata[48]));
  (* SOFT_HLUTNM = "soft_lutpair468" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[4]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [4]),
        .O(m_axis_rx_tdata[4]));
  (* SOFT_HLUTNM = "soft_lutpair445" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[50]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [49]),
        .O(m_axis_rx_tdata[49]));
  (* SOFT_HLUTNM = "soft_lutpair445" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[51]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [50]),
        .O(m_axis_rx_tdata[50]));
  (* SOFT_HLUTNM = "soft_lutpair444" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[52]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [51]),
        .O(m_axis_rx_tdata[51]));
  (* SOFT_HLUTNM = "soft_lutpair444" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[53]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [52]),
        .O(m_axis_rx_tdata[52]));
  (* SOFT_HLUTNM = "soft_lutpair443" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[54]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [53]),
        .O(m_axis_rx_tdata[53]));
  (* SOFT_HLUTNM = "soft_lutpair443" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[55]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [54]),
        .O(m_axis_rx_tdata[54]));
  (* SOFT_HLUTNM = "soft_lutpair442" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[56]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [55]),
        .O(m_axis_rx_tdata[55]));
  (* SOFT_HLUTNM = "soft_lutpair442" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[57]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [56]),
        .O(m_axis_rx_tdata[56]));
  (* SOFT_HLUTNM = "soft_lutpair441" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[58]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [57]),
        .O(m_axis_rx_tdata[57]));
  (* SOFT_HLUTNM = "soft_lutpair441" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[59]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [58]),
        .O(m_axis_rx_tdata[58]));
  (* SOFT_HLUTNM = "soft_lutpair467" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[5]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [5]),
        .O(m_axis_rx_tdata[5]));
  (* SOFT_HLUTNM = "soft_lutpair440" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[60]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [59]),
        .O(m_axis_rx_tdata[59]));
  (* SOFT_HLUTNM = "soft_lutpair440" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[61]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [60]),
        .O(m_axis_rx_tdata[60]));
  (* SOFT_HLUTNM = "soft_lutpair439" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[62]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [61]),
        .O(m_axis_rx_tdata[61]));
  (* SOFT_HLUTNM = "soft_lutpair439" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[63]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [62]),
        .O(m_axis_rx_tdata[62]));
  (* SOFT_HLUTNM = "soft_lutpair438" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[64]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [63]),
        .O(m_axis_rx_tdata[63]));
  (* SOFT_HLUTNM = "soft_lutpair438" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[65]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [64]),
        .O(m_axis_rx_tdata[64]));
  (* SOFT_HLUTNM = "soft_lutpair437" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[66]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [65]),
        .O(m_axis_rx_tdata[65]));
  (* SOFT_HLUTNM = "soft_lutpair437" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[67]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [66]),
        .O(m_axis_rx_tdata[66]));
  (* SOFT_HLUTNM = "soft_lutpair436" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[68]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [67]),
        .O(m_axis_rx_tdata[67]));
  (* SOFT_HLUTNM = "soft_lutpair436" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[69]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [68]),
        .O(m_axis_rx_tdata[68]));
  (* SOFT_HLUTNM = "soft_lutpair467" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[6]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [6]),
        .O(m_axis_rx_tdata[6]));
  (* SOFT_HLUTNM = "soft_lutpair435" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[70]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [69]),
        .O(m_axis_rx_tdata[69]));
  (* SOFT_HLUTNM = "soft_lutpair435" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[71]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [70]),
        .O(m_axis_rx_tdata[70]));
  (* SOFT_HLUTNM = "soft_lutpair434" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[72]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [71]),
        .O(m_axis_rx_tdata[71]));
  (* SOFT_HLUTNM = "soft_lutpair434" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[73]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [72]),
        .O(m_axis_rx_tdata[72]));
  (* SOFT_HLUTNM = "soft_lutpair433" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[74]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [73]),
        .O(m_axis_rx_tdata[73]));
  (* SOFT_HLUTNM = "soft_lutpair433" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[75]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [74]),
        .O(m_axis_rx_tdata[74]));
  (* SOFT_HLUTNM = "soft_lutpair432" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[76]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [75]),
        .O(m_axis_rx_tdata[75]));
  (* SOFT_HLUTNM = "soft_lutpair432" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[77]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [76]),
        .O(m_axis_rx_tdata[76]));
  (* SOFT_HLUTNM = "soft_lutpair431" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[79]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [77]),
        .O(m_axis_rx_tdata[77]));
  (* SOFT_HLUTNM = "soft_lutpair466" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[7]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [7]),
        .O(m_axis_rx_tdata[7]));
  (* SOFT_HLUTNM = "soft_lutpair431" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[80]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [78]),
        .O(m_axis_rx_tdata[78]));
  (* SOFT_HLUTNM = "soft_lutpair430" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[81]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [79]),
        .O(m_axis_rx_tdata[79]));
  (* SOFT_HLUTNM = "soft_lutpair430" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[82]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [80]),
        .O(m_axis_rx_tdata[80]));
  (* SOFT_HLUTNM = "soft_lutpair429" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[83]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [81]),
        .O(m_axis_rx_tdata[81]));
  (* SOFT_HLUTNM = "soft_lutpair429" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[84]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [82]),
        .O(m_axis_rx_tdata[82]));
  (* SOFT_HLUTNM = "soft_lutpair428" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[85]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [83]),
        .O(m_axis_rx_tdata[83]));
  (* SOFT_HLUTNM = "soft_lutpair428" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[86]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [84]),
        .O(m_axis_rx_tdata[84]));
  (* SOFT_HLUTNM = "soft_lutpair427" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[87]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [85]),
        .O(m_axis_rx_tdata[85]));
  (* SOFT_HLUTNM = "soft_lutpair427" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[88]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [86]),
        .O(m_axis_rx_tdata[86]));
  (* SOFT_HLUTNM = "soft_lutpair426" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[89]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [87]),
        .O(m_axis_rx_tdata[87]));
  (* SOFT_HLUTNM = "soft_lutpair466" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[8]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [8]),
        .O(m_axis_rx_tdata[8]));
  (* SOFT_HLUTNM = "soft_lutpair426" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[90]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [88]),
        .O(m_axis_rx_tdata[88]));
  (* SOFT_HLUTNM = "soft_lutpair425" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[91]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [89]),
        .O(m_axis_rx_tdata[89]));
  (* SOFT_HLUTNM = "soft_lutpair425" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[92]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [90]),
        .O(m_axis_rx_tdata[90]));
  (* SOFT_HLUTNM = "soft_lutpair424" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[93]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [91]),
        .O(m_axis_rx_tdata[91]));
  (* SOFT_HLUTNM = "soft_lutpair424" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[94]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [92]),
        .O(m_axis_rx_tdata[92]));
  (* SOFT_HLUTNM = "soft_lutpair423" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[95]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [93]),
        .O(m_axis_rx_tdata[93]));
  (* SOFT_HLUTNM = "soft_lutpair423" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[96]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [94]),
        .O(m_axis_rx_tdata[94]));
  (* SOFT_HLUTNM = "soft_lutpair422" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[97]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [95]),
        .O(m_axis_rx_tdata[95]));
  (* SOFT_HLUTNM = "soft_lutpair422" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[98]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [96]),
        .O(m_axis_rx_tdata[96]));
  (* SOFT_HLUTNM = "soft_lutpair421" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[99]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [97]),
        .O(m_axis_rx_tdata[97]));
  (* SOFT_HLUTNM = "soft_lutpair465" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tdata[9]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep__0_0),
        .I1(\m_axis_rx_tdata[127] [9]),
        .O(m_axis_rx_tdata[9]));
  (* SOFT_HLUTNM = "soft_lutpair476" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tuser[0]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\m_axis_rx_tuser[21] [0]),
        .O(m_axis_rx_tuser[0]));
  (* SOFT_HLUTNM = "soft_lutpair471" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tuser[17]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\m_axis_rx_tuser[21] [9]),
        .O(m_axis_rx_tuser[9]));
  (* SOFT_HLUTNM = "soft_lutpair471" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tuser[19]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\m_axis_rx_tuser[21] [10]),
        .O(m_axis_rx_tuser[10]));
  (* SOFT_HLUTNM = "soft_lutpair475" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tuser[1]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\m_axis_rx_tuser[21] [1]),
        .O(m_axis_rx_tuser[1]));
  (* SOFT_HLUTNM = "soft_lutpair470" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tuser[20]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\m_axis_rx_tuser[21] [11]),
        .O(m_axis_rx_tuser[11]));
  (* SOFT_HLUTNM = "soft_lutpair470" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tuser[21]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\m_axis_rx_tuser[21] [12]),
        .O(m_axis_rx_tuser[12]));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT5 #(
    .INIT(32'hEFEAFFFF)) 
    \m_axis_rx_tuser[21]_i_1 
       (.I0(SR),
        .I1(m_axis_rx_tready),
        .I2(user_app_rdy_gnt_reg_rep__0_0),
        .I3(\m_axis_rx_tdata_reg[0] ),
        .I4(m_axis_rx_tvalid_mux),
        .O(user_reset_out_reg));
  (* SOFT_HLUTNM = "soft_lutpair475" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tuser[2]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\m_axis_rx_tuser[21] [2]),
        .O(m_axis_rx_tuser[2]));
  (* SOFT_HLUTNM = "soft_lutpair474" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tuser[3]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\m_axis_rx_tuser[21] [3]),
        .O(m_axis_rx_tuser[3]));
  (* SOFT_HLUTNM = "soft_lutpair474" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tuser[4]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\m_axis_rx_tuser[21] [4]),
        .O(m_axis_rx_tuser[4]));
  (* SOFT_HLUTNM = "soft_lutpair473" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tuser[5]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\m_axis_rx_tuser[21] [5]),
        .O(m_axis_rx_tuser[5]));
  (* SOFT_HLUTNM = "soft_lutpair473" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tuser[6]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\m_axis_rx_tuser[21] [6]),
        .O(m_axis_rx_tuser[6]));
  (* SOFT_HLUTNM = "soft_lutpair472" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tuser[7]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\m_axis_rx_tuser[21] [7]),
        .O(m_axis_rx_tuser[7]));
  (* SOFT_HLUTNM = "soft_lutpair472" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axis_rx_tuser[8]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(\m_axis_rx_tuser[21] [8]),
        .O(m_axis_rx_tuser[8]));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT4 #(
    .INIT(16'hB8FF)) 
    m_axis_rx_tvalid_i_1
       (.I0(m_axis_rx_tready),
        .I1(user_app_rdy_gnt_reg_rep__0_0),
        .I2(\m_axis_rx_tdata_reg[0] ),
        .I3(m_axis_rx_tvalid_mux),
        .O(m_axis_rx_tready_0));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT2 #(
    .INIT(4'h7)) 
    pcie_block_i_i_1
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_err_atomic_egress_blocked),
        .O(cfg_err_atomic_egress_blocked_n));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT2 #(
    .INIT(4'h7)) 
    pcie_block_i_i_10
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_err_malformed),
        .O(cfg_err_malformed_n));
  (* SOFT_HLUTNM = "soft_lutpair370" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_100
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[34]),
        .O(cfg_dsn[34]));
  (* SOFT_HLUTNM = "soft_lutpair346" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_101
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[33]),
        .O(cfg_dsn[33]));
  (* SOFT_HLUTNM = "soft_lutpair363" *) 
  LUT2 #(
    .INIT(4'hB)) 
    pcie_block_i_i_102
       (.I0(cfg_aer_ecrc_check_en_5[32]),
        .I1(user_app_rdy_gnt_reg_rep__3_n_0),
        .O(cfg_dsn[32]));
  (* SOFT_HLUTNM = "soft_lutpair371" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_103
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[31]),
        .O(cfg_dsn[31]));
  (* SOFT_HLUTNM = "soft_lutpair352" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_104
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[30]),
        .O(cfg_dsn[30]));
  (* SOFT_HLUTNM = "soft_lutpair373" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_105
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[29]),
        .O(cfg_dsn[29]));
  (* SOFT_HLUTNM = "soft_lutpair358" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_106
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[28]),
        .O(cfg_dsn[28]));
  (* SOFT_HLUTNM = "soft_lutpair360" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_107
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[27]),
        .O(cfg_dsn[27]));
  (* SOFT_HLUTNM = "soft_lutpair359" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_108
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[26]),
        .O(cfg_dsn[26]));
  (* SOFT_HLUTNM = "soft_lutpair371" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_109
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[25]),
        .O(cfg_dsn[25]));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT2 #(
    .INIT(4'h7)) 
    pcie_block_i_i_11
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_err_mc_blocked),
        .O(cfg_err_mc_blocked_n));
  (* SOFT_HLUTNM = "soft_lutpair356" *) 
  LUT2 #(
    .INIT(4'hB)) 
    pcie_block_i_i_110
       (.I0(cfg_aer_ecrc_check_en_5[24]),
        .I1(user_app_rdy_gnt_reg_rep__3_n_0),
        .O(cfg_dsn[24]));
  (* SOFT_HLUTNM = "soft_lutpair354" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_111
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[23]),
        .O(cfg_dsn[23]));
  (* SOFT_HLUTNM = "soft_lutpair350" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_112
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[22]),
        .O(cfg_dsn[22]));
  (* SOFT_HLUTNM = "soft_lutpair370" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_113
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[21]),
        .O(cfg_dsn[21]));
  (* SOFT_HLUTNM = "soft_lutpair366" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_114
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[20]),
        .O(cfg_dsn[20]));
  (* SOFT_HLUTNM = "soft_lutpair357" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_115
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[19]),
        .O(cfg_dsn[19]));
  (* SOFT_HLUTNM = "soft_lutpair355" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_116
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[18]),
        .O(cfg_dsn[18]));
  (* SOFT_HLUTNM = "soft_lutpair351" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_117
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[17]),
        .O(cfg_dsn[17]));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_118
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[16]),
        .O(cfg_dsn[16]));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_119
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[15]),
        .O(cfg_dsn[15]));
  (* SOFT_HLUTNM = "soft_lutpair348" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_120
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[14]),
        .O(cfg_dsn[14]));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_121
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[13]),
        .O(cfg_dsn[13]));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_122
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[12]),
        .O(cfg_dsn[12]));
  (* SOFT_HLUTNM = "soft_lutpair368" *) 
  LUT2 #(
    .INIT(4'hB)) 
    pcie_block_i_i_123
       (.I0(cfg_aer_ecrc_check_en_5[11]),
        .I1(user_app_rdy_gnt_reg_rep__3_n_0),
        .O(cfg_dsn[11]));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_124
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[10]),
        .O(cfg_dsn[10]));
  (* SOFT_HLUTNM = "soft_lutpair368" *) 
  LUT2 #(
    .INIT(4'hB)) 
    pcie_block_i_i_125
       (.I0(cfg_aer_ecrc_check_en_5[9]),
        .I1(user_app_rdy_gnt_reg_rep__3_n_0),
        .O(cfg_dsn[9]));
  (* SOFT_HLUTNM = "soft_lutpair354" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_126
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[8]),
        .O(cfg_dsn[8]));
  (* SOFT_HLUTNM = "soft_lutpair361" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_127
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[7]),
        .O(cfg_dsn[7]));
  (* SOFT_HLUTNM = "soft_lutpair349" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_128
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[6]),
        .O(cfg_dsn[6]));
  (* SOFT_HLUTNM = "soft_lutpair362" *) 
  LUT2 #(
    .INIT(4'hB)) 
    pcie_block_i_i_129
       (.I0(cfg_aer_ecrc_check_en_5[5]),
        .I1(user_app_rdy_gnt_reg_rep__3_n_0),
        .O(cfg_dsn[5]));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT2 #(
    .INIT(4'h7)) 
    pcie_block_i_i_13
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_err_poisoned),
        .O(cfg_err_poisoned_n));
  (* SOFT_HLUTNM = "soft_lutpair353" *) 
  LUT2 #(
    .INIT(4'hB)) 
    pcie_block_i_i_130
       (.I0(cfg_aer_ecrc_check_en_5[4]),
        .I1(user_app_rdy_gnt_reg_rep__3_n_0),
        .O(cfg_dsn[4]));
  (* SOFT_HLUTNM = "soft_lutpair365" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_131
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[3]),
        .O(cfg_dsn[3]));
  (* SOFT_HLUTNM = "soft_lutpair358" *) 
  LUT2 #(
    .INIT(4'hB)) 
    pcie_block_i_i_132
       (.I0(cfg_aer_ecrc_check_en_5[2]),
        .I1(user_app_rdy_gnt_reg_rep__3_n_0),
        .O(cfg_dsn[2]));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_133
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[1]),
        .O(cfg_dsn[1]));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT2 #(
    .INIT(4'hB)) 
    pcie_block_i_i_134
       (.I0(cfg_aer_ecrc_check_en_5[0]),
        .I1(user_app_rdy_gnt_reg_rep__3_n_0),
        .O(cfg_dsn[0]));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_135
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_aer_ecrc_check_en_4[7]),
        .O(cfg_ds_bus_number[7]));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_136
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_4[6]),
        .O(cfg_ds_bus_number[6]));
  (* SOFT_HLUTNM = "soft_lutpair347" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_137
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_4[5]),
        .O(cfg_ds_bus_number[5]));
  (* SOFT_HLUTNM = "soft_lutpair361" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_138
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_4[4]),
        .O(cfg_ds_bus_number[4]));
  (* SOFT_HLUTNM = "soft_lutpair349" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_139
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_4[3]),
        .O(cfg_ds_bus_number[3]));
  (* SOFT_HLUTNM = "soft_lutpair353" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_140
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_4[2]),
        .O(cfg_ds_bus_number[2]));
  (* SOFT_HLUTNM = "soft_lutpair369" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_141
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_4[1]),
        .O(cfg_ds_bus_number[1]));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_142
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_4[0]),
        .O(cfg_ds_bus_number[0]));
  (* SOFT_HLUTNM = "soft_lutpair373" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_143
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(pcie_drp_addr[8]),
        .O(drp_addr[8]));
  (* SOFT_HLUTNM = "soft_lutpair497" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_144
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(pcie_drp_addr[7]),
        .O(drp_addr[7]));
  (* SOFT_HLUTNM = "soft_lutpair497" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_145
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(pcie_drp_addr[6]),
        .O(drp_addr[6]));
  (* SOFT_HLUTNM = "soft_lutpair498" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_146
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(pcie_drp_addr[5]),
        .O(drp_addr[5]));
  (* SOFT_HLUTNM = "soft_lutpair498" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_147
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(pcie_drp_addr[4]),
        .O(drp_addr[4]));
  (* SOFT_HLUTNM = "soft_lutpair499" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_148
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(pcie_drp_addr[3]),
        .O(drp_addr[3]));
  (* SOFT_HLUTNM = "soft_lutpair499" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_149
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(pcie_drp_addr[2]),
        .O(drp_addr[2]));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT2 #(
    .INIT(4'h7)) 
    pcie_block_i_i_15
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_err_ur),
        .O(cfg_err_ur_n));
  (* SOFT_HLUTNM = "soft_lutpair500" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_150
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(pcie_drp_addr[1]),
        .O(drp_addr[1]));
  (* SOFT_HLUTNM = "soft_lutpair500" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_151
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(pcie_drp_addr[0]),
        .O(drp_addr[0]));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT2 #(
    .INIT(4'h7)) 
    pcie_block_i_i_17
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_interrupt),
        .O(cfg_interrupt_n));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT2 #(
    .INIT(4'h7)) 
    pcie_block_i_i_19
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_mgmt_rd_en),
        .O(cfg_mgmt_rd_en_n));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT2 #(
    .INIT(4'h7)) 
    pcie_block_i_i_2
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_err_cor),
        .O(cfg_err_cor_n));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT2 #(
    .INIT(4'h7)) 
    pcie_block_i_i_20
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_mgmt_wr_en),
        .O(cfg_mgmt_wr_en_n));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT2 #(
    .INIT(4'h7)) 
    pcie_block_i_i_23
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_pm_force_state_en),
        .O(cfg_pm_force_state_en_n));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT2 #(
    .INIT(4'h7)) 
    pcie_block_i_i_24
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_pm_halt_aspm_l0s),
        .O(cfg_pm_halt_aspm_l0s_n));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT2 #(
    .INIT(4'h7)) 
    pcie_block_i_i_25
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_pm_halt_aspm_l1),
        .O(cfg_pm_halt_aspm_l1_n));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT2 #(
    .INIT(4'h7)) 
    pcie_block_i_i_27
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_pm_wake),
        .O(cfg_pm_wake_n));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT2 #(
    .INIT(4'h7)) 
    pcie_block_i_i_28
       (.I0(cfg_trn_pending),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .O(cfg_trn_pending_n));
  (* SOFT_HLUTNM = "soft_lutpair394" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_29
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(pcie_drp_en),
        .O(drp_en));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT2 #(
    .INIT(4'h7)) 
    pcie_block_i_i_3
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_err_cpl_abort),
        .O(cfg_err_cpl_abort_n));
  (* SOFT_HLUTNM = "soft_lutpair394" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_30
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(pcie_drp_we),
        .O(drp_we));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_31
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_aer_ecrc_check_en),
        .O(pl_transmit_hot_rst));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT2 #(
    .INIT(4'hB)) 
    pcie_block_i_i_32
       (.I0(cfg_aer_ecrc_check_en_1),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .O(pl_upstream_prefer_deemph));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT2 #(
    .INIT(4'hB)) 
    pcie_block_i_i_34
       (.I0(rx_np_ok),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .O(trn_rnp_ok));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT2 #(
    .INIT(4'hB)) 
    pcie_block_i_i_35
       (.I0(rx_np_req),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .O(trn_rnp_req));
  (* SOFT_HLUTNM = "soft_lutpair501" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_38
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(pcie_drp_di[15]),
        .O(drp_di[15]));
  (* SOFT_HLUTNM = "soft_lutpair501" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_39
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(pcie_drp_di[14]),
        .O(drp_di[14]));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT2 #(
    .INIT(4'h7)) 
    pcie_block_i_i_4
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_err_cpl_timeout),
        .O(cfg_err_cpl_timeout_n));
  (* SOFT_HLUTNM = "soft_lutpair502" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_40
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(pcie_drp_di[13]),
        .O(drp_di[13]));
  (* SOFT_HLUTNM = "soft_lutpair502" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_41
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(pcie_drp_di[12]),
        .O(drp_di[12]));
  (* SOFT_HLUTNM = "soft_lutpair503" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_42
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(pcie_drp_di[11]),
        .O(drp_di[11]));
  (* SOFT_HLUTNM = "soft_lutpair503" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_43
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(pcie_drp_di[10]),
        .O(drp_di[10]));
  (* SOFT_HLUTNM = "soft_lutpair504" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_44
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(pcie_drp_di[9]),
        .O(drp_di[9]));
  (* SOFT_HLUTNM = "soft_lutpair504" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_45
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(pcie_drp_di[8]),
        .O(drp_di[8]));
  (* SOFT_HLUTNM = "soft_lutpair505" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_46
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(pcie_drp_di[7]),
        .O(drp_di[7]));
  (* SOFT_HLUTNM = "soft_lutpair505" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_47
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(pcie_drp_di[6]),
        .O(drp_di[6]));
  (* SOFT_HLUTNM = "soft_lutpair506" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_48
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(pcie_drp_di[5]),
        .O(drp_di[5]));
  (* SOFT_HLUTNM = "soft_lutpair506" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_49
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(pcie_drp_di[4]),
        .O(drp_di[4]));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT2 #(
    .INIT(4'h7)) 
    pcie_block_i_i_5
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_err_cpl_unexpect),
        .O(cfg_err_cpl_unexpect_n));
  (* SOFT_HLUTNM = "soft_lutpair507" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_50
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(pcie_drp_di[3]),
        .O(drp_di[3]));
  (* SOFT_HLUTNM = "soft_lutpair507" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_51
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(pcie_drp_di[2]),
        .O(drp_di[2]));
  (* SOFT_HLUTNM = "soft_lutpair496" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_52
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(pcie_drp_di[1]),
        .O(drp_di[1]));
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_53
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(pcie_drp_di[0]),
        .O(drp_di[0]));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_54
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_aer_ecrc_check_en_0[1]),
        .O(pl_directed_link_change[1]));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_55
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_aer_ecrc_check_en_0[0]),
        .O(pl_directed_link_change[0]));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_56
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_aer_ecrc_check_en_3[2]),
        .O(cfg_ds_function_number[2]));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_57
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_aer_ecrc_check_en_3[1]),
        .O(cfg_ds_function_number[1]));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_58
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_aer_ecrc_check_en_3[0]),
        .O(cfg_ds_function_number[0]));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_59
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(fc_sel[2]),
        .O(trn_fc_sel[2]));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT2 #(
    .INIT(4'h7)) 
    pcie_block_i_i_6
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_err_ecrc),
        .O(cfg_err_ecrc_n));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_60
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(fc_sel[1]),
        .O(trn_fc_sel[1]));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_61
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(fc_sel[0]),
        .O(trn_fc_sel[0]));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_66
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_aer_ecrc_check_en_2[4]),
        .O(cfg_ds_device_number[4]));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_67
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_aer_ecrc_check_en_2[3]),
        .O(cfg_ds_device_number[3]));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_68
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_aer_ecrc_check_en_2[2]),
        .O(cfg_ds_device_number[2]));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_69
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_aer_ecrc_check_en_2[1]),
        .O(cfg_ds_device_number[1]));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT2 #(
    .INIT(4'h7)) 
    pcie_block_i_i_7
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_err_internal_cor),
        .O(cfg_err_internal_cor_n));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_70
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_aer_ecrc_check_en_2[0]),
        .O(cfg_ds_device_number[0]));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_71
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[63]),
        .O(cfg_dsn[63]));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_72
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[62]),
        .O(cfg_dsn[62]));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_73
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[61]),
        .O(cfg_dsn[61]));
  (* SOFT_HLUTNM = "soft_lutpair350" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_74
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[60]),
        .O(cfg_dsn[60]));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_75
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[59]),
        .O(cfg_dsn[59]));
  (* SOFT_HLUTNM = "soft_lutpair347" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_76
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[58]),
        .O(cfg_dsn[58]));
  (* SOFT_HLUTNM = "soft_lutpair346" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_77
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[57]),
        .O(cfg_dsn[57]));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_78
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[56]),
        .O(cfg_dsn[56]));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_79
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[55]),
        .O(cfg_dsn[55]));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT2 #(
    .INIT(4'h7)) 
    pcie_block_i_i_8
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(cfg_err_internal_uncor),
        .O(cfg_err_internal_uncor_n));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_80
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[54]),
        .O(cfg_dsn[54]));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_81
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[53]),
        .O(cfg_dsn[53]));
  (* SOFT_HLUTNM = "soft_lutpair352" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_82
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[52]),
        .O(cfg_dsn[52]));
  (* SOFT_HLUTNM = "soft_lutpair359" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_83
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[51]),
        .O(cfg_dsn[51]));
  (* SOFT_HLUTNM = "soft_lutpair355" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_84
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[50]),
        .O(cfg_dsn[50]));
  (* SOFT_HLUTNM = "soft_lutpair363" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_85
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[49]),
        .O(cfg_dsn[49]));
  (* SOFT_HLUTNM = "soft_lutpair365" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_86
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[48]),
        .O(cfg_dsn[48]));
  (* SOFT_HLUTNM = "soft_lutpair356" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_87
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[47]),
        .O(cfg_dsn[47]));
  (* SOFT_HLUTNM = "soft_lutpair351" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_88
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[46]),
        .O(cfg_dsn[46]));
  (* SOFT_HLUTNM = "soft_lutpair357" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_89
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[45]),
        .O(cfg_dsn[45]));
  (* SOFT_HLUTNM = "soft_lutpair348" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_90
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[44]),
        .O(cfg_dsn[44]));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_91
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[43]),
        .O(cfg_dsn[43]));
  (* SOFT_HLUTNM = "soft_lutpair369" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_92
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[42]),
        .O(cfg_dsn[42]));
  (* SOFT_HLUTNM = "soft_lutpair360" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_93
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[41]),
        .O(cfg_dsn[41]));
  (* SOFT_HLUTNM = "soft_lutpair366" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_94
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[40]),
        .O(cfg_dsn[40]));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_95
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[39]),
        .O(cfg_dsn[39]));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_96
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[38]),
        .O(cfg_dsn[38]));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_97
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[37]),
        .O(cfg_dsn[37]));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_98
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[36]),
        .O(cfg_dsn[36]));
  (* SOFT_HLUTNM = "soft_lutpair362" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_block_i_i_99
       (.I0(user_app_rdy_gnt_reg_rep__3_n_0),
        .I1(cfg_aer_ecrc_check_en_5[35]),
        .O(cfg_dsn[35]));
  (* SOFT_HLUTNM = "soft_lutpair496" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \pcie_drp_do[0]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(drp_do[0]),
        .O(pcie_drp_do[0]));
  (* SOFT_HLUTNM = "soft_lutpair491" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \pcie_drp_do[10]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(drp_do[10]),
        .O(pcie_drp_do[10]));
  (* SOFT_HLUTNM = "soft_lutpair490" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \pcie_drp_do[11]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(drp_do[11]),
        .O(pcie_drp_do[11]));
  (* SOFT_HLUTNM = "soft_lutpair490" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \pcie_drp_do[12]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(drp_do[12]),
        .O(pcie_drp_do[12]));
  (* SOFT_HLUTNM = "soft_lutpair489" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \pcie_drp_do[13]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(drp_do[13]),
        .O(pcie_drp_do[13]));
  (* SOFT_HLUTNM = "soft_lutpair489" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \pcie_drp_do[14]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(drp_do[14]),
        .O(pcie_drp_do[14]));
  (* SOFT_HLUTNM = "soft_lutpair488" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \pcie_drp_do[15]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(drp_do[15]),
        .O(pcie_drp_do[15]));
  (* SOFT_HLUTNM = "soft_lutpair495" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \pcie_drp_do[1]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(drp_do[1]),
        .O(pcie_drp_do[1]));
  (* SOFT_HLUTNM = "soft_lutpair495" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \pcie_drp_do[2]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(drp_do[2]),
        .O(pcie_drp_do[2]));
  (* SOFT_HLUTNM = "soft_lutpair494" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \pcie_drp_do[3]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(drp_do[3]),
        .O(pcie_drp_do[3]));
  (* SOFT_HLUTNM = "soft_lutpair494" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \pcie_drp_do[4]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(drp_do[4]),
        .O(pcie_drp_do[4]));
  (* SOFT_HLUTNM = "soft_lutpair493" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \pcie_drp_do[5]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(drp_do[5]),
        .O(pcie_drp_do[5]));
  (* SOFT_HLUTNM = "soft_lutpair493" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \pcie_drp_do[6]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(drp_do[6]),
        .O(pcie_drp_do[6]));
  (* SOFT_HLUTNM = "soft_lutpair492" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \pcie_drp_do[7]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(drp_do[7]),
        .O(pcie_drp_do[7]));
  (* SOFT_HLUTNM = "soft_lutpair492" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \pcie_drp_do[8]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(drp_do[8]),
        .O(pcie_drp_do[8]));
  (* SOFT_HLUTNM = "soft_lutpair491" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \pcie_drp_do[9]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(drp_do[9]),
        .O(pcie_drp_do[9]));
  (* SOFT_HLUTNM = "soft_lutpair393" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pcie_drp_rdy_INST_0
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(drp_rdy),
        .O(pcie_drp_rdy));
  LUT5 #(
    .INIT(32'hFF4700B8)) 
    pkt_len_counter_dec__0_carry_i_4
       (.I0(m_axis_rx_tready),
        .I1(user_app_rdy_gnt_reg_rep__0_0),
        .I2(\m_axis_rx_tdata_reg[0] ),
        .I3(pkt_len_counter_dec__0_carry[0]),
        .I4(pkt_len_counter_dec__0_carry[1]),
        .O(S));
  (* SOFT_HLUTNM = "soft_lutpair367" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \pl_ltssm_state[0]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep_0),
        .I1(\pl_ltssm_state[5] [0]),
        .O(pl_ltssm_state[0]));
  (* SOFT_HLUTNM = "soft_lutpair364" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \pl_ltssm_state[1]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep_0),
        .I1(\pl_ltssm_state[5] [1]),
        .O(pl_ltssm_state[1]));
  (* SOFT_HLUTNM = "soft_lutpair364" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \pl_ltssm_state[2]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep_0),
        .I1(\pl_ltssm_state[5] [2]),
        .O(pl_ltssm_state[2]));
  (* SOFT_HLUTNM = "soft_lutpair374" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \pl_ltssm_state[3]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep_0),
        .I1(\pl_ltssm_state[5] [3]),
        .O(pl_ltssm_state[3]));
  (* SOFT_HLUTNM = "soft_lutpair374" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \pl_ltssm_state[4]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep_0),
        .I1(\pl_ltssm_state[5] [4]),
        .O(pl_ltssm_state[4]));
  (* SOFT_HLUTNM = "soft_lutpair367" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \pl_ltssm_state[5]_INST_0 
       (.I0(user_app_rdy_gnt_reg_rep_0),
        .I1(\pl_ltssm_state[5] [5]),
        .O(pl_ltssm_state[5]));
  (* SOFT_HLUTNM = "soft_lutpair390" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pl_phy_lnk_up_INST_0
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(pl_phy_lnk_up_q),
        .O(pl_phy_lnk_up));
  (* SOFT_HLUTNM = "soft_lutpair390" *) 
  LUT2 #(
    .INIT(4'h8)) 
    pl_received_hot_rst_INST_0
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(pl_received_hot_rst_q),
        .O(pl_received_hot_rst));
  LUT5 #(
    .INIT(32'h00005F40)) 
    reg_axi_in_pkt_i_1
       (.I0(s_axis_tx_tlast_mux),
        .I1(s_axis_tx_tready_mux),
        .I2(s_axis_tx_tvalid_mux),
        .I3(reg_axi_in_pkt),
        .I4(SR),
        .O(tready_thrtl_reg));
  (* SOFT_HLUTNM = "soft_lutpair372" *) 
  LUT2 #(
    .INIT(4'hB)) 
    reg_tcfg_gnt_i_1
       (.I0(tx_cfg_gnt),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .O(tx_cfg_gnt_mux));
  FDRE rx_busy_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(rx_busy0),
        .Q(rx_busy),
        .R(SR));
  LUT4 #(
    .INIT(16'h000E)) 
    rx_completion_busy_i_1
       (.I0(rx_completion_busy),
        .I1(req_compl_int),
        .I2(SR),
        .I3(\throttle_ctl_pipeline.reg_tlast_reg ),
        .O(rx_completion_busy_i_1_n_0));
  FDRE rx_completion_busy_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(rx_completion_busy_i_1_n_0),
        .Q(rx_completion_busy),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair391" *) 
  LUT2 #(
    .INIT(4'h8)) 
    startup_cfgclk_INST_0
       (.I0(user_app_rdy_gnt_reg_rep_0),
        .I1(startup_cfgclk_mux),
        .O(startup_cfgclk));
  (* SOFT_HLUTNM = "soft_lutpair391" *) 
  LUT2 #(
    .INIT(4'h8)) 
    startup_cfgmclk_INST_0
       (.I0(user_app_rdy_gnt_reg_rep_0),
        .I1(startup_cfgmclk_mux),
        .O(startup_cfgmclk));
  (* SOFT_HLUTNM = "soft_lutpair392" *) 
  LUT2 #(
    .INIT(4'h8)) 
    startup_inst_i_1
       (.I0(user_app_rdy_gnt_reg_rep_0),
        .I1(startup_clk),
        .O(startup_clk_mux));
  (* SOFT_HLUTNM = "soft_lutpair395" *) 
  LUT2 #(
    .INIT(4'h8)) 
    startup_inst_i_2
       (.I0(user_app_rdy_gnt_reg_rep_0),
        .I1(startup_gsr),
        .O(startup_gsr_mux));
  (* SOFT_HLUTNM = "soft_lutpair395" *) 
  LUT2 #(
    .INIT(4'h8)) 
    startup_inst_i_3
       (.I0(user_app_rdy_gnt_reg_rep_0),
        .I1(startup_gts),
        .O(startup_gts_mux));
  (* SOFT_HLUTNM = "soft_lutpair397" *) 
  LUT2 #(
    .INIT(4'hB)) 
    startup_inst_i_4
       (.I0(startup_keyclearb),
        .I1(user_app_rdy_gnt_reg_rep_0),
        .O(startup_keyclearb_mux));
  (* SOFT_HLUTNM = "soft_lutpair396" *) 
  LUT2 #(
    .INIT(4'h8)) 
    startup_inst_i_5
       (.I0(user_app_rdy_gnt_reg_rep_0),
        .I1(startup_pack),
        .O(startup_pack_mux));
  (* SOFT_HLUTNM = "soft_lutpair396" *) 
  LUT2 #(
    .INIT(4'h8)) 
    startup_inst_i_6
       (.I0(user_app_rdy_gnt_reg_rep_0),
        .I1(startup_usrcclko),
        .O(startup_usrcclko_mux));
  (* SOFT_HLUTNM = "soft_lutpair407" *) 
  LUT2 #(
    .INIT(4'hB)) 
    startup_inst_i_7
       (.I0(startup_usrcclkts),
        .I1(user_app_rdy_gnt_reg_rep_0),
        .O(startup_usrcclkts_mux));
  (* SOFT_HLUTNM = "soft_lutpair397" *) 
  LUT2 #(
    .INIT(4'h8)) 
    startup_inst_i_8
       (.I0(user_app_rdy_gnt_reg_rep_0),
        .I1(startup_usrdoneo),
        .O(startup_usrdoneo_mux));
  (* SOFT_HLUTNM = "soft_lutpair407" *) 
  LUT2 #(
    .INIT(4'hB)) 
    startup_inst_i_9
       (.I0(startup_usrdonets),
        .I1(user_app_rdy_gnt_reg_rep_0),
        .O(startup_usrdonets_mux));
  (* SOFT_HLUTNM = "soft_lutpair392" *) 
  LUT2 #(
    .INIT(4'h8)) 
    startup_preq_INST_0
       (.I0(user_app_rdy_gnt_reg_rep_0),
        .I1(startup_preq_mux),
        .O(startup_preq));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[0]_i_1 
       (.I0(s_axis_tx_tdata[0]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[0]),
        .O(user_app_rdy_gnt_reg_rep__1_1[0]));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[100]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[100]),
        .O(user_app_rdy_gnt_reg_rep__1_1[100]));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[101]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[101]),
        .O(user_app_rdy_gnt_reg_rep__1_1[101]));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[102]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[102]),
        .O(user_app_rdy_gnt_reg_rep__1_1[102]));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[103]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[103]),
        .O(user_app_rdy_gnt_reg_rep__1_1[103]));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[104]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[104]),
        .O(user_app_rdy_gnt_reg_rep__1_1[104]));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[105]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[105]),
        .O(user_app_rdy_gnt_reg_rep__1_1[105]));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[106]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[106]),
        .O(user_app_rdy_gnt_reg_rep__1_1[106]));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[107]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[107]),
        .O(user_app_rdy_gnt_reg_rep__1_1[107]));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[108]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[108]),
        .O(user_app_rdy_gnt_reg_rep__1_1[108]));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[109]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[109]),
        .O(user_app_rdy_gnt_reg_rep__1_1[109]));
  (* SOFT_HLUTNM = "soft_lutpair386" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[10]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(s_axis_tx_tdata[10]),
        .O(user_app_rdy_gnt_reg_rep__1_1[10]));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[110]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[110]),
        .O(user_app_rdy_gnt_reg_rep__1_1[110]));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[111]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[111]),
        .O(user_app_rdy_gnt_reg_rep__1_1[111]));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[112]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[112]),
        .O(user_app_rdy_gnt_reg_rep__1_1[112]));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[113]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[113]),
        .O(user_app_rdy_gnt_reg_rep__1_1[113]));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[114]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[114]),
        .O(user_app_rdy_gnt_reg_rep__1_1[114]));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[115]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[115]),
        .O(user_app_rdy_gnt_reg_rep__1_1[115]));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[116]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[116]),
        .O(user_app_rdy_gnt_reg_rep__1_1[116]));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[117]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[117]),
        .O(user_app_rdy_gnt_reg_rep__1_1[117]));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[118]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[118]),
        .O(user_app_rdy_gnt_reg_rep__1_1[118]));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[119]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[119]),
        .O(user_app_rdy_gnt_reg_rep__1_1[119]));
  (* SOFT_HLUTNM = "soft_lutpair386" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[11]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(s_axis_tx_tdata[11]),
        .O(user_app_rdy_gnt_reg_rep__1_1[11]));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[120]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[120]),
        .O(user_app_rdy_gnt_reg_rep__1_1[120]));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[121]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[121]),
        .O(user_app_rdy_gnt_reg_rep__1_1[121]));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[122]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[122]),
        .O(user_app_rdy_gnt_reg_rep__1_1[122]));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[123]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[123]),
        .O(user_app_rdy_gnt_reg_rep__1_1[123]));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[124]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[124]),
        .O(user_app_rdy_gnt_reg_rep__1_1[124]));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[125]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[125]),
        .O(user_app_rdy_gnt_reg_rep__1_1[125]));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[126]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[126]),
        .O(user_app_rdy_gnt_reg_rep__1_1[126]));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[127]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[127]),
        .O(user_app_rdy_gnt_reg_rep__1_1[127]));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[12]_i_1 
       (.I0(s_axis_tx_tdata[12]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(s_axis_tx_tdata_cpler[10]),
        .O(user_app_rdy_gnt_reg_rep__1_1[12]));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[13]_i_1 
       (.I0(s_axis_tx_tdata[13]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(s_axis_tx_tdata_cpler[11]),
        .O(user_app_rdy_gnt_reg_rep__1_1[13]));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[14]_i_1 
       (.I0(s_axis_tx_tdata[14]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(s_axis_tx_tdata_cpler[12]),
        .O(user_app_rdy_gnt_reg_rep__1_1[14]));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[15]_i_1 
       (.I0(s_axis_tx_tdata[15]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(s_axis_tx_tdata_cpler[13]),
        .O(user_app_rdy_gnt_reg_rep__1_1[15]));
  (* SOFT_HLUTNM = "soft_lutpair385" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[16]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(s_axis_tx_tdata[16]),
        .O(user_app_rdy_gnt_reg_rep__1_1[16]));
  (* SOFT_HLUTNM = "soft_lutpair385" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[17]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(s_axis_tx_tdata[17]),
        .O(user_app_rdy_gnt_reg_rep__1_1[17]));
  (* SOFT_HLUTNM = "soft_lutpair384" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[18]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(s_axis_tx_tdata[18]),
        .O(user_app_rdy_gnt_reg_rep__1_1[18]));
  (* SOFT_HLUTNM = "soft_lutpair384" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[19]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(s_axis_tx_tdata[19]),
        .O(user_app_rdy_gnt_reg_rep__1_1[19]));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[1]_i_1 
       (.I0(s_axis_tx_tdata[1]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[1]),
        .O(user_app_rdy_gnt_reg_rep__1_1[1]));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[20]_i_1 
       (.I0(s_axis_tx_tdata[20]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(s_axis_tx_tdata_cpler[14]),
        .O(user_app_rdy_gnt_reg_rep__1_1[20]));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[21]_i_1 
       (.I0(s_axis_tx_tdata[21]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(s_axis_tx_tdata_cpler[15]),
        .O(user_app_rdy_gnt_reg_rep__1_1[21]));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[22]_i_1 
       (.I0(s_axis_tx_tdata[22]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(s_axis_tx_tdata_cpler[16]),
        .O(user_app_rdy_gnt_reg_rep__1_1[22]));
  (* SOFT_HLUTNM = "soft_lutpair383" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[23]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(s_axis_tx_tdata[23]),
        .O(user_app_rdy_gnt_reg_rep__1_1[23]));
  (* SOFT_HLUTNM = "soft_lutpair383" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[24]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(s_axis_tx_tdata[24]),
        .O(user_app_rdy_gnt_reg_rep__1_1[24]));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[25]_i_1 
       (.I0(s_axis_tx_tdata[25]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(s_axis_tx_tdata_cpler[17]),
        .O(user_app_rdy_gnt_reg_rep__1_1[25]));
  (* SOFT_HLUTNM = "soft_lutpair382" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[26]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(s_axis_tx_tdata[26]),
        .O(user_app_rdy_gnt_reg_rep__1_1[26]));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[27]_i_1 
       (.I0(s_axis_tx_tdata[27]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(s_axis_tx_tdata_cpler[17]),
        .O(user_app_rdy_gnt_reg_rep__1_1[27]));
  (* SOFT_HLUTNM = "soft_lutpair382" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[28]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(s_axis_tx_tdata[28]),
        .O(user_app_rdy_gnt_reg_rep__1_1[28]));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[29]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[29]),
        .O(user_app_rdy_gnt_reg_rep__1_1[29]));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[2]_i_1 
       (.I0(s_axis_tx_tdata[2]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(s_axis_tx_tdata_cpler[2]),
        .O(user_app_rdy_gnt_reg_rep__1_1[2]));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[30]_i_1 
       (.I0(s_axis_tx_tdata[30]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[18]),
        .O(user_app_rdy_gnt_reg_rep__1_1[30]));
  (* SOFT_HLUTNM = "soft_lutpair381" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[31]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(s_axis_tx_tdata[31]),
        .O(user_app_rdy_gnt_reg_rep__1_1[31]));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[32]_i_1 
       (.I0(s_axis_tx_tdata[32]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(s_axis_tx_tdata_cpler[19]),
        .O(user_app_rdy_gnt_reg_rep__1_1[32]));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[33]_i_1 
       (.I0(s_axis_tx_tdata[33]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(s_axis_tx_tdata_cpler[20]),
        .O(user_app_rdy_gnt_reg_rep__1_1[33]));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[34]_i_1 
       (.I0(s_axis_tx_tdata[34]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(s_axis_tx_tdata_cpler[21]),
        .O(user_app_rdy_gnt_reg_rep__1_1[34]));
  (* SOFT_HLUTNM = "soft_lutpair381" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[35]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(s_axis_tx_tdata[35]),
        .O(user_app_rdy_gnt_reg_rep__1_1[35]));
  (* SOFT_HLUTNM = "soft_lutpair380" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[36]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(s_axis_tx_tdata[36]),
        .O(user_app_rdy_gnt_reg_rep__1_1[36]));
  (* SOFT_HLUTNM = "soft_lutpair380" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[37]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(s_axis_tx_tdata[37]),
        .O(user_app_rdy_gnt_reg_rep__1_1[37]));
  (* SOFT_HLUTNM = "soft_lutpair379" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[38]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(s_axis_tx_tdata[38]),
        .O(user_app_rdy_gnt_reg_rep__1_1[38]));
  (* SOFT_HLUTNM = "soft_lutpair379" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[39]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(s_axis_tx_tdata[39]),
        .O(user_app_rdy_gnt_reg_rep__1_1[39]));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[3]_i_1 
       (.I0(s_axis_tx_tdata[3]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(s_axis_tx_tdata_cpler[3]),
        .O(user_app_rdy_gnt_reg_rep__1_1[3]));
  (* SOFT_HLUTNM = "soft_lutpair378" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[40]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(s_axis_tx_tdata[40]),
        .O(user_app_rdy_gnt_reg_rep__1_1[40]));
  (* SOFT_HLUTNM = "soft_lutpair378" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[41]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(s_axis_tx_tdata[41]),
        .O(user_app_rdy_gnt_reg_rep__1_1[41]));
  (* SOFT_HLUTNM = "soft_lutpair377" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[42]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(s_axis_tx_tdata[42]),
        .O(user_app_rdy_gnt_reg_rep__1_1[42]));
  (* SOFT_HLUTNM = "soft_lutpair377" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[43]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(s_axis_tx_tdata[43]),
        .O(user_app_rdy_gnt_reg_rep__1_1[43]));
  (* SOFT_HLUTNM = "soft_lutpair376" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[44]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(s_axis_tx_tdata[44]),
        .O(user_app_rdy_gnt_reg_rep__1_1[44]));
  (* SOFT_HLUTNM = "soft_lutpair376" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[45]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(s_axis_tx_tdata[45]),
        .O(user_app_rdy_gnt_reg_rep__1_1[45]));
  (* SOFT_HLUTNM = "soft_lutpair375" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[46]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(s_axis_tx_tdata[46]),
        .O(user_app_rdy_gnt_reg_rep__1_1[46]));
  (* SOFT_HLUTNM = "soft_lutpair375" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[47]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__2_n_0),
        .I1(s_axis_tx_tdata[47]),
        .O(user_app_rdy_gnt_reg_rep__1_1[47]));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[48]_i_1 
       (.I0(s_axis_tx_tdata[48]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(s_axis_tx_tdata_cpler[22]),
        .O(user_app_rdy_gnt_reg_rep__1_1[48]));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[49]_i_1 
       (.I0(s_axis_tx_tdata[49]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(s_axis_tx_tdata_cpler[23]),
        .O(user_app_rdy_gnt_reg_rep__1_1[49]));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[4]_i_1 
       (.I0(s_axis_tx_tdata[4]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(s_axis_tx_tdata_cpler[4]),
        .O(user_app_rdy_gnt_reg_rep__1_1[4]));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[50]_i_1 
       (.I0(s_axis_tx_tdata[50]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(s_axis_tx_tdata_cpler[24]),
        .O(user_app_rdy_gnt_reg_rep__1_1[50]));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[51]_i_1 
       (.I0(s_axis_tx_tdata[51]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(s_axis_tx_tdata_cpler[25]),
        .O(user_app_rdy_gnt_reg_rep__1_1[51]));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[52]_i_1 
       (.I0(s_axis_tx_tdata[52]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(s_axis_tx_tdata_cpler[26]),
        .O(user_app_rdy_gnt_reg_rep__1_1[52]));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[53]_i_1 
       (.I0(s_axis_tx_tdata[53]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(s_axis_tx_tdata_cpler[27]),
        .O(user_app_rdy_gnt_reg_rep__1_1[53]));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[54]_i_1 
       (.I0(s_axis_tx_tdata[54]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(s_axis_tx_tdata_cpler[28]),
        .O(user_app_rdy_gnt_reg_rep__1_1[54]));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[55]_i_1 
       (.I0(s_axis_tx_tdata[55]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[29]),
        .O(user_app_rdy_gnt_reg_rep__1_1[55]));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[56]_i_1 
       (.I0(s_axis_tx_tdata[56]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[30]),
        .O(user_app_rdy_gnt_reg_rep__1_1[56]));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[57]_i_1 
       (.I0(s_axis_tx_tdata[57]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[31]),
        .O(user_app_rdy_gnt_reg_rep__1_1[57]));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[58]_i_1 
       (.I0(s_axis_tx_tdata[58]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[32]),
        .O(user_app_rdy_gnt_reg_rep__1_1[58]));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[59]_i_1 
       (.I0(s_axis_tx_tdata[59]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[33]),
        .O(user_app_rdy_gnt_reg_rep__1_1[59]));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[5]_i_1 
       (.I0(s_axis_tx_tdata[5]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(s_axis_tx_tdata_cpler[5]),
        .O(user_app_rdy_gnt_reg_rep__1_1[5]));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[60]_i_1 
       (.I0(s_axis_tx_tdata[60]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[34]),
        .O(user_app_rdy_gnt_reg_rep__1_1[60]));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[61]_i_1 
       (.I0(s_axis_tx_tdata[61]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[35]),
        .O(user_app_rdy_gnt_reg_rep__1_1[61]));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[62]_i_1 
       (.I0(s_axis_tx_tdata[62]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[36]),
        .O(user_app_rdy_gnt_reg_rep__1_1[62]));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[63]_i_1 
       (.I0(s_axis_tx_tdata[63]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[37]),
        .O(user_app_rdy_gnt_reg_rep__1_1[63]));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[64]_i_1 
       (.I0(s_axis_tx_tdata[64]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[38]),
        .O(user_app_rdy_gnt_reg_rep__1_1[64]));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[65]_i_1 
       (.I0(s_axis_tx_tdata[65]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[39]),
        .O(user_app_rdy_gnt_reg_rep__1_1[65]));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[66]_i_1 
       (.I0(s_axis_tx_tdata[66]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[40]),
        .O(user_app_rdy_gnt_reg_rep__1_1[66]));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[67]_i_1 
       (.I0(s_axis_tx_tdata[67]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[41]),
        .O(user_app_rdy_gnt_reg_rep__1_1[67]));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[68]_i_1 
       (.I0(s_axis_tx_tdata[68]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[42]),
        .O(user_app_rdy_gnt_reg_rep__1_1[68]));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[69]_i_1 
       (.I0(s_axis_tx_tdata[69]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[43]),
        .O(user_app_rdy_gnt_reg_rep__1_1[69]));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[6]_i_1 
       (.I0(s_axis_tx_tdata[6]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(s_axis_tx_tdata_cpler[6]),
        .O(user_app_rdy_gnt_reg_rep__1_1[6]));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[70]_i_1 
       (.I0(s_axis_tx_tdata[70]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[44]),
        .O(user_app_rdy_gnt_reg_rep__1_1[70]));
  (* SOFT_HLUTNM = "soft_lutpair372" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[71]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[71]),
        .O(user_app_rdy_gnt_reg_rep__1_1[71]));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[72]_i_1 
       (.I0(s_axis_tx_tdata[72]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[45]),
        .O(user_app_rdy_gnt_reg_rep__1_1[72]));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[73]_i_1 
       (.I0(s_axis_tx_tdata[73]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[46]),
        .O(user_app_rdy_gnt_reg_rep__1_1[73]));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[74]_i_1 
       (.I0(s_axis_tx_tdata[74]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[47]),
        .O(user_app_rdy_gnt_reg_rep__1_1[74]));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[75]_i_1 
       (.I0(s_axis_tx_tdata[75]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[48]),
        .O(user_app_rdy_gnt_reg_rep__1_1[75]));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[76]_i_1 
       (.I0(s_axis_tx_tdata[76]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[49]),
        .O(user_app_rdy_gnt_reg_rep__1_1[76]));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[77]_i_1 
       (.I0(s_axis_tx_tdata[77]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[50]),
        .O(user_app_rdy_gnt_reg_rep__1_1[77]));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[78]_i_1 
       (.I0(s_axis_tx_tdata[78]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[51]),
        .O(user_app_rdy_gnt_reg_rep__1_1[78]));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[79]_i_1 
       (.I0(s_axis_tx_tdata[79]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[52]),
        .O(user_app_rdy_gnt_reg_rep__1_1[79]));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[7]_i_1 
       (.I0(s_axis_tx_tdata[7]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(s_axis_tx_tdata_cpler[7]),
        .O(user_app_rdy_gnt_reg_rep__1_1[7]));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[80]_i_1 
       (.I0(s_axis_tx_tdata[80]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[53]),
        .O(user_app_rdy_gnt_reg_rep__1_1[80]));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[81]_i_1 
       (.I0(s_axis_tx_tdata[81]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[54]),
        .O(user_app_rdy_gnt_reg_rep__1_1[81]));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[82]_i_1 
       (.I0(s_axis_tx_tdata[82]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[55]),
        .O(user_app_rdy_gnt_reg_rep__1_1[82]));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[83]_i_1 
       (.I0(s_axis_tx_tdata[83]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[56]),
        .O(user_app_rdy_gnt_reg_rep__1_1[83]));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[84]_i_1 
       (.I0(s_axis_tx_tdata[84]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[57]),
        .O(user_app_rdy_gnt_reg_rep__1_1[84]));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[85]_i_1 
       (.I0(s_axis_tx_tdata[85]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[58]),
        .O(user_app_rdy_gnt_reg_rep__1_1[85]));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[86]_i_1 
       (.I0(s_axis_tx_tdata[86]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[59]),
        .O(user_app_rdy_gnt_reg_rep__1_1[86]));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[87]_i_1 
       (.I0(s_axis_tx_tdata[87]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[60]),
        .O(user_app_rdy_gnt_reg_rep__1_1[87]));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[88]_i_1 
       (.I0(s_axis_tx_tdata[88]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[61]),
        .O(user_app_rdy_gnt_reg_rep__1_1[88]));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[89]_i_1 
       (.I0(s_axis_tx_tdata[89]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[62]),
        .O(user_app_rdy_gnt_reg_rep__1_1[89]));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[8]_i_1 
       (.I0(s_axis_tx_tdata[8]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(s_axis_tx_tdata_cpler[8]),
        .O(user_app_rdy_gnt_reg_rep__1_1[8]));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[90]_i_1 
       (.I0(s_axis_tx_tdata[90]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[63]),
        .O(user_app_rdy_gnt_reg_rep__1_1[90]));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[91]_i_1 
       (.I0(s_axis_tx_tdata[91]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[64]),
        .O(user_app_rdy_gnt_reg_rep__1_1[91]));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[92]_i_1 
       (.I0(s_axis_tx_tdata[92]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[65]),
        .O(user_app_rdy_gnt_reg_rep__1_1[92]));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[93]_i_1 
       (.I0(s_axis_tx_tdata[93]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[66]),
        .O(user_app_rdy_gnt_reg_rep__1_1[93]));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[94]_i_1 
       (.I0(s_axis_tx_tdata[94]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[67]),
        .O(user_app_rdy_gnt_reg_rep__1_1[94]));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[95]_i_1 
       (.I0(s_axis_tx_tdata[95]),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(s_axis_tx_tdata_cpler[68]),
        .O(user_app_rdy_gnt_reg_rep__1_1[95]));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[96]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[96]),
        .O(user_app_rdy_gnt_reg_rep__1_1[96]));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[97]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[97]),
        .O(user_app_rdy_gnt_reg_rep__1_1[97]));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[98]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[98]),
        .O(user_app_rdy_gnt_reg_rep__1_1[98]));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tdata[99]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tdata[99]),
        .O(user_app_rdy_gnt_reg_rep__1_1[99]));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tdata[9]_i_1 
       (.I0(s_axis_tx_tdata[9]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(s_axis_tx_tdata_cpler[9]),
        .O(user_app_rdy_gnt_reg_rep__1_1[9]));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tkeep[11]_i_1 
       (.I0(s_axis_tx_tkeep[1]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(Q[0]),
        .O(\s_axis_tx_tkeep[15] [1]));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tkeep[15]_i_1 
       (.I0(s_axis_tx_tkeep[2]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(Q[1]),
        .O(\s_axis_tx_tkeep[15] [2]));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tkeep[7]_i_1 
       (.I0(s_axis_tx_tkeep[0]),
        .I1(user_app_rdy_gnt_reg_rep__2_n_0),
        .I2(Q[0]),
        .O(\s_axis_tx_tkeep[15] [0]));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tlast_i_1 
       (.I0(s_axis_tx_tlast),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(\throttle_ctl_pipeline.reg_tlast_reg ),
        .O(s_axis_tx_tlast_mux));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tuser[0]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tuser[0]),
        .O(user_app_rdy_gnt_reg_rep__1_2[0]));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tuser[1]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tuser[1]),
        .O(user_app_rdy_gnt_reg_rep__1_2[1]));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tuser[2]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tuser[2]),
        .O(user_app_rdy_gnt_reg_rep__1_2[2]));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \throttle_ctl_pipeline.reg_tuser[3]_i_1 
       (.I0(user_app_rdy_gnt_reg_rep__1_0),
        .I1(s_axis_tx_tuser[3]),
        .O(user_app_rdy_gnt_reg_rep__1_2[3]));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \throttle_ctl_pipeline.reg_tvalid_i_1 
       (.I0(s_axis_tx_tvalid),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(\throttle_ctl_pipeline.reg_tlast_reg ),
        .O(s_axis_tx_tvalid_mux));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT5 #(
    .INIT(32'h47CFFFFF)) 
    tready_thrtl_i_3
       (.I0(s_axis_tx_tlast),
        .I1(user_app_rdy_gnt_reg_rep__1_0),
        .I2(\throttle_ctl_pipeline.reg_tlast_reg ),
        .I3(s_axis_tx_tvalid),
        .I4(s_axis_tx_tready_mux),
        .O(s_axis_tx_tlast_0));
  LUT6 #(
    .INIT(64'h00000000F8F8A808)) 
    tready_thrtl_i_4
       (.I0(user_app_rdy_gnt_reg_rep__1_1[30]),
        .I1(s_axis_tx_tdata_cpler[0]),
        .I2(user_app_rdy_gnt_reg_rep__1_0),
        .I3(s_axis_tx_tdata[0]),
        .I4(s_axis_tx_tdata[29]),
        .I5(tready_thrtl_i_8_n_0),
        .O(\gen_cpl_128.s_axis_tx_tdata_reg[0] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFBFFF)) 
    tready_thrtl_i_8
       (.I0(tready_thrtl_i_9_n_0),
        .I1(tready_thrtl_i_4_0),
        .I2(s_axis_tx_tuser[0]),
        .I3(user_app_rdy_gnt_reg_rep__1_0),
        .I4(s_axis_tx_tdata[15]),
        .I5(reg_axi_in_pkt),
        .O(tready_thrtl_i_8_n_0));
  LUT6 #(
    .INIT(64'hAAA08A808A808A80)) 
    tready_thrtl_i_9
       (.I0(user_app_rdy_gnt_reg_rep__1_1[30]),
        .I1(s_axis_tx_tdata[1]),
        .I2(user_app_rdy_gnt_reg_rep__1_0),
        .I3(s_axis_tx_tdata_cpler[1]),
        .I4(s_axis_tx_tdata[29]),
        .I5(s_axis_tx_tdata[0]),
        .O(tready_thrtl_i_9_n_0));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    trn_rdst_rdy_i_5
       (.I0(m_axis_rx_tready),
        .I1(user_app_rdy_gnt_reg_rep__0_0),
        .I2(\m_axis_rx_tdata_reg[0] ),
        .O(m_axis_rx_tready_mux));
  (* SOFT_HLUTNM = "soft_lutpair400" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \tx_buf_av[0]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(trn_tbuf_av[0]),
        .O(tx_buf_av[0]));
  (* SOFT_HLUTNM = "soft_lutpair399" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \tx_buf_av[1]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(trn_tbuf_av[1]),
        .O(tx_buf_av[1]));
  (* SOFT_HLUTNM = "soft_lutpair399" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \tx_buf_av[2]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(trn_tbuf_av[2]),
        .O(tx_buf_av[2]));
  (* SOFT_HLUTNM = "soft_lutpair398" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \tx_buf_av[3]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(trn_tbuf_av[3]),
        .O(tx_buf_av[3]));
  (* SOFT_HLUTNM = "soft_lutpair398" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \tx_buf_av[4]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(trn_tbuf_av[4]),
        .O(tx_buf_av[4]));
  (* SOFT_HLUTNM = "soft_lutpair393" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \tx_buf_av[5]_INST_0 
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(trn_tbuf_av[5]),
        .O(tx_buf_av[5]));
  (* SOFT_HLUTNM = "soft_lutpair388" *) 
  LUT2 #(
    .INIT(4'h8)) 
    tx_cfg_req_INST_0
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(trn_tcfg_req),
        .O(tx_cfg_req));
  (* SOFT_HLUTNM = "soft_lutpair388" *) 
  LUT2 #(
    .INIT(4'h8)) 
    tx_err_drop_INST_0
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(trn_terr_drop),
        .O(tx_err_drop));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000010)) 
    user_app_rdy_gnt_i_1
       (.I0(rx_completion_busy),
        .I1(req_compl_int),
        .I2(user_app_rdy_gnt_reg_rep__3_0),
        .I3(rx_busy),
        .I4(user_app_rdy_gnt_reg_rep__3_1),
        .I5(user_app_rdy_gnt_reg_rep_0),
        .O(user_app_rdy_gnt_i_1_n_0));
  (* ORIG_CELL_NAME = "user_app_rdy_gnt_reg" *) 
  FDRE #(
    .INIT(1'b0)) 
    user_app_rdy_gnt_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(user_app_rdy_gnt_i_1_n_0),
        .Q(user_app_rdy_gnt_reg_0),
        .R(1'b0));
  (* ORIG_CELL_NAME = "user_app_rdy_gnt_reg" *) 
  FDRE #(
    .INIT(1'b0)) 
    user_app_rdy_gnt_reg_rep
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(user_app_rdy_gnt_rep_i_1_n_0),
        .Q(user_app_rdy_gnt_reg_rep_0),
        .R(1'b0));
  (* ORIG_CELL_NAME = "user_app_rdy_gnt_reg" *) 
  FDRE #(
    .INIT(1'b0)) 
    user_app_rdy_gnt_reg_rep__0
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(user_app_rdy_gnt_rep__0_i_1_n_0),
        .Q(user_app_rdy_gnt_reg_rep__0_0),
        .R(1'b0));
  (* ORIG_CELL_NAME = "user_app_rdy_gnt_reg" *) 
  FDRE #(
    .INIT(1'b0)) 
    user_app_rdy_gnt_reg_rep__1
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(user_app_rdy_gnt_rep__1_i_1_n_0),
        .Q(user_app_rdy_gnt_reg_rep__1_0),
        .R(1'b0));
  (* ORIG_CELL_NAME = "user_app_rdy_gnt_reg" *) 
  FDRE #(
    .INIT(1'b0)) 
    user_app_rdy_gnt_reg_rep__2
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(user_app_rdy_gnt_rep__2_i_1_n_0),
        .Q(user_app_rdy_gnt_reg_rep__2_n_0),
        .R(1'b0));
  (* ORIG_CELL_NAME = "user_app_rdy_gnt_reg" *) 
  FDRE #(
    .INIT(1'b0)) 
    user_app_rdy_gnt_reg_rep__3
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(user_app_rdy_gnt_rep__3_i_1_n_0),
        .Q(user_app_rdy_gnt_reg_rep__3_n_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000010)) 
    user_app_rdy_gnt_rep__0_i_1
       (.I0(rx_completion_busy),
        .I1(req_compl_int),
        .I2(user_app_rdy_gnt_reg_rep__3_0),
        .I3(rx_busy),
        .I4(user_app_rdy_gnt_reg_rep__3_1),
        .I5(user_app_rdy_gnt_reg_rep_0),
        .O(user_app_rdy_gnt_rep__0_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000010)) 
    user_app_rdy_gnt_rep__1_i_1
       (.I0(rx_completion_busy),
        .I1(req_compl_int),
        .I2(user_app_rdy_gnt_reg_rep__3_0),
        .I3(rx_busy),
        .I4(user_app_rdy_gnt_reg_rep__3_1),
        .I5(user_app_rdy_gnt_reg_rep_0),
        .O(user_app_rdy_gnt_rep__1_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000010)) 
    user_app_rdy_gnt_rep__2_i_1
       (.I0(rx_completion_busy),
        .I1(req_compl_int),
        .I2(user_app_rdy_gnt_reg_rep__3_0),
        .I3(rx_busy),
        .I4(user_app_rdy_gnt_reg_rep__3_1),
        .I5(user_app_rdy_gnt_reg_rep_0),
        .O(user_app_rdy_gnt_rep__2_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000010)) 
    user_app_rdy_gnt_rep__3_i_1
       (.I0(rx_completion_busy),
        .I1(req_compl_int),
        .I2(user_app_rdy_gnt_reg_rep__3_0),
        .I3(rx_busy),
        .I4(user_app_rdy_gnt_reg_rep__3_1),
        .I5(user_app_rdy_gnt_reg_rep_0),
        .O(user_app_rdy_gnt_rep__3_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000010)) 
    user_app_rdy_gnt_rep_i_1
       (.I0(rx_completion_busy),
        .I1(req_compl_int),
        .I2(user_app_rdy_gnt_reg_rep__3_0),
        .I3(rx_busy),
        .I4(user_app_rdy_gnt_reg_rep__3_1),
        .I5(user_app_rdy_gnt_reg_rep_0),
        .O(user_app_rdy_gnt_rep_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair387" *) 
  LUT2 #(
    .INIT(4'h8)) 
    user_lnk_up_INST_0
       (.I0(user_app_rdy_gnt_reg_0),
        .I1(out),
        .O(user_lnk_up));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_tandem_cpler_rx_eng" *) 
module pcie_7x_0_pcie_7x_0_tandem_cpler_rx_eng
   (req_compl_int,
    req_ep,
    req_td,
    \pio_rx_sm_128.m_axis_rx_tready_reg_0 ,
    req_compl_wd,
    \FSM_sequential_pio_rx_sm_128.state_reg[2]_0 ,
    Q,
    rx_busy0,
    data_hold,
    DI,
    S,
    \pio_rx_sm_128.req_be_reg[3]_0 ,
    \pio_rx_sm_128.req_len_reg[9]_0 ,
    \pio_rx_sm_128.req_attr_reg[1]_0 ,
    \pio_rx_sm_128.req_tc_reg[2]_0 ,
    \pio_rx_sm_128.req_addr_reg[6]_0 ,
    \pio_rx_sm_128.req_tag_reg[7]_0 ,
    \pio_rx_sm_128.req_rid_reg[15]_0 ,
    SR,
    \pio_rx_sm_128.req_compl_reg_0 ,
    pipe_userclk2_in,
    E,
    \pio_rx_sm_128.req_ep_reg_0 ,
    \pio_rx_sm_128.req_td_reg_0 ,
    m_axis_rx_tvalid_mux,
    \FSM_sequential_pio_rx_sm_128.state_reg[1]_0 ,
    \FSM_sequential_pio_rx_sm_128.state_reg[2]_1 ,
    \FSM_sequential_pio_rx_sm_128.state_reg[2]_2 ,
    \pio_rx_sm_128.req_addr_reg[2]_0 ,
    \pio_rx_sm_128.req_len_reg[0]_0 ,
    rx_busy,
    data_prev_reg,
    m_axis_rx_tready,
    pkt_len_counter_dec__0_carry,
    \FSM_sequential_pio_rx_sm_128.state[2]_i_2_0 ,
    \pio_rx_sm_128.req_compl_wd_reg_0 ,
    D,
    \pio_rx_sm_128.tlp_type_reg[7]_0 ,
    \pio_rx_sm_128.req_be_reg[0]_0 ,
    \pio_rx_sm_128.req_be_reg[3]_1 ,
    \pio_rx_sm_128.req_len_reg[9]_1 ,
    \pio_rx_sm_128.req_attr_reg[1]_1 ,
    \pio_rx_sm_128.req_tc_reg[2]_1 ,
    \pio_rx_sm_128.req_addr_reg[6]_1 ,
    \pio_rx_sm_128.req_tag_reg[7]_1 ,
    \pio_rx_sm_128.req_rid_reg[15]_1 );
  output req_compl_int;
  output req_ep;
  output req_td;
  output \pio_rx_sm_128.m_axis_rx_tready_reg_0 ;
  output req_compl_wd;
  output \FSM_sequential_pio_rx_sm_128.state_reg[2]_0 ;
  output [2:0]Q;
  output rx_busy0;
  output data_hold;
  output [0:0]DI;
  output [0:0]S;
  output [3:0]\pio_rx_sm_128.req_be_reg[3]_0 ;
  output [9:0]\pio_rx_sm_128.req_len_reg[9]_0 ;
  output [1:0]\pio_rx_sm_128.req_attr_reg[1]_0 ;
  output [2:0]\pio_rx_sm_128.req_tc_reg[2]_0 ;
  output [4:0]\pio_rx_sm_128.req_addr_reg[6]_0 ;
  output [7:0]\pio_rx_sm_128.req_tag_reg[7]_0 ;
  output [15:0]\pio_rx_sm_128.req_rid_reg[15]_0 ;
  input [0:0]SR;
  input \pio_rx_sm_128.req_compl_reg_0 ;
  input pipe_userclk2_in;
  input [0:0]E;
  input \pio_rx_sm_128.req_ep_reg_0 ;
  input \pio_rx_sm_128.req_td_reg_0 ;
  input m_axis_rx_tvalid_mux;
  input \FSM_sequential_pio_rx_sm_128.state_reg[1]_0 ;
  input \FSM_sequential_pio_rx_sm_128.state_reg[2]_1 ;
  input \FSM_sequential_pio_rx_sm_128.state_reg[2]_2 ;
  input \pio_rx_sm_128.req_addr_reg[2]_0 ;
  input [0:0]\pio_rx_sm_128.req_len_reg[0]_0 ;
  input rx_busy;
  input data_prev_reg;
  input m_axis_rx_tready;
  input [0:0]pkt_len_counter_dec__0_carry;
  input \FSM_sequential_pio_rx_sm_128.state[2]_i_2_0 ;
  input \pio_rx_sm_128.req_compl_wd_reg_0 ;
  input [0:0]D;
  input [7:0]\pio_rx_sm_128.tlp_type_reg[7]_0 ;
  input [0:0]\pio_rx_sm_128.req_be_reg[0]_0 ;
  input [3:0]\pio_rx_sm_128.req_be_reg[3]_1 ;
  input [9:0]\pio_rx_sm_128.req_len_reg[9]_1 ;
  input [1:0]\pio_rx_sm_128.req_attr_reg[1]_1 ;
  input [2:0]\pio_rx_sm_128.req_tc_reg[2]_1 ;
  input [4:0]\pio_rx_sm_128.req_addr_reg[6]_1 ;
  input [7:0]\pio_rx_sm_128.req_tag_reg[7]_1 ;
  input [15:0]\pio_rx_sm_128.req_rid_reg[15]_1 ;

  wire [0:0]D;
  wire [0:0]DI;
  wire [0:0]E;
  wire \FSM_sequential_pio_rx_sm_128.state[1]_i_1_n_0 ;
  wire \FSM_sequential_pio_rx_sm_128.state[1]_i_2_n_0 ;
  wire \FSM_sequential_pio_rx_sm_128.state[2]_i_1_n_0 ;
  wire \FSM_sequential_pio_rx_sm_128.state[2]_i_2_0 ;
  wire \FSM_sequential_pio_rx_sm_128.state[2]_i_2_n_0 ;
  wire \FSM_sequential_pio_rx_sm_128.state[2]_i_3_n_0 ;
  wire \FSM_sequential_pio_rx_sm_128.state[2]_i_4_n_0 ;
  wire \FSM_sequential_pio_rx_sm_128.state[2]_i_5_n_0 ;
  wire \FSM_sequential_pio_rx_sm_128.state_reg[1]_0 ;
  wire \FSM_sequential_pio_rx_sm_128.state_reg[2]_0 ;
  wire \FSM_sequential_pio_rx_sm_128.state_reg[2]_1 ;
  wire \FSM_sequential_pio_rx_sm_128.state_reg[2]_2 ;
  wire [2:0]Q;
  wire [0:0]S;
  wire [0:0]SR;
  wire data_hold;
  wire data_prev_reg;
  wire m_axis_rx_tready;
  wire m_axis_rx_tvalid_mux;
  wire \pio_rx_sm_128.m_axis_rx_tready_i_1_n_0 ;
  wire \pio_rx_sm_128.m_axis_rx_tready_i_2_n_0 ;
  wire \pio_rx_sm_128.m_axis_rx_tready_reg_0 ;
  wire \pio_rx_sm_128.req_addr[6]_i_1_n_0 ;
  wire \pio_rx_sm_128.req_addr_reg[2]_0 ;
  wire [4:0]\pio_rx_sm_128.req_addr_reg[6]_0 ;
  wire [4:0]\pio_rx_sm_128.req_addr_reg[6]_1 ;
  wire [1:0]\pio_rx_sm_128.req_attr_reg[1]_0 ;
  wire [1:0]\pio_rx_sm_128.req_attr_reg[1]_1 ;
  wire [0:0]\pio_rx_sm_128.req_be_reg[0]_0 ;
  wire [3:0]\pio_rx_sm_128.req_be_reg[3]_0 ;
  wire [3:0]\pio_rx_sm_128.req_be_reg[3]_1 ;
  wire \pio_rx_sm_128.req_compl_reg_0 ;
  wire \pio_rx_sm_128.req_compl_wd_i_1_n_0 ;
  wire \pio_rx_sm_128.req_compl_wd_reg_0 ;
  wire \pio_rx_sm_128.req_ep_reg_0 ;
  wire [0:0]\pio_rx_sm_128.req_len_reg[0]_0 ;
  wire [9:0]\pio_rx_sm_128.req_len_reg[9]_0 ;
  wire [9:0]\pio_rx_sm_128.req_len_reg[9]_1 ;
  wire [15:0]\pio_rx_sm_128.req_rid_reg[15]_0 ;
  wire [15:0]\pio_rx_sm_128.req_rid_reg[15]_1 ;
  wire [7:0]\pio_rx_sm_128.req_tag_reg[7]_0 ;
  wire [7:0]\pio_rx_sm_128.req_tag_reg[7]_1 ;
  wire [2:0]\pio_rx_sm_128.req_tc_reg[2]_0 ;
  wire [2:0]\pio_rx_sm_128.req_tc_reg[2]_1 ;
  wire \pio_rx_sm_128.req_td_reg_0 ;
  wire \pio_rx_sm_128.tlp_type[7]_i_1_n_0 ;
  wire [7:0]\pio_rx_sm_128.tlp_type_reg[7]_0 ;
  wire \pio_rx_sm_128.tlp_type_reg_n_0_[0] ;
  wire \pio_rx_sm_128.tlp_type_reg_n_0_[1] ;
  wire \pio_rx_sm_128.tlp_type_reg_n_0_[2] ;
  wire \pio_rx_sm_128.tlp_type_reg_n_0_[3] ;
  wire \pio_rx_sm_128.tlp_type_reg_n_0_[4] ;
  wire \pio_rx_sm_128.tlp_type_reg_n_0_[5] ;
  wire \pio_rx_sm_128.tlp_type_reg_n_0_[6] ;
  wire \pio_rx_sm_128.tlp_type_reg_n_0_[7] ;
  wire pipe_userclk2_in;
  wire [0:0]pkt_len_counter_dec__0_carry;
  wire req_compl_int;
  wire req_compl_wd;
  wire req_ep;
  wire req_td;
  wire rx_busy;
  wire rx_busy0;

  LUT6 #(
    .INIT(64'hFFFFFFFF22FFF0C0)) 
    \FSM_sequential_pio_rx_sm_128.state[1]_i_1 
       (.I0(\FSM_sequential_pio_rx_sm_128.state[2]_i_2_n_0 ),
        .I1(Q[0]),
        .I2(m_axis_rx_tvalid_mux),
        .I3(Q[2]),
        .I4(Q[1]),
        .I5(\FSM_sequential_pio_rx_sm_128.state[1]_i_2_n_0 ),
        .O(\FSM_sequential_pio_rx_sm_128.state[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000080)) 
    \FSM_sequential_pio_rx_sm_128.state[1]_i_2 
       (.I0(\FSM_sequential_pio_rx_sm_128.state_reg[1]_0 ),
        .I1(m_axis_rx_tvalid_mux),
        .I2(\pio_rx_sm_128.m_axis_rx_tready_reg_0 ),
        .I3(Q[2]),
        .I4(Q[0]),
        .O(\FSM_sequential_pio_rx_sm_128.state[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF2FFF2FFFFFCF0F0)) 
    \FSM_sequential_pio_rx_sm_128.state[2]_i_1 
       (.I0(\FSM_sequential_pio_rx_sm_128.state[2]_i_2_n_0 ),
        .I1(Q[0]),
        .I2(\FSM_sequential_pio_rx_sm_128.state[2]_i_3_n_0 ),
        .I3(Q[1]),
        .I4(m_axis_rx_tvalid_mux),
        .I5(Q[2]),
        .O(\FSM_sequential_pio_rx_sm_128.state[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \FSM_sequential_pio_rx_sm_128.state[2]_i_2 
       (.I0(\FSM_sequential_pio_rx_sm_128.state[2]_i_4_n_0 ),
        .I1(\FSM_sequential_pio_rx_sm_128.state[2]_i_5_n_0 ),
        .I2(\pio_rx_sm_128.tlp_type_reg_n_0_[2] ),
        .I3(\pio_rx_sm_128.tlp_type_reg_n_0_[7] ),
        .I4(\pio_rx_sm_128.tlp_type_reg_n_0_[3] ),
        .O(\FSM_sequential_pio_rx_sm_128.state[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h1000000010001000)) 
    \FSM_sequential_pio_rx_sm_128.state[2]_i_3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(m_axis_rx_tvalid_mux),
        .I3(\pio_rx_sm_128.m_axis_rx_tready_reg_0 ),
        .I4(\FSM_sequential_pio_rx_sm_128.state_reg[2]_1 ),
        .I5(\FSM_sequential_pio_rx_sm_128.state_reg[2]_2 ),
        .O(\FSM_sequential_pio_rx_sm_128.state[2]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hA888)) 
    \FSM_sequential_pio_rx_sm_128.state[2]_i_4 
       (.I0(\pio_rx_sm_128.tlp_type_reg_n_0_[1] ),
        .I1(\pio_rx_sm_128.tlp_type_reg_n_0_[5] ),
        .I2(\FSM_sequential_pio_rx_sm_128.state[2]_i_2_0 ),
        .I3(\pio_rx_sm_128.tlp_type_reg_n_0_[6] ),
        .O(\FSM_sequential_pio_rx_sm_128.state[2]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hEEEF)) 
    \FSM_sequential_pio_rx_sm_128.state[2]_i_5 
       (.I0(\pio_rx_sm_128.tlp_type_reg_n_0_[4] ),
        .I1(\pio_rx_sm_128.tlp_type_reg_n_0_[0] ),
        .I2(\pio_rx_sm_128.tlp_type_reg_n_0_[6] ),
        .I3(\FSM_sequential_pio_rx_sm_128.state[2]_i_2_0 ),
        .O(\FSM_sequential_pio_rx_sm_128.state[2]_i_5_n_0 ));
  (* FSM_ENCODED_STATES = "PIO_RX_IO_WR_DW1DW2:01000000,PIO_RX_MEM_WR64_DW3:101,PIO_RX_MEM_RD32_DW1DW2:001,PIO_RX_MEM_WR32_DW1DW2:010,PIO_RX_MEM_RD64_DW1DW2:011,PIO_RX_MEM_WR64_DW1DW2:100,PIO_RX_WAIT_STATE:110,PIO_RX_RST_STATE:000" *) 
  FDRE \FSM_sequential_pio_rx_sm_128.state_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(D),
        .Q(Q[0]),
        .R(SR));
  (* FSM_ENCODED_STATES = "PIO_RX_IO_WR_DW1DW2:01000000,PIO_RX_MEM_WR64_DW3:101,PIO_RX_MEM_RD32_DW1DW2:001,PIO_RX_MEM_WR32_DW1DW2:010,PIO_RX_MEM_RD64_DW1DW2:011,PIO_RX_MEM_WR64_DW1DW2:100,PIO_RX_WAIT_STATE:110,PIO_RX_RST_STATE:000" *) 
  FDRE \FSM_sequential_pio_rx_sm_128.state_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\FSM_sequential_pio_rx_sm_128.state[1]_i_1_n_0 ),
        .Q(Q[1]),
        .R(SR));
  (* FSM_ENCODED_STATES = "PIO_RX_IO_WR_DW1DW2:01000000,PIO_RX_MEM_WR64_DW3:101,PIO_RX_MEM_RD32_DW1DW2:001,PIO_RX_MEM_WR32_DW1DW2:010,PIO_RX_MEM_RD64_DW1DW2:011,PIO_RX_MEM_WR64_DW1DW2:100,PIO_RX_WAIT_STATE:110,PIO_RX_RST_STATE:000" *) 
  FDRE \FSM_sequential_pio_rx_sm_128.state_reg[2] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\FSM_sequential_pio_rx_sm_128.state[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT4 #(
    .INIT(16'h02A2)) 
    data_prev_i_1
       (.I0(m_axis_rx_tvalid_mux),
        .I1(\pio_rx_sm_128.m_axis_rx_tready_reg_0 ),
        .I2(data_prev_reg),
        .I3(m_axis_rx_tready),
        .O(data_hold));
  LUT6 #(
    .INIT(64'hFF0FCFDF0000CCFF)) 
    \pio_rx_sm_128.m_axis_rx_tready_i_1 
       (.I0(\pio_rx_sm_128.req_len_reg[0]_0 ),
        .I1(Q[1]),
        .I2(m_axis_rx_tvalid_mux),
        .I3(Q[2]),
        .I4(\pio_rx_sm_128.m_axis_rx_tready_i_2_n_0 ),
        .I5(\pio_rx_sm_128.m_axis_rx_tready_reg_0 ),
        .O(\pio_rx_sm_128.m_axis_rx_tready_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFBAA)) 
    \pio_rx_sm_128.m_axis_rx_tready_i_2 
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(\FSM_sequential_pio_rx_sm_128.state[2]_i_2_n_0 ),
        .I3(Q[1]),
        .O(\pio_rx_sm_128.m_axis_rx_tready_i_2_n_0 ));
  FDRE \pio_rx_sm_128.m_axis_rx_tready_reg 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\pio_rx_sm_128.m_axis_rx_tready_i_1_n_0 ),
        .Q(\pio_rx_sm_128.m_axis_rx_tready_reg_0 ),
        .R(SR));
  LUT4 #(
    .INIT(16'hFF08)) 
    \pio_rx_sm_128.req_addr[6]_i_1 
       (.I0(Q[0]),
        .I1(m_axis_rx_tvalid_mux),
        .I2(Q[2]),
        .I3(\pio_rx_sm_128.req_addr_reg[2]_0 ),
        .O(\pio_rx_sm_128.req_addr[6]_i_1_n_0 ));
  FDRE \pio_rx_sm_128.req_addr_reg[2] 
       (.C(pipe_userclk2_in),
        .CE(\pio_rx_sm_128.req_addr[6]_i_1_n_0 ),
        .D(\pio_rx_sm_128.req_addr_reg[6]_1 [0]),
        .Q(\pio_rx_sm_128.req_addr_reg[6]_0 [0]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_addr_reg[3] 
       (.C(pipe_userclk2_in),
        .CE(\pio_rx_sm_128.req_addr[6]_i_1_n_0 ),
        .D(\pio_rx_sm_128.req_addr_reg[6]_1 [1]),
        .Q(\pio_rx_sm_128.req_addr_reg[6]_0 [1]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_addr_reg[4] 
       (.C(pipe_userclk2_in),
        .CE(\pio_rx_sm_128.req_addr[6]_i_1_n_0 ),
        .D(\pio_rx_sm_128.req_addr_reg[6]_1 [2]),
        .Q(\pio_rx_sm_128.req_addr_reg[6]_0 [2]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_addr_reg[5] 
       (.C(pipe_userclk2_in),
        .CE(\pio_rx_sm_128.req_addr[6]_i_1_n_0 ),
        .D(\pio_rx_sm_128.req_addr_reg[6]_1 [3]),
        .Q(\pio_rx_sm_128.req_addr_reg[6]_0 [3]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_addr_reg[6] 
       (.C(pipe_userclk2_in),
        .CE(\pio_rx_sm_128.req_addr[6]_i_1_n_0 ),
        .D(\pio_rx_sm_128.req_addr_reg[6]_1 [4]),
        .Q(\pio_rx_sm_128.req_addr_reg[6]_0 [4]),
        .R(SR));
  LUT5 #(
    .INIT(32'hFEFFFFFF)) 
    \pio_rx_sm_128.req_attr[1]_i_3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(m_axis_rx_tvalid_mux),
        .I4(\pio_rx_sm_128.m_axis_rx_tready_reg_0 ),
        .O(\FSM_sequential_pio_rx_sm_128.state_reg[2]_0 ));
  FDRE \pio_rx_sm_128.req_attr_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_attr_reg[1]_1 [0]),
        .Q(\pio_rx_sm_128.req_attr_reg[1]_0 [0]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_attr_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_attr_reg[1]_1 [1]),
        .Q(\pio_rx_sm_128.req_attr_reg[1]_0 [1]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_be_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(\pio_rx_sm_128.req_be_reg[0]_0 ),
        .D(\pio_rx_sm_128.req_be_reg[3]_1 [0]),
        .Q(\pio_rx_sm_128.req_be_reg[3]_0 [0]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_be_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(\pio_rx_sm_128.req_be_reg[0]_0 ),
        .D(\pio_rx_sm_128.req_be_reg[3]_1 [1]),
        .Q(\pio_rx_sm_128.req_be_reg[3]_0 [1]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_be_reg[2] 
       (.C(pipe_userclk2_in),
        .CE(\pio_rx_sm_128.req_be_reg[0]_0 ),
        .D(\pio_rx_sm_128.req_be_reg[3]_1 [2]),
        .Q(\pio_rx_sm_128.req_be_reg[3]_0 [2]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_be_reg[3] 
       (.C(pipe_userclk2_in),
        .CE(\pio_rx_sm_128.req_be_reg[0]_0 ),
        .D(\pio_rx_sm_128.req_be_reg[3]_1 [3]),
        .Q(\pio_rx_sm_128.req_be_reg[3]_0 [3]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_compl_reg 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\pio_rx_sm_128.req_compl_reg_0 ),
        .Q(req_compl_int),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFFFA0C000C0A)) 
    \pio_rx_sm_128.req_compl_wd_i_1 
       (.I0(\pio_rx_sm_128.req_compl_wd_reg_0 ),
        .I1(m_axis_rx_tvalid_mux),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(req_compl_wd),
        .O(\pio_rx_sm_128.req_compl_wd_i_1_n_0 ));
  FDSE \pio_rx_sm_128.req_compl_wd_reg 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\pio_rx_sm_128.req_compl_wd_i_1_n_0 ),
        .Q(req_compl_wd),
        .S(SR));
  FDRE \pio_rx_sm_128.req_ep_reg 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_ep_reg_0 ),
        .Q(req_ep),
        .R(SR));
  FDRE \pio_rx_sm_128.req_len_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(\pio_rx_sm_128.tlp_type[7]_i_1_n_0 ),
        .D(\pio_rx_sm_128.req_len_reg[9]_1 [0]),
        .Q(\pio_rx_sm_128.req_len_reg[9]_0 [0]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_len_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(\pio_rx_sm_128.tlp_type[7]_i_1_n_0 ),
        .D(\pio_rx_sm_128.req_len_reg[9]_1 [1]),
        .Q(\pio_rx_sm_128.req_len_reg[9]_0 [1]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_len_reg[2] 
       (.C(pipe_userclk2_in),
        .CE(\pio_rx_sm_128.tlp_type[7]_i_1_n_0 ),
        .D(\pio_rx_sm_128.req_len_reg[9]_1 [2]),
        .Q(\pio_rx_sm_128.req_len_reg[9]_0 [2]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_len_reg[3] 
       (.C(pipe_userclk2_in),
        .CE(\pio_rx_sm_128.tlp_type[7]_i_1_n_0 ),
        .D(\pio_rx_sm_128.req_len_reg[9]_1 [3]),
        .Q(\pio_rx_sm_128.req_len_reg[9]_0 [3]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_len_reg[4] 
       (.C(pipe_userclk2_in),
        .CE(\pio_rx_sm_128.tlp_type[7]_i_1_n_0 ),
        .D(\pio_rx_sm_128.req_len_reg[9]_1 [4]),
        .Q(\pio_rx_sm_128.req_len_reg[9]_0 [4]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_len_reg[5] 
       (.C(pipe_userclk2_in),
        .CE(\pio_rx_sm_128.tlp_type[7]_i_1_n_0 ),
        .D(\pio_rx_sm_128.req_len_reg[9]_1 [5]),
        .Q(\pio_rx_sm_128.req_len_reg[9]_0 [5]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_len_reg[6] 
       (.C(pipe_userclk2_in),
        .CE(\pio_rx_sm_128.tlp_type[7]_i_1_n_0 ),
        .D(\pio_rx_sm_128.req_len_reg[9]_1 [6]),
        .Q(\pio_rx_sm_128.req_len_reg[9]_0 [6]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_len_reg[7] 
       (.C(pipe_userclk2_in),
        .CE(\pio_rx_sm_128.tlp_type[7]_i_1_n_0 ),
        .D(\pio_rx_sm_128.req_len_reg[9]_1 [7]),
        .Q(\pio_rx_sm_128.req_len_reg[9]_0 [7]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_len_reg[8] 
       (.C(pipe_userclk2_in),
        .CE(\pio_rx_sm_128.tlp_type[7]_i_1_n_0 ),
        .D(\pio_rx_sm_128.req_len_reg[9]_1 [8]),
        .Q(\pio_rx_sm_128.req_len_reg[9]_0 [8]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_len_reg[9] 
       (.C(pipe_userclk2_in),
        .CE(\pio_rx_sm_128.tlp_type[7]_i_1_n_0 ),
        .D(\pio_rx_sm_128.req_len_reg[9]_1 [9]),
        .Q(\pio_rx_sm_128.req_len_reg[9]_0 [9]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_rid_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_rid_reg[15]_1 [0]),
        .Q(\pio_rx_sm_128.req_rid_reg[15]_0 [0]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_rid_reg[10] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_rid_reg[15]_1 [10]),
        .Q(\pio_rx_sm_128.req_rid_reg[15]_0 [10]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_rid_reg[11] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_rid_reg[15]_1 [11]),
        .Q(\pio_rx_sm_128.req_rid_reg[15]_0 [11]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_rid_reg[12] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_rid_reg[15]_1 [12]),
        .Q(\pio_rx_sm_128.req_rid_reg[15]_0 [12]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_rid_reg[13] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_rid_reg[15]_1 [13]),
        .Q(\pio_rx_sm_128.req_rid_reg[15]_0 [13]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_rid_reg[14] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_rid_reg[15]_1 [14]),
        .Q(\pio_rx_sm_128.req_rid_reg[15]_0 [14]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_rid_reg[15] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_rid_reg[15]_1 [15]),
        .Q(\pio_rx_sm_128.req_rid_reg[15]_0 [15]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_rid_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_rid_reg[15]_1 [1]),
        .Q(\pio_rx_sm_128.req_rid_reg[15]_0 [1]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_rid_reg[2] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_rid_reg[15]_1 [2]),
        .Q(\pio_rx_sm_128.req_rid_reg[15]_0 [2]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_rid_reg[3] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_rid_reg[15]_1 [3]),
        .Q(\pio_rx_sm_128.req_rid_reg[15]_0 [3]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_rid_reg[4] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_rid_reg[15]_1 [4]),
        .Q(\pio_rx_sm_128.req_rid_reg[15]_0 [4]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_rid_reg[5] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_rid_reg[15]_1 [5]),
        .Q(\pio_rx_sm_128.req_rid_reg[15]_0 [5]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_rid_reg[6] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_rid_reg[15]_1 [6]),
        .Q(\pio_rx_sm_128.req_rid_reg[15]_0 [6]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_rid_reg[7] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_rid_reg[15]_1 [7]),
        .Q(\pio_rx_sm_128.req_rid_reg[15]_0 [7]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_rid_reg[8] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_rid_reg[15]_1 [8]),
        .Q(\pio_rx_sm_128.req_rid_reg[15]_0 [8]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_rid_reg[9] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_rid_reg[15]_1 [9]),
        .Q(\pio_rx_sm_128.req_rid_reg[15]_0 [9]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_tag_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_tag_reg[7]_1 [0]),
        .Q(\pio_rx_sm_128.req_tag_reg[7]_0 [0]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_tag_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_tag_reg[7]_1 [1]),
        .Q(\pio_rx_sm_128.req_tag_reg[7]_0 [1]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_tag_reg[2] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_tag_reg[7]_1 [2]),
        .Q(\pio_rx_sm_128.req_tag_reg[7]_0 [2]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_tag_reg[3] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_tag_reg[7]_1 [3]),
        .Q(\pio_rx_sm_128.req_tag_reg[7]_0 [3]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_tag_reg[4] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_tag_reg[7]_1 [4]),
        .Q(\pio_rx_sm_128.req_tag_reg[7]_0 [4]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_tag_reg[5] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_tag_reg[7]_1 [5]),
        .Q(\pio_rx_sm_128.req_tag_reg[7]_0 [5]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_tag_reg[6] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_tag_reg[7]_1 [6]),
        .Q(\pio_rx_sm_128.req_tag_reg[7]_0 [6]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_tag_reg[7] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_tag_reg[7]_1 [7]),
        .Q(\pio_rx_sm_128.req_tag_reg[7]_0 [7]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_tc_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_tc_reg[2]_1 [0]),
        .Q(\pio_rx_sm_128.req_tc_reg[2]_0 [0]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_tc_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_tc_reg[2]_1 [1]),
        .Q(\pio_rx_sm_128.req_tc_reg[2]_0 [1]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_tc_reg[2] 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_tc_reg[2]_1 [2]),
        .Q(\pio_rx_sm_128.req_tc_reg[2]_0 [2]),
        .R(SR));
  FDRE \pio_rx_sm_128.req_td_reg 
       (.C(pipe_userclk2_in),
        .CE(E),
        .D(\pio_rx_sm_128.req_td_reg_0 ),
        .Q(req_td),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000000000000080)) 
    \pio_rx_sm_128.tlp_type[7]_i_1 
       (.I0(\pio_rx_sm_128.req_len_reg[0]_0 ),
        .I1(\pio_rx_sm_128.m_axis_rx_tready_reg_0 ),
        .I2(m_axis_rx_tvalid_mux),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(Q[2]),
        .O(\pio_rx_sm_128.tlp_type[7]_i_1_n_0 ));
  FDRE \pio_rx_sm_128.tlp_type_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(\pio_rx_sm_128.tlp_type[7]_i_1_n_0 ),
        .D(\pio_rx_sm_128.tlp_type_reg[7]_0 [0]),
        .Q(\pio_rx_sm_128.tlp_type_reg_n_0_[0] ),
        .R(SR));
  FDRE \pio_rx_sm_128.tlp_type_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(\pio_rx_sm_128.tlp_type[7]_i_1_n_0 ),
        .D(\pio_rx_sm_128.tlp_type_reg[7]_0 [1]),
        .Q(\pio_rx_sm_128.tlp_type_reg_n_0_[1] ),
        .R(SR));
  FDRE \pio_rx_sm_128.tlp_type_reg[2] 
       (.C(pipe_userclk2_in),
        .CE(\pio_rx_sm_128.tlp_type[7]_i_1_n_0 ),
        .D(\pio_rx_sm_128.tlp_type_reg[7]_0 [2]),
        .Q(\pio_rx_sm_128.tlp_type_reg_n_0_[2] ),
        .R(SR));
  FDRE \pio_rx_sm_128.tlp_type_reg[3] 
       (.C(pipe_userclk2_in),
        .CE(\pio_rx_sm_128.tlp_type[7]_i_1_n_0 ),
        .D(\pio_rx_sm_128.tlp_type_reg[7]_0 [3]),
        .Q(\pio_rx_sm_128.tlp_type_reg_n_0_[3] ),
        .R(SR));
  FDRE \pio_rx_sm_128.tlp_type_reg[4] 
       (.C(pipe_userclk2_in),
        .CE(\pio_rx_sm_128.tlp_type[7]_i_1_n_0 ),
        .D(\pio_rx_sm_128.tlp_type_reg[7]_0 [4]),
        .Q(\pio_rx_sm_128.tlp_type_reg_n_0_[4] ),
        .R(SR));
  FDRE \pio_rx_sm_128.tlp_type_reg[5] 
       (.C(pipe_userclk2_in),
        .CE(\pio_rx_sm_128.tlp_type[7]_i_1_n_0 ),
        .D(\pio_rx_sm_128.tlp_type_reg[7]_0 [5]),
        .Q(\pio_rx_sm_128.tlp_type_reg_n_0_[5] ),
        .R(SR));
  FDRE \pio_rx_sm_128.tlp_type_reg[6] 
       (.C(pipe_userclk2_in),
        .CE(\pio_rx_sm_128.tlp_type[7]_i_1_n_0 ),
        .D(\pio_rx_sm_128.tlp_type_reg[7]_0 [6]),
        .Q(\pio_rx_sm_128.tlp_type_reg_n_0_[6] ),
        .R(SR));
  FDRE \pio_rx_sm_128.tlp_type_reg[7] 
       (.C(pipe_userclk2_in),
        .CE(\pio_rx_sm_128.tlp_type[7]_i_1_n_0 ),
        .D(\pio_rx_sm_128.tlp_type_reg[7]_0 [7]),
        .Q(\pio_rx_sm_128.tlp_type_reg_n_0_[7] ),
        .R(SR));
  LUT4 #(
    .INIT(16'hABFB)) 
    pkt_len_counter_dec__0_carry_i_1
       (.I0(pkt_len_counter_dec__0_carry),
        .I1(\pio_rx_sm_128.m_axis_rx_tready_reg_0 ),
        .I2(data_prev_reg),
        .I3(m_axis_rx_tready),
        .O(DI));
  LUT4 #(
    .INIT(16'h56A6)) 
    pkt_len_counter_dec__0_carry_i_5
       (.I0(pkt_len_counter_dec__0_carry),
        .I1(\pio_rx_sm_128.m_axis_rx_tready_reg_0 ),
        .I2(data_prev_reg),
        .I3(m_axis_rx_tready),
        .O(S));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    rx_busy_i_1
       (.I0(m_axis_rx_tvalid_mux),
        .I1(\pio_rx_sm_128.m_axis_rx_tready_reg_0 ),
        .I2(rx_busy),
        .O(rx_busy0));
endmodule

(* ORIG_REF_NAME = "pcie_7x_0_tandem_cpler_tx_eng" *) 
module pcie_7x_0_pcie_7x_0_tandem_cpler_tx_eng
   (\gen_cpl_128.s_axis_tx_tlast_reg_0 ,
    \gen_cpl_128.s_axis_tx_tlast_reg_1 ,
    s_axis_tx_tlast_0,
    s_axis_tx_tdata_cpler,
    Q,
    SR,
    req_compl_int,
    pipe_userclk2_in,
    req_compl_wd,
    s_axis_tx_tready_mux,
    axi_in_packet_reg,
    s_axis_tx_tvalid,
    s_axis_tx_tlast,
    axi_in_packet,
    D,
    \gen_cpl_128.s_axis_tx_tdata_reg[95]_0 ,
    \gen_cpl_128.s_axis_tx_tdata_reg[79]_0 ,
    \gen_cpl_128.s_axis_tx_tdata_reg[63]_0 ,
    \gen_cpl_128.s_axis_tx_tdata_reg[55]_0 ,
    \gen_cpl_128.s_axis_tx_tdata_reg[50]_0 ,
    \gen_cpl_128.s_axis_tx_tdata_reg[22]_0 ,
    req_td,
    req_ep,
    \gen_cpl_128.s_axis_tx_tdata_reg[13]_0 ,
    \gen_cpl_128.s_axis_tx_tdata_reg[9]_0 ,
    \gen_cpl_128.s_axis_tx_tdata_reg[70]_0 ,
    \gen_cpl_128.s_axis_tx_tkeep_reg[11]_0 );
  output \gen_cpl_128.s_axis_tx_tlast_reg_0 ;
  output \gen_cpl_128.s_axis_tx_tlast_reg_1 ;
  output s_axis_tx_tlast_0;
  output [68:0]s_axis_tx_tdata_cpler;
  output [1:0]Q;
  input [0:0]SR;
  input req_compl_int;
  input pipe_userclk2_in;
  input req_compl_wd;
  input s_axis_tx_tready_mux;
  input axi_in_packet_reg;
  input s_axis_tx_tvalid;
  input s_axis_tx_tlast;
  input axi_in_packet;
  input [3:0]D;
  input [15:0]\gen_cpl_128.s_axis_tx_tdata_reg[95]_0 ;
  input [7:0]\gen_cpl_128.s_axis_tx_tdata_reg[79]_0 ;
  input [7:0]\gen_cpl_128.s_axis_tx_tdata_reg[63]_0 ;
  input [4:0]\gen_cpl_128.s_axis_tx_tdata_reg[55]_0 ;
  input [2:0]\gen_cpl_128.s_axis_tx_tdata_reg[50]_0 ;
  input [2:0]\gen_cpl_128.s_axis_tx_tdata_reg[22]_0 ;
  input req_td;
  input req_ep;
  input [1:0]\gen_cpl_128.s_axis_tx_tdata_reg[13]_0 ;
  input [9:0]\gen_cpl_128.s_axis_tx_tdata_reg[9]_0 ;
  input [4:0]\gen_cpl_128.s_axis_tx_tdata_reg[70]_0 ;
  input [0:0]\gen_cpl_128.s_axis_tx_tkeep_reg[11]_0 ;

  wire [3:0]D;
  wire [1:0]Q;
  wire [0:0]SR;
  wire axi_in_packet;
  wire axi_in_packet_reg;
  wire \gen_cpl_128.hold_state ;
  wire \gen_cpl_128.hold_state_i_1_n_0 ;
  wire \gen_cpl_128.req_compl_q2 ;
  wire \gen_cpl_128.s_axis_tx_tdata[27]_i_1_n_0 ;
  wire \gen_cpl_128.s_axis_tx_tdata[30]_i_1_n_0 ;
  wire \gen_cpl_128.s_axis_tx_tdata[32]_i_1_n_0 ;
  wire \gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ;
  wire \gen_cpl_128.s_axis_tx_tdata[33]_i_2_n_0 ;
  wire \gen_cpl_128.s_axis_tx_tdata[34]_i_1_n_0 ;
  wire \gen_cpl_128.s_axis_tx_tdata[64]_i_1_n_0 ;
  wire \gen_cpl_128.s_axis_tx_tdata[65]_i_1_n_0 ;
  wire \gen_cpl_128.s_axis_tx_tdata[70]_i_1_n_0 ;
  wire \gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ;
  wire [1:0]\gen_cpl_128.s_axis_tx_tdata_reg[13]_0 ;
  wire [2:0]\gen_cpl_128.s_axis_tx_tdata_reg[22]_0 ;
  wire [2:0]\gen_cpl_128.s_axis_tx_tdata_reg[50]_0 ;
  wire [4:0]\gen_cpl_128.s_axis_tx_tdata_reg[55]_0 ;
  wire [7:0]\gen_cpl_128.s_axis_tx_tdata_reg[63]_0 ;
  wire [4:0]\gen_cpl_128.s_axis_tx_tdata_reg[70]_0 ;
  wire [7:0]\gen_cpl_128.s_axis_tx_tdata_reg[79]_0 ;
  wire [15:0]\gen_cpl_128.s_axis_tx_tdata_reg[95]_0 ;
  wire [9:0]\gen_cpl_128.s_axis_tx_tdata_reg[9]_0 ;
  wire \gen_cpl_128.s_axis_tx_tkeep[15]_i_1_n_0 ;
  wire [0:0]\gen_cpl_128.s_axis_tx_tkeep_reg[11]_0 ;
  wire \gen_cpl_128.s_axis_tx_tlast_i_1_n_0 ;
  wire \gen_cpl_128.s_axis_tx_tlast_reg_0 ;
  wire \gen_cpl_128.s_axis_tx_tlast_reg_1 ;
  wire pipe_userclk2_in;
  wire req_compl_int;
  wire req_compl_q;
  wire req_compl_wd;
  wire req_compl_wd_q;
  wire req_ep;
  wire req_td;
  wire [68:0]s_axis_tx_tdata_cpler;
  wire s_axis_tx_tlast;
  wire s_axis_tx_tlast_0;
  wire s_axis_tx_tready_mux;
  wire s_axis_tx_tvalid;
  wire [4:0]sel0;

  LUT6 #(
    .INIT(64'h53F3FFFF50000000)) 
    axi_in_packet_i_1
       (.I0(s_axis_tx_tlast),
        .I1(\gen_cpl_128.s_axis_tx_tlast_reg_0 ),
        .I2(axi_in_packet_reg),
        .I3(s_axis_tx_tvalid),
        .I4(s_axis_tx_tready_mux),
        .I5(axi_in_packet),
        .O(s_axis_tx_tlast_0));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT4 #(
    .INIT(16'h0054)) 
    \gen_cpl_128.hold_state_i_1 
       (.I0(SR),
        .I1(\gen_cpl_128.hold_state ),
        .I2(\gen_cpl_128.req_compl_q2 ),
        .I3(s_axis_tx_tready_mux),
        .O(\gen_cpl_128.hold_state_i_1_n_0 ));
  FDRE \gen_cpl_128.hold_state_reg 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\gen_cpl_128.hold_state_i_1_n_0 ),
        .Q(\gen_cpl_128.hold_state ),
        .R(1'b0));
  FDRE \gen_cpl_128.req_compl_q2_reg 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(req_compl_q),
        .Q(\gen_cpl_128.req_compl_q2 ),
        .R(SR));
  FDRE \gen_cpl_128.req_compl_wd_q2_reg 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(req_compl_wd_q),
        .Q(sel0[4]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT3 #(
    .INIT(8'h54)) 
    \gen_cpl_128.s_axis_tx_tdata[27]_i_1 
       (.I0(SR),
        .I1(\gen_cpl_128.req_compl_q2 ),
        .I2(\gen_cpl_128.hold_state ),
        .O(\gen_cpl_128.s_axis_tx_tdata[27]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT4 #(
    .INIT(16'h0E00)) 
    \gen_cpl_128.s_axis_tx_tdata[30]_i_1 
       (.I0(\gen_cpl_128.hold_state ),
        .I1(\gen_cpl_128.req_compl_q2 ),
        .I2(SR),
        .I3(sel0[4]),
        .O(\gen_cpl_128.s_axis_tx_tdata[30]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT4 #(
    .INIT(16'h2D37)) 
    \gen_cpl_128.s_axis_tx_tdata[32]_i_1 
       (.I0(sel0[2]),
        .I1(sel0[3]),
        .I2(sel0[0]),
        .I3(sel0[1]),
        .O(\gen_cpl_128.s_axis_tx_tdata[32]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFAB)) 
    \gen_cpl_128.s_axis_tx_tdata[33]_i_1 
       (.I0(s_axis_tx_tready_mux),
        .I1(\gen_cpl_128.hold_state ),
        .I2(\gen_cpl_128.req_compl_q2 ),
        .I3(SR),
        .O(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h76600000)) 
    \gen_cpl_128.s_axis_tx_tdata[33]_i_2 
       (.I0(sel0[0]),
        .I1(sel0[3]),
        .I2(sel0[1]),
        .I3(sel0[2]),
        .I4(\gen_cpl_128.s_axis_tx_tdata[27]_i_1_n_0 ),
        .O(\gen_cpl_128.s_axis_tx_tdata[33]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \gen_cpl_128.s_axis_tx_tdata[34]_i_1 
       (.I0(sel0[3]),
        .I1(sel0[0]),
        .O(\gen_cpl_128.s_axis_tx_tdata[34]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT4 #(
    .INIT(16'h00F2)) 
    \gen_cpl_128.s_axis_tx_tdata[64]_i_1 
       (.I0(sel0[3]),
        .I1(sel0[2]),
        .I2(sel0[1]),
        .I3(sel0[0]),
        .O(\gen_cpl_128.s_axis_tx_tdata[64]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT4 #(
    .INIT(16'h1110)) 
    \gen_cpl_128.s_axis_tx_tdata[65]_i_1 
       (.I0(sel0[0]),
        .I1(sel0[1]),
        .I2(sel0[2]),
        .I3(sel0[3]),
        .O(\gen_cpl_128.s_axis_tx_tdata[65]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2F2F2FF)) 
    \gen_cpl_128.s_axis_tx_tdata[70]_i_1 
       (.I0(s_axis_tx_tready_mux),
        .I1(sel0[4]),
        .I2(SR),
        .I3(\gen_cpl_128.req_compl_q2 ),
        .I4(\gen_cpl_128.hold_state ),
        .O(\gen_cpl_128.s_axis_tx_tdata[70]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hF1)) 
    \gen_cpl_128.s_axis_tx_tdata[95]_i_1 
       (.I0(\gen_cpl_128.hold_state ),
        .I1(\gen_cpl_128.req_compl_q2 ),
        .I2(SR),
        .O(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[9]_0 [0]),
        .Q(s_axis_tx_tdata_cpler[0]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[12] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[13]_0 [0]),
        .Q(s_axis_tx_tdata_cpler[10]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[13] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[13]_0 [1]),
        .Q(s_axis_tx_tdata_cpler[11]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[14] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(req_ep),
        .Q(s_axis_tx_tdata_cpler[12]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[15] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(req_td),
        .Q(s_axis_tx_tdata_cpler[13]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[9]_0 [1]),
        .Q(s_axis_tx_tdata_cpler[1]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[20] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[22]_0 [0]),
        .Q(s_axis_tx_tdata_cpler[14]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[21] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[22]_0 [1]),
        .Q(s_axis_tx_tdata_cpler[15]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[22] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[22]_0 [2]),
        .Q(s_axis_tx_tdata_cpler[16]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[27] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata[27]_i_1_n_0 ),
        .Q(s_axis_tx_tdata_cpler[17]),
        .R(1'b0));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[2] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[9]_0 [2]),
        .Q(s_axis_tx_tdata_cpler[2]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[30] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata[30]_i_1_n_0 ),
        .Q(s_axis_tx_tdata_cpler[18]),
        .R(1'b0));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[32] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata[32]_i_1_n_0 ),
        .Q(s_axis_tx_tdata_cpler[19]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[33] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata[33]_i_2_n_0 ),
        .Q(s_axis_tx_tdata_cpler[20]),
        .R(1'b0));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[34] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata[34]_i_1_n_0 ),
        .Q(s_axis_tx_tdata_cpler[21]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[3] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[9]_0 [3]),
        .Q(s_axis_tx_tdata_cpler[3]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[48] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[50]_0 [0]),
        .Q(s_axis_tx_tdata_cpler[22]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[49] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[50]_0 [1]),
        .Q(s_axis_tx_tdata_cpler[23]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[4] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[9]_0 [4]),
        .Q(s_axis_tx_tdata_cpler[4]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[50] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[50]_0 [2]),
        .Q(s_axis_tx_tdata_cpler[24]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[51] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[55]_0 [0]),
        .Q(s_axis_tx_tdata_cpler[25]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[52] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[55]_0 [1]),
        .Q(s_axis_tx_tdata_cpler[26]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[53] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[55]_0 [2]),
        .Q(s_axis_tx_tdata_cpler[27]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[54] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[55]_0 [3]),
        .Q(s_axis_tx_tdata_cpler[28]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[55] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[55]_0 [4]),
        .Q(s_axis_tx_tdata_cpler[29]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[56] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[63]_0 [0]),
        .Q(s_axis_tx_tdata_cpler[30]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[57] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[63]_0 [1]),
        .Q(s_axis_tx_tdata_cpler[31]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[58] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[63]_0 [2]),
        .Q(s_axis_tx_tdata_cpler[32]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[59] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[63]_0 [3]),
        .Q(s_axis_tx_tdata_cpler[33]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[5] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[9]_0 [5]),
        .Q(s_axis_tx_tdata_cpler[5]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[60] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[63]_0 [4]),
        .Q(s_axis_tx_tdata_cpler[34]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[61] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[63]_0 [5]),
        .Q(s_axis_tx_tdata_cpler[35]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[62] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[63]_0 [6]),
        .Q(s_axis_tx_tdata_cpler[36]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[63] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[63]_0 [7]),
        .Q(s_axis_tx_tdata_cpler[37]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[64] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata[64]_i_1_n_0 ),
        .Q(s_axis_tx_tdata_cpler[38]),
        .R(\gen_cpl_128.s_axis_tx_tdata[70]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[65] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata[65]_i_1_n_0 ),
        .Q(s_axis_tx_tdata_cpler[39]),
        .R(\gen_cpl_128.s_axis_tx_tdata[70]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[66] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[70]_0 [0]),
        .Q(s_axis_tx_tdata_cpler[40]),
        .R(\gen_cpl_128.s_axis_tx_tdata[70]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[67] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[70]_0 [1]),
        .Q(s_axis_tx_tdata_cpler[41]),
        .R(\gen_cpl_128.s_axis_tx_tdata[70]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[68] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[70]_0 [2]),
        .Q(s_axis_tx_tdata_cpler[42]),
        .R(\gen_cpl_128.s_axis_tx_tdata[70]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[69] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[70]_0 [3]),
        .Q(s_axis_tx_tdata_cpler[43]),
        .R(\gen_cpl_128.s_axis_tx_tdata[70]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[6] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[9]_0 [6]),
        .Q(s_axis_tx_tdata_cpler[6]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[70] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[70]_0 [4]),
        .Q(s_axis_tx_tdata_cpler[44]),
        .R(\gen_cpl_128.s_axis_tx_tdata[70]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[72] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[79]_0 [0]),
        .Q(s_axis_tx_tdata_cpler[45]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[73] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[79]_0 [1]),
        .Q(s_axis_tx_tdata_cpler[46]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[74] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[79]_0 [2]),
        .Q(s_axis_tx_tdata_cpler[47]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[75] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[79]_0 [3]),
        .Q(s_axis_tx_tdata_cpler[48]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[76] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[79]_0 [4]),
        .Q(s_axis_tx_tdata_cpler[49]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[77] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[79]_0 [5]),
        .Q(s_axis_tx_tdata_cpler[50]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[78] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[79]_0 [6]),
        .Q(s_axis_tx_tdata_cpler[51]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[79] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[79]_0 [7]),
        .Q(s_axis_tx_tdata_cpler[52]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[7] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[9]_0 [7]),
        .Q(s_axis_tx_tdata_cpler[7]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[80] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[95]_0 [0]),
        .Q(s_axis_tx_tdata_cpler[53]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[81] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[95]_0 [1]),
        .Q(s_axis_tx_tdata_cpler[54]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[82] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[95]_0 [2]),
        .Q(s_axis_tx_tdata_cpler[55]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[83] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[95]_0 [3]),
        .Q(s_axis_tx_tdata_cpler[56]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[84] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[95]_0 [4]),
        .Q(s_axis_tx_tdata_cpler[57]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[85] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[95]_0 [5]),
        .Q(s_axis_tx_tdata_cpler[58]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[86] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[95]_0 [6]),
        .Q(s_axis_tx_tdata_cpler[59]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[87] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[95]_0 [7]),
        .Q(s_axis_tx_tdata_cpler[60]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[88] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[95]_0 [8]),
        .Q(s_axis_tx_tdata_cpler[61]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[89] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[95]_0 [9]),
        .Q(s_axis_tx_tdata_cpler[62]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[8] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[9]_0 [8]),
        .Q(s_axis_tx_tdata_cpler[8]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[90] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[95]_0 [10]),
        .Q(s_axis_tx_tdata_cpler[63]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[91] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[95]_0 [11]),
        .Q(s_axis_tx_tdata_cpler[64]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[92] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[95]_0 [12]),
        .Q(s_axis_tx_tdata_cpler[65]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[93] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[95]_0 [13]),
        .Q(s_axis_tx_tdata_cpler[66]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[94] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[95]_0 [14]),
        .Q(s_axis_tx_tdata_cpler[67]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[95] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[95]_0 [15]),
        .Q(s_axis_tx_tdata_cpler[68]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tdata_reg[9] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tdata_reg[9]_0 [9]),
        .Q(s_axis_tx_tdata_cpler[9]),
        .R(\gen_cpl_128.s_axis_tx_tdata[95]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT4 #(
    .INIT(16'h5501)) 
    \gen_cpl_128.s_axis_tx_tkeep[15]_i_1 
       (.I0(SR),
        .I1(\gen_cpl_128.hold_state ),
        .I2(\gen_cpl_128.req_compl_q2 ),
        .I3(sel0[4]),
        .O(\gen_cpl_128.s_axis_tx_tkeep[15]_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tkeep_reg[11] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tkeep_reg[11]_0 ),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \gen_cpl_128.s_axis_tx_tkeep_reg[15] 
       (.C(pipe_userclk2_in),
        .CE(\gen_cpl_128.s_axis_tx_tdata[33]_i_1_n_0 ),
        .D(\gen_cpl_128.s_axis_tx_tkeep[15]_i_1_n_0 ),
        .Q(Q[1]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFCA8)) 
    \gen_cpl_128.s_axis_tx_tlast_i_1 
       (.I0(s_axis_tx_tready_mux),
        .I1(\gen_cpl_128.req_compl_q2 ),
        .I2(\gen_cpl_128.hold_state ),
        .I3(\gen_cpl_128.s_axis_tx_tlast_reg_0 ),
        .O(\gen_cpl_128.s_axis_tx_tlast_i_1_n_0 ));
  FDRE \gen_cpl_128.s_axis_tx_tlast_reg 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(\gen_cpl_128.s_axis_tx_tlast_i_1_n_0 ),
        .Q(\gen_cpl_128.s_axis_tx_tlast_reg_0 ),
        .R(SR));
  FDRE \rd_be_reg[0] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(D[0]),
        .Q(sel0[0]),
        .R(SR));
  FDRE \rd_be_reg[1] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(D[1]),
        .Q(sel0[1]),
        .R(SR));
  FDRE \rd_be_reg[2] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(D[2]),
        .Q(sel0[2]),
        .R(SR));
  FDRE \rd_be_reg[3] 
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(D[3]),
        .Q(sel0[3]),
        .R(SR));
  FDRE req_compl_q_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(req_compl_int),
        .Q(req_compl_q),
        .R(SR));
  FDSE req_compl_wd_q_reg
       (.C(pipe_userclk2_in),
        .CE(1'b1),
        .D(req_compl_wd),
        .Q(req_compl_wd_q),
        .S(SR));
  LUT4 #(
    .INIT(16'hE200)) 
    tready_thrtl_i_10
       (.I0(\gen_cpl_128.s_axis_tx_tlast_reg_0 ),
        .I1(axi_in_packet_reg),
        .I2(s_axis_tx_tvalid),
        .I3(s_axis_tx_tready_mux),
        .O(\gen_cpl_128.s_axis_tx_tlast_reg_1 ));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module pcie_7x_0_xpm_cdc_single
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [1:0]syncstages_ff;

  assign dest_out = syncstages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* xpm_cdc = "SINGLE" *) 
module pcie_7x_0_xpm_cdc_single__2
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [1:0]syncstages_ff;

  assign dest_out = syncstages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
